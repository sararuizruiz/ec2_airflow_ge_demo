[2021-02-10 01:45:04,299] {scheduler_job.py:181} INFO - Started process (PID=57729) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 01:45:04,300] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 01:45:04,302] {logging_mixin.py:103} INFO - [2021-02-10 01:45:04,301] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 01:45:10,666] {logging_mixin.py:103} INFO - [2021-02-10 01:45:10,665] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 01:45:11,744] {logging_mixin.py:103} INFO - [2021-02-10 01:45:11,743] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 01:45:12,809] {logging_mixin.py:103} INFO - [2021-02-10 01:45:12,808] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 01:45:12,809] {logging_mixin.py:103} INFO - [2021-02-10 01:45:12,809] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 01:45:12,810] {logging_mixin.py:103} INFO - [2021-02-10 01:45:12,810] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 01:45:12,842] {logging_mixin.py:103} INFO - [2021-02-10 01:45:12,842] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf95d00>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=24078d1e-a665-4311-81e6-633260f5e675&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=151253a1-ae96-4a71-9549-6e74c5511919
[2021-02-10 01:45:15,864] {logging_mixin.py:103} INFO - [2021-02-10 01:45:15,864] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcfb30d0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=24078d1e-a665-4311-81e6-633260f5e675&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=a2f4a9d6-30b1-4933-b015-a01c603e1270
[2021-02-10 01:45:22,883] {logging_mixin.py:103} INFO - [2021-02-10 01:45:22,882] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcfb3610>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=24078d1e-a665-4311-81e6-633260f5e675&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=02f0d48f-151d-4133-98ce-0ababa6d648e
[2021-02-10 01:45:34,313] {logging_mixin.py:103} INFO - [2021-02-10 01:45:34,312] {timeout.py:36} ERROR - Process timed out, PID: 57729
[2021-02-10 01:45:34,388] {logging_mixin.py:103} INFO - [2021-02-10 01:45:34,388] {connection.py:438} INFO - closed
[2021-02-10 01:45:34,647] {logging_mixin.py:103} INFO - [2021-02-10 01:45:34,646] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 01:45:34,647] {logging_mixin.py:103} INFO - [2021-02-10 01:45:34,647] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 01:45:34,655] {logging_mixin.py:103} INFO - [2021-02-10 01:45:34,655] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf3b310>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=da07b461-0112-40bd-b7b5-59fcd1167cca
[2021-02-10 01:45:35,669] {logging_mixin.py:103} INFO - [2021-02-10 01:45:35,669] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf11a60>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=d0498800-c339-4dc5-8090-34a001f7c03d
[2021-02-10 01:45:38,682] {logging_mixin.py:103} INFO - [2021-02-10 01:45:38,682] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf114c0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=f3440d15-27e6-44c9-9785-c129d3ea1ba7
[2021-02-10 01:45:40,694] {logging_mixin.py:103} INFO - [2021-02-10 01:45:40,694] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf59310>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=7f45bd68-6fb5-4c37-bf94-b137ede3de28
[2021-02-10 01:45:42,712] {logging_mixin.py:103} INFO - [2021-02-10 01:45:42,711] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf596d0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=028de377-9168-42e8-9e0c-693a989e3052
[2021-02-10 01:45:45,723] {logging_mixin.py:103} INFO - [2021-02-10 01:45:45,723] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf11ac0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=0909889a-d032-4228-8d0a-c05e0efb4f88
[2021-02-10 01:45:46,736] {logging_mixin.py:103} INFO - [2021-02-10 01:45:46,736] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf11970>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=28f09a32-c823-4081-87d1-c78f0f01349b
[2021-02-10 01:45:48,755] {logging_mixin.py:103} INFO - [2021-02-10 01:45:48,755] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf24d90>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=a13ca2e4-9c7f-43bb-aaa7-afe24efd43fb
[2021-02-10 04:44:41,515] {logging_mixin.py:103} INFO - [2021-02-10 04:44:41,515] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcfb3c70>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=c1ee3680-4fb4-4fa4-a285-86aca1f60808
[2021-02-10 04:44:47,536] {logging_mixin.py:103} INFO - [2021-02-10 04:44:47,536] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bd104af0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=c23cb481-4394-44a1-b693-85f190be6144
[2021-02-10 04:44:58,562] {logging_mixin.py:103} INFO - [2021-02-10 04:44:58,561] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcfb3fa0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=70338a59-390a-4952-8b89-229e5f379087
[2021-02-10 04:45:14,597] {logging_mixin.py:103} INFO - [2021-02-10 04:45:14,596] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf11100>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=88503539-1a9f-484f-a2e6-ed7ad1809ebd
[2021-02-10 04:45:30,616] {logging_mixin.py:103} INFO - [2021-02-10 04:45:30,616] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf11970>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=56ad026e-d8db-40b9-95d5-b4f38976ee1e
[2021-02-10 04:45:46,640] {logging_mixin.py:103} INFO - [2021-02-10 04:45:46,639] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf11550>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=71a87693-94ae-4806-8b4e-95b4f39c6c05
[2021-02-10 05:44:51,908] {logging_mixin.py:103} INFO - [2021-02-10 05:44:51,908] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf596d0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=3a13ac80-6c02-4662-9c64-578a3d36b80e
[2021-02-10 05:45:07,923] {logging_mixin.py:103} INFO - [2021-02-10 05:45:07,923] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf3b250>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=299713c2-880c-4298-ad9f-49e02b7e1e3e
[2021-02-10 05:45:23,935] {logging_mixin.py:103} INFO - [2021-02-10 05:45:23,934] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcfbea00>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=8f284aac-3c9a-46b5-a083-c9506ea8e00f
[2021-02-10 05:45:23,941] {logging_mixin.py:103} INFO - [2021-02-10 05:45:23,939] {network.py:693} ERROR - HTTPSConnectionPool(host='dp13486.eu-west-1.snowflakecomputing.com', port=443): Max retries exceeded with url: /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=8f284aac-3c9a-46b5-a083-c9506ea8e00f (Caused by NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf3b4f0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))
Traceback (most recent call last):
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/urllib3/connection.py", line 159, in _new_conn
    conn = connection.create_connection(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/urllib3/util/connection.py", line 61, in create_connection
    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/socket.py", line 918, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/urllib3/connectionpool.py", line 670, in urlopen
    httplib_response = self._make_request(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/urllib3/connectionpool.py", line 381, in _make_request
    self._validate_conn(conn)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/urllib3/connectionpool.py", line 978, in _validate_conn
    conn.connect()
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/urllib3/connection.py", line 309, in connect
    conn = self._new_conn()
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/urllib3/connection.py", line 171, in _new_conn
    raise NewConnectionError(
snowflake.connector.vendored.urllib3.exceptions.NewConnectionError: <snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf3b4f0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/requests/adapters.py", line 439, in send
    resp = conn.urlopen(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/urllib3/connectionpool.py", line 754, in urlopen
    return self.urlopen(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/urllib3/connectionpool.py", line 726, in urlopen
    retries = retries.increment(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/urllib3/util/retry.py", line 439, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
snowflake.connector.vendored.urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='dp13486.eu-west-1.snowflakecomputing.com', port=443): Max retries exceeded with url: /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=8f284aac-3c9a-46b5-a083-c9506ea8e00f (Caused by NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf3b4f0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/network.py", line 805, in _request_exec
    raw_ret = session.request(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/requests/sessions.py", line 530, in request
    resp = self.send(prep, **send_kwargs)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/requests/sessions.py", line 643, in send
    r = adapter.send(request, **kwargs)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
snowflake.connector.vendored.requests.exceptions.ConnectionError: HTTPSConnectionPool(host='dp13486.eu-west-1.snowflakecomputing.com', port=443): Max retries exceeded with url: /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=8f284aac-3c9a-46b5-a083-c9506ea8e00f (Caused by NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf3b4f0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/network.py", line 652, in _request_exec_wrapper
    return_object = self._request_exec(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/network.py", line 906, in _request_exec
    raise RetryRequest(err)
snowflake.connector.network.RetryRequest: HTTPSConnectionPool(host='dp13486.eu-west-1.snowflakecomputing.com', port=443): Max retries exceeded with url: /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=8f284aac-3c9a-46b5-a083-c9506ea8e00f (Caused by NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf3b4f0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))
[2021-02-10 05:45:23,966] {logging_mixin.py:103} INFO - [2021-02-10 05:45:23,960] {dagbag.py:297} ERROR - Failed to import: /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
Traceback (most recent call last):
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/urllib3/connection.py", line 159, in _new_conn
    conn = connection.create_connection(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/urllib3/util/connection.py", line 61, in create_connection
    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):
  File "/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/socket.py", line 918, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/urllib3/connectionpool.py", line 670, in urlopen
    httplib_response = self._make_request(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/urllib3/connectionpool.py", line 381, in _make_request
    self._validate_conn(conn)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/urllib3/connectionpool.py", line 978, in _validate_conn
    conn.connect()
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/urllib3/connection.py", line 309, in connect
    conn = self._new_conn()
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/urllib3/connection.py", line 171, in _new_conn
    raise NewConnectionError(
snowflake.connector.vendored.urllib3.exceptions.NewConnectionError: <snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf3b4f0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/requests/adapters.py", line 439, in send
    resp = conn.urlopen(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/urllib3/connectionpool.py", line 754, in urlopen
    return self.urlopen(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/urllib3/connectionpool.py", line 726, in urlopen
    retries = retries.increment(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/urllib3/util/retry.py", line 439, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
snowflake.connector.vendored.urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='dp13486.eu-west-1.snowflakecomputing.com', port=443): Max retries exceeded with url: /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=8f284aac-3c9a-46b5-a083-c9506ea8e00f (Caused by NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf3b4f0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/network.py", line 805, in _request_exec
    raw_ret = session.request(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/requests/sessions.py", line 530, in request
    resp = self.send(prep, **send_kwargs)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/requests/sessions.py", line 643, in send
    r = adapter.send(request, **kwargs)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/vendored/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
snowflake.connector.vendored.requests.exceptions.ConnectionError: HTTPSConnectionPool(host='dp13486.eu-west-1.snowflakecomputing.com', port=443): Max retries exceeded with url: /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=8f284aac-3c9a-46b5-a083-c9506ea8e00f (Caused by NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf3b4f0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/network.py", line 652, in _request_exec_wrapper
    return_object = self._request_exec(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/network.py", line 906, in _request_exec
    raise RetryRequest(err)
snowflake.connector.network.RetryRequest: HTTPSConnectionPool(host='dp13486.eu-west-1.snowflakecomputing.com', port=443): Max retries exceeded with url: /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=8f284aac-3c9a-46b5-a083-c9506ea8e00f (Caused by NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf3b4f0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 304, in unique_connection
    return _ConnectionFairy._checkout(self)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 509, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/__init__.py", line 52, in Connect
    return SnowflakeConnection(**kwargs)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/connection.py", line 228, in __init__
    self.connect(**kwargs)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/connection.py", line 423, in connect
    self.__open_connection()
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/connection.py", line 633, in __open_connection
    self._authenticate(auth_instance)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/connection.py", line 866, in _authenticate
    self.__authenticate(self.__preprocess_auth_instance(auth_instance))
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/connection.py", line 884, in __authenticate
    self._session_parameters = auth.authenticate(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/auth.py", line 197, in authenticate
    ret = self._rest._post_request(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/network.py", line 541, in _post_request
    ret = self.fetch('post', full_url, headers, data=body,
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/network.py", line 619, in fetch
    ret = self._request_exec_wrapper(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/network.py", line 708, in _request_exec_wrapper
    self.handle_invalid_certificate_error(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/network.py", line 734, in handle_invalid_certificate_error
    Error.errorhandler_wrapper(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/errors.py", line 227, in errorhandler_wrapper
    connection.errorhandler(connection, cursor, error_class, error_value)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/errors.py", line 179, in default_errorhandler
    raise error_class(
snowflake.connector.errors.OperationalError: 250003: None: Failed to execute request: HTTPSConnectionPool(host='dp13486.eu-west-1.snowflakecomputing.com', port=443): Max retries exceeded with url: /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=8f284aac-3c9a-46b5-a083-c9506ea8e00f (Caused by NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf3b4f0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/datasource/sqlalchemy_datasource.py", line 264, in __init__
    connection = self.engine.connect()
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2263, in connect
    return self._connection_cls(self, **kwargs)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 104, in __init__
    else engine.raw_connection()
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2369, in raw_connection
    return self._wrap_pool_connect(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2339, in _wrap_pool_connect
    Connection._handle_dbapi_exception_noconnection(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1583, in _handle_dbapi_exception_noconnection
    util.raise_(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2336, in _wrap_pool_connect
    return fn()
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 304, in unique_connection
    return _ConnectionFairy._checkout(self)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 778, in _checkout
    fairy = _ConnectionRecord.checkout(pool)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 495, in checkout
    rec = pool._do_get()
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/pool/impl.py", line 140, in _do_get
    self._dec_overflow()
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/pool/impl.py", line 137, in _do_get
    return self._create_connection()
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 309, in _create_connection
    return _ConnectionRecord(self)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 440, in __init__
    self.__connect(first_connect_check=True)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 661, in __connect
    pool.logger.debug("Error on connect(): %s", e)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/util/langhelpers.py", line 68, in __exit__
    compat.raise_(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 182, in raise_
    raise exception
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/pool/base.py", line 656, in __connect
    connection = pool._invoke_creator(self)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/engine/strategies.py", line 114, in connect
    return dialect.connect(*cargs, **cparams)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 509, in connect
    return self.dbapi.connect(*cargs, **cparams)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/__init__.py", line 52, in Connect
    return SnowflakeConnection(**kwargs)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/connection.py", line 228, in __init__
    self.connect(**kwargs)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/connection.py", line 423, in connect
    self.__open_connection()
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/connection.py", line 633, in __open_connection
    self._authenticate(auth_instance)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/connection.py", line 866, in _authenticate
    self.__authenticate(self.__preprocess_auth_instance(auth_instance))
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/connection.py", line 884, in __authenticate
    self._session_parameters = auth.authenticate(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/auth.py", line 197, in authenticate
    ret = self._rest._post_request(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/network.py", line 541, in _post_request
    ret = self.fetch('post', full_url, headers, data=body,
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/network.py", line 619, in fetch
    ret = self._request_exec_wrapper(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/network.py", line 708, in _request_exec_wrapper
    self.handle_invalid_certificate_error(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/network.py", line 734, in handle_invalid_certificate_error
    Error.errorhandler_wrapper(
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/errors.py", line 227, in errorhandler_wrapper
    connection.errorhandler(connection, cursor, error_class, error_value)
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/snowflake/connector/errors.py", line 179, in default_errorhandler
    raise error_class(
sqlalchemy.exc.OperationalError: (snowflake.connector.errors.OperationalError) 250003: None: Failed to execute request: HTTPSConnectionPool(host='dp13486.eu-west-1.snowflakecomputing.com', port=443): Max retries exceeded with url: /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=8f284aac-3c9a-46b5-a083-c9506ea8e00f (Caused by NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf3b4f0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))
(Background on this error at: http://sqlalche.me/e/13/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/data_context/data_context.py", line 1731, in _instantiate_datasource_from_config
    ] = self._build_datasource_from_config(name=name, config=config)
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/data_context/data_context.py", line 1797, in _build_datasource_from_config
    datasource = instantiate_class_from_config(
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/data_context/util.py", line 99, in instantiate_class_from_config
    class_instance = class_(**config_with_defaults)
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/datasource/sqlalchemy_datasource.py", line 287, in __init__
    raise DatasourceInitializationError(self._name, str(sqlalchemy_error))
great_expectations.exceptions.exceptions.DatasourceInitializationError: Cannot initialize datasource my_snowflake_db, error: (snowflake.connector.errors.OperationalError) 250003: None: Failed to execute request: HTTPSConnectionPool(host='dp13486.eu-west-1.snowflakecomputing.com', port=443): Max retries exceeded with url: /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=8f284aac-3c9a-46b5-a083-c9506ea8e00f (Caused by NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf3b4f0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))
(Background on this error at: http://sqlalche.me/e/13/e3q8)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/airflow/models/dagbag.py", line 294, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 783, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py", line 40, in <module>
    batch = context.get_batch(batch_kwargs, suite)
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/data_context/data_context.py", line 1420, in get_batch
    return self._get_batch_v2(
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/data_context/data_context.py", line 1137, in _get_batch_v2
    datasource = self.get_datasource(batch_kwargs.get("datasource"))
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/data_context/data_context.py", line 1839, in get_datasource
    ] = self._instantiate_datasource_from_config(
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/data_context/data_context.py", line 1733, in _instantiate_datasource_from_config
    raise ge_exceptions.DatasourceInitializationError(
great_expectations.exceptions.exceptions.DatasourceInitializationError: Cannot initialize datasource my_snowflake_db, error: Cannot initialize datasource my_snowflake_db, error: (snowflake.connector.errors.OperationalError) 250003: None: Failed to execute request: HTTPSConnectionPool(host='dp13486.eu-west-1.snowflakecomputing.com', port=443): Max retries exceeded with url: /session/v1/login-request?request_id=679fc8ee-94ca-4bf1-8940-2f5ce5e7da3d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=8f284aac-3c9a-46b5-a083-c9506ea8e00f (Caused by NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7ff4bcf3b4f0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known'))
(Background on this error at: http://sqlalche.me/e/13/e3q8)
[2021-02-10 05:45:23,968] {scheduler_job.py:641} WARNING - No viable dags retrieved from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 05:45:24,039] {logging_mixin.py:103} INFO - [2021-02-10 05:45:24,039] {connection.py:438} INFO - closed
[2021-02-10 05:45:24,055] {scheduler_job.py:189} INFO - Processing /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py took 159.201 seconds
[2021-02-10 08:00:56,427] {scheduler_job.py:181} INFO - Started process (PID=57858) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:00:56,429] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:00:56,430] {logging_mixin.py:103} INFO - [2021-02-10 08:00:56,430] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:01:02,013] {logging_mixin.py:103} INFO - [2021-02-10 08:01:02,012] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:01:03,036] {logging_mixin.py:103} INFO - [2021-02-10 08:01:03,036] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:01:04,094] {logging_mixin.py:103} INFO - [2021-02-10 08:01:04,093] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:01:04,095] {logging_mixin.py:103} INFO - [2021-02-10 08:01:04,094] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:01:04,095] {logging_mixin.py:103} INFO - [2021-02-10 08:01:04,095] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:01:04,125] {logging_mixin.py:103} INFO - [2021-02-10 08:01:04,125] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7fbc40ff4cd0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=bbccb8f6-1f6b-4ec7-afe5-9434c770fac1&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=2bea8d04-fad6-4900-b108-20cc257d4d55
[2021-02-10 08:01:06,140] {logging_mixin.py:103} INFO - [2021-02-10 08:01:06,139] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7fbc410130a0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=bbccb8f6-1f6b-4ec7-afe5-9434c770fac1&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=95abaef5-7c5c-4dd8-950b-fcc5b92afa58
[2021-02-10 08:01:09,151] {logging_mixin.py:103} INFO - [2021-02-10 08:01:09,151] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7fbc410135e0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=bbccb8f6-1f6b-4ec7-afe5-9434c770fac1&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=06ee01ad-d34b-43b3-9ab2-5f677921029e
[2021-02-10 08:01:11,171] {logging_mixin.py:103} INFO - [2021-02-10 08:01:11,171] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7fbc41013b20>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=bbccb8f6-1f6b-4ec7-afe5-9434c770fac1&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=4ecbbcf7-8cfc-422d-a067-39144fc2b35b
[2021-02-10 08:01:15,189] {logging_mixin.py:103} INFO - [2021-02-10 08:01:15,188] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7fbc4101a0a0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=bbccb8f6-1f6b-4ec7-afe5-9434c770fac1&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=e8c2d241-44ab-4f14-90b7-f71fbb1f9127
[2021-02-10 08:01:26,200] {logging_mixin.py:103} INFO - [2021-02-10 08:01:26,200] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7fbc41013cd0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=bbccb8f6-1f6b-4ec7-afe5-9434c770fac1&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=4017ca57-7772-49b2-a534-cdb15f447071
[2021-02-10 08:01:26,435] {logging_mixin.py:103} INFO - [2021-02-10 08:01:26,435] {timeout.py:36} ERROR - Process timed out, PID: 57858
[2021-02-10 08:01:26,446] {logging_mixin.py:103} INFO - [2021-02-10 08:01:26,446] {connection.py:438} INFO - closed
[2021-02-10 08:01:26,738] {logging_mixin.py:103} INFO - [2021-02-10 08:01:26,738] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:01:26,738] {logging_mixin.py:103} INFO - [2021-02-10 08:01:26,738] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:01:26,746] {logging_mixin.py:103} INFO - [2021-02-10 08:01:26,746] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7fbc41037160>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=19caaea9-4f96-4bb6-9507-9aae813ac8f0&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=fd4167a9-04f1-403f-b1a5-8fc5b1c6c79f
[2021-02-10 08:01:27,764] {logging_mixin.py:103} INFO - [2021-02-10 08:01:27,764] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7fbc410374f0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=19caaea9-4f96-4bb6-9507-9aae813ac8f0&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=6a5c5476-01a3-4a45-bdc5-ee43f44628b9
[2021-02-10 08:01:30,776] {logging_mixin.py:103} INFO - [2021-02-10 08:01:30,776] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7fbc41037a30>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=19caaea9-4f96-4bb6-9507-9aae813ac8f0&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=88bcd25c-bfda-4936-9983-6051a4cdb8e9
[2021-02-10 08:01:38,788] {logging_mixin.py:103} INFO - [2021-02-10 08:01:38,788] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7fbc40fb0580>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=19caaea9-4f96-4bb6-9507-9aae813ac8f0&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=d4ce3336-facd-414a-80a6-c616917d8885
[2021-02-10 08:01:54,801] {logging_mixin.py:103} INFO - [2021-02-10 08:01:54,801] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7fbc40fb0dc0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=19caaea9-4f96-4bb6-9507-9aae813ac8f0&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=1d7ac0c9-328f-42ea-bc82-48be846dff89
[2021-02-10 08:02:02,817] {logging_mixin.py:103} INFO - [2021-02-10 08:02:02,817] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7fbc41037910>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=19caaea9-4f96-4bb6-9507-9aae813ac8f0&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=343c17da-2d38-4cac-ab79-88dddcd602fb
[2021-02-10 08:02:18,826] {logging_mixin.py:103} INFO - [2021-02-10 08:02:18,826] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7fbc41037250>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=19caaea9-4f96-4bb6-9507-9aae813ac8f0&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=f530571d-d450-4863-9d3d-ad3764a17229
[2021-02-10 08:02:20,839] {logging_mixin.py:103} INFO - [2021-02-10 08:02:20,839] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7fbc41044160>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=19caaea9-4f96-4bb6-9507-9aae813ac8f0&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=2fe6ba9d-5e0b-44ce-9d5f-fa274bee192e
[2021-02-10 08:02:26,852] {logging_mixin.py:103} INFO - [2021-02-10 08:02:26,851] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7fbc410446a0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=19caaea9-4f96-4bb6-9507-9aae813ac8f0&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=bb110b4d-66ae-4250-a25b-cf90588d7467
[2021-02-10 08:02:42,865] {logging_mixin.py:103} INFO - [2021-02-10 08:02:42,865] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7fbc41037d30>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=19caaea9-4f96-4bb6-9507-9aae813ac8f0&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=0587d2b9-e98f-4b9c-b85c-58395861bddf
[2021-02-10 08:02:43,880] {logging_mixin.py:103} INFO - [2021-02-10 08:02:43,880] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7fbc410371c0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=19caaea9-4f96-4bb6-9507-9aae813ac8f0&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=ce397064-8987-49e0-aa5d-4e22733c89ce
[2021-02-10 08:02:46,899] {logging_mixin.py:103} INFO - [2021-02-10 08:02:46,898] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7fbc41037760>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=19caaea9-4f96-4bb6-9507-9aae813ac8f0&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=488e87f2-061d-4d4d-a7fb-9afebc021e95
[2021-02-10 08:02:51,905] {logging_mixin.py:103} INFO - [2021-02-10 08:02:51,905] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7fbc40fb06d0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=19caaea9-4f96-4bb6-9507-9aae813ac8f0&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=deb3e015-ed86-4cec-881e-29ae6ff83c16
[2021-02-10 08:03:03,917] {logging_mixin.py:103} INFO - [2021-02-10 08:03:03,917] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7fbc41044d30>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=19caaea9-4f96-4bb6-9507-9aae813ac8f0&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=5c45c2d5-9db5-4b01-843f-08c231798e50
[2021-02-10 08:03:27,496] {logging_mixin.py:103} INFO - [2021-02-10 08:03:27,496] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:03:29,181] {logging_mixin.py:103} INFO - [2021-02-10 08:03:29,181] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:29,203] {logging_mixin.py:103} INFO - [2021-02-10 08:03:29,203] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:03:29,397] {logging_mixin.py:103} INFO - [2021-02-10 08:03:29,397] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:29,397] {logging_mixin.py:103} INFO - [2021-02-10 08:03:29,397] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:03:30,020] {logging_mixin.py:103} INFO - [2021-02-10 08:03:30,020] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:30,021] {logging_mixin.py:103} INFO - [2021-02-10 08:03:30,021] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:03:30,666] {logging_mixin.py:103} INFO - [2021-02-10 08:03:30,666] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:30,689] {logging_mixin.py:103} INFO - [2021-02-10 08:03:30,689] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:03:30,928] {logging_mixin.py:103} INFO - [2021-02-10 08:03:30,928] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:30,997] {logging_mixin.py:103} INFO - [2021-02-10 08:03:30,997] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:03:30,997] {logging_mixin.py:103} INFO - [2021-02-10 08:03:30,997] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:03:33,166] {logging_mixin.py:103} INFO - [2021-02-10 08:03:33,166] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:33,172] {logging_mixin.py:103} INFO - [2021-02-10 08:03:33,172] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:03:33,186] {logging_mixin.py:103} INFO - [2021-02-10 08:03:33,186] {data_context.py:1281} INFO - Setting run_name to: 20210210T070333.186701Z
[2021-02-10 08:03:33,188] {logging_mixin.py:103} INFO - [2021-02-10 08:03:33,188] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:03:33,200] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:03:33,203] {logging_mixin.py:103} INFO - [2021-02-10 08:03:33,203] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:03:33,569] {logging_mixin.py:103} INFO - [2021-02-10 08:03:33,569] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:33,570] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:03:33,570] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:03:33,571] {logging_mixin.py:103} INFO - [2021-02-10 08:03:33,571] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:03:33,895] {logging_mixin.py:103} INFO - [2021-02-10 08:03:33,894] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:33,895] {logging_mixin.py:103} INFO - [2021-02-10 08:03:33,895] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:03:33,896] {logging_mixin.py:103} INFO - [2021-02-10 08:03:33,896] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:03:34,259] {logging_mixin.py:103} INFO - [2021-02-10 08:03:34,259] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:34,261] {logging_mixin.py:103} INFO - [2021-02-10 08:03:34,261] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:03:34,662] {logging_mixin.py:103} INFO - [2021-02-10 08:03:34,662] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:34,664] {logging_mixin.py:103} INFO - [2021-02-10 08:03:34,664] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:03:35,138] {logging_mixin.py:103} INFO - [2021-02-10 08:03:35,138] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:35,139] {logging_mixin.py:103} INFO - [2021-02-10 08:03:35,139] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:03:35,163] {logging_mixin.py:103} INFO - [2021-02-10 08:03:35,162] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:03:35,163] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:03:35,169] {logging_mixin.py:103} INFO - [2021-02-10 08:03:35,169] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:03:35,513] {logging_mixin.py:103} INFO - [2021-02-10 08:03:35,512] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:35,514] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:03:35,514] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:03:35,515] {logging_mixin.py:103} INFO - [2021-02-10 08:03:35,515] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:03:36,025] {logging_mixin.py:103} INFO - [2021-02-10 08:03:36,024] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:36,025] {logging_mixin.py:103} INFO - [2021-02-10 08:03:36,025] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:03:36,028] {logging_mixin.py:103} INFO - [2021-02-10 08:03:36,028] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:03:36,256] {logging_mixin.py:103} INFO - [2021-02-10 08:03:36,256] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:36,258] {logging_mixin.py:103} INFO - [2021-02-10 08:03:36,258] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:03:36,449] {logging_mixin.py:103} INFO - [2021-02-10 08:03:36,449] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:36,452] {logging_mixin.py:103} INFO - [2021-02-10 08:03:36,452] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:03:36,630] {logging_mixin.py:103} INFO - [2021-02-10 08:03:36,629] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:36,633] {logging_mixin.py:103} INFO - [2021-02-10 08:03:36,633] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:03:36,831] {logging_mixin.py:103} INFO - [2021-02-10 08:03:36,831] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:36,831] {logging_mixin.py:103} INFO - [2021-02-10 08:03:36,831] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:03:36,836] {logging_mixin.py:103} INFO - [2021-02-10 08:03:36,835] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:03:37,053] {logging_mixin.py:103} INFO - [2021-02-10 08:03:37,053] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:37,062] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:03:37,064] {logging_mixin.py:103} INFO - [2021-02-10 08:03:37,064] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:03:37,236] {logging_mixin.py:103} INFO - [2021-02-10 08:03:37,236] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:37,237] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:03:37,237] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:03:37,239] {logging_mixin.py:103} INFO - [2021-02-10 08:03:37,239] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:03:37,493] {logging_mixin.py:103} INFO - [2021-02-10 08:03:37,493] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:37,494] {logging_mixin.py:103} INFO - [2021-02-10 08:03:37,494] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:03:37,495] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:03:37,498] {logging_mixin.py:103} INFO - [2021-02-10 08:03:37,498] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:03:37,731] {logging_mixin.py:103} INFO - [2021-02-10 08:03:37,730] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:37,731] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:03:37,732] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:03:37,733] {logging_mixin.py:103} INFO - [2021-02-10 08:03:37,733] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:03:37,920] {logging_mixin.py:103} INFO - [2021-02-10 08:03:37,919] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:37,920] {logging_mixin.py:103} INFO - [2021-02-10 08:03:37,920] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:03:37,921] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:03:37,924] {logging_mixin.py:103} INFO - [2021-02-10 08:03:37,924] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:03:38,135] {logging_mixin.py:103} INFO - [2021-02-10 08:03:38,134] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:38,136] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:03:38,136] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:03:38,137] {logging_mixin.py:103} INFO - [2021-02-10 08:03:38,137] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:03:38,324] {logging_mixin.py:103} INFO - [2021-02-10 08:03:38,324] {cursor.py:560} INFO - query execution done
[2021-02-10 08:03:38,325] {logging_mixin.py:103} INFO - [2021-02-10 08:03:38,325] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:03:42,773] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:04:12,612] {scheduler_job.py:181} INFO - Started process (PID=58025) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:04:12,613] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:04:12,614] {logging_mixin.py:103} INFO - [2021-02-10 08:04:12,614] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:04:14,996] {logging_mixin.py:103} INFO - [2021-02-10 08:04:14,995] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:04:15,316] {logging_mixin.py:103} INFO - [2021-02-10 08:04:15,316] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:04:15,646] {logging_mixin.py:103} INFO - [2021-02-10 08:04:15,645] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:04:15,646] {logging_mixin.py:103} INFO - [2021-02-10 08:04:15,646] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:04:15,646] {logging_mixin.py:103} INFO - [2021-02-10 08:04:15,646] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:04:17,411] {logging_mixin.py:103} INFO - [2021-02-10 08:04:17,411] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:04:17,615] {logging_mixin.py:103} INFO - [2021-02-10 08:04:17,615] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:17,616] {logging_mixin.py:103} INFO - [2021-02-10 08:04:17,616] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:04:17,763] {logging_mixin.py:103} INFO - [2021-02-10 08:04:17,763] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:17,764] {logging_mixin.py:103} INFO - [2021-02-10 08:04:17,764] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:04:18,005] {logging_mixin.py:103} INFO - [2021-02-10 08:04:18,005] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:18,008] {logging_mixin.py:103} INFO - [2021-02-10 08:04:18,007] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:04:18,151] {logging_mixin.py:103} INFO - [2021-02-10 08:04:18,151] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:18,418] {logging_mixin.py:103} INFO - [2021-02-10 08:04:18,418] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:04:18,637] {logging_mixin.py:103} INFO - [2021-02-10 08:04:18,637] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:18,693] {logging_mixin.py:103} INFO - [2021-02-10 08:04:18,693] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:04:18,693] {logging_mixin.py:103} INFO - [2021-02-10 08:04:18,693] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:04:20,749] {logging_mixin.py:103} INFO - [2021-02-10 08:04:20,749] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:20,752] {logging_mixin.py:103} INFO - [2021-02-10 08:04:20,752] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:04:20,765] {logging_mixin.py:103} INFO - [2021-02-10 08:04:20,765] {data_context.py:1281} INFO - Setting run_name to: 20210210T070420.765003Z
[2021-02-10 08:04:20,766] {logging_mixin.py:103} INFO - [2021-02-10 08:04:20,766] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:04:20,775] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:04:20,777] {logging_mixin.py:103} INFO - [2021-02-10 08:04:20,777] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:04:20,932] {logging_mixin.py:103} INFO - [2021-02-10 08:04:20,932] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:20,933] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:04:20,933] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:04:20,934] {logging_mixin.py:103} INFO - [2021-02-10 08:04:20,934] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:04:21,220] {logging_mixin.py:103} INFO - [2021-02-10 08:04:21,220] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:21,221] {logging_mixin.py:103} INFO - [2021-02-10 08:04:21,221] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:04:21,222] {logging_mixin.py:103} INFO - [2021-02-10 08:04:21,222] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:04:21,396] {logging_mixin.py:103} INFO - [2021-02-10 08:04:21,396] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:21,398] {logging_mixin.py:103} INFO - [2021-02-10 08:04:21,398] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:04:21,556] {logging_mixin.py:103} INFO - [2021-02-10 08:04:21,556] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:21,564] {logging_mixin.py:103} INFO - [2021-02-10 08:04:21,563] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:04:21,820] {logging_mixin.py:103} INFO - [2021-02-10 08:04:21,820] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:21,820] {logging_mixin.py:103} INFO - [2021-02-10 08:04:21,820] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:04:21,832] {logging_mixin.py:103} INFO - [2021-02-10 08:04:21,832] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:04:21,833] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:04:21,835] {logging_mixin.py:103} INFO - [2021-02-10 08:04:21,835] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:04:21,986] {logging_mixin.py:103} INFO - [2021-02-10 08:04:21,986] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:21,987] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:04:21,987] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:04:21,989] {logging_mixin.py:103} INFO - [2021-02-10 08:04:21,989] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:04:22,605] {logging_mixin.py:103} INFO - [2021-02-10 08:04:22,605] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:22,606] {logging_mixin.py:103} INFO - [2021-02-10 08:04:22,606] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:04:22,609] {logging_mixin.py:103} INFO - [2021-02-10 08:04:22,609] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:04:22,868] {logging_mixin.py:103} INFO - [2021-02-10 08:04:22,868] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:22,869] {logging_mixin.py:103} INFO - [2021-02-10 08:04:22,869] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:04:23,126] {logging_mixin.py:103} INFO - [2021-02-10 08:04:23,126] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:23,128] {logging_mixin.py:103} INFO - [2021-02-10 08:04:23,128] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:04:23,325] {logging_mixin.py:103} INFO - [2021-02-10 08:04:23,325] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:23,329] {logging_mixin.py:103} INFO - [2021-02-10 08:04:23,329] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:04:23,666] {logging_mixin.py:103} INFO - [2021-02-10 08:04:23,666] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:23,667] {logging_mixin.py:103} INFO - [2021-02-10 08:04:23,667] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:04:23,671] {logging_mixin.py:103} INFO - [2021-02-10 08:04:23,671] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:04:24,078] {logging_mixin.py:103} INFO - [2021-02-10 08:04:24,077] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:24,089] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:04:24,091] {logging_mixin.py:103} INFO - [2021-02-10 08:04:24,091] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:04:24,413] {logging_mixin.py:103} INFO - [2021-02-10 08:04:24,413] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:24,414] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:04:24,414] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:04:24,416] {logging_mixin.py:103} INFO - [2021-02-10 08:04:24,416] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:04:24,786] {logging_mixin.py:103} INFO - [2021-02-10 08:04:24,785] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:24,786] {logging_mixin.py:103} INFO - [2021-02-10 08:04:24,786] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:04:24,787] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:04:24,789] {logging_mixin.py:103} INFO - [2021-02-10 08:04:24,789] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:04:24,940] {logging_mixin.py:103} INFO - [2021-02-10 08:04:24,939] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:24,941] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:04:24,941] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:04:24,943] {logging_mixin.py:103} INFO - [2021-02-10 08:04:24,943] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:04:25,129] {logging_mixin.py:103} INFO - [2021-02-10 08:04:25,129] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:25,130] {logging_mixin.py:103} INFO - [2021-02-10 08:04:25,130] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:04:25,130] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:04:25,132] {logging_mixin.py:103} INFO - [2021-02-10 08:04:25,132] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:04:25,358] {logging_mixin.py:103} INFO - [2021-02-10 08:04:25,358] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:25,358] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:04:25,359] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:04:25,359] {logging_mixin.py:103} INFO - [2021-02-10 08:04:25,359] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:04:25,523] {logging_mixin.py:103} INFO - [2021-02-10 08:04:25,523] {cursor.py:560} INFO - query execution done
[2021-02-10 08:04:25,524] {logging_mixin.py:103} INFO - [2021-02-10 08:04:25,524] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:04:30,334] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:05:21,898] {scheduler_job.py:181} INFO - Started process (PID=58205) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:05:21,899] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:05:21,900] {logging_mixin.py:103} INFO - [2021-02-10 08:05:21,900] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:05:25,539] {logging_mixin.py:103} INFO - [2021-02-10 08:05:25,538] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:05:26,377] {logging_mixin.py:103} INFO - [2021-02-10 08:05:26,377] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:05:26,883] {logging_mixin.py:103} INFO - [2021-02-10 08:05:26,882] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:05:26,883] {logging_mixin.py:103} INFO - [2021-02-10 08:05:26,883] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:05:26,884] {logging_mixin.py:103} INFO - [2021-02-10 08:05:26,883] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:05:28,928] {logging_mixin.py:103} INFO - [2021-02-10 08:05:28,927] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:05:29,068] {logging_mixin.py:103} INFO - [2021-02-10 08:05:29,068] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:29,070] {logging_mixin.py:103} INFO - [2021-02-10 08:05:29,069] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:05:29,331] {logging_mixin.py:103} INFO - [2021-02-10 08:05:29,331] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:29,332] {logging_mixin.py:103} INFO - [2021-02-10 08:05:29,332] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:05:29,537] {logging_mixin.py:103} INFO - [2021-02-10 08:05:29,537] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:29,538] {logging_mixin.py:103} INFO - [2021-02-10 08:05:29,538] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:05:29,689] {logging_mixin.py:103} INFO - [2021-02-10 08:05:29,689] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:29,948] {logging_mixin.py:103} INFO - [2021-02-10 08:05:29,947] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:05:30,286] {logging_mixin.py:103} INFO - [2021-02-10 08:05:30,286] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:30,328] {logging_mixin.py:103} INFO - [2021-02-10 08:05:30,328] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:05:30,328] {logging_mixin.py:103} INFO - [2021-02-10 08:05:30,328] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:05:31,657] {logging_mixin.py:103} INFO - [2021-02-10 08:05:31,657] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:31,660] {logging_mixin.py:103} INFO - [2021-02-10 08:05:31,660] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:05:31,671] {logging_mixin.py:103} INFO - [2021-02-10 08:05:31,671] {data_context.py:1281} INFO - Setting run_name to: 20210210T070531.671365Z
[2021-02-10 08:05:31,672] {logging_mixin.py:103} INFO - [2021-02-10 08:05:31,672] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:05:31,681] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:05:31,684] {logging_mixin.py:103} INFO - [2021-02-10 08:05:31,683] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:05:31,868] {logging_mixin.py:103} INFO - [2021-02-10 08:05:31,868] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:31,869] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:05:31,869] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:05:31,871] {logging_mixin.py:103} INFO - [2021-02-10 08:05:31,870] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:05:32,159] {logging_mixin.py:103} INFO - [2021-02-10 08:05:32,158] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:32,159] {logging_mixin.py:103} INFO - [2021-02-10 08:05:32,159] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:05:32,162] {logging_mixin.py:103} INFO - [2021-02-10 08:05:32,162] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:05:32,554] {logging_mixin.py:103} INFO - [2021-02-10 08:05:32,554] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:32,556] {logging_mixin.py:103} INFO - [2021-02-10 08:05:32,556] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:05:33,073] {logging_mixin.py:103} INFO - [2021-02-10 08:05:33,073] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:33,076] {logging_mixin.py:103} INFO - [2021-02-10 08:05:33,076] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:05:33,305] {logging_mixin.py:103} INFO - [2021-02-10 08:05:33,304] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:33,305] {logging_mixin.py:103} INFO - [2021-02-10 08:05:33,305] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:05:33,323] {logging_mixin.py:103} INFO - [2021-02-10 08:05:33,323] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:05:33,324] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:05:33,325] {logging_mixin.py:103} INFO - [2021-02-10 08:05:33,325] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:05:33,519] {logging_mixin.py:103} INFO - [2021-02-10 08:05:33,519] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:33,519] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:05:33,519] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:05:33,521] {logging_mixin.py:103} INFO - [2021-02-10 08:05:33,520] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:05:33,700] {logging_mixin.py:103} INFO - [2021-02-10 08:05:33,699] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:33,700] {logging_mixin.py:103} INFO - [2021-02-10 08:05:33,700] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:05:33,703] {logging_mixin.py:103} INFO - [2021-02-10 08:05:33,703] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:05:33,994] {logging_mixin.py:103} INFO - [2021-02-10 08:05:33,994] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:33,996] {logging_mixin.py:103} INFO - [2021-02-10 08:05:33,995] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:05:34,261] {logging_mixin.py:103} INFO - [2021-02-10 08:05:34,261] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:34,265] {logging_mixin.py:103} INFO - [2021-02-10 08:05:34,265] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:05:34,651] {logging_mixin.py:103} INFO - [2021-02-10 08:05:34,651] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:34,654] {logging_mixin.py:103} INFO - [2021-02-10 08:05:34,653] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:05:34,955] {logging_mixin.py:103} INFO - [2021-02-10 08:05:34,955] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:34,956] {logging_mixin.py:103} INFO - [2021-02-10 08:05:34,956] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:05:34,961] {logging_mixin.py:103} INFO - [2021-02-10 08:05:34,961] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:05:35,313] {logging_mixin.py:103} INFO - [2021-02-10 08:05:35,313] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:35,322] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:05:35,324] {logging_mixin.py:103} INFO - [2021-02-10 08:05:35,324] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:05:35,574] {logging_mixin.py:103} INFO - [2021-02-10 08:05:35,574] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:35,575] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:05:35,575] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:05:35,576] {logging_mixin.py:103} INFO - [2021-02-10 08:05:35,576] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:05:35,781] {logging_mixin.py:103} INFO - [2021-02-10 08:05:35,780] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:35,781] {logging_mixin.py:103} INFO - [2021-02-10 08:05:35,781] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:05:35,782] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:05:35,786] {logging_mixin.py:103} INFO - [2021-02-10 08:05:35,785] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:05:35,990] {logging_mixin.py:103} INFO - [2021-02-10 08:05:35,990] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:35,991] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:05:35,991] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:05:35,992] {logging_mixin.py:103} INFO - [2021-02-10 08:05:35,992] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:05:36,217] {logging_mixin.py:103} INFO - [2021-02-10 08:05:36,216] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:36,217] {logging_mixin.py:103} INFO - [2021-02-10 08:05:36,217] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:05:36,218] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:05:36,221] {logging_mixin.py:103} INFO - [2021-02-10 08:05:36,221] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:05:36,795] {logging_mixin.py:103} INFO - [2021-02-10 08:05:36,795] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:36,797] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:05:36,797] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:05:36,798] {logging_mixin.py:103} INFO - [2021-02-10 08:05:36,798] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:05:37,079] {logging_mixin.py:103} INFO - [2021-02-10 08:05:37,079] {cursor.py:560} INFO - query execution done
[2021-02-10 08:05:37,080] {logging_mixin.py:103} INFO - [2021-02-10 08:05:37,079] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:05:41,346] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:06:15,654] {scheduler_job.py:181} INFO - Started process (PID=58271) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:06:15,654] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:06:15,654] {logging_mixin.py:103} INFO - [2021-02-10 08:06:15,654] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:06:17,585] {logging_mixin.py:103} INFO - [2021-02-10 08:06:17,585] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:06:17,867] {logging_mixin.py:103} INFO - [2021-02-10 08:06:17,866] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:06:18,250] {logging_mixin.py:103} INFO - [2021-02-10 08:06:18,250] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:06:18,251] {logging_mixin.py:103} INFO - [2021-02-10 08:06:18,250] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:06:18,251] {logging_mixin.py:103} INFO - [2021-02-10 08:06:18,251] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:06:20,520] {logging_mixin.py:103} INFO - [2021-02-10 08:06:20,520] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:06:23,622] {logging_mixin.py:103} INFO - [2021-02-10 08:06:23,622] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:23,624] {logging_mixin.py:103} INFO - [2021-02-10 08:06:23,623] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:06:23,788] {logging_mixin.py:103} INFO - [2021-02-10 08:06:23,788] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:23,788] {logging_mixin.py:103} INFO - [2021-02-10 08:06:23,788] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:06:27,440] {logging_mixin.py:103} INFO - [2021-02-10 08:06:27,440] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:27,442] {logging_mixin.py:103} INFO - [2021-02-10 08:06:27,441] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:06:27,602] {logging_mixin.py:103} INFO - [2021-02-10 08:06:27,602] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:27,861] {logging_mixin.py:103} INFO - [2021-02-10 08:06:27,861] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:06:29,196] {logging_mixin.py:103} INFO - [2021-02-10 08:06:29,196] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:29,256] {logging_mixin.py:103} INFO - [2021-02-10 08:06:29,256] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:06:29,257] {logging_mixin.py:103} INFO - [2021-02-10 08:06:29,257] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:06:31,016] {logging_mixin.py:103} INFO - [2021-02-10 08:06:31,016] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:31,020] {logging_mixin.py:103} INFO - [2021-02-10 08:06:31,020] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:06:31,033] {logging_mixin.py:103} INFO - [2021-02-10 08:06:31,033] {data_context.py:1281} INFO - Setting run_name to: 20210210T070631.033443Z
[2021-02-10 08:06:31,034] {logging_mixin.py:103} INFO - [2021-02-10 08:06:31,034] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:06:31,045] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:06:31,047] {logging_mixin.py:103} INFO - [2021-02-10 08:06:31,047] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:06:31,565] {logging_mixin.py:103} INFO - [2021-02-10 08:06:31,565] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:31,566] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:06:31,567] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:06:31,568] {logging_mixin.py:103} INFO - [2021-02-10 08:06:31,568] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:06:32,135] {logging_mixin.py:103} INFO - [2021-02-10 08:06:32,135] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:32,136] {logging_mixin.py:103} INFO - [2021-02-10 08:06:32,135] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:06:32,138] {logging_mixin.py:103} INFO - [2021-02-10 08:06:32,137] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:06:32,755] {logging_mixin.py:103} INFO - [2021-02-10 08:06:32,754] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:32,758] {logging_mixin.py:103} INFO - [2021-02-10 08:06:32,758] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:06:33,029] {logging_mixin.py:103} INFO - [2021-02-10 08:06:33,029] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:33,032] {logging_mixin.py:103} INFO - [2021-02-10 08:06:33,032] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:06:33,285] {logging_mixin.py:103} INFO - [2021-02-10 08:06:33,285] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:33,286] {logging_mixin.py:103} INFO - [2021-02-10 08:06:33,286] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:06:33,304] {logging_mixin.py:103} INFO - [2021-02-10 08:06:33,304] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:06:33,305] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:06:33,307] {logging_mixin.py:103} INFO - [2021-02-10 08:06:33,307] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:06:33,569] {logging_mixin.py:103} INFO - [2021-02-10 08:06:33,569] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:33,570] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:06:33,570] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:06:33,572] {logging_mixin.py:103} INFO - [2021-02-10 08:06:33,572] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:06:34,415] {logging_mixin.py:103} INFO - [2021-02-10 08:06:34,415] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:34,416] {logging_mixin.py:103} INFO - [2021-02-10 08:06:34,415] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:06:34,418] {logging_mixin.py:103} INFO - [2021-02-10 08:06:34,418] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:06:36,022] {logging_mixin.py:103} INFO - [2021-02-10 08:06:36,022] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:36,024] {logging_mixin.py:103} INFO - [2021-02-10 08:06:36,024] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:06:36,512] {logging_mixin.py:103} INFO - [2021-02-10 08:06:36,511] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:36,514] {logging_mixin.py:103} INFO - [2021-02-10 08:06:36,514] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:06:36,875] {logging_mixin.py:103} INFO - [2021-02-10 08:06:36,875] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:36,878] {logging_mixin.py:103} INFO - [2021-02-10 08:06:36,878] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:06:37,394] {logging_mixin.py:103} INFO - [2021-02-10 08:06:37,394] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:37,395] {logging_mixin.py:103} INFO - [2021-02-10 08:06:37,395] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:06:37,400] {logging_mixin.py:103} INFO - [2021-02-10 08:06:37,400] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:06:38,588] {logging_mixin.py:103} INFO - [2021-02-10 08:06:38,588] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:38,597] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:06:38,600] {logging_mixin.py:103} INFO - [2021-02-10 08:06:38,600] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:06:38,892] {logging_mixin.py:103} INFO - [2021-02-10 08:06:38,892] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:38,893] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:06:38,893] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:06:38,894] {logging_mixin.py:103} INFO - [2021-02-10 08:06:38,894] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:06:40,140] {logging_mixin.py:103} INFO - [2021-02-10 08:06:40,139] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:40,140] {logging_mixin.py:103} INFO - [2021-02-10 08:06:40,140] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:06:40,141] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:06:40,142] {logging_mixin.py:103} INFO - [2021-02-10 08:06:40,142] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:06:40,374] {logging_mixin.py:103} INFO - [2021-02-10 08:06:40,374] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:40,375] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:06:40,375] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:06:40,377] {logging_mixin.py:103} INFO - [2021-02-10 08:06:40,377] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:06:40,528] {logging_mixin.py:103} INFO - [2021-02-10 08:06:40,528] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:40,528] {logging_mixin.py:103} INFO - [2021-02-10 08:06:40,528] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:06:40,530] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:06:40,533] {logging_mixin.py:103} INFO - [2021-02-10 08:06:40,533] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:06:40,683] {logging_mixin.py:103} INFO - [2021-02-10 08:06:40,682] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:40,684] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:06:40,684] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:06:40,685] {logging_mixin.py:103} INFO - [2021-02-10 08:06:40,685] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:06:40,886] {logging_mixin.py:103} INFO - [2021-02-10 08:06:40,886] {cursor.py:560} INFO - query execution done
[2021-02-10 08:06:40,886] {logging_mixin.py:103} INFO - [2021-02-10 08:06:40,886] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:06:45,656] {logging_mixin.py:103} INFO - [2021-02-10 08:06:45,656] {timeout.py:36} ERROR - Process timed out, PID: 58271
[2021-02-10 08:06:45,656] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:07:14,096] {scheduler_job.py:181} INFO - Started process (PID=58333) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:07:14,097] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:07:14,097] {logging_mixin.py:103} INFO - [2021-02-10 08:07:14,097] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:07:16,190] {logging_mixin.py:103} INFO - [2021-02-10 08:07:16,190] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:07:16,577] {logging_mixin.py:103} INFO - [2021-02-10 08:07:16,577] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:07:16,988] {logging_mixin.py:103} INFO - [2021-02-10 08:07:16,988] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:07:16,989] {logging_mixin.py:103} INFO - [2021-02-10 08:07:16,989] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:07:16,989] {logging_mixin.py:103} INFO - [2021-02-10 08:07:16,989] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:07:18,137] {logging_mixin.py:103} INFO - [2021-02-10 08:07:18,137] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:07:18,298] {logging_mixin.py:103} INFO - [2021-02-10 08:07:18,298] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:18,300] {logging_mixin.py:103} INFO - [2021-02-10 08:07:18,300] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:07:18,448] {logging_mixin.py:103} INFO - [2021-02-10 08:07:18,447] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:18,448] {logging_mixin.py:103} INFO - [2021-02-10 08:07:18,448] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:07:18,628] {logging_mixin.py:103} INFO - [2021-02-10 08:07:18,628] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:18,629] {logging_mixin.py:103} INFO - [2021-02-10 08:07:18,629] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:07:18,884] {logging_mixin.py:103} INFO - [2021-02-10 08:07:18,884] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:19,122] {logging_mixin.py:103} INFO - [2021-02-10 08:07:19,122] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:07:19,607] {logging_mixin.py:103} INFO - [2021-02-10 08:07:19,606] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:19,666] {logging_mixin.py:103} INFO - [2021-02-10 08:07:19,666] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:07:19,666] {logging_mixin.py:103} INFO - [2021-02-10 08:07:19,666] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:07:21,112] {logging_mixin.py:103} INFO - [2021-02-10 08:07:21,112] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:21,117] {logging_mixin.py:103} INFO - [2021-02-10 08:07:21,116] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:07:21,130] {logging_mixin.py:103} INFO - [2021-02-10 08:07:21,130] {data_context.py:1281} INFO - Setting run_name to: 20210210T070721.130093Z
[2021-02-10 08:07:21,131] {logging_mixin.py:103} INFO - [2021-02-10 08:07:21,131] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:07:21,141] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:07:21,142] {logging_mixin.py:103} INFO - [2021-02-10 08:07:21,142] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:07:21,312] {logging_mixin.py:103} INFO - [2021-02-10 08:07:21,312] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:21,313] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:07:21,314] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:07:21,315] {logging_mixin.py:103} INFO - [2021-02-10 08:07:21,315] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:07:21,497] {logging_mixin.py:103} INFO - [2021-02-10 08:07:21,496] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:21,497] {logging_mixin.py:103} INFO - [2021-02-10 08:07:21,497] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:07:21,500] {logging_mixin.py:103} INFO - [2021-02-10 08:07:21,500] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:07:21,689] {logging_mixin.py:103} INFO - [2021-02-10 08:07:21,689] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:21,692] {logging_mixin.py:103} INFO - [2021-02-10 08:07:21,692] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:07:21,879] {logging_mixin.py:103} INFO - [2021-02-10 08:07:21,879] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:21,882] {logging_mixin.py:103} INFO - [2021-02-10 08:07:21,882] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:07:22,036] {logging_mixin.py:103} INFO - [2021-02-10 08:07:22,036] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:22,036] {logging_mixin.py:103} INFO - [2021-02-10 08:07:22,036] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:07:22,053] {logging_mixin.py:103} INFO - [2021-02-10 08:07:22,053] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:07:22,054] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:07:22,055] {logging_mixin.py:103} INFO - [2021-02-10 08:07:22,055] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:07:22,265] {logging_mixin.py:103} INFO - [2021-02-10 08:07:22,265] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:22,266] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:07:22,266] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:07:22,268] {logging_mixin.py:103} INFO - [2021-02-10 08:07:22,268] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:07:22,469] {logging_mixin.py:103} INFO - [2021-02-10 08:07:22,469] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:22,470] {logging_mixin.py:103} INFO - [2021-02-10 08:07:22,470] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:07:22,473] {logging_mixin.py:103} INFO - [2021-02-10 08:07:22,473] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:07:22,625] {logging_mixin.py:103} INFO - [2021-02-10 08:07:22,624] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:22,627] {logging_mixin.py:103} INFO - [2021-02-10 08:07:22,627] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:07:22,902] {logging_mixin.py:103} INFO - [2021-02-10 08:07:22,902] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:22,905] {logging_mixin.py:103} INFO - [2021-02-10 08:07:22,905] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:07:23,069] {logging_mixin.py:103} INFO - [2021-02-10 08:07:23,069] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:23,071] {logging_mixin.py:103} INFO - [2021-02-10 08:07:23,071] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:07:23,297] {logging_mixin.py:103} INFO - [2021-02-10 08:07:23,297] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:23,298] {logging_mixin.py:103} INFO - [2021-02-10 08:07:23,297] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:07:23,300] {logging_mixin.py:103} INFO - [2021-02-10 08:07:23,300] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:07:23,508] {logging_mixin.py:103} INFO - [2021-02-10 08:07:23,508] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:23,516] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:07:23,518] {logging_mixin.py:103} INFO - [2021-02-10 08:07:23,518] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:07:23,685] {logging_mixin.py:103} INFO - [2021-02-10 08:07:23,685] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:23,687] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:07:23,687] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:07:23,689] {logging_mixin.py:103} INFO - [2021-02-10 08:07:23,689] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:07:23,867] {logging_mixin.py:103} INFO - [2021-02-10 08:07:23,866] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:23,867] {logging_mixin.py:103} INFO - [2021-02-10 08:07:23,867] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:07:23,868] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:07:23,871] {logging_mixin.py:103} INFO - [2021-02-10 08:07:23,871] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:07:24,046] {logging_mixin.py:103} INFO - [2021-02-10 08:07:24,046] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:24,049] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:07:24,049] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:07:24,051] {logging_mixin.py:103} INFO - [2021-02-10 08:07:24,051] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:07:24,340] {logging_mixin.py:103} INFO - [2021-02-10 08:07:24,340] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:24,341] {logging_mixin.py:103} INFO - [2021-02-10 08:07:24,341] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:07:24,342] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:07:24,344] {logging_mixin.py:103} INFO - [2021-02-10 08:07:24,344] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:07:24,696] {logging_mixin.py:103} INFO - [2021-02-10 08:07:24,695] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:24,697] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:07:24,698] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:07:24,700] {logging_mixin.py:103} INFO - [2021-02-10 08:07:24,699] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:07:24,872] {logging_mixin.py:103} INFO - [2021-02-10 08:07:24,872] {cursor.py:560} INFO - query execution done
[2021-02-10 08:07:24,873] {logging_mixin.py:103} INFO - [2021-02-10 08:07:24,873] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:07:29,291] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:08:01,817] {scheduler_job.py:181} INFO - Started process (PID=58446) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:08:01,818] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:08:01,819] {logging_mixin.py:103} INFO - [2021-02-10 08:08:01,819] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:08:03,813] {logging_mixin.py:103} INFO - [2021-02-10 08:08:03,813] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:08:04,120] {logging_mixin.py:103} INFO - [2021-02-10 08:08:04,120] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:08:04,602] {logging_mixin.py:103} INFO - [2021-02-10 08:08:04,602] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:08:04,602] {logging_mixin.py:103} INFO - [2021-02-10 08:08:04,602] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:08:04,603] {logging_mixin.py:103} INFO - [2021-02-10 08:08:04,602] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:08:05,975] {logging_mixin.py:103} INFO - [2021-02-10 08:08:05,975] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:08:06,191] {logging_mixin.py:103} INFO - [2021-02-10 08:08:06,190] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:06,193] {logging_mixin.py:103} INFO - [2021-02-10 08:08:06,192] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:08:06,330] {logging_mixin.py:103} INFO - [2021-02-10 08:08:06,330] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:06,331] {logging_mixin.py:103} INFO - [2021-02-10 08:08:06,331] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:08:06,464] {logging_mixin.py:103} INFO - [2021-02-10 08:08:06,464] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:06,467] {logging_mixin.py:103} INFO - [2021-02-10 08:08:06,467] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:08:06,626] {logging_mixin.py:103} INFO - [2021-02-10 08:08:06,626] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:06,854] {logging_mixin.py:103} INFO - [2021-02-10 08:08:06,854] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:08:07,264] {logging_mixin.py:103} INFO - [2021-02-10 08:08:07,264] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:07,309] {logging_mixin.py:103} INFO - [2021-02-10 08:08:07,309] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:08:07,310] {logging_mixin.py:103} INFO - [2021-02-10 08:08:07,310] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:08:09,358] {logging_mixin.py:103} INFO - [2021-02-10 08:08:09,358] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:09,367] {logging_mixin.py:103} INFO - [2021-02-10 08:08:09,367] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:08:09,390] {logging_mixin.py:103} INFO - [2021-02-10 08:08:09,390] {data_context.py:1281} INFO - Setting run_name to: 20210210T070809.390573Z
[2021-02-10 08:08:09,393] {logging_mixin.py:103} INFO - [2021-02-10 08:08:09,393] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:08:09,406] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:08:09,409] {logging_mixin.py:103} INFO - [2021-02-10 08:08:09,409] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:08:09,639] {logging_mixin.py:103} INFO - [2021-02-10 08:08:09,639] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:09,639] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:08:09,640] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:08:09,641] {logging_mixin.py:103} INFO - [2021-02-10 08:08:09,641] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:08:09,857] {logging_mixin.py:103} INFO - [2021-02-10 08:08:09,857] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:09,857] {logging_mixin.py:103} INFO - [2021-02-10 08:08:09,857] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:08:09,859] {logging_mixin.py:103} INFO - [2021-02-10 08:08:09,859] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:08:10,148] {logging_mixin.py:103} INFO - [2021-02-10 08:08:10,148] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:10,150] {logging_mixin.py:103} INFO - [2021-02-10 08:08:10,150] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:08:10,383] {logging_mixin.py:103} INFO - [2021-02-10 08:08:10,383] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:10,386] {logging_mixin.py:103} INFO - [2021-02-10 08:08:10,386] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:08:10,623] {logging_mixin.py:103} INFO - [2021-02-10 08:08:10,623] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:10,624] {logging_mixin.py:103} INFO - [2021-02-10 08:08:10,624] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:08:10,639] {logging_mixin.py:103} INFO - [2021-02-10 08:08:10,639] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:08:10,640] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:08:10,642] {logging_mixin.py:103} INFO - [2021-02-10 08:08:10,641] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:08:10,849] {logging_mixin.py:103} INFO - [2021-02-10 08:08:10,849] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:10,850] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:08:10,850] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:08:10,851] {logging_mixin.py:103} INFO - [2021-02-10 08:08:10,851] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:08:11,034] {logging_mixin.py:103} INFO - [2021-02-10 08:08:11,034] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:11,034] {logging_mixin.py:103} INFO - [2021-02-10 08:08:11,034] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:08:11,038] {logging_mixin.py:103} INFO - [2021-02-10 08:08:11,038] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:08:11,810] {logging_mixin.py:103} INFO - [2021-02-10 08:08:11,810] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:11,812] {logging_mixin.py:103} INFO - [2021-02-10 08:08:11,812] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:08:12,093] {logging_mixin.py:103} INFO - [2021-02-10 08:08:12,093] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:12,097] {logging_mixin.py:103} INFO - [2021-02-10 08:08:12,097] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:08:12,291] {logging_mixin.py:103} INFO - [2021-02-10 08:08:12,290] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:12,293] {logging_mixin.py:103} INFO - [2021-02-10 08:08:12,293] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:08:13,041] {logging_mixin.py:103} INFO - [2021-02-10 08:08:13,041] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:13,042] {logging_mixin.py:103} INFO - [2021-02-10 08:08:13,042] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:08:13,044] {logging_mixin.py:103} INFO - [2021-02-10 08:08:13,044] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:08:13,212] {logging_mixin.py:103} INFO - [2021-02-10 08:08:13,212] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:13,217] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:08:13,219] {logging_mixin.py:103} INFO - [2021-02-10 08:08:13,218] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:08:13,474] {logging_mixin.py:103} INFO - [2021-02-10 08:08:13,474] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:13,475] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:08:13,475] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:08:13,476] {logging_mixin.py:103} INFO - [2021-02-10 08:08:13,475] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:08:13,691] {logging_mixin.py:103} INFO - [2021-02-10 08:08:13,691] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:13,692] {logging_mixin.py:103} INFO - [2021-02-10 08:08:13,692] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:08:13,693] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:08:13,696] {logging_mixin.py:103} INFO - [2021-02-10 08:08:13,695] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:08:13,887] {logging_mixin.py:103} INFO - [2021-02-10 08:08:13,887] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:13,889] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:08:13,890] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:08:13,893] {logging_mixin.py:103} INFO - [2021-02-10 08:08:13,892] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:08:14,125] {logging_mixin.py:103} INFO - [2021-02-10 08:08:14,125] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:14,125] {logging_mixin.py:103} INFO - [2021-02-10 08:08:14,125] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:08:14,149] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY'}
[2021-02-10 08:08:14,155] {logging_mixin.py:103} INFO - [2021-02-10 08:08:14,154] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:08:14,931] {logging_mixin.py:103} INFO - [2021-02-10 08:08:14,931] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:14,932] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:08:14,932] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:08:14,933] {logging_mixin.py:103} INFO - [2021-02-10 08:08:14,933] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:08:15,630] {logging_mixin.py:103} INFO - [2021-02-10 08:08:15,630] {cursor.py:560} INFO - query execution done
[2021-02-10 08:08:15,631] {logging_mixin.py:103} INFO - [2021-02-10 08:08:15,631] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:08:24,186] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:08:58,001] {scheduler_job.py:181} INFO - Started process (PID=58561) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:08:58,001] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:08:58,001] {logging_mixin.py:103} INFO - [2021-02-10 08:08:58,001] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:08:59,738] {logging_mixin.py:103} INFO - [2021-02-10 08:08:59,738] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:09:00,024] {logging_mixin.py:103} INFO - [2021-02-10 08:09:00,024] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:09:00,430] {logging_mixin.py:103} INFO - [2021-02-10 08:09:00,430] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:09:00,430] {logging_mixin.py:103} INFO - [2021-02-10 08:09:00,430] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:09:00,430] {logging_mixin.py:103} INFO - [2021-02-10 08:09:00,430] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:09:01,893] {logging_mixin.py:103} INFO - [2021-02-10 08:09:01,893] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:09:02,059] {logging_mixin.py:103} INFO - [2021-02-10 08:09:02,059] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:02,061] {logging_mixin.py:103} INFO - [2021-02-10 08:09:02,061] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:09:02,210] {logging_mixin.py:103} INFO - [2021-02-10 08:09:02,210] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:02,211] {logging_mixin.py:103} INFO - [2021-02-10 08:09:02,211] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:09:02,341] {logging_mixin.py:103} INFO - [2021-02-10 08:09:02,341] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:02,344] {logging_mixin.py:103} INFO - [2021-02-10 08:09:02,344] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:09:02,487] {logging_mixin.py:103} INFO - [2021-02-10 08:09:02,487] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:02,750] {logging_mixin.py:103} INFO - [2021-02-10 08:09:02,750] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:09:02,915] {logging_mixin.py:103} INFO - [2021-02-10 08:09:02,915] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:02,964] {logging_mixin.py:103} INFO - [2021-02-10 08:09:02,963] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:09:02,964] {logging_mixin.py:103} INFO - [2021-02-10 08:09:02,964] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:09:04,959] {logging_mixin.py:103} INFO - [2021-02-10 08:09:04,959] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:04,963] {logging_mixin.py:103} INFO - [2021-02-10 08:09:04,963] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:09:04,973] {logging_mixin.py:103} INFO - [2021-02-10 08:09:04,973] {data_context.py:1281} INFO - Setting run_name to: 20210210T070904.973233Z
[2021-02-10 08:09:04,974] {logging_mixin.py:103} INFO - [2021-02-10 08:09:04,974] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:09:04,983] {logging_mixin.py:103} INFO - {'result_format': 'VAL_COLUMN', 'result_update_column': 'cambia_aqui'}
[2021-02-10 08:09:04,985] {logging_mixin.py:103} INFO - [2021-02-10 08:09:04,985] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:09:05,227] {logging_mixin.py:103} INFO - [2021-02-10 08:09:05,227] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:05,228] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:09:05,228] {logging_mixin.py:103} INFO - VAL_COLUMN
[2021-02-10 08:09:05,230] {logging_mixin.py:103} INFO - [2021-02-10 08:09:05,229] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE vendor_id IS NULL AND NOT...]
[2021-02-10 08:09:05,400] {logging_mixin.py:103} INFO - [2021-02-10 08:09:05,400] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:05,423] {logging_mixin.py:103} INFO - [2021-02-10 08:09:05,423] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:09:05,573] {logging_mixin.py:103} INFO - [2021-02-10 08:09:05,572] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:05,576] {logging_mixin.py:103} INFO - [2021-02-10 08:09:05,576] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:09:05,786] {logging_mixin.py:103} INFO - [2021-02-10 08:09:05,786] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:05,790] {logging_mixin.py:103} INFO - [2021-02-10 08:09:05,790] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:09:05,961] {logging_mixin.py:103} INFO - [2021-02-10 08:09:05,961] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:05,963] {logging_mixin.py:103} INFO - [2021-02-10 08:09:05,963] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:09:06,143] {logging_mixin.py:103} INFO - [2021-02-10 08:09:06,143] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:06,144] {logging_mixin.py:103} INFO - [2021-02-10 08:09:06,144] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:09:06,162] {logging_mixin.py:103} INFO - [2021-02-10 08:09:06,162] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:09:06,163] {logging_mixin.py:103} INFO - {'result_format': 'VAL_COLUMN', 'result_update_column': 'cambia_aqui'}
[2021-02-10 08:09:06,165] {logging_mixin.py:103} INFO - [2021-02-10 08:09:06,165] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:09:06,404] {logging_mixin.py:103} INFO - [2021-02-10 08:09:06,404] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:06,405] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:09:06,406] {logging_mixin.py:103} INFO - VAL_COLUMN
[2021-02-10 08:09:06,407] {logging_mixin.py:103} INFO - [2021-02-10 08:09:06,407] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE trip_distance IS NULL AND...]
[2021-02-10 08:09:06,603] {logging_mixin.py:103} INFO - [2021-02-10 08:09:06,603] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:06,605] {logging_mixin.py:103} INFO - [2021-02-10 08:09:06,605] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:09:06,809] {logging_mixin.py:103} INFO - [2021-02-10 08:09:06,809] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:06,813] {logging_mixin.py:103} INFO - [2021-02-10 08:09:06,813] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:09:07,055] {logging_mixin.py:103} INFO - [2021-02-10 08:09:07,055] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:07,058] {logging_mixin.py:103} INFO - [2021-02-10 08:09:07,058] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:09:07,231] {logging_mixin.py:103} INFO - [2021-02-10 08:09:07,231] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:07,235] {logging_mixin.py:103} INFO - [2021-02-10 08:09:07,234] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:09:07,500] {logging_mixin.py:103} INFO - [2021-02-10 08:09:07,500] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:07,503] {logging_mixin.py:103} INFO - [2021-02-10 08:09:07,503] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:09:07,672] {logging_mixin.py:103} INFO - [2021-02-10 08:09:07,672] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:07,673] {logging_mixin.py:103} INFO - [2021-02-10 08:09:07,672] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:09:07,677] {logging_mixin.py:103} INFO - [2021-02-10 08:09:07,677] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:09:07,850] {logging_mixin.py:103} INFO - [2021-02-10 08:09:07,850] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:07,852] {logging_mixin.py:103} INFO - {'result_format': 'VAL_COLUMN', 'result_update_column': 'cambia_aqui'}
[2021-02-10 08:09:07,855] {logging_mixin.py:103} INFO - [2021-02-10 08:09:07,855] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:09:08,033] {logging_mixin.py:103} INFO - [2021-02-10 08:09:08,033] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:08,034] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:09:08,034] {logging_mixin.py:103} INFO - VAL_COLUMN
[2021-02-10 08:09:08,035] {logging_mixin.py:103} INFO - [2021-02-10 08:09:08,035] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE pickup_date IS NULL AND N...]
[2021-02-10 08:09:08,240] {logging_mixin.py:103} INFO - [2021-02-10 08:09:08,240] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:08,241] {logging_mixin.py:103} INFO - [2021-02-10 08:09:08,241] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:09:08,382] {logging_mixin.py:103} INFO - [2021-02-10 08:09:08,382] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:08,384] {logging_mixin.py:103} INFO - {'result_format': 'VAL_COLUMN', 'result_update_column': 'cambia_aqui'}
[2021-02-10 08:09:08,386] {logging_mixin.py:103} INFO - [2021-02-10 08:09:08,385] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:09:08,529] {logging_mixin.py:103} INFO - [2021-02-10 08:09:08,529] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:08,530] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:09:08,530] {logging_mixin.py:103} INFO - VAL_COLUMN
[2021-02-10 08:09:08,532] {logging_mixin.py:103} INFO - [2021-02-10 08:09:08,531] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (pickup_date >= '2018...]
[2021-02-10 08:09:08,701] {logging_mixin.py:103} INFO - [2021-02-10 08:09:08,701] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:08,702] {logging_mixin.py:103} INFO - [2021-02-10 08:09:08,702] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:09:08,840] {logging_mixin.py:103} INFO - [2021-02-10 08:09:08,839] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:08,843] {logging_mixin.py:103} INFO - {'result_format': 'VAL_COLUMN', 'result_update_column': 'cambia_aqui'}
[2021-02-10 08:09:08,845] {logging_mixin.py:103} INFO - [2021-02-10 08:09:08,845] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:09:09,023] {logging_mixin.py:103} INFO - [2021-02-10 08:09:09,023] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:09,024] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:09:09,025] {logging_mixin.py:103} INFO - VAL_COLUMN
[2021-02-10 08:09:09,026] {logging_mixin.py:103} INFO - [2021-02-10 08:09:09,026] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 08:09:09,199] {logging_mixin.py:103} INFO - [2021-02-10 08:09:09,199] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:09,202] {logging_mixin.py:103} INFO - [2021-02-10 08:09:09,202] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:09:09,333] {logging_mixin.py:103} INFO - [2021-02-10 08:09:09,333] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:12,684] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:09:41,584] {scheduler_job.py:181} INFO - Started process (PID=58624) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:09:41,585] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:09:41,585] {logging_mixin.py:103} INFO - [2021-02-10 08:09:41,585] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:09:43,257] {logging_mixin.py:103} INFO - [2021-02-10 08:09:43,257] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:09:43,537] {logging_mixin.py:103} INFO - [2021-02-10 08:09:43,537] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:09:43,880] {logging_mixin.py:103} INFO - [2021-02-10 08:09:43,880] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:09:43,881] {logging_mixin.py:103} INFO - [2021-02-10 08:09:43,881] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:09:43,881] {logging_mixin.py:103} INFO - [2021-02-10 08:09:43,881] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:09:44,624] {logging_mixin.py:103} INFO - [2021-02-10 08:09:44,624] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:09:44,772] {logging_mixin.py:103} INFO - [2021-02-10 08:09:44,772] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:44,773] {logging_mixin.py:103} INFO - [2021-02-10 08:09:44,773] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:09:44,938] {logging_mixin.py:103} INFO - [2021-02-10 08:09:44,938] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:44,939] {logging_mixin.py:103} INFO - [2021-02-10 08:09:44,938] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:09:45,080] {logging_mixin.py:103} INFO - [2021-02-10 08:09:45,080] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:45,082] {logging_mixin.py:103} INFO - [2021-02-10 08:09:45,082] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:09:45,235] {logging_mixin.py:103} INFO - [2021-02-10 08:09:45,235] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:45,460] {logging_mixin.py:103} INFO - [2021-02-10 08:09:45,460] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:09:45,739] {logging_mixin.py:103} INFO - [2021-02-10 08:09:45,739] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:45,783] {logging_mixin.py:103} INFO - [2021-02-10 08:09:45,783] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:09:45,783] {logging_mixin.py:103} INFO - [2021-02-10 08:09:45,783] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:09:46,739] {logging_mixin.py:103} INFO - [2021-02-10 08:09:46,738] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:46,740] {logging_mixin.py:103} INFO - [2021-02-10 08:09:46,740] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:09:46,749] {logging_mixin.py:103} INFO - [2021-02-10 08:09:46,749] {data_context.py:1281} INFO - Setting run_name to: 20210210T070946.749164Z
[2021-02-10 08:09:46,750] {logging_mixin.py:103} INFO - [2021-02-10 08:09:46,750] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:09:46,758] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:09:46,759] {logging_mixin.py:103} INFO - [2021-02-10 08:09:46,759] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:09:46,928] {logging_mixin.py:103} INFO - [2021-02-10 08:09:46,928] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:46,928] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:09:46,928] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:09:46,929] {logging_mixin.py:103} INFO - [2021-02-10 08:09:46,929] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:09:47,078] {logging_mixin.py:103} INFO - [2021-02-10 08:09:47,078] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:47,079] {logging_mixin.py:103} INFO - [2021-02-10 08:09:47,079] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:09:47,081] {logging_mixin.py:103} INFO - [2021-02-10 08:09:47,080] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:09:47,229] {logging_mixin.py:103} INFO - [2021-02-10 08:09:47,229] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:47,230] {logging_mixin.py:103} INFO - [2021-02-10 08:09:47,230] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:09:47,434] {logging_mixin.py:103} INFO - [2021-02-10 08:09:47,434] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:47,435] {logging_mixin.py:103} INFO - [2021-02-10 08:09:47,435] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:09:47,605] {logging_mixin.py:103} INFO - [2021-02-10 08:09:47,605] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:47,605] {logging_mixin.py:103} INFO - [2021-02-10 08:09:47,605] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:09:47,613] {logging_mixin.py:103} INFO - [2021-02-10 08:09:47,613] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:09:47,613] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:09:47,615] {logging_mixin.py:103} INFO - [2021-02-10 08:09:47,615] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:09:47,820] {logging_mixin.py:103} INFO - [2021-02-10 08:09:47,820] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:47,820] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:09:47,820] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:09:47,821] {logging_mixin.py:103} INFO - [2021-02-10 08:09:47,821] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:09:47,984] {logging_mixin.py:103} INFO - [2021-02-10 08:09:47,984] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:47,984] {logging_mixin.py:103} INFO - [2021-02-10 08:09:47,984] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:09:47,986] {logging_mixin.py:103} INFO - [2021-02-10 08:09:47,986] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:09:48,159] {logging_mixin.py:103} INFO - [2021-02-10 08:09:48,159] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:48,161] {logging_mixin.py:103} INFO - [2021-02-10 08:09:48,161] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:09:48,321] {logging_mixin.py:103} INFO - [2021-02-10 08:09:48,321] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:48,324] {logging_mixin.py:103} INFO - [2021-02-10 08:09:48,324] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:09:48,512] {logging_mixin.py:103} INFO - [2021-02-10 08:09:48,512] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:48,514] {logging_mixin.py:103} INFO - [2021-02-10 08:09:48,514] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:09:48,882] {logging_mixin.py:103} INFO - [2021-02-10 08:09:48,882] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:48,882] {logging_mixin.py:103} INFO - [2021-02-10 08:09:48,882] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:09:48,885] {logging_mixin.py:103} INFO - [2021-02-10 08:09:48,885] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:09:49,076] {logging_mixin.py:103} INFO - [2021-02-10 08:09:49,076] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:49,081] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:09:49,084] {logging_mixin.py:103} INFO - [2021-02-10 08:09:49,083] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:09:49,260] {logging_mixin.py:103} INFO - [2021-02-10 08:09:49,260] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:49,261] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:09:49,261] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:09:49,262] {logging_mixin.py:103} INFO - [2021-02-10 08:09:49,262] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:09:49,428] {logging_mixin.py:103} INFO - [2021-02-10 08:09:49,428] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:49,429] {logging_mixin.py:103} INFO - [2021-02-10 08:09:49,428] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:09:49,430] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:09:49,433] {logging_mixin.py:103} INFO - [2021-02-10 08:09:49,433] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:09:49,633] {logging_mixin.py:103} INFO - [2021-02-10 08:09:49,633] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:49,634] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:09:49,635] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:09:49,636] {logging_mixin.py:103} INFO - [2021-02-10 08:09:49,636] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:09:49,820] {logging_mixin.py:103} INFO - [2021-02-10 08:09:49,820] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:49,821] {logging_mixin.py:103} INFO - [2021-02-10 08:09:49,821] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:09:49,822] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:09:49,825] {logging_mixin.py:103} INFO - [2021-02-10 08:09:49,825] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:09:49,980] {logging_mixin.py:103} INFO - [2021-02-10 08:09:49,980] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:49,981] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:09:49,982] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:09:49,983] {logging_mixin.py:103} INFO - [2021-02-10 08:09:49,983] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:09:50,148] {logging_mixin.py:103} INFO - [2021-02-10 08:09:50,147] {cursor.py:560} INFO - query execution done
[2021-02-10 08:09:50,148] {logging_mixin.py:103} INFO - [2021-02-10 08:09:50,148] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:09:54,085] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:10:24,111] {scheduler_job.py:181} INFO - Started process (PID=58699) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:10:24,111] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:10:24,112] {logging_mixin.py:103} INFO - [2021-02-10 08:10:24,112] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:10:27,096] {logging_mixin.py:103} INFO - [2021-02-10 08:10:27,096] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:10:27,539] {logging_mixin.py:103} INFO - [2021-02-10 08:10:27,538] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:10:27,966] {logging_mixin.py:103} INFO - [2021-02-10 08:10:27,966] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:10:27,967] {logging_mixin.py:103} INFO - [2021-02-10 08:10:27,967] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:10:27,967] {logging_mixin.py:103} INFO - [2021-02-10 08:10:27,967] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:10:28,936] {logging_mixin.py:103} INFO - [2021-02-10 08:10:28,936] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:10:29,111] {logging_mixin.py:103} INFO - [2021-02-10 08:10:29,111] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:29,112] {logging_mixin.py:103} INFO - [2021-02-10 08:10:29,112] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:10:29,284] {logging_mixin.py:103} INFO - [2021-02-10 08:10:29,284] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:29,285] {logging_mixin.py:103} INFO - [2021-02-10 08:10:29,285] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:10:29,421] {logging_mixin.py:103} INFO - [2021-02-10 08:10:29,421] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:29,423] {logging_mixin.py:103} INFO - [2021-02-10 08:10:29,422] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:10:29,585] {logging_mixin.py:103} INFO - [2021-02-10 08:10:29,585] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:29,831] {logging_mixin.py:103} INFO - [2021-02-10 08:10:29,831] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:10:29,982] {logging_mixin.py:103} INFO - [2021-02-10 08:10:29,982] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:30,031] {logging_mixin.py:103} INFO - [2021-02-10 08:10:30,031] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:10:30,031] {logging_mixin.py:103} INFO - [2021-02-10 08:10:30,031] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:10:31,270] {logging_mixin.py:103} INFO - [2021-02-10 08:10:31,270] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:31,273] {logging_mixin.py:103} INFO - [2021-02-10 08:10:31,273] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:10:31,292] {logging_mixin.py:103} INFO - [2021-02-10 08:10:31,292] {data_context.py:1281} INFO - Setting run_name to: 20210210T071031.291940Z
[2021-02-10 08:10:31,293] {logging_mixin.py:103} INFO - [2021-02-10 08:10:31,293] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:10:31,313] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:10:31,318] {logging_mixin.py:103} INFO - [2021-02-10 08:10:31,317] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:10:31,541] {logging_mixin.py:103} INFO - [2021-02-10 08:10:31,541] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:31,542] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:10:31,542] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:10:31,543] {logging_mixin.py:103} INFO - [2021-02-10 08:10:31,543] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:10:31,774] {logging_mixin.py:103} INFO - [2021-02-10 08:10:31,774] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:31,775] {logging_mixin.py:103} INFO - [2021-02-10 08:10:31,775] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:10:31,779] {logging_mixin.py:103} INFO - [2021-02-10 08:10:31,779] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:10:31,987] {logging_mixin.py:103} INFO - [2021-02-10 08:10:31,987] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:31,988] {logging_mixin.py:103} INFO - [2021-02-10 08:10:31,988] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:10:32,193] {logging_mixin.py:103} INFO - [2021-02-10 08:10:32,193] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:32,195] {logging_mixin.py:103} INFO - [2021-02-10 08:10:32,195] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:10:33,434] {logging_mixin.py:103} INFO - [2021-02-10 08:10:33,434] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:33,435] {logging_mixin.py:103} INFO - [2021-02-10 08:10:33,434] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:10:33,449] {logging_mixin.py:103} INFO - [2021-02-10 08:10:33,449] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:10:33,450] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:10:33,452] {logging_mixin.py:103} INFO - [2021-02-10 08:10:33,452] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:10:33,611] {logging_mixin.py:103} INFO - [2021-02-10 08:10:33,611] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:33,613] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:10:33,614] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:10:33,615] {logging_mixin.py:103} INFO - [2021-02-10 08:10:33,615] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:10:33,776] {logging_mixin.py:103} INFO - [2021-02-10 08:10:33,776] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:33,776] {logging_mixin.py:103} INFO - [2021-02-10 08:10:33,776] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:10:33,779] {logging_mixin.py:103} INFO - [2021-02-10 08:10:33,779] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:10:34,014] {logging_mixin.py:103} INFO - [2021-02-10 08:10:34,014] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:34,016] {logging_mixin.py:103} INFO - [2021-02-10 08:10:34,015] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:10:34,232] {logging_mixin.py:103} INFO - [2021-02-10 08:10:34,232] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:34,235] {logging_mixin.py:103} INFO - [2021-02-10 08:10:34,235] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:10:34,453] {logging_mixin.py:103} INFO - [2021-02-10 08:10:34,453] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:34,456] {logging_mixin.py:103} INFO - [2021-02-10 08:10:34,456] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:10:34,608] {logging_mixin.py:103} INFO - [2021-02-10 08:10:34,608] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:34,609] {logging_mixin.py:103} INFO - [2021-02-10 08:10:34,609] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:10:34,614] {logging_mixin.py:103} INFO - [2021-02-10 08:10:34,614] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:10:34,774] {logging_mixin.py:103} INFO - [2021-02-10 08:10:34,773] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:34,778] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:10:34,782] {logging_mixin.py:103} INFO - [2021-02-10 08:10:34,782] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:10:34,966] {logging_mixin.py:103} INFO - [2021-02-10 08:10:34,966] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:34,967] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:10:34,967] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:10:34,968] {logging_mixin.py:103} INFO - [2021-02-10 08:10:34,968] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:10:35,126] {logging_mixin.py:103} INFO - [2021-02-10 08:10:35,126] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:35,127] {logging_mixin.py:103} INFO - [2021-02-10 08:10:35,127] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:10:35,128] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:10:35,131] {logging_mixin.py:103} INFO - [2021-02-10 08:10:35,131] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:10:35,298] {logging_mixin.py:103} INFO - [2021-02-10 08:10:35,298] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:35,299] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:10:35,299] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:10:35,301] {logging_mixin.py:103} INFO - [2021-02-10 08:10:35,301] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:10:35,478] {logging_mixin.py:103} INFO - [2021-02-10 08:10:35,477] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:35,478] {logging_mixin.py:103} INFO - [2021-02-10 08:10:35,478] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:10:35,479] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:10:35,482] {logging_mixin.py:103} INFO - [2021-02-10 08:10:35,482] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:10:35,649] {logging_mixin.py:103} INFO - [2021-02-10 08:10:35,649] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:35,650] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:10:35,650] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:10:35,652] {logging_mixin.py:103} INFO - [2021-02-10 08:10:35,652] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:10:35,830] {logging_mixin.py:103} INFO - [2021-02-10 08:10:35,830] {cursor.py:560} INFO - query execution done
[2021-02-10 08:10:35,831] {logging_mixin.py:103} INFO - [2021-02-10 08:10:35,830] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:10:39,674] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:11:08,428] {scheduler_job.py:181} INFO - Started process (PID=58768) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:11:08,428] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:11:08,429] {logging_mixin.py:103} INFO - [2021-02-10 08:11:08,429] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:11:10,303] {logging_mixin.py:103} INFO - [2021-02-10 08:11:10,303] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:11:10,624] {logging_mixin.py:103} INFO - [2021-02-10 08:11:10,624] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:11:11,018] {logging_mixin.py:103} INFO - [2021-02-10 08:11:11,018] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:11:11,018] {logging_mixin.py:103} INFO - [2021-02-10 08:11:11,018] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:11:11,018] {logging_mixin.py:103} INFO - [2021-02-10 08:11:11,018] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:11:12,181] {logging_mixin.py:103} INFO - [2021-02-10 08:11:12,181] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:11:12,337] {logging_mixin.py:103} INFO - [2021-02-10 08:11:12,337] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:12,339] {logging_mixin.py:103} INFO - [2021-02-10 08:11:12,339] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:11:12,575] {logging_mixin.py:103} INFO - [2021-02-10 08:11:12,574] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:12,575] {logging_mixin.py:103} INFO - [2021-02-10 08:11:12,575] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:11:12,731] {logging_mixin.py:103} INFO - [2021-02-10 08:11:12,731] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:12,733] {logging_mixin.py:103} INFO - [2021-02-10 08:11:12,733] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:11:12,880] {logging_mixin.py:103} INFO - [2021-02-10 08:11:12,880] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:13,114] {logging_mixin.py:103} INFO - [2021-02-10 08:11:13,114] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:11:13,282] {logging_mixin.py:103} INFO - [2021-02-10 08:11:13,282] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:13,347] {logging_mixin.py:103} INFO - [2021-02-10 08:11:13,347] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:11:13,347] {logging_mixin.py:103} INFO - [2021-02-10 08:11:13,347] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:11:14,608] {logging_mixin.py:103} INFO - [2021-02-10 08:11:14,608] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:14,612] {logging_mixin.py:103} INFO - [2021-02-10 08:11:14,612] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:11:14,623] {logging_mixin.py:103} INFO - [2021-02-10 08:11:14,623] {data_context.py:1281} INFO - Setting run_name to: 20210210T071114.623065Z
[2021-02-10 08:11:14,624] {logging_mixin.py:103} INFO - [2021-02-10 08:11:14,624] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:11:14,634] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:11:14,636] {logging_mixin.py:103} INFO - [2021-02-10 08:11:14,636] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:11:14,808] {logging_mixin.py:103} INFO - [2021-02-10 08:11:14,808] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:14,809] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:11:14,809] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:11:14,811] {logging_mixin.py:103} INFO - [2021-02-10 08:11:14,811] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:11:15,035] {logging_mixin.py:103} INFO - [2021-02-10 08:11:15,035] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:15,036] {logging_mixin.py:103} INFO - [2021-02-10 08:11:15,036] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:11:15,038] {logging_mixin.py:103} INFO - [2021-02-10 08:11:15,038] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:11:15,189] {logging_mixin.py:103} INFO - [2021-02-10 08:11:15,189] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:15,191] {logging_mixin.py:103} INFO - [2021-02-10 08:11:15,191] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:11:15,354] {logging_mixin.py:103} INFO - [2021-02-10 08:11:15,354] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:15,356] {logging_mixin.py:103} INFO - [2021-02-10 08:11:15,356] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:11:15,573] {logging_mixin.py:103} INFO - [2021-02-10 08:11:15,573] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:15,574] {logging_mixin.py:103} INFO - [2021-02-10 08:11:15,573] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:11:15,591] {logging_mixin.py:103} INFO - [2021-02-10 08:11:15,591] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:11:15,592] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:11:15,594] {logging_mixin.py:103} INFO - [2021-02-10 08:11:15,594] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:11:15,972] {logging_mixin.py:103} INFO - [2021-02-10 08:11:15,972] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:15,973] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:11:15,973] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:11:15,974] {logging_mixin.py:103} INFO - [2021-02-10 08:11:15,974] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:11:16,183] {logging_mixin.py:103} INFO - [2021-02-10 08:11:16,183] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:16,184] {logging_mixin.py:103} INFO - [2021-02-10 08:11:16,184] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:11:16,187] {logging_mixin.py:103} INFO - [2021-02-10 08:11:16,186] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:11:16,370] {logging_mixin.py:103} INFO - [2021-02-10 08:11:16,370] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:16,372] {logging_mixin.py:103} INFO - [2021-02-10 08:11:16,372] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:11:16,536] {logging_mixin.py:103} INFO - [2021-02-10 08:11:16,536] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:16,539] {logging_mixin.py:103} INFO - [2021-02-10 08:11:16,539] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:11:16,763] {logging_mixin.py:103} INFO - [2021-02-10 08:11:16,761] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:16,768] {logging_mixin.py:103} INFO - [2021-02-10 08:11:16,768] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:11:16,950] {logging_mixin.py:103} INFO - [2021-02-10 08:11:16,950] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:16,951] {logging_mixin.py:103} INFO - [2021-02-10 08:11:16,951] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:11:16,953] {logging_mixin.py:103} INFO - [2021-02-10 08:11:16,953] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:11:17,111] {logging_mixin.py:103} INFO - [2021-02-10 08:11:17,111] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:17,116] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:11:17,121] {logging_mixin.py:103} INFO - [2021-02-10 08:11:17,120] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:11:17,275] {logging_mixin.py:103} INFO - [2021-02-10 08:11:17,274] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:17,276] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:11:17,277] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:11:17,278] {logging_mixin.py:103} INFO - [2021-02-10 08:11:17,278] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:11:17,458] {logging_mixin.py:103} INFO - [2021-02-10 08:11:17,458] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:17,459] {logging_mixin.py:103} INFO - [2021-02-10 08:11:17,459] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:11:17,459] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:11:17,462] {logging_mixin.py:103} INFO - [2021-02-10 08:11:17,462] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:11:17,748] {logging_mixin.py:103} INFO - [2021-02-10 08:11:17,748] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:17,749] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:11:17,749] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:11:17,751] {logging_mixin.py:103} INFO - [2021-02-10 08:11:17,750] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:11:17,932] {logging_mixin.py:103} INFO - [2021-02-10 08:11:17,932] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:17,933] {logging_mixin.py:103} INFO - [2021-02-10 08:11:17,932] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:11:17,933] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:11:17,935] {logging_mixin.py:103} INFO - [2021-02-10 08:11:17,935] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:11:18,220] {logging_mixin.py:103} INFO - [2021-02-10 08:11:18,220] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:18,224] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:11:18,224] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:11:18,225] {logging_mixin.py:103} INFO - [2021-02-10 08:11:18,225] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:11:18,396] {logging_mixin.py:103} INFO - [2021-02-10 08:11:18,395] {cursor.py:560} INFO - query execution done
[2021-02-10 08:11:18,396] {logging_mixin.py:103} INFO - [2021-02-10 08:11:18,396] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:11:25,695] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:12:03,630] {scheduler_job.py:181} INFO - Started process (PID=58833) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:12:03,632] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:12:03,633] {logging_mixin.py:103} INFO - [2021-02-10 08:12:03,633] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:12:05,297] {logging_mixin.py:103} INFO - [2021-02-10 08:12:05,297] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:12:05,603] {logging_mixin.py:103} INFO - [2021-02-10 08:12:05,603] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:12:05,938] {logging_mixin.py:103} INFO - [2021-02-10 08:12:05,938] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:12:05,938] {logging_mixin.py:103} INFO - [2021-02-10 08:12:05,938] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:12:05,938] {logging_mixin.py:103} INFO - [2021-02-10 08:12:05,938] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:12:07,137] {logging_mixin.py:103} INFO - [2021-02-10 08:12:07,137] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:12:07,291] {logging_mixin.py:103} INFO - [2021-02-10 08:12:07,291] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:07,293] {logging_mixin.py:103} INFO - [2021-02-10 08:12:07,292] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:12:07,440] {logging_mixin.py:103} INFO - [2021-02-10 08:12:07,440] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:07,441] {logging_mixin.py:103} INFO - [2021-02-10 08:12:07,441] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:12:07,583] {logging_mixin.py:103} INFO - [2021-02-10 08:12:07,582] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:07,584] {logging_mixin.py:103} INFO - [2021-02-10 08:12:07,584] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:12:07,723] {logging_mixin.py:103} INFO - [2021-02-10 08:12:07,722] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:07,944] {logging_mixin.py:103} INFO - [2021-02-10 08:12:07,944] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:12:08,098] {logging_mixin.py:103} INFO - [2021-02-10 08:12:08,097] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:08,140] {logging_mixin.py:103} INFO - [2021-02-10 08:12:08,140] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:12:08,140] {logging_mixin.py:103} INFO - [2021-02-10 08:12:08,140] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:12:09,476] {logging_mixin.py:103} INFO - [2021-02-10 08:12:09,476] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:09,480] {logging_mixin.py:103} INFO - [2021-02-10 08:12:09,480] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:12:09,492] {logging_mixin.py:103} INFO - [2021-02-10 08:12:09,492] {data_context.py:1281} INFO - Setting run_name to: 20210210T071209.492074Z
[2021-02-10 08:12:09,493] {logging_mixin.py:103} INFO - [2021-02-10 08:12:09,493] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:12:09,501] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:12:09,503] {logging_mixin.py:103} INFO - [2021-02-10 08:12:09,503] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:12:09,673] {logging_mixin.py:103} INFO - [2021-02-10 08:12:09,672] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:09,674] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:12:09,674] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:12:09,675] {logging_mixin.py:103} INFO - [2021-02-10 08:12:09,675] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:12:09,845] {logging_mixin.py:103} INFO - [2021-02-10 08:12:09,845] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:09,846] {logging_mixin.py:103} INFO - [2021-02-10 08:12:09,846] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:12:09,848] {logging_mixin.py:103} INFO - [2021-02-10 08:12:09,848] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:12:09,996] {logging_mixin.py:103} INFO - [2021-02-10 08:12:09,996] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:09,998] {logging_mixin.py:103} INFO - [2021-02-10 08:12:09,998] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:12:10,163] {logging_mixin.py:103} INFO - [2021-02-10 08:12:10,163] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:10,166] {logging_mixin.py:103} INFO - [2021-02-10 08:12:10,166] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:12:10,429] {logging_mixin.py:103} INFO - [2021-02-10 08:12:10,429] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:10,430] {logging_mixin.py:103} INFO - [2021-02-10 08:12:10,429] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:12:10,448] {logging_mixin.py:103} INFO - [2021-02-10 08:12:10,448] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:12:10,449] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:12:10,451] {logging_mixin.py:103} INFO - [2021-02-10 08:12:10,450] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:12:10,601] {logging_mixin.py:103} INFO - [2021-02-10 08:12:10,600] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:10,601] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:12:10,602] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:12:10,603] {logging_mixin.py:103} INFO - [2021-02-10 08:12:10,603] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:12:10,764] {logging_mixin.py:103} INFO - [2021-02-10 08:12:10,764] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:10,765] {logging_mixin.py:103} INFO - [2021-02-10 08:12:10,765] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:12:10,768] {logging_mixin.py:103} INFO - [2021-02-10 08:12:10,767] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:12:10,965] {logging_mixin.py:103} INFO - [2021-02-10 08:12:10,965] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:10,967] {logging_mixin.py:103} INFO - [2021-02-10 08:12:10,967] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:12:11,140] {logging_mixin.py:103} INFO - [2021-02-10 08:12:11,140] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:11,143] {logging_mixin.py:103} INFO - [2021-02-10 08:12:11,143] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:12:11,284] {logging_mixin.py:103} INFO - [2021-02-10 08:12:11,284] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:11,286] {logging_mixin.py:103} INFO - [2021-02-10 08:12:11,286] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:12:11,438] {logging_mixin.py:103} INFO - [2021-02-10 08:12:11,438] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:11,439] {logging_mixin.py:103} INFO - [2021-02-10 08:12:11,439] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:12:11,443] {logging_mixin.py:103} INFO - [2021-02-10 08:12:11,443] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:12:11,607] {logging_mixin.py:103} INFO - [2021-02-10 08:12:11,607] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:11,618] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:12:11,620] {logging_mixin.py:103} INFO - [2021-02-10 08:12:11,620] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:12:11,785] {logging_mixin.py:103} INFO - [2021-02-10 08:12:11,785] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:11,787] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:12:11,787] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:12:11,788] {logging_mixin.py:103} INFO - [2021-02-10 08:12:11,788] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:12:11,986] {logging_mixin.py:103} INFO - [2021-02-10 08:12:11,986] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:11,987] {logging_mixin.py:103} INFO - [2021-02-10 08:12:11,987] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:12:11,988] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:12:11,991] {logging_mixin.py:103} INFO - [2021-02-10 08:12:11,991] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:12:12,186] {logging_mixin.py:103} INFO - [2021-02-10 08:12:12,186] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:12,187] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:12:12,188] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:12:12,189] {logging_mixin.py:103} INFO - [2021-02-10 08:12:12,189] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:12:12,341] {logging_mixin.py:103} INFO - [2021-02-10 08:12:12,341] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:12,342] {logging_mixin.py:103} INFO - [2021-02-10 08:12:12,342] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:12:12,343] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:12:12,346] {logging_mixin.py:103} INFO - [2021-02-10 08:12:12,346] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:12:12,531] {logging_mixin.py:103} INFO - [2021-02-10 08:12:12,531] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:12,532] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:12:12,532] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:12:12,533] {logging_mixin.py:103} INFO - [2021-02-10 08:12:12,533] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:12:12,721] {logging_mixin.py:103} INFO - [2021-02-10 08:12:12,721] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:12,722] {logging_mixin.py:103} INFO - [2021-02-10 08:12:12,721] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:12:16,976] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:12:45,152] {scheduler_job.py:181} INFO - Started process (PID=58891) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:12:45,153] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:12:45,153] {logging_mixin.py:103} INFO - [2021-02-10 08:12:45,153] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:12:47,794] {logging_mixin.py:103} INFO - [2021-02-10 08:12:47,794] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:12:48,187] {logging_mixin.py:103} INFO - [2021-02-10 08:12:48,187] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:12:48,558] {logging_mixin.py:103} INFO - [2021-02-10 08:12:48,558] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:12:48,558] {logging_mixin.py:103} INFO - [2021-02-10 08:12:48,558] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:12:48,559] {logging_mixin.py:103} INFO - [2021-02-10 08:12:48,559] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:12:49,562] {logging_mixin.py:103} INFO - [2021-02-10 08:12:49,562] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:12:49,762] {logging_mixin.py:103} INFO - [2021-02-10 08:12:49,762] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:49,764] {logging_mixin.py:103} INFO - [2021-02-10 08:12:49,763] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:12:49,904] {logging_mixin.py:103} INFO - [2021-02-10 08:12:49,904] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:49,905] {logging_mixin.py:103} INFO - [2021-02-10 08:12:49,905] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:12:50,035] {logging_mixin.py:103} INFO - [2021-02-10 08:12:50,035] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:50,040] {logging_mixin.py:103} INFO - [2021-02-10 08:12:50,040] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:12:50,262] {logging_mixin.py:103} INFO - [2021-02-10 08:12:50,261] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:50,760] {logging_mixin.py:103} INFO - [2021-02-10 08:12:50,760] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:12:50,957] {logging_mixin.py:103} INFO - [2021-02-10 08:12:50,957] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:51,022] {logging_mixin.py:103} INFO - [2021-02-10 08:12:51,022] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:12:51,022] {logging_mixin.py:103} INFO - [2021-02-10 08:12:51,022] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:12:52,266] {logging_mixin.py:103} INFO - [2021-02-10 08:12:52,265] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:52,268] {logging_mixin.py:103} INFO - [2021-02-10 08:12:52,268] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:12:52,279] {logging_mixin.py:103} INFO - [2021-02-10 08:12:52,279] {data_context.py:1281} INFO - Setting run_name to: 20210210T071252.279391Z
[2021-02-10 08:12:52,280] {logging_mixin.py:103} INFO - [2021-02-10 08:12:52,280] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:12:52,291] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:12:52,293] {logging_mixin.py:103} INFO - [2021-02-10 08:12:52,293] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:12:52,446] {logging_mixin.py:103} INFO - [2021-02-10 08:12:52,445] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:52,448] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:12:52,448] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:12:52,450] {logging_mixin.py:103} INFO - [2021-02-10 08:12:52,450] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:12:52,638] {logging_mixin.py:103} INFO - [2021-02-10 08:12:52,636] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:52,640] {logging_mixin.py:103} INFO - [2021-02-10 08:12:52,639] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:12:52,645] {logging_mixin.py:103} INFO - [2021-02-10 08:12:52,644] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:12:52,816] {logging_mixin.py:103} INFO - [2021-02-10 08:12:52,816] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:52,819] {logging_mixin.py:103} INFO - [2021-02-10 08:12:52,818] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:12:52,987] {logging_mixin.py:103} INFO - [2021-02-10 08:12:52,987] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:52,989] {logging_mixin.py:103} INFO - [2021-02-10 08:12:52,989] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:12:53,175] {logging_mixin.py:103} INFO - [2021-02-10 08:12:53,175] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:53,176] {logging_mixin.py:103} INFO - [2021-02-10 08:12:53,176] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:12:53,191] {logging_mixin.py:103} INFO - [2021-02-10 08:12:53,191] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:12:53,192] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:12:53,193] {logging_mixin.py:103} INFO - [2021-02-10 08:12:53,193] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:12:53,386] {logging_mixin.py:103} INFO - [2021-02-10 08:12:53,386] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:53,387] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:12:53,387] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:12:53,388] {logging_mixin.py:103} INFO - [2021-02-10 08:12:53,388] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:12:53,564] {logging_mixin.py:103} INFO - [2021-02-10 08:12:53,564] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:53,565] {logging_mixin.py:103} INFO - [2021-02-10 08:12:53,564] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:12:53,569] {logging_mixin.py:103} INFO - [2021-02-10 08:12:53,569] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:12:53,730] {logging_mixin.py:103} INFO - [2021-02-10 08:12:53,730] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:53,732] {logging_mixin.py:103} INFO - [2021-02-10 08:12:53,732] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:12:53,993] {logging_mixin.py:103} INFO - [2021-02-10 08:12:53,993] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:53,996] {logging_mixin.py:103} INFO - [2021-02-10 08:12:53,996] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:12:54,166] {logging_mixin.py:103} INFO - [2021-02-10 08:12:54,165] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:54,168] {logging_mixin.py:103} INFO - [2021-02-10 08:12:54,168] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:12:54,333] {logging_mixin.py:103} INFO - [2021-02-10 08:12:54,333] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:54,333] {logging_mixin.py:103} INFO - [2021-02-10 08:12:54,333] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:12:54,337] {logging_mixin.py:103} INFO - [2021-02-10 08:12:54,336] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:12:54,486] {logging_mixin.py:103} INFO - [2021-02-10 08:12:54,486] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:54,497] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:12:54,499] {logging_mixin.py:103} INFO - [2021-02-10 08:12:54,499] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:12:54,777] {logging_mixin.py:103} INFO - [2021-02-10 08:12:54,777] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:54,778] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:12:54,778] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:12:54,779] {logging_mixin.py:103} INFO - [2021-02-10 08:12:54,779] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:12:54,931] {logging_mixin.py:103} INFO - [2021-02-10 08:12:54,931] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:54,933] {logging_mixin.py:103} INFO - [2021-02-10 08:12:54,933] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:12:54,935] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:12:54,939] {logging_mixin.py:103} INFO - [2021-02-10 08:12:54,939] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:12:55,113] {logging_mixin.py:103} INFO - [2021-02-10 08:12:55,113] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:55,114] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:12:55,115] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:12:55,116] {logging_mixin.py:103} INFO - [2021-02-10 08:12:55,116] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:12:55,270] {logging_mixin.py:103} INFO - [2021-02-10 08:12:55,270] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:55,271] {logging_mixin.py:103} INFO - [2021-02-10 08:12:55,271] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:12:55,272] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:12:55,277] {logging_mixin.py:103} INFO - [2021-02-10 08:12:55,277] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:12:55,424] {logging_mixin.py:103} INFO - [2021-02-10 08:12:55,424] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:55,425] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:12:55,425] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:12:55,427] {logging_mixin.py:103} INFO - [2021-02-10 08:12:55,427] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:12:55,587] {logging_mixin.py:103} INFO - [2021-02-10 08:12:55,587] {cursor.py:560} INFO - query execution done
[2021-02-10 08:12:55,588] {logging_mixin.py:103} INFO - [2021-02-10 08:12:55,588] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:13:00,761] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:13:32,342] {scheduler_job.py:181} INFO - Started process (PID=58953) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:13:32,344] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:13:32,345] {logging_mixin.py:103} INFO - [2021-02-10 08:13:32,344] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:13:34,083] {logging_mixin.py:103} INFO - [2021-02-10 08:13:34,083] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:13:34,382] {logging_mixin.py:103} INFO - [2021-02-10 08:13:34,382] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:13:34,757] {logging_mixin.py:103} INFO - [2021-02-10 08:13:34,757] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:13:34,757] {logging_mixin.py:103} INFO - [2021-02-10 08:13:34,757] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:13:34,757] {logging_mixin.py:103} INFO - [2021-02-10 08:13:34,757] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:13:36,354] {logging_mixin.py:103} INFO - [2021-02-10 08:13:36,354] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:13:36,536] {logging_mixin.py:103} INFO - [2021-02-10 08:13:36,536] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:36,538] {logging_mixin.py:103} INFO - [2021-02-10 08:13:36,538] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:13:36,716] {logging_mixin.py:103} INFO - [2021-02-10 08:13:36,716] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:36,717] {logging_mixin.py:103} INFO - [2021-02-10 08:13:36,717] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:13:36,901] {logging_mixin.py:103} INFO - [2021-02-10 08:13:36,901] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:36,902] {logging_mixin.py:103} INFO - [2021-02-10 08:13:36,902] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:13:37,080] {logging_mixin.py:103} INFO - [2021-02-10 08:13:37,080] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:37,332] {logging_mixin.py:103} INFO - [2021-02-10 08:13:37,332] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:13:37,476] {logging_mixin.py:103} INFO - [2021-02-10 08:13:37,476] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:37,524] {logging_mixin.py:103} INFO - [2021-02-10 08:13:37,524] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:13:37,524] {logging_mixin.py:103} INFO - [2021-02-10 08:13:37,524] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:13:40,855] {logging_mixin.py:103} INFO - [2021-02-10 08:13:40,855] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:40,859] {logging_mixin.py:103} INFO - [2021-02-10 08:13:40,859] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:13:40,869] {logging_mixin.py:103} INFO - [2021-02-10 08:13:40,869] {data_context.py:1281} INFO - Setting run_name to: 20210210T071340.869602Z
[2021-02-10 08:13:40,870] {logging_mixin.py:103} INFO - [2021-02-10 08:13:40,870] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:13:40,879] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:13:40,881] {logging_mixin.py:103} INFO - [2021-02-10 08:13:40,881] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:13:41,031] {logging_mixin.py:103} INFO - [2021-02-10 08:13:41,031] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:41,032] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:13:41,033] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:13:41,034] {logging_mixin.py:103} INFO - [2021-02-10 08:13:41,034] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:13:41,193] {logging_mixin.py:103} INFO - [2021-02-10 08:13:41,193] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:41,194] {logging_mixin.py:103} INFO - [2021-02-10 08:13:41,194] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:13:41,196] {logging_mixin.py:103} INFO - [2021-02-10 08:13:41,196] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:13:41,421] {logging_mixin.py:103} INFO - [2021-02-10 08:13:41,421] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:41,424] {logging_mixin.py:103} INFO - [2021-02-10 08:13:41,424] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:13:41,583] {logging_mixin.py:103} INFO - [2021-02-10 08:13:41,582] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:41,585] {logging_mixin.py:103} INFO - [2021-02-10 08:13:41,585] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:13:42,375] {logging_mixin.py:103} INFO - [2021-02-10 08:13:42,375] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:42,375] {logging_mixin.py:103} INFO - [2021-02-10 08:13:42,375] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:13:42,395] {logging_mixin.py:103} INFO - [2021-02-10 08:13:42,394] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:13:42,395] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:13:42,397] {logging_mixin.py:103} INFO - [2021-02-10 08:13:42,397] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:13:42,551] {logging_mixin.py:103} INFO - [2021-02-10 08:13:42,551] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:42,552] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:13:42,552] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:13:42,553] {logging_mixin.py:103} INFO - [2021-02-10 08:13:42,553] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:13:42,747] {logging_mixin.py:103} INFO - [2021-02-10 08:13:42,747] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:42,748] {logging_mixin.py:103} INFO - [2021-02-10 08:13:42,748] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:13:42,751] {logging_mixin.py:103} INFO - [2021-02-10 08:13:42,751] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:13:42,979] {logging_mixin.py:103} INFO - [2021-02-10 08:13:42,978] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:42,980] {logging_mixin.py:103} INFO - [2021-02-10 08:13:42,980] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:13:43,175] {logging_mixin.py:103} INFO - [2021-02-10 08:13:43,175] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:43,178] {logging_mixin.py:103} INFO - [2021-02-10 08:13:43,178] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:13:43,319] {logging_mixin.py:103} INFO - [2021-02-10 08:13:43,319] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:43,321] {logging_mixin.py:103} INFO - [2021-02-10 08:13:43,321] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:13:43,485] {logging_mixin.py:103} INFO - [2021-02-10 08:13:43,485] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:43,486] {logging_mixin.py:103} INFO - [2021-02-10 08:13:43,486] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:13:43,490] {logging_mixin.py:103} INFO - [2021-02-10 08:13:43,490] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:13:43,646] {logging_mixin.py:103} INFO - [2021-02-10 08:13:43,646] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:43,658] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:13:43,660] {logging_mixin.py:103} INFO - [2021-02-10 08:13:43,659] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:13:43,887] {logging_mixin.py:103} INFO - [2021-02-10 08:13:43,886] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:43,888] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:13:43,888] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:13:43,890] {logging_mixin.py:103} INFO - [2021-02-10 08:13:43,890] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:13:44,067] {logging_mixin.py:103} INFO - [2021-02-10 08:13:44,067] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:44,068] {logging_mixin.py:103} INFO - [2021-02-10 08:13:44,068] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:13:44,070] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:13:44,073] {logging_mixin.py:103} INFO - [2021-02-10 08:13:44,073] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:13:44,222] {logging_mixin.py:103} INFO - [2021-02-10 08:13:44,222] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:44,224] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:13:44,224] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:13:44,225] {logging_mixin.py:103} INFO - [2021-02-10 08:13:44,225] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:13:44,397] {logging_mixin.py:103} INFO - [2021-02-10 08:13:44,396] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:44,400] {logging_mixin.py:103} INFO - [2021-02-10 08:13:44,400] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:13:44,405] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:13:44,423] {logging_mixin.py:103} INFO - [2021-02-10 08:13:44,421] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:13:44,619] {logging_mixin.py:103} INFO - [2021-02-10 08:13:44,619] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:44,620] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:13:44,622] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:13:44,626] {logging_mixin.py:103} INFO - [2021-02-10 08:13:44,626] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:13:44,785] {logging_mixin.py:103} INFO - [2021-02-10 08:13:44,784] {cursor.py:560} INFO - query execution done
[2021-02-10 08:13:44,785] {logging_mixin.py:103} INFO - [2021-02-10 08:13:44,785] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:13:52,536] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:14:23,894] {scheduler_job.py:181} INFO - Started process (PID=59020) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:14:23,896] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:14:23,896] {logging_mixin.py:103} INFO - [2021-02-10 08:14:23,896] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:14:26,299] {logging_mixin.py:103} INFO - [2021-02-10 08:14:26,299] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:14:26,637] {logging_mixin.py:103} INFO - [2021-02-10 08:14:26,637] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:14:26,992] {logging_mixin.py:103} INFO - [2021-02-10 08:14:26,992] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:14:26,992] {logging_mixin.py:103} INFO - [2021-02-10 08:14:26,992] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:14:26,992] {logging_mixin.py:103} INFO - [2021-02-10 08:14:26,992] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:14:27,827] {logging_mixin.py:103} INFO - [2021-02-10 08:14:27,826] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:14:28,003] {logging_mixin.py:103} INFO - [2021-02-10 08:14:28,003] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:28,005] {logging_mixin.py:103} INFO - [2021-02-10 08:14:28,005] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:14:28,139] {logging_mixin.py:103} INFO - [2021-02-10 08:14:28,138] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:28,139] {logging_mixin.py:103} INFO - [2021-02-10 08:14:28,139] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:14:28,264] {logging_mixin.py:103} INFO - [2021-02-10 08:14:28,264] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:28,267] {logging_mixin.py:103} INFO - [2021-02-10 08:14:28,267] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:14:28,401] {logging_mixin.py:103} INFO - [2021-02-10 08:14:28,401] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:28,646] {logging_mixin.py:103} INFO - [2021-02-10 08:14:28,645] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:14:28,804] {logging_mixin.py:103} INFO - [2021-02-10 08:14:28,804] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:28,850] {logging_mixin.py:103} INFO - [2021-02-10 08:14:28,850] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:14:28,850] {logging_mixin.py:103} INFO - [2021-02-10 08:14:28,850] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:14:30,087] {logging_mixin.py:103} INFO - [2021-02-10 08:14:30,087] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:30,091] {logging_mixin.py:103} INFO - [2021-02-10 08:14:30,091] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:14:30,101] {logging_mixin.py:103} INFO - [2021-02-10 08:14:30,101] {data_context.py:1281} INFO - Setting run_name to: 20210210T071430.101487Z
[2021-02-10 08:14:30,102] {logging_mixin.py:103} INFO - [2021-02-10 08:14:30,102] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:14:30,109] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:14:30,111] {logging_mixin.py:103} INFO - [2021-02-10 08:14:30,111] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:14:30,249] {logging_mixin.py:103} INFO - [2021-02-10 08:14:30,248] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:30,250] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:14:30,250] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:14:30,251] {logging_mixin.py:103} INFO - [2021-02-10 08:14:30,251] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:14:30,443] {logging_mixin.py:103} INFO - [2021-02-10 08:14:30,443] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:30,444] {logging_mixin.py:103} INFO - [2021-02-10 08:14:30,444] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:14:30,447] {logging_mixin.py:103} INFO - [2021-02-10 08:14:30,447] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:14:30,606] {logging_mixin.py:103} INFO - [2021-02-10 08:14:30,606] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:30,609] {logging_mixin.py:103} INFO - [2021-02-10 08:14:30,608] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:14:30,763] {logging_mixin.py:103} INFO - [2021-02-10 08:14:30,763] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:30,766] {logging_mixin.py:103} INFO - [2021-02-10 08:14:30,766] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:14:30,928] {logging_mixin.py:103} INFO - [2021-02-10 08:14:30,928] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:30,928] {logging_mixin.py:103} INFO - [2021-02-10 08:14:30,928] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:14:30,949] {logging_mixin.py:103} INFO - [2021-02-10 08:14:30,948] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:14:30,949] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:14:30,951] {logging_mixin.py:103} INFO - [2021-02-10 08:14:30,951] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:14:31,104] {logging_mixin.py:103} INFO - [2021-02-10 08:14:31,104] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:31,105] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:14:31,105] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:14:31,107] {logging_mixin.py:103} INFO - [2021-02-10 08:14:31,107] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:14:31,276] {logging_mixin.py:103} INFO - [2021-02-10 08:14:31,276] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:31,279] {logging_mixin.py:103} INFO - [2021-02-10 08:14:31,279] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:14:31,283] {logging_mixin.py:103} INFO - [2021-02-10 08:14:31,283] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:14:31,432] {logging_mixin.py:103} INFO - [2021-02-10 08:14:31,432] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:31,434] {logging_mixin.py:103} INFO - [2021-02-10 08:14:31,433] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:14:31,576] {logging_mixin.py:103} INFO - [2021-02-10 08:14:31,576] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:31,579] {logging_mixin.py:103} INFO - [2021-02-10 08:14:31,579] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:14:31,764] {logging_mixin.py:103} INFO - [2021-02-10 08:14:31,763] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:31,766] {logging_mixin.py:103} INFO - [2021-02-10 08:14:31,766] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:14:31,913] {logging_mixin.py:103} INFO - [2021-02-10 08:14:31,913] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:31,914] {logging_mixin.py:103} INFO - [2021-02-10 08:14:31,914] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:14:31,918] {logging_mixin.py:103} INFO - [2021-02-10 08:14:31,918] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:14:32,081] {logging_mixin.py:103} INFO - [2021-02-10 08:14:32,081] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:32,093] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:14:32,096] {logging_mixin.py:103} INFO - [2021-02-10 08:14:32,096] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:14:32,240] {logging_mixin.py:103} INFO - [2021-02-10 08:14:32,240] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:32,241] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:14:32,241] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:14:32,243] {logging_mixin.py:103} INFO - [2021-02-10 08:14:32,242] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:14:32,408] {logging_mixin.py:103} INFO - [2021-02-10 08:14:32,408] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:32,409] {logging_mixin.py:103} INFO - [2021-02-10 08:14:32,409] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:14:32,411] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:14:32,416] {logging_mixin.py:103} INFO - [2021-02-10 08:14:32,416] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:14:32,596] {logging_mixin.py:103} INFO - [2021-02-10 08:14:32,596] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:32,597] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:14:32,597] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:14:32,599] {logging_mixin.py:103} INFO - [2021-02-10 08:14:32,598] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:14:32,756] {logging_mixin.py:103} INFO - [2021-02-10 08:14:32,756] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:32,757] {logging_mixin.py:103} INFO - [2021-02-10 08:14:32,757] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:14:32,758] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:14:32,761] {logging_mixin.py:103} INFO - [2021-02-10 08:14:32,761] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:14:32,908] {logging_mixin.py:103} INFO - [2021-02-10 08:14:32,908] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:32,909] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:14:32,909] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:14:32,911] {logging_mixin.py:103} INFO - [2021-02-10 08:14:32,911] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:14:33,049] {logging_mixin.py:103} INFO - [2021-02-10 08:14:33,049] {cursor.py:560} INFO - query execution done
[2021-02-10 08:14:33,049] {logging_mixin.py:103} INFO - [2021-02-10 08:14:33,049] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:14:37,580] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:15:14,040] {scheduler_job.py:181} INFO - Started process (PID=59078) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:15:14,041] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:15:14,042] {logging_mixin.py:103} INFO - [2021-02-10 08:15:14,042] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:15:16,367] {logging_mixin.py:103} INFO - [2021-02-10 08:15:16,367] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:15:16,669] {logging_mixin.py:103} INFO - [2021-02-10 08:15:16,669] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:15:16,997] {logging_mixin.py:103} INFO - [2021-02-10 08:15:16,997] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:15:16,997] {logging_mixin.py:103} INFO - [2021-02-10 08:15:16,997] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:15:16,997] {logging_mixin.py:103} INFO - [2021-02-10 08:15:16,997] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:15:18,526] {logging_mixin.py:103} INFO - [2021-02-10 08:15:18,526] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:15:18,669] {logging_mixin.py:103} INFO - [2021-02-10 08:15:18,669] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:18,671] {logging_mixin.py:103} INFO - [2021-02-10 08:15:18,671] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:15:18,836] {logging_mixin.py:103} INFO - [2021-02-10 08:15:18,836] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:18,837] {logging_mixin.py:103} INFO - [2021-02-10 08:15:18,837] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:15:19,122] {logging_mixin.py:103} INFO - [2021-02-10 08:15:19,122] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:19,125] {logging_mixin.py:103} INFO - [2021-02-10 08:15:19,124] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:15:19,331] {logging_mixin.py:103} INFO - [2021-02-10 08:15:19,330] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:19,544] {logging_mixin.py:103} INFO - [2021-02-10 08:15:19,543] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:15:19,773] {logging_mixin.py:103} INFO - [2021-02-10 08:15:19,773] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:19,818] {logging_mixin.py:103} INFO - [2021-02-10 08:15:19,817] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:15:19,818] {logging_mixin.py:103} INFO - [2021-02-10 08:15:19,818] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:15:21,400] {logging_mixin.py:103} INFO - [2021-02-10 08:15:21,399] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:21,403] {logging_mixin.py:103} INFO - [2021-02-10 08:15:21,403] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:15:21,416] {logging_mixin.py:103} INFO - [2021-02-10 08:15:21,416] {data_context.py:1281} INFO - Setting run_name to: 20210210T071521.416174Z
[2021-02-10 08:15:21,417] {logging_mixin.py:103} INFO - [2021-02-10 08:15:21,417] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:15:21,435] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:15:21,444] {logging_mixin.py:103} INFO - [2021-02-10 08:15:21,444] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:15:21,619] {logging_mixin.py:103} INFO - [2021-02-10 08:15:21,619] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:21,620] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:15:21,621] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:15:21,623] {logging_mixin.py:103} INFO - [2021-02-10 08:15:21,622] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:15:21,791] {logging_mixin.py:103} INFO - [2021-02-10 08:15:21,791] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:21,795] {logging_mixin.py:103} INFO - [2021-02-10 08:15:21,795] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:15:21,802] {logging_mixin.py:103} INFO - [2021-02-10 08:15:21,801] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:15:21,970] {logging_mixin.py:103} INFO - [2021-02-10 08:15:21,970] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:21,972] {logging_mixin.py:103} INFO - [2021-02-10 08:15:21,972] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:15:22,236] {logging_mixin.py:103} INFO - [2021-02-10 08:15:22,236] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:22,238] {logging_mixin.py:103} INFO - [2021-02-10 08:15:22,238] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:15:22,408] {logging_mixin.py:103} INFO - [2021-02-10 08:15:22,408] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:22,408] {logging_mixin.py:103} INFO - [2021-02-10 08:15:22,408] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:15:22,423] {logging_mixin.py:103} INFO - [2021-02-10 08:15:22,423] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:15:22,423] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:15:22,425] {logging_mixin.py:103} INFO - [2021-02-10 08:15:22,425] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:15:22,621] {logging_mixin.py:103} INFO - [2021-02-10 08:15:22,621] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:22,621] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:15:22,621] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:15:22,622] {logging_mixin.py:103} INFO - [2021-02-10 08:15:22,622] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:15:22,780] {logging_mixin.py:103} INFO - [2021-02-10 08:15:22,780] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:22,780] {logging_mixin.py:103} INFO - [2021-02-10 08:15:22,780] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:15:22,783] {logging_mixin.py:103} INFO - [2021-02-10 08:15:22,783] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:15:22,940] {logging_mixin.py:103} INFO - [2021-02-10 08:15:22,940] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:22,942] {logging_mixin.py:103} INFO - [2021-02-10 08:15:22,941] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:15:23,109] {logging_mixin.py:103} INFO - [2021-02-10 08:15:23,108] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:23,112] {logging_mixin.py:103} INFO - [2021-02-10 08:15:23,111] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:15:23,265] {logging_mixin.py:103} INFO - [2021-02-10 08:15:23,265] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:23,267] {logging_mixin.py:103} INFO - [2021-02-10 08:15:23,267] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:15:23,415] {logging_mixin.py:103} INFO - [2021-02-10 08:15:23,415] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:23,416] {logging_mixin.py:103} INFO - [2021-02-10 08:15:23,416] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:15:23,419] {logging_mixin.py:103} INFO - [2021-02-10 08:15:23,419] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:15:23,598] {logging_mixin.py:103} INFO - [2021-02-10 08:15:23,598] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:23,610] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:15:23,613] {logging_mixin.py:103} INFO - [2021-02-10 08:15:23,613] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:15:23,762] {logging_mixin.py:103} INFO - [2021-02-10 08:15:23,762] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:23,763] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:15:23,763] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:15:23,764] {logging_mixin.py:103} INFO - [2021-02-10 08:15:23,764] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:15:23,921] {logging_mixin.py:103} INFO - [2021-02-10 08:15:23,921] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:23,922] {logging_mixin.py:103} INFO - [2021-02-10 08:15:23,922] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:15:23,923] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:15:23,926] {logging_mixin.py:103} INFO - [2021-02-10 08:15:23,926] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:15:24,100] {logging_mixin.py:103} INFO - [2021-02-10 08:15:24,100] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:24,101] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:15:24,101] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:15:24,102] {logging_mixin.py:103} INFO - [2021-02-10 08:15:24,102] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:15:24,261] {logging_mixin.py:103} INFO - [2021-02-10 08:15:24,261] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:24,262] {logging_mixin.py:103} INFO - [2021-02-10 08:15:24,262] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:15:24,263] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:15:24,266] {logging_mixin.py:103} INFO - [2021-02-10 08:15:24,266] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:15:24,436] {logging_mixin.py:103} INFO - [2021-02-10 08:15:24,436] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:24,437] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:15:24,437] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:15:24,438] {logging_mixin.py:103} INFO - [2021-02-10 08:15:24,438] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:15:24,609] {logging_mixin.py:103} INFO - [2021-02-10 08:15:24,609] {cursor.py:560} INFO - query execution done
[2021-02-10 08:15:24,609] {logging_mixin.py:103} INFO - [2021-02-10 08:15:24,609] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:15:29,495] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:16:04,061] {scheduler_job.py:181} INFO - Started process (PID=59138) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:16:04,063] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:16:04,064] {logging_mixin.py:103} INFO - [2021-02-10 08:16:04,064] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:16:05,768] {logging_mixin.py:103} INFO - [2021-02-10 08:16:05,768] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:16:06,056] {logging_mixin.py:103} INFO - [2021-02-10 08:16:06,056] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:16:06,416] {logging_mixin.py:103} INFO - [2021-02-10 08:16:06,416] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:16:06,416] {logging_mixin.py:103} INFO - [2021-02-10 08:16:06,416] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:16:06,416] {logging_mixin.py:103} INFO - [2021-02-10 08:16:06,416] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:16:07,274] {logging_mixin.py:103} INFO - [2021-02-10 08:16:07,274] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:16:07,549] {logging_mixin.py:103} INFO - [2021-02-10 08:16:07,549] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:07,551] {logging_mixin.py:103} INFO - [2021-02-10 08:16:07,551] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:16:07,693] {logging_mixin.py:103} INFO - [2021-02-10 08:16:07,693] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:07,694] {logging_mixin.py:103} INFO - [2021-02-10 08:16:07,694] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:16:07,972] {logging_mixin.py:103} INFO - [2021-02-10 08:16:07,972] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:07,975] {logging_mixin.py:103} INFO - [2021-02-10 08:16:07,975] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:16:08,201] {logging_mixin.py:103} INFO - [2021-02-10 08:16:08,201] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:08,434] {logging_mixin.py:103} INFO - [2021-02-10 08:16:08,433] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:16:08,587] {logging_mixin.py:103} INFO - [2021-02-10 08:16:08,587] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:08,637] {logging_mixin.py:103} INFO - [2021-02-10 08:16:08,636] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:16:08,637] {logging_mixin.py:103} INFO - [2021-02-10 08:16:08,637] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:16:10,445] {logging_mixin.py:103} INFO - [2021-02-10 08:16:10,445] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:10,449] {logging_mixin.py:103} INFO - [2021-02-10 08:16:10,449] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:16:10,460] {logging_mixin.py:103} INFO - [2021-02-10 08:16:10,460] {data_context.py:1281} INFO - Setting run_name to: 20210210T071610.460645Z
[2021-02-10 08:16:10,462] {logging_mixin.py:103} INFO - [2021-02-10 08:16:10,461] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:16:10,471] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:16:10,473] {logging_mixin.py:103} INFO - [2021-02-10 08:16:10,473] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:16:11,671] {logging_mixin.py:103} INFO - [2021-02-10 08:16:11,670] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:11,672] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:16:11,672] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:16:11,674] {logging_mixin.py:103} INFO - [2021-02-10 08:16:11,674] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:16:11,962] {logging_mixin.py:103} INFO - [2021-02-10 08:16:11,961] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:11,963] {logging_mixin.py:103} INFO - [2021-02-10 08:16:11,963] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:16:11,965] {logging_mixin.py:103} INFO - [2021-02-10 08:16:11,965] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:16:12,120] {logging_mixin.py:103} INFO - [2021-02-10 08:16:12,120] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:12,123] {logging_mixin.py:103} INFO - [2021-02-10 08:16:12,123] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:16:12,374] {logging_mixin.py:103} INFO - [2021-02-10 08:16:12,373] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:12,377] {logging_mixin.py:103} INFO - [2021-02-10 08:16:12,377] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:16:12,579] {logging_mixin.py:103} INFO - [2021-02-10 08:16:12,579] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:12,579] {logging_mixin.py:103} INFO - [2021-02-10 08:16:12,579] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:16:12,596] {logging_mixin.py:103} INFO - [2021-02-10 08:16:12,595] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:16:12,596] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:16:12,599] {logging_mixin.py:103} INFO - [2021-02-10 08:16:12,598] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:16:12,900] {logging_mixin.py:103} INFO - [2021-02-10 08:16:12,900] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:12,902] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:16:12,902] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:16:12,903] {logging_mixin.py:103} INFO - [2021-02-10 08:16:12,903] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:16:13,190] {logging_mixin.py:103} INFO - [2021-02-10 08:16:13,190] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:13,191] {logging_mixin.py:103} INFO - [2021-02-10 08:16:13,191] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:16:13,194] {logging_mixin.py:103} INFO - [2021-02-10 08:16:13,193] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:16:13,485] {logging_mixin.py:103} INFO - [2021-02-10 08:16:13,485] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:13,487] {logging_mixin.py:103} INFO - [2021-02-10 08:16:13,487] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:16:13,759] {logging_mixin.py:103} INFO - [2021-02-10 08:16:13,758] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:13,762] {logging_mixin.py:103} INFO - [2021-02-10 08:16:13,762] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:16:13,919] {logging_mixin.py:103} INFO - [2021-02-10 08:16:13,919] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:13,921] {logging_mixin.py:103} INFO - [2021-02-10 08:16:13,921] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:16:14,442] {logging_mixin.py:103} INFO - [2021-02-10 08:16:14,442] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:14,443] {logging_mixin.py:103} INFO - [2021-02-10 08:16:14,443] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:16:14,447] {logging_mixin.py:103} INFO - [2021-02-10 08:16:14,447] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:16:14,739] {logging_mixin.py:103} INFO - [2021-02-10 08:16:14,739] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:14,751] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:16:14,754] {logging_mixin.py:103} INFO - [2021-02-10 08:16:14,754] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:16:15,678] {logging_mixin.py:103} INFO - [2021-02-10 08:16:15,678] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:15,679] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:16:15,679] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:16:15,680] {logging_mixin.py:103} INFO - [2021-02-10 08:16:15,680] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:16:16,014] {logging_mixin.py:103} INFO - [2021-02-10 08:16:16,014] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:16,014] {logging_mixin.py:103} INFO - [2021-02-10 08:16:16,014] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:16:16,015] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:16:16,018] {logging_mixin.py:103} INFO - [2021-02-10 08:16:16,017] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:16:16,588] {logging_mixin.py:103} INFO - [2021-02-10 08:16:16,587] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:16,589] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:16:16,589] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:16:16,590] {logging_mixin.py:103} INFO - [2021-02-10 08:16:16,590] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:16:16,827] {logging_mixin.py:103} INFO - [2021-02-10 08:16:16,827] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:16,828] {logging_mixin.py:103} INFO - [2021-02-10 08:16:16,828] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:16:16,829] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:16:16,832] {logging_mixin.py:103} INFO - [2021-02-10 08:16:16,832] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:16:17,080] {logging_mixin.py:103} INFO - [2021-02-10 08:16:17,080] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:17,081] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:16:17,081] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:16:17,082] {logging_mixin.py:103} INFO - [2021-02-10 08:16:17,082] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:16:17,502] {logging_mixin.py:103} INFO - [2021-02-10 08:16:17,501] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:17,502] {logging_mixin.py:103} INFO - [2021-02-10 08:16:17,502] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:16:22,038] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:16:52,057] {scheduler_job.py:181} INFO - Started process (PID=59196) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:16:52,058] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:16:52,058] {logging_mixin.py:103} INFO - [2021-02-10 08:16:52,058] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:16:53,930] {logging_mixin.py:103} INFO - [2021-02-10 08:16:53,930] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:16:54,219] {logging_mixin.py:103} INFO - [2021-02-10 08:16:54,218] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:16:54,568] {logging_mixin.py:103} INFO - [2021-02-10 08:16:54,568] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:16:54,569] {logging_mixin.py:103} INFO - [2021-02-10 08:16:54,569] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:16:54,569] {logging_mixin.py:103} INFO - [2021-02-10 08:16:54,569] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:16:55,910] {logging_mixin.py:103} INFO - [2021-02-10 08:16:55,910] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:16:56,076] {logging_mixin.py:103} INFO - [2021-02-10 08:16:56,075] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:56,077] {logging_mixin.py:103} INFO - [2021-02-10 08:16:56,077] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:16:56,204] {logging_mixin.py:103} INFO - [2021-02-10 08:16:56,204] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:56,205] {logging_mixin.py:103} INFO - [2021-02-10 08:16:56,205] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:16:56,350] {logging_mixin.py:103} INFO - [2021-02-10 08:16:56,350] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:56,353] {logging_mixin.py:103} INFO - [2021-02-10 08:16:56,353] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:16:56,497] {logging_mixin.py:103} INFO - [2021-02-10 08:16:56,497] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:56,716] {logging_mixin.py:103} INFO - [2021-02-10 08:16:56,716] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:16:56,983] {logging_mixin.py:103} INFO - [2021-02-10 08:16:56,983] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:57,031] {logging_mixin.py:103} INFO - [2021-02-10 08:16:57,031] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:16:57,032] {logging_mixin.py:103} INFO - [2021-02-10 08:16:57,032] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:16:58,199] {logging_mixin.py:103} INFO - [2021-02-10 08:16:58,196] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:58,224] {logging_mixin.py:103} INFO - [2021-02-10 08:16:58,224] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:16:58,272] {logging_mixin.py:103} INFO - [2021-02-10 08:16:58,272] {data_context.py:1281} INFO - Setting run_name to: 20210210T071658.272473Z
[2021-02-10 08:16:58,284] {logging_mixin.py:103} INFO - [2021-02-10 08:16:58,284] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:16:58,320] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:16:58,326] {logging_mixin.py:103} INFO - [2021-02-10 08:16:58,326] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:16:58,498] {logging_mixin.py:103} INFO - [2021-02-10 08:16:58,498] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:58,504] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:16:58,504] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:16:58,505] {logging_mixin.py:103} INFO - [2021-02-10 08:16:58,505] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:16:58,699] {logging_mixin.py:103} INFO - [2021-02-10 08:16:58,699] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:58,700] {logging_mixin.py:103} INFO - [2021-02-10 08:16:58,700] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:16:58,704] {logging_mixin.py:103} INFO - [2021-02-10 08:16:58,704] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:16:58,853] {logging_mixin.py:103} INFO - [2021-02-10 08:16:58,852] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:58,854] {logging_mixin.py:103} INFO - [2021-02-10 08:16:58,854] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:16:59,086] {logging_mixin.py:103} INFO - [2021-02-10 08:16:59,086] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:59,089] {logging_mixin.py:103} INFO - [2021-02-10 08:16:59,089] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:16:59,252] {logging_mixin.py:103} INFO - [2021-02-10 08:16:59,251] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:59,253] {logging_mixin.py:103} INFO - [2021-02-10 08:16:59,252] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:16:59,300] {logging_mixin.py:103} INFO - [2021-02-10 08:16:59,299] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:16:59,303] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:16:59,306] {logging_mixin.py:103} INFO - [2021-02-10 08:16:59,306] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:16:59,735] {logging_mixin.py:103} INFO - [2021-02-10 08:16:59,735] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:59,741] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:16:59,741] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:16:59,747] {logging_mixin.py:103} INFO - [2021-02-10 08:16:59,747] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:16:59,913] {logging_mixin.py:103} INFO - [2021-02-10 08:16:59,913] {cursor.py:560} INFO - query execution done
[2021-02-10 08:16:59,915] {logging_mixin.py:103} INFO - [2021-02-10 08:16:59,914] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:16:59,924] {logging_mixin.py:103} INFO - [2021-02-10 08:16:59,924] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:17:00,104] {logging_mixin.py:103} INFO - [2021-02-10 08:17:00,104] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:00,106] {logging_mixin.py:103} INFO - [2021-02-10 08:17:00,105] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:17:00,322] {logging_mixin.py:103} INFO - [2021-02-10 08:17:00,322] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:00,324] {logging_mixin.py:103} INFO - [2021-02-10 08:17:00,323] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:17:00,508] {logging_mixin.py:103} INFO - [2021-02-10 08:17:00,508] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:00,510] {logging_mixin.py:103} INFO - [2021-02-10 08:17:00,510] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:17:00,685] {logging_mixin.py:103} INFO - [2021-02-10 08:17:00,685] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:00,686] {logging_mixin.py:103} INFO - [2021-02-10 08:17:00,685] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:17:00,690] {logging_mixin.py:103} INFO - [2021-02-10 08:17:00,690] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:17:00,867] {logging_mixin.py:103} INFO - [2021-02-10 08:17:00,867] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:00,875] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:17:00,877] {logging_mixin.py:103} INFO - [2021-02-10 08:17:00,877] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:17:01,045] {logging_mixin.py:103} INFO - [2021-02-10 08:17:01,045] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:01,046] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:17:01,046] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:17:01,048] {logging_mixin.py:103} INFO - [2021-02-10 08:17:01,048] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:17:01,218] {logging_mixin.py:103} INFO - [2021-02-10 08:17:01,218] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:01,219] {logging_mixin.py:103} INFO - [2021-02-10 08:17:01,219] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:17:01,220] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:17:01,224] {logging_mixin.py:103} INFO - [2021-02-10 08:17:01,223] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:17:01,392] {logging_mixin.py:103} INFO - [2021-02-10 08:17:01,392] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:01,393] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:17:01,393] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:17:01,394] {logging_mixin.py:103} INFO - [2021-02-10 08:17:01,394] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:17:01,540] {logging_mixin.py:103} INFO - [2021-02-10 08:17:01,540] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:01,541] {logging_mixin.py:103} INFO - [2021-02-10 08:17:01,540] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:17:01,543] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:17:01,546] {logging_mixin.py:103} INFO - [2021-02-10 08:17:01,546] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:17:01,706] {logging_mixin.py:103} INFO - [2021-02-10 08:17:01,706] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:01,707] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:17:01,708] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:17:01,709] {logging_mixin.py:103} INFO - [2021-02-10 08:17:01,709] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:17:01,903] {logging_mixin.py:103} INFO - [2021-02-10 08:17:01,903] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:01,903] {logging_mixin.py:103} INFO - [2021-02-10 08:17:01,903] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:17:07,258] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:17:36,273] {scheduler_job.py:181} INFO - Started process (PID=59255) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:17:36,274] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:17:36,275] {logging_mixin.py:103} INFO - [2021-02-10 08:17:36,275] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:17:37,982] {logging_mixin.py:103} INFO - [2021-02-10 08:17:37,981] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:17:38,267] {logging_mixin.py:103} INFO - [2021-02-10 08:17:38,266] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:17:38,616] {logging_mixin.py:103} INFO - [2021-02-10 08:17:38,616] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:17:38,616] {logging_mixin.py:103} INFO - [2021-02-10 08:17:38,616] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:17:38,617] {logging_mixin.py:103} INFO - [2021-02-10 08:17:38,617] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:17:39,497] {logging_mixin.py:103} INFO - [2021-02-10 08:17:39,497] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:17:39,661] {logging_mixin.py:103} INFO - [2021-02-10 08:17:39,661] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:39,663] {logging_mixin.py:103} INFO - [2021-02-10 08:17:39,663] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:17:39,806] {logging_mixin.py:103} INFO - [2021-02-10 08:17:39,806] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:39,807] {logging_mixin.py:103} INFO - [2021-02-10 08:17:39,807] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:17:39,963] {logging_mixin.py:103} INFO - [2021-02-10 08:17:39,963] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:39,966] {logging_mixin.py:103} INFO - [2021-02-10 08:17:39,966] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:17:40,101] {logging_mixin.py:103} INFO - [2021-02-10 08:17:40,101] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:40,329] {logging_mixin.py:103} INFO - [2021-02-10 08:17:40,329] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:17:40,479] {logging_mixin.py:103} INFO - [2021-02-10 08:17:40,479] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:40,525] {logging_mixin.py:103} INFO - [2021-02-10 08:17:40,525] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:17:40,526] {logging_mixin.py:103} INFO - [2021-02-10 08:17:40,525] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:17:42,299] {logging_mixin.py:103} INFO - [2021-02-10 08:17:42,298] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:42,303] {logging_mixin.py:103} INFO - [2021-02-10 08:17:42,302] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:17:42,314] {logging_mixin.py:103} INFO - [2021-02-10 08:17:42,314] {data_context.py:1281} INFO - Setting run_name to: 20210210T071742.313938Z
[2021-02-10 08:17:42,315] {logging_mixin.py:103} INFO - [2021-02-10 08:17:42,315] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:17:42,324] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:17:42,326] {logging_mixin.py:103} INFO - [2021-02-10 08:17:42,326] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:17:42,562] {logging_mixin.py:103} INFO - [2021-02-10 08:17:42,562] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:42,563] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:17:42,563] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:17:42,565] {logging_mixin.py:103} INFO - [2021-02-10 08:17:42,564] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:17:42,732] {logging_mixin.py:103} INFO - [2021-02-10 08:17:42,732] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:42,732] {logging_mixin.py:103} INFO - [2021-02-10 08:17:42,732] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:17:42,734] {logging_mixin.py:103} INFO - [2021-02-10 08:17:42,734] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:17:42,948] {logging_mixin.py:103} INFO - [2021-02-10 08:17:42,948] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:42,951] {logging_mixin.py:103} INFO - [2021-02-10 08:17:42,951] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:17:43,149] {logging_mixin.py:103} INFO - [2021-02-10 08:17:43,148] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:43,151] {logging_mixin.py:103} INFO - [2021-02-10 08:17:43,151] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:17:43,449] {logging_mixin.py:103} INFO - [2021-02-10 08:17:43,449] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:43,450] {logging_mixin.py:103} INFO - [2021-02-10 08:17:43,450] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:17:43,474] {logging_mixin.py:103} INFO - [2021-02-10 08:17:43,474] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:17:43,475] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:17:43,477] {logging_mixin.py:103} INFO - [2021-02-10 08:17:43,477] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:17:43,652] {logging_mixin.py:103} INFO - [2021-02-10 08:17:43,652] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:43,653] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:17:43,653] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:17:43,654] {logging_mixin.py:103} INFO - [2021-02-10 08:17:43,654] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:17:43,796] {logging_mixin.py:103} INFO - [2021-02-10 08:17:43,796] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:43,797] {logging_mixin.py:103} INFO - [2021-02-10 08:17:43,797] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:17:43,800] {logging_mixin.py:103} INFO - [2021-02-10 08:17:43,799] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:17:43,962] {logging_mixin.py:103} INFO - [2021-02-10 08:17:43,961] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:43,963] {logging_mixin.py:103} INFO - [2021-02-10 08:17:43,963] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:17:44,154] {logging_mixin.py:103} INFO - [2021-02-10 08:17:44,153] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:44,157] {logging_mixin.py:103} INFO - [2021-02-10 08:17:44,156] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:17:44,302] {logging_mixin.py:103} INFO - [2021-02-10 08:17:44,302] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:44,305] {logging_mixin.py:103} INFO - [2021-02-10 08:17:44,305] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:17:44,760] {logging_mixin.py:103} INFO - [2021-02-10 08:17:44,759] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:44,760] {logging_mixin.py:103} INFO - [2021-02-10 08:17:44,760] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:17:44,764] {logging_mixin.py:103} INFO - [2021-02-10 08:17:44,764] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:17:44,926] {logging_mixin.py:103} INFO - [2021-02-10 08:17:44,926] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:44,937] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:17:44,940] {logging_mixin.py:103} INFO - [2021-02-10 08:17:44,939] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:17:45,137] {logging_mixin.py:103} INFO - [2021-02-10 08:17:45,136] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:45,137] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:17:45,138] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:17:45,139] {logging_mixin.py:103} INFO - [2021-02-10 08:17:45,139] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:17:45,310] {logging_mixin.py:103} INFO - [2021-02-10 08:17:45,310] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:45,311] {logging_mixin.py:103} INFO - [2021-02-10 08:17:45,311] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:17:45,312] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:17:45,315] {logging_mixin.py:103} INFO - [2021-02-10 08:17:45,315] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:17:46,291] {logging_mixin.py:103} INFO - [2021-02-10 08:17:46,291] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:46,292] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:17:46,292] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:17:46,294] {logging_mixin.py:103} INFO - [2021-02-10 08:17:46,294] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:17:46,457] {logging_mixin.py:103} INFO - [2021-02-10 08:17:46,457] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:46,457] {logging_mixin.py:103} INFO - [2021-02-10 08:17:46,457] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:17:46,458] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:17:46,462] {logging_mixin.py:103} INFO - [2021-02-10 08:17:46,462] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:17:46,611] {logging_mixin.py:103} INFO - [2021-02-10 08:17:46,611] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:46,612] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:17:46,612] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:17:46,614] {logging_mixin.py:103} INFO - [2021-02-10 08:17:46,614] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:17:46,782] {logging_mixin.py:103} INFO - [2021-02-10 08:17:46,782] {cursor.py:560} INFO - query execution done
[2021-02-10 08:17:46,783] {logging_mixin.py:103} INFO - [2021-02-10 08:17:46,783] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:17:51,413] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:18:23,717] {scheduler_job.py:181} INFO - Started process (PID=59315) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:18:23,718] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:18:23,719] {logging_mixin.py:103} INFO - [2021-02-10 08:18:23,719] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:18:26,152] {logging_mixin.py:103} INFO - [2021-02-10 08:18:26,152] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:18:26,467] {logging_mixin.py:103} INFO - [2021-02-10 08:18:26,467] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:18:26,835] {logging_mixin.py:103} INFO - [2021-02-10 08:18:26,835] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:18:26,836] {logging_mixin.py:103} INFO - [2021-02-10 08:18:26,835] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:18:26,836] {logging_mixin.py:103} INFO - [2021-02-10 08:18:26,836] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:18:27,879] {logging_mixin.py:103} INFO - [2021-02-10 08:18:27,878] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:18:28,010] {logging_mixin.py:103} INFO - [2021-02-10 08:18:28,010] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:28,011] {logging_mixin.py:103} INFO - [2021-02-10 08:18:28,011] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:18:28,218] {logging_mixin.py:103} INFO - [2021-02-10 08:18:28,217] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:28,218] {logging_mixin.py:103} INFO - [2021-02-10 08:18:28,218] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:18:28,359] {logging_mixin.py:103} INFO - [2021-02-10 08:18:28,359] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:28,362] {logging_mixin.py:103} INFO - [2021-02-10 08:18:28,362] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:18:28,499] {logging_mixin.py:103} INFO - [2021-02-10 08:18:28,498] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:28,776] {logging_mixin.py:103} INFO - [2021-02-10 08:18:28,776] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:18:28,961] {logging_mixin.py:103} INFO - [2021-02-10 08:18:28,961] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:29,010] {logging_mixin.py:103} INFO - [2021-02-10 08:18:29,010] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:18:29,010] {logging_mixin.py:103} INFO - [2021-02-10 08:18:29,010] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:18:30,786] {logging_mixin.py:103} INFO - [2021-02-10 08:18:30,786] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:30,796] {logging_mixin.py:103} INFO - [2021-02-10 08:18:30,795] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:18:30,811] {logging_mixin.py:103} INFO - [2021-02-10 08:18:30,811] {data_context.py:1281} INFO - Setting run_name to: 20210210T071830.811605Z
[2021-02-10 08:18:30,814] {logging_mixin.py:103} INFO - [2021-02-10 08:18:30,813] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:18:30,832] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:18:30,837] {logging_mixin.py:103} INFO - [2021-02-10 08:18:30,837] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:18:31,031] {logging_mixin.py:103} INFO - [2021-02-10 08:18:31,031] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:31,061] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:18:31,061] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:18:31,064] {logging_mixin.py:103} INFO - [2021-02-10 08:18:31,064] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:18:31,291] {logging_mixin.py:103} INFO - [2021-02-10 08:18:31,291] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:31,291] {logging_mixin.py:103} INFO - [2021-02-10 08:18:31,291] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:18:31,295] {logging_mixin.py:103} INFO - [2021-02-10 08:18:31,295] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:18:31,460] {logging_mixin.py:103} INFO - [2021-02-10 08:18:31,460] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:31,462] {logging_mixin.py:103} INFO - [2021-02-10 08:18:31,462] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:18:31,628] {logging_mixin.py:103} INFO - [2021-02-10 08:18:31,628] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:31,632] {logging_mixin.py:103} INFO - [2021-02-10 08:18:31,632] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:18:31,797] {logging_mixin.py:103} INFO - [2021-02-10 08:18:31,797] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:31,798] {logging_mixin.py:103} INFO - [2021-02-10 08:18:31,797] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:18:31,831] {logging_mixin.py:103} INFO - [2021-02-10 08:18:31,831] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:18:31,833] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:18:31,839] {logging_mixin.py:103} INFO - [2021-02-10 08:18:31,839] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:18:32,066] {logging_mixin.py:103} INFO - [2021-02-10 08:18:32,066] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:32,067] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:18:32,067] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:18:32,068] {logging_mixin.py:103} INFO - [2021-02-10 08:18:32,068] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:18:32,216] {logging_mixin.py:103} INFO - [2021-02-10 08:18:32,215] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:32,216] {logging_mixin.py:103} INFO - [2021-02-10 08:18:32,216] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:18:32,218] {logging_mixin.py:103} INFO - [2021-02-10 08:18:32,218] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:18:32,378] {logging_mixin.py:103} INFO - [2021-02-10 08:18:32,377] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:32,379] {logging_mixin.py:103} INFO - [2021-02-10 08:18:32,379] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:18:32,553] {logging_mixin.py:103} INFO - [2021-02-10 08:18:32,553] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:32,555] {logging_mixin.py:103} INFO - [2021-02-10 08:18:32,555] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:18:32,708] {logging_mixin.py:103} INFO - [2021-02-10 08:18:32,708] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:32,710] {logging_mixin.py:103} INFO - [2021-02-10 08:18:32,710] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:18:32,960] {logging_mixin.py:103} INFO - [2021-02-10 08:18:32,959] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:32,960] {logging_mixin.py:103} INFO - [2021-02-10 08:18:32,960] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:18:32,963] {logging_mixin.py:103} INFO - [2021-02-10 08:18:32,963] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:18:33,131] {logging_mixin.py:103} INFO - [2021-02-10 08:18:33,131] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:33,140] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:18:33,143] {logging_mixin.py:103} INFO - [2021-02-10 08:18:33,143] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:18:33,310] {logging_mixin.py:103} INFO - [2021-02-10 08:18:33,310] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:33,310] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:18:33,311] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:18:33,311] {logging_mixin.py:103} INFO - [2021-02-10 08:18:33,311] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:18:33,488] {logging_mixin.py:103} INFO - [2021-02-10 08:18:33,488] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:33,488] {logging_mixin.py:103} INFO - [2021-02-10 08:18:33,488] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:18:33,489] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:18:33,492] {logging_mixin.py:103} INFO - [2021-02-10 08:18:33,492] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:18:33,695] {logging_mixin.py:103} INFO - [2021-02-10 08:18:33,695] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:33,696] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:18:33,696] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:18:33,697] {logging_mixin.py:103} INFO - [2021-02-10 08:18:33,697] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:18:33,953] {logging_mixin.py:103} INFO - [2021-02-10 08:18:33,953] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:33,953] {logging_mixin.py:103} INFO - [2021-02-10 08:18:33,953] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:18:33,954] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:18:33,956] {logging_mixin.py:103} INFO - [2021-02-10 08:18:33,955] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:18:34,213] {logging_mixin.py:103} INFO - [2021-02-10 08:18:34,213] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:34,214] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:18:34,214] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:18:34,215] {logging_mixin.py:103} INFO - [2021-02-10 08:18:34,215] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:18:34,529] {logging_mixin.py:103} INFO - [2021-02-10 08:18:34,529] {cursor.py:560} INFO - query execution done
[2021-02-10 08:18:34,529] {logging_mixin.py:103} INFO - [2021-02-10 08:18:34,529] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:18:45,233] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:19:38,767] {scheduler_job.py:181} INFO - Started process (PID=59456) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:19:38,768] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:19:38,769] {logging_mixin.py:103} INFO - [2021-02-10 08:19:38,769] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:19:43,515] {logging_mixin.py:103} INFO - [2021-02-10 08:19:43,515] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:19:44,131] {logging_mixin.py:103} INFO - [2021-02-10 08:19:44,131] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:19:44,737] {logging_mixin.py:103} INFO - [2021-02-10 08:19:44,736] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:19:44,737] {logging_mixin.py:103} INFO - [2021-02-10 08:19:44,737] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:19:44,737] {logging_mixin.py:103} INFO - [2021-02-10 08:19:44,737] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:19:46,410] {logging_mixin.py:103} INFO - [2021-02-10 08:19:46,410] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:19:46,598] {logging_mixin.py:103} INFO - [2021-02-10 08:19:46,598] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:46,599] {logging_mixin.py:103} INFO - [2021-02-10 08:19:46,599] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:19:46,735] {logging_mixin.py:103} INFO - [2021-02-10 08:19:46,735] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:46,735] {logging_mixin.py:103} INFO - [2021-02-10 08:19:46,735] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:19:46,902] {logging_mixin.py:103} INFO - [2021-02-10 08:19:46,902] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:46,904] {logging_mixin.py:103} INFO - [2021-02-10 08:19:46,904] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:19:47,184] {logging_mixin.py:103} INFO - [2021-02-10 08:19:47,184] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:47,522] {logging_mixin.py:103} INFO - [2021-02-10 08:19:47,522] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:19:47,690] {logging_mixin.py:103} INFO - [2021-02-10 08:19:47,690] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:47,766] {logging_mixin.py:103} INFO - [2021-02-10 08:19:47,766] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:19:47,766] {logging_mixin.py:103} INFO - [2021-02-10 08:19:47,766] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:19:49,064] {logging_mixin.py:103} INFO - [2021-02-10 08:19:49,064] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:49,068] {logging_mixin.py:103} INFO - [2021-02-10 08:19:49,068] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:19:49,089] {logging_mixin.py:103} INFO - [2021-02-10 08:19:49,089] {data_context.py:1281} INFO - Setting run_name to: 20210210T071949.089403Z
[2021-02-10 08:19:49,091] {logging_mixin.py:103} INFO - [2021-02-10 08:19:49,091] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:19:49,112] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:19:49,115] {logging_mixin.py:103} INFO - [2021-02-10 08:19:49,115] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:19:49,282] {logging_mixin.py:103} INFO - [2021-02-10 08:19:49,282] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:49,283] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:19:49,284] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:19:49,285] {logging_mixin.py:103} INFO - [2021-02-10 08:19:49,285] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:19:49,547] {logging_mixin.py:103} INFO - [2021-02-10 08:19:49,547] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:49,548] {logging_mixin.py:103} INFO - [2021-02-10 08:19:49,548] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:19:49,550] {logging_mixin.py:103} INFO - [2021-02-10 08:19:49,550] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:19:49,732] {logging_mixin.py:103} INFO - [2021-02-10 08:19:49,732] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:49,733] {logging_mixin.py:103} INFO - [2021-02-10 08:19:49,733] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:19:49,892] {logging_mixin.py:103} INFO - [2021-02-10 08:19:49,892] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:49,895] {logging_mixin.py:103} INFO - [2021-02-10 08:19:49,895] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:19:50,046] {logging_mixin.py:103} INFO - [2021-02-10 08:19:50,045] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:50,046] {logging_mixin.py:103} INFO - [2021-02-10 08:19:50,046] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:19:50,077] {logging_mixin.py:103} INFO - [2021-02-10 08:19:50,077] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:19:50,078] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:19:50,081] {logging_mixin.py:103} INFO - [2021-02-10 08:19:50,081] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:19:50,307] {logging_mixin.py:103} INFO - [2021-02-10 08:19:50,307] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:50,308] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:19:50,308] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:19:50,310] {logging_mixin.py:103} INFO - [2021-02-10 08:19:50,310] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:19:50,488] {logging_mixin.py:103} INFO - [2021-02-10 08:19:50,488] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:50,488] {logging_mixin.py:103} INFO - [2021-02-10 08:19:50,488] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:19:50,492] {logging_mixin.py:103} INFO - [2021-02-10 08:19:50,491] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:19:50,643] {logging_mixin.py:103} INFO - [2021-02-10 08:19:50,643] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:50,645] {logging_mixin.py:103} INFO - [2021-02-10 08:19:50,645] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:19:50,805] {logging_mixin.py:103} INFO - [2021-02-10 08:19:50,805] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:50,808] {logging_mixin.py:103} INFO - [2021-02-10 08:19:50,808] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:19:50,964] {logging_mixin.py:103} INFO - [2021-02-10 08:19:50,964] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:50,967] {logging_mixin.py:103} INFO - [2021-02-10 08:19:50,967] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:19:51,210] {logging_mixin.py:103} INFO - [2021-02-10 08:19:51,210] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:51,210] {logging_mixin.py:103} INFO - [2021-02-10 08:19:51,210] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:19:51,215] {logging_mixin.py:103} INFO - [2021-02-10 08:19:51,215] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:19:51,416] {logging_mixin.py:103} INFO - [2021-02-10 08:19:51,416] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:51,421] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:19:51,424] {logging_mixin.py:103} INFO - [2021-02-10 08:19:51,424] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:19:51,581] {logging_mixin.py:103} INFO - [2021-02-10 08:19:51,581] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:51,582] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:19:51,582] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:19:51,583] {logging_mixin.py:103} INFO - [2021-02-10 08:19:51,583] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:19:51,782] {logging_mixin.py:103} INFO - [2021-02-10 08:19:51,782] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:51,783] {logging_mixin.py:103} INFO - [2021-02-10 08:19:51,783] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:19:51,783] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:19:51,786] {logging_mixin.py:103} INFO - [2021-02-10 08:19:51,786] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:19:51,957] {logging_mixin.py:103} INFO - [2021-02-10 08:19:51,957] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:51,958] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:19:51,958] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:19:51,959] {logging_mixin.py:103} INFO - [2021-02-10 08:19:51,959] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:19:52,142] {logging_mixin.py:103} INFO - [2021-02-10 08:19:52,142] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:52,143] {logging_mixin.py:103} INFO - [2021-02-10 08:19:52,143] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:19:52,144] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:19:52,147] {logging_mixin.py:103} INFO - [2021-02-10 08:19:52,147] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:19:52,282] {logging_mixin.py:103} INFO - [2021-02-10 08:19:52,282] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:52,283] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:19:52,283] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:19:52,284] {logging_mixin.py:103} INFO - [2021-02-10 08:19:52,284] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:19:52,468] {logging_mixin.py:103} INFO - [2021-02-10 08:19:52,468] {cursor.py:560} INFO - query execution done
[2021-02-10 08:19:52,469] {logging_mixin.py:103} INFO - [2021-02-10 08:19:52,469] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:19:59,147] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:20:32,707] {scheduler_job.py:181} INFO - Started process (PID=59525) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:20:32,707] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:20:32,707] {logging_mixin.py:103} INFO - [2021-02-10 08:20:32,707] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:20:35,259] {logging_mixin.py:103} INFO - [2021-02-10 08:20:35,259] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:20:35,676] {logging_mixin.py:103} INFO - [2021-02-10 08:20:35,676] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:20:36,434] {logging_mixin.py:103} INFO - [2021-02-10 08:20:36,434] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:20:36,434] {logging_mixin.py:103} INFO - [2021-02-10 08:20:36,434] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:20:36,435] {logging_mixin.py:103} INFO - [2021-02-10 08:20:36,434] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:20:37,814] {logging_mixin.py:103} INFO - [2021-02-10 08:20:37,813] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:20:37,979] {logging_mixin.py:103} INFO - [2021-02-10 08:20:37,979] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:37,980] {logging_mixin.py:103} INFO - [2021-02-10 08:20:37,980] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:20:38,159] {logging_mixin.py:103} INFO - [2021-02-10 08:20:38,159] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:38,159] {logging_mixin.py:103} INFO - [2021-02-10 08:20:38,159] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:20:38,285] {logging_mixin.py:103} INFO - [2021-02-10 08:20:38,285] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:38,287] {logging_mixin.py:103} INFO - [2021-02-10 08:20:38,287] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:20:38,494] {logging_mixin.py:103} INFO - [2021-02-10 08:20:38,494] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:38,726] {logging_mixin.py:103} INFO - [2021-02-10 08:20:38,726] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:20:38,904] {logging_mixin.py:103} INFO - [2021-02-10 08:20:38,904] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:38,948] {logging_mixin.py:103} INFO - [2021-02-10 08:20:38,947] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:20:38,948] {logging_mixin.py:103} INFO - [2021-02-10 08:20:38,948] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:20:40,478] {logging_mixin.py:103} INFO - [2021-02-10 08:20:40,478] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:40,480] {logging_mixin.py:103} INFO - [2021-02-10 08:20:40,480] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:20:40,488] {logging_mixin.py:103} INFO - [2021-02-10 08:20:40,488] {data_context.py:1281} INFO - Setting run_name to: 20210210T072040.488039Z
[2021-02-10 08:20:40,489] {logging_mixin.py:103} INFO - [2021-02-10 08:20:40,489] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:20:40,497] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:20:40,499] {logging_mixin.py:103} INFO - [2021-02-10 08:20:40,499] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:20:40,782] {logging_mixin.py:103} INFO - [2021-02-10 08:20:40,782] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:40,783] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:20:40,783] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:20:40,784] {logging_mixin.py:103} INFO - [2021-02-10 08:20:40,784] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:20:40,925] {logging_mixin.py:103} INFO - [2021-02-10 08:20:40,925] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:40,926] {logging_mixin.py:103} INFO - [2021-02-10 08:20:40,926] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:20:40,927] {logging_mixin.py:103} INFO - [2021-02-10 08:20:40,927] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:20:41,078] {logging_mixin.py:103} INFO - [2021-02-10 08:20:41,078] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:41,079] {logging_mixin.py:103} INFO - [2021-02-10 08:20:41,079] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:20:41,355] {logging_mixin.py:103} INFO - [2021-02-10 08:20:41,355] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:41,357] {logging_mixin.py:103} INFO - [2021-02-10 08:20:41,357] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:20:41,529] {logging_mixin.py:103} INFO - [2021-02-10 08:20:41,528] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:41,530] {logging_mixin.py:103} INFO - [2021-02-10 08:20:41,530] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:20:41,541] {logging_mixin.py:103} INFO - [2021-02-10 08:20:41,540] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:20:41,542] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:20:41,547] {logging_mixin.py:103} INFO - [2021-02-10 08:20:41,547] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:20:41,705] {logging_mixin.py:103} INFO - [2021-02-10 08:20:41,705] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:41,706] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:20:41,706] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:20:41,707] {logging_mixin.py:103} INFO - [2021-02-10 08:20:41,707] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:20:41,940] {logging_mixin.py:103} INFO - [2021-02-10 08:20:41,940] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:41,940] {logging_mixin.py:103} INFO - [2021-02-10 08:20:41,940] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:20:41,942] {logging_mixin.py:103} INFO - [2021-02-10 08:20:41,942] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:20:42,085] {logging_mixin.py:103} INFO - [2021-02-10 08:20:42,085] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:42,087] {logging_mixin.py:103} INFO - [2021-02-10 08:20:42,087] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:20:42,246] {logging_mixin.py:103} INFO - [2021-02-10 08:20:42,246] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:42,248] {logging_mixin.py:103} INFO - [2021-02-10 08:20:42,248] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:20:42,410] {logging_mixin.py:103} INFO - [2021-02-10 08:20:42,410] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:42,412] {logging_mixin.py:103} INFO - [2021-02-10 08:20:42,412] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:20:42,664] {logging_mixin.py:103} INFO - [2021-02-10 08:20:42,664] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:42,664] {logging_mixin.py:103} INFO - [2021-02-10 08:20:42,664] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:20:42,666] {logging_mixin.py:103} INFO - [2021-02-10 08:20:42,666] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:20:42,808] {logging_mixin.py:103} INFO - [2021-02-10 08:20:42,808] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:42,810] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:20:42,812] {logging_mixin.py:103} INFO - [2021-02-10 08:20:42,812] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:20:43,012] {logging_mixin.py:103} INFO - [2021-02-10 08:20:43,012] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:43,013] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:20:43,013] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:20:43,014] {logging_mixin.py:103} INFO - [2021-02-10 08:20:43,014] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:20:43,203] {logging_mixin.py:103} INFO - [2021-02-10 08:20:43,203] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:43,203] {logging_mixin.py:103} INFO - [2021-02-10 08:20:43,203] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:20:43,203] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:20:43,205] {logging_mixin.py:103} INFO - [2021-02-10 08:20:43,205] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:20:43,480] {logging_mixin.py:103} INFO - [2021-02-10 08:20:43,480] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:43,481] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:20:43,481] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:20:43,482] {logging_mixin.py:103} INFO - [2021-02-10 08:20:43,482] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:20:43,649] {logging_mixin.py:103} INFO - [2021-02-10 08:20:43,649] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:43,649] {logging_mixin.py:103} INFO - [2021-02-10 08:20:43,649] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:20:43,650] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:20:43,652] {logging_mixin.py:103} INFO - [2021-02-10 08:20:43,652] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:20:43,850] {logging_mixin.py:103} INFO - [2021-02-10 08:20:43,850] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:43,851] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:20:43,851] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:20:43,852] {logging_mixin.py:103} INFO - [2021-02-10 08:20:43,852] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:20:44,124] {logging_mixin.py:103} INFO - [2021-02-10 08:20:44,124] {cursor.py:560} INFO - query execution done
[2021-02-10 08:20:44,124] {logging_mixin.py:103} INFO - [2021-02-10 08:20:44,124] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:20:49,180] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:21:17,632] {scheduler_job.py:181} INFO - Started process (PID=59586) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:21:17,632] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:21:17,632] {logging_mixin.py:103} INFO - [2021-02-10 08:21:17,632] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:21:19,679] {logging_mixin.py:103} INFO - [2021-02-10 08:21:19,679] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:21:20,096] {logging_mixin.py:103} INFO - [2021-02-10 08:21:20,096] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:21:20,637] {logging_mixin.py:103} INFO - [2021-02-10 08:21:20,637] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:21:20,637] {logging_mixin.py:103} INFO - [2021-02-10 08:21:20,637] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:21:20,637] {logging_mixin.py:103} INFO - [2021-02-10 08:21:20,637] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:21:21,738] {logging_mixin.py:103} INFO - [2021-02-10 08:21:21,738] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:21:21,876] {logging_mixin.py:103} INFO - [2021-02-10 08:21:21,875] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:21,878] {logging_mixin.py:103} INFO - [2021-02-10 08:21:21,877] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:21:22,019] {logging_mixin.py:103} INFO - [2021-02-10 08:21:22,019] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:22,019] {logging_mixin.py:103} INFO - [2021-02-10 08:21:22,019] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:21:22,215] {logging_mixin.py:103} INFO - [2021-02-10 08:21:22,215] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:22,217] {logging_mixin.py:103} INFO - [2021-02-10 08:21:22,217] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:21:22,367] {logging_mixin.py:103} INFO - [2021-02-10 08:21:22,367] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:22,587] {logging_mixin.py:103} INFO - [2021-02-10 08:21:22,587] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:21:22,740] {logging_mixin.py:103} INFO - [2021-02-10 08:21:22,739] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:22,779] {logging_mixin.py:103} INFO - [2021-02-10 08:21:22,779] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:21:22,779] {logging_mixin.py:103} INFO - [2021-02-10 08:21:22,779] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:21:24,109] {logging_mixin.py:103} INFO - [2021-02-10 08:21:24,109] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:24,112] {logging_mixin.py:103} INFO - [2021-02-10 08:21:24,112] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:21:24,123] {logging_mixin.py:103} INFO - [2021-02-10 08:21:24,123] {data_context.py:1281} INFO - Setting run_name to: 20210210T072124.123441Z
[2021-02-10 08:21:24,124] {logging_mixin.py:103} INFO - [2021-02-10 08:21:24,124] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:21:24,133] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:21:24,135] {logging_mixin.py:103} INFO - [2021-02-10 08:21:24,135] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:21:25,024] {logging_mixin.py:103} INFO - [2021-02-10 08:21:25,024] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:25,025] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:21:25,025] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:21:25,026] {logging_mixin.py:103} INFO - [2021-02-10 08:21:25,026] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:21:25,172] {logging_mixin.py:103} INFO - [2021-02-10 08:21:25,172] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:25,172] {logging_mixin.py:103} INFO - [2021-02-10 08:21:25,172] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:21:25,174] {logging_mixin.py:103} INFO - [2021-02-10 08:21:25,174] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:21:25,339] {logging_mixin.py:103} INFO - [2021-02-10 08:21:25,339] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:25,340] {logging_mixin.py:103} INFO - [2021-02-10 08:21:25,340] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:21:25,501] {logging_mixin.py:103} INFO - [2021-02-10 08:21:25,501] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:25,503] {logging_mixin.py:103} INFO - [2021-02-10 08:21:25,503] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:21:25,701] {logging_mixin.py:103} INFO - [2021-02-10 08:21:25,701] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:25,701] {logging_mixin.py:103} INFO - [2021-02-10 08:21:25,701] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:21:25,713] {logging_mixin.py:103} INFO - [2021-02-10 08:21:25,713] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:21:25,713] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:21:25,716] {logging_mixin.py:103} INFO - [2021-02-10 08:21:25,716] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:21:26,012] {logging_mixin.py:103} INFO - [2021-02-10 08:21:26,011] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:26,015] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:21:26,015] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:21:26,017] {logging_mixin.py:103} INFO - [2021-02-10 08:21:26,017] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:21:26,281] {logging_mixin.py:103} INFO - [2021-02-10 08:21:26,280] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:26,281] {logging_mixin.py:103} INFO - [2021-02-10 08:21:26,281] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:21:26,284] {logging_mixin.py:103} INFO - [2021-02-10 08:21:26,284] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:21:26,568] {logging_mixin.py:103} INFO - [2021-02-10 08:21:26,568] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:26,570] {logging_mixin.py:103} INFO - [2021-02-10 08:21:26,570] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:21:27,485] {logging_mixin.py:103} INFO - [2021-02-10 08:21:27,485] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:27,488] {logging_mixin.py:103} INFO - [2021-02-10 08:21:27,488] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:21:27,778] {logging_mixin.py:103} INFO - [2021-02-10 08:21:27,778] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:27,781] {logging_mixin.py:103} INFO - [2021-02-10 08:21:27,781] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:21:28,069] {logging_mixin.py:103} INFO - [2021-02-10 08:21:28,069] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:28,070] {logging_mixin.py:103} INFO - [2021-02-10 08:21:28,070] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:21:28,074] {logging_mixin.py:103} INFO - [2021-02-10 08:21:28,074] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:21:28,276] {logging_mixin.py:103} INFO - [2021-02-10 08:21:28,276] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:28,280] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:21:28,282] {logging_mixin.py:103} INFO - [2021-02-10 08:21:28,282] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:21:28,457] {logging_mixin.py:103} INFO - [2021-02-10 08:21:28,457] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:28,459] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:21:28,459] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:21:28,461] {logging_mixin.py:103} INFO - [2021-02-10 08:21:28,460] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:21:28,625] {logging_mixin.py:103} INFO - [2021-02-10 08:21:28,625] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:28,626] {logging_mixin.py:103} INFO - [2021-02-10 08:21:28,625] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:21:28,627] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:21:28,630] {logging_mixin.py:103} INFO - [2021-02-10 08:21:28,630] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:21:28,801] {logging_mixin.py:103} INFO - [2021-02-10 08:21:28,801] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:28,803] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:21:28,803] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:21:28,804] {logging_mixin.py:103} INFO - [2021-02-10 08:21:28,804] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:21:28,953] {logging_mixin.py:103} INFO - [2021-02-10 08:21:28,953] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:28,953] {logging_mixin.py:103} INFO - [2021-02-10 08:21:28,953] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:21:28,955] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:21:28,957] {logging_mixin.py:103} INFO - [2021-02-10 08:21:28,957] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:21:29,111] {logging_mixin.py:103} INFO - [2021-02-10 08:21:29,110] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:29,112] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:21:29,112] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:21:29,113] {logging_mixin.py:103} INFO - [2021-02-10 08:21:29,113] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:21:29,278] {logging_mixin.py:103} INFO - [2021-02-10 08:21:29,278] {cursor.py:560} INFO - query execution done
[2021-02-10 08:21:29,279] {logging_mixin.py:103} INFO - [2021-02-10 08:21:29,279] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:21:33,842] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:22:05,826] {scheduler_job.py:181} INFO - Started process (PID=59654) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:22:05,827] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:22:05,828] {logging_mixin.py:103} INFO - [2021-02-10 08:22:05,828] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:22:09,792] {logging_mixin.py:103} INFO - [2021-02-10 08:22:09,792] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:22:10,175] {logging_mixin.py:103} INFO - [2021-02-10 08:22:10,175] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:22:10,584] {logging_mixin.py:103} INFO - [2021-02-10 08:22:10,584] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:22:10,585] {logging_mixin.py:103} INFO - [2021-02-10 08:22:10,585] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:22:10,585] {logging_mixin.py:103} INFO - [2021-02-10 08:22:10,585] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:22:12,334] {logging_mixin.py:103} INFO - [2021-02-10 08:22:12,334] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:22:12,478] {logging_mixin.py:103} INFO - [2021-02-10 08:22:12,478] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:12,479] {logging_mixin.py:103} INFO - [2021-02-10 08:22:12,479] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:22:12,614] {logging_mixin.py:103} INFO - [2021-02-10 08:22:12,614] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:12,615] {logging_mixin.py:103} INFO - [2021-02-10 08:22:12,615] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:22:12,800] {logging_mixin.py:103} INFO - [2021-02-10 08:22:12,800] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:12,802] {logging_mixin.py:103} INFO - [2021-02-10 08:22:12,802] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:22:12,924] {logging_mixin.py:103} INFO - [2021-02-10 08:22:12,924] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:13,165] {logging_mixin.py:103} INFO - [2021-02-10 08:22:13,165] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:22:13,327] {logging_mixin.py:103} INFO - [2021-02-10 08:22:13,327] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:13,366] {logging_mixin.py:103} INFO - [2021-02-10 08:22:13,365] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:22:13,366] {logging_mixin.py:103} INFO - [2021-02-10 08:22:13,366] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:22:14,802] {logging_mixin.py:103} INFO - [2021-02-10 08:22:14,802] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:14,806] {logging_mixin.py:103} INFO - [2021-02-10 08:22:14,806] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:22:14,816] {logging_mixin.py:103} INFO - [2021-02-10 08:22:14,816] {data_context.py:1281} INFO - Setting run_name to: 20210210T072214.816507Z
[2021-02-10 08:22:14,817] {logging_mixin.py:103} INFO - [2021-02-10 08:22:14,817] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:22:14,826] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:22:14,827] {logging_mixin.py:103} INFO - [2021-02-10 08:22:14,827] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:22:15,000] {logging_mixin.py:103} INFO - [2021-02-10 08:22:15,000] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:15,001] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:22:15,001] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:22:15,002] {logging_mixin.py:103} INFO - [2021-02-10 08:22:15,002] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:22:15,204] {logging_mixin.py:103} INFO - [2021-02-10 08:22:15,204] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:15,205] {logging_mixin.py:103} INFO - [2021-02-10 08:22:15,205] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:22:15,207] {logging_mixin.py:103} INFO - [2021-02-10 08:22:15,207] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:22:15,382] {logging_mixin.py:103} INFO - [2021-02-10 08:22:15,382] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:15,385] {logging_mixin.py:103} INFO - [2021-02-10 08:22:15,384] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:22:15,568] {logging_mixin.py:103} INFO - [2021-02-10 08:22:15,567] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:15,570] {logging_mixin.py:103} INFO - [2021-02-10 08:22:15,570] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:22:15,760] {logging_mixin.py:103} INFO - [2021-02-10 08:22:15,760] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:15,761] {logging_mixin.py:103} INFO - [2021-02-10 08:22:15,761] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:22:15,777] {logging_mixin.py:103} INFO - [2021-02-10 08:22:15,777] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:22:15,778] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:22:15,779] {logging_mixin.py:103} INFO - [2021-02-10 08:22:15,779] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:22:15,950] {logging_mixin.py:103} INFO - [2021-02-10 08:22:15,950] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:15,951] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:22:15,951] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:22:15,953] {logging_mixin.py:103} INFO - [2021-02-10 08:22:15,953] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:22:16,103] {logging_mixin.py:103} INFO - [2021-02-10 08:22:16,102] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:16,103] {logging_mixin.py:103} INFO - [2021-02-10 08:22:16,103] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:22:16,106] {logging_mixin.py:103} INFO - [2021-02-10 08:22:16,106] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:22:16,308] {logging_mixin.py:103} INFO - [2021-02-10 08:22:16,308] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:16,310] {logging_mixin.py:103} INFO - [2021-02-10 08:22:16,310] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:22:16,460] {logging_mixin.py:103} INFO - [2021-02-10 08:22:16,460] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:16,464] {logging_mixin.py:103} INFO - [2021-02-10 08:22:16,463] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:22:16,619] {logging_mixin.py:103} INFO - [2021-02-10 08:22:16,618] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:16,621] {logging_mixin.py:103} INFO - [2021-02-10 08:22:16,621] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:22:17,249] {logging_mixin.py:103} INFO - [2021-02-10 08:22:17,249] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:17,249] {logging_mixin.py:103} INFO - [2021-02-10 08:22:17,249] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:22:17,253] {logging_mixin.py:103} INFO - [2021-02-10 08:22:17,253] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:22:17,508] {logging_mixin.py:103} INFO - [2021-02-10 08:22:17,508] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:17,513] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:22:17,515] {logging_mixin.py:103} INFO - [2021-02-10 08:22:17,515] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:22:17,691] {logging_mixin.py:103} INFO - [2021-02-10 08:22:17,691] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:17,692] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:22:17,692] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:22:17,693] {logging_mixin.py:103} INFO - [2021-02-10 08:22:17,693] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:22:17,878] {logging_mixin.py:103} INFO - [2021-02-10 08:22:17,877] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:17,878] {logging_mixin.py:103} INFO - [2021-02-10 08:22:17,878] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:22:17,879] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:22:17,882] {logging_mixin.py:103} INFO - [2021-02-10 08:22:17,882] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:22:18,053] {logging_mixin.py:103} INFO - [2021-02-10 08:22:18,053] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:18,054] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:22:18,055] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:22:18,056] {logging_mixin.py:103} INFO - [2021-02-10 08:22:18,056] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:22:18,250] {logging_mixin.py:103} INFO - [2021-02-10 08:22:18,250] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:18,250] {logging_mixin.py:103} INFO - [2021-02-10 08:22:18,250] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:22:18,251] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:22:18,255] {logging_mixin.py:103} INFO - [2021-02-10 08:22:18,254] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:22:18,401] {logging_mixin.py:103} INFO - [2021-02-10 08:22:18,401] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:18,403] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:22:18,403] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:22:18,404] {logging_mixin.py:103} INFO - [2021-02-10 08:22:18,404] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:22:18,585] {logging_mixin.py:103} INFO - [2021-02-10 08:22:18,585] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:18,585] {logging_mixin.py:103} INFO - [2021-02-10 08:22:18,585] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:22:23,306] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:22:51,060] {scheduler_job.py:181} INFO - Started process (PID=59713) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:22:51,060] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:22:51,060] {logging_mixin.py:103} INFO - [2021-02-10 08:22:51,060] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:22:53,306] {logging_mixin.py:103} INFO - [2021-02-10 08:22:53,305] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:22:53,699] {logging_mixin.py:103} INFO - [2021-02-10 08:22:53,699] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:22:54,047] {logging_mixin.py:103} INFO - [2021-02-10 08:22:54,047] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:22:54,048] {logging_mixin.py:103} INFO - [2021-02-10 08:22:54,048] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:22:54,048] {logging_mixin.py:103} INFO - [2021-02-10 08:22:54,048] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:22:55,055] {logging_mixin.py:103} INFO - [2021-02-10 08:22:55,054] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:22:55,203] {logging_mixin.py:103} INFO - [2021-02-10 08:22:55,203] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:55,205] {logging_mixin.py:103} INFO - [2021-02-10 08:22:55,205] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:22:55,343] {logging_mixin.py:103} INFO - [2021-02-10 08:22:55,343] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:55,344] {logging_mixin.py:103} INFO - [2021-02-10 08:22:55,344] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:22:55,549] {logging_mixin.py:103} INFO - [2021-02-10 08:22:55,549] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:55,552] {logging_mixin.py:103} INFO - [2021-02-10 08:22:55,552] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:22:55,698] {logging_mixin.py:103} INFO - [2021-02-10 08:22:55,698] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:55,935] {logging_mixin.py:103} INFO - [2021-02-10 08:22:55,935] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:22:56,106] {logging_mixin.py:103} INFO - [2021-02-10 08:22:56,106] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:56,153] {logging_mixin.py:103} INFO - [2021-02-10 08:22:56,153] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:22:56,154] {logging_mixin.py:103} INFO - [2021-02-10 08:22:56,153] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:22:57,501] {logging_mixin.py:103} INFO - [2021-02-10 08:22:57,501] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:57,505] {logging_mixin.py:103} INFO - [2021-02-10 08:22:57,505] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:22:57,515] {logging_mixin.py:103} INFO - [2021-02-10 08:22:57,515] {data_context.py:1281} INFO - Setting run_name to: 20210210T072257.515415Z
[2021-02-10 08:22:57,516] {logging_mixin.py:103} INFO - [2021-02-10 08:22:57,516] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:22:57,525] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:22:57,527] {logging_mixin.py:103} INFO - [2021-02-10 08:22:57,527] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:22:57,834] {logging_mixin.py:103} INFO - [2021-02-10 08:22:57,833] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:57,835] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:22:57,835] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:22:57,836] {logging_mixin.py:103} INFO - [2021-02-10 08:22:57,836] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:22:57,998] {logging_mixin.py:103} INFO - [2021-02-10 08:22:57,998] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:57,999] {logging_mixin.py:103} INFO - [2021-02-10 08:22:57,999] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:22:58,001] {logging_mixin.py:103} INFO - [2021-02-10 08:22:58,001] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:22:58,182] {logging_mixin.py:103} INFO - [2021-02-10 08:22:58,182] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:58,185] {logging_mixin.py:103} INFO - [2021-02-10 08:22:58,185] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:22:58,355] {logging_mixin.py:103} INFO - [2021-02-10 08:22:58,355] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:58,358] {logging_mixin.py:103} INFO - [2021-02-10 08:22:58,358] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:22:58,517] {logging_mixin.py:103} INFO - [2021-02-10 08:22:58,517] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:58,518] {logging_mixin.py:103} INFO - [2021-02-10 08:22:58,518] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:22:58,537] {logging_mixin.py:103} INFO - [2021-02-10 08:22:58,537] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:22:58,538] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:22:58,540] {logging_mixin.py:103} INFO - [2021-02-10 08:22:58,540] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:22:58,821] {logging_mixin.py:103} INFO - [2021-02-10 08:22:58,820] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:58,822] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:22:58,822] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:22:58,823] {logging_mixin.py:103} INFO - [2021-02-10 08:22:58,823] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:22:58,991] {logging_mixin.py:103} INFO - [2021-02-10 08:22:58,991] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:58,992] {logging_mixin.py:103} INFO - [2021-02-10 08:22:58,992] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:22:58,995] {logging_mixin.py:103} INFO - [2021-02-10 08:22:58,994] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:22:59,236] {logging_mixin.py:103} INFO - [2021-02-10 08:22:59,235] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:59,237] {logging_mixin.py:103} INFO - [2021-02-10 08:22:59,237] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:22:59,450] {logging_mixin.py:103} INFO - [2021-02-10 08:22:59,449] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:59,453] {logging_mixin.py:103} INFO - [2021-02-10 08:22:59,453] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:22:59,615] {logging_mixin.py:103} INFO - [2021-02-10 08:22:59,615] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:59,618] {logging_mixin.py:103} INFO - [2021-02-10 08:22:59,618] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:22:59,816] {logging_mixin.py:103} INFO - [2021-02-10 08:22:59,815] {cursor.py:560} INFO - query execution done
[2021-02-10 08:22:59,816] {logging_mixin.py:103} INFO - [2021-02-10 08:22:59,816] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:22:59,820] {logging_mixin.py:103} INFO - [2021-02-10 08:22:59,820] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:23:00,026] {logging_mixin.py:103} INFO - [2021-02-10 08:23:00,026] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:00,036] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:23:00,037] {logging_mixin.py:103} INFO - [2021-02-10 08:23:00,037] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:23:00,298] {logging_mixin.py:103} INFO - [2021-02-10 08:23:00,298] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:00,300] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:23:00,301] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:23:00,302] {logging_mixin.py:103} INFO - [2021-02-10 08:23:00,302] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:23:00,872] {logging_mixin.py:103} INFO - [2021-02-10 08:23:00,872] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:00,873] {logging_mixin.py:103} INFO - [2021-02-10 08:23:00,873] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:23:00,874] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:23:00,877] {logging_mixin.py:103} INFO - [2021-02-10 08:23:00,877] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:23:01,029] {logging_mixin.py:103} INFO - [2021-02-10 08:23:01,029] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:01,030] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:23:01,030] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:23:01,031] {logging_mixin.py:103} INFO - [2021-02-10 08:23:01,031] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:23:01,328] {logging_mixin.py:103} INFO - [2021-02-10 08:23:01,328] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:01,329] {logging_mixin.py:103} INFO - [2021-02-10 08:23:01,329] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:23:01,330] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:23:01,332] {logging_mixin.py:103} INFO - [2021-02-10 08:23:01,332] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:23:01,490] {logging_mixin.py:103} INFO - [2021-02-10 08:23:01,489] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:01,491] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:23:01,492] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:23:01,493] {logging_mixin.py:103} INFO - [2021-02-10 08:23:01,493] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:23:01,649] {logging_mixin.py:103} INFO - [2021-02-10 08:23:01,649] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:01,650] {logging_mixin.py:103} INFO - [2021-02-10 08:23:01,650] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:23:06,303] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:23:34,824] {scheduler_job.py:181} INFO - Started process (PID=59778) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:23:34,824] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:23:34,825] {logging_mixin.py:103} INFO - [2021-02-10 08:23:34,825] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:23:37,546] {logging_mixin.py:103} INFO - [2021-02-10 08:23:37,546] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:23:37,940] {logging_mixin.py:103} INFO - [2021-02-10 08:23:37,939] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:23:38,399] {logging_mixin.py:103} INFO - [2021-02-10 08:23:38,399] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:23:38,400] {logging_mixin.py:103} INFO - [2021-02-10 08:23:38,399] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:23:38,400] {logging_mixin.py:103} INFO - [2021-02-10 08:23:38,400] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:23:40,042] {logging_mixin.py:103} INFO - [2021-02-10 08:23:40,042] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:23:40,225] {logging_mixin.py:103} INFO - [2021-02-10 08:23:40,225] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:40,226] {logging_mixin.py:103} INFO - [2021-02-10 08:23:40,226] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:23:40,410] {logging_mixin.py:103} INFO - [2021-02-10 08:23:40,410] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:40,411] {logging_mixin.py:103} INFO - [2021-02-10 08:23:40,411] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:23:40,742] {logging_mixin.py:103} INFO - [2021-02-10 08:23:40,742] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:40,742] {logging_mixin.py:103} INFO - [2021-02-10 08:23:40,742] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:23:40,924] {logging_mixin.py:103} INFO - [2021-02-10 08:23:40,924] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:41,291] {logging_mixin.py:103} INFO - [2021-02-10 08:23:41,291] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:23:41,475] {logging_mixin.py:103} INFO - [2021-02-10 08:23:41,475] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:41,583] {logging_mixin.py:103} INFO - [2021-02-10 08:23:41,583] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:23:41,583] {logging_mixin.py:103} INFO - [2021-02-10 08:23:41,583] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:23:44,497] {logging_mixin.py:103} INFO - [2021-02-10 08:23:44,497] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:44,504] {logging_mixin.py:103} INFO - [2021-02-10 08:23:44,503] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:23:44,521] {logging_mixin.py:103} INFO - [2021-02-10 08:23:44,520] {data_context.py:1281} INFO - Setting run_name to: 20210210T072344.520846Z
[2021-02-10 08:23:44,525] {logging_mixin.py:103} INFO - [2021-02-10 08:23:44,524] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:23:44,545] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:23:44,548] {logging_mixin.py:103} INFO - [2021-02-10 08:23:44,547] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:23:44,765] {logging_mixin.py:103} INFO - [2021-02-10 08:23:44,765] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:44,766] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:23:44,766] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:23:44,767] {logging_mixin.py:103} INFO - [2021-02-10 08:23:44,767] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:23:44,948] {logging_mixin.py:103} INFO - [2021-02-10 08:23:44,948] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:44,949] {logging_mixin.py:103} INFO - [2021-02-10 08:23:44,949] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:23:44,950] {logging_mixin.py:103} INFO - [2021-02-10 08:23:44,950] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:23:45,206] {logging_mixin.py:103} INFO - [2021-02-10 08:23:45,206] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:45,208] {logging_mixin.py:103} INFO - [2021-02-10 08:23:45,208] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:23:45,370] {logging_mixin.py:103} INFO - [2021-02-10 08:23:45,370] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:45,372] {logging_mixin.py:103} INFO - [2021-02-10 08:23:45,371] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:23:45,560] {logging_mixin.py:103} INFO - [2021-02-10 08:23:45,560] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:45,561] {logging_mixin.py:103} INFO - [2021-02-10 08:23:45,560] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:23:45,589] {logging_mixin.py:103} INFO - [2021-02-10 08:23:45,589] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:23:45,590] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:23:45,595] {logging_mixin.py:103} INFO - [2021-02-10 08:23:45,595] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:23:45,862] {logging_mixin.py:103} INFO - [2021-02-10 08:23:45,862] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:45,863] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:23:45,863] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:23:45,864] {logging_mixin.py:103} INFO - [2021-02-10 08:23:45,864] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:23:46,013] {logging_mixin.py:103} INFO - [2021-02-10 08:23:46,013] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:46,013] {logging_mixin.py:103} INFO - [2021-02-10 08:23:46,013] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:23:46,016] {logging_mixin.py:103} INFO - [2021-02-10 08:23:46,016] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:23:46,259] {logging_mixin.py:103} INFO - [2021-02-10 08:23:46,259] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:46,260] {logging_mixin.py:103} INFO - [2021-02-10 08:23:46,260] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:23:46,419] {logging_mixin.py:103} INFO - [2021-02-10 08:23:46,418] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:46,420] {logging_mixin.py:103} INFO - [2021-02-10 08:23:46,420] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:23:46,580] {logging_mixin.py:103} INFO - [2021-02-10 08:23:46,580] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:46,581] {logging_mixin.py:103} INFO - [2021-02-10 08:23:46,581] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:23:46,776] {logging_mixin.py:103} INFO - [2021-02-10 08:23:46,776] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:46,776] {logging_mixin.py:103} INFO - [2021-02-10 08:23:46,776] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:23:46,778] {logging_mixin.py:103} INFO - [2021-02-10 08:23:46,778] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:23:46,932] {logging_mixin.py:103} INFO - [2021-02-10 08:23:46,931] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:46,935] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:23:46,937] {logging_mixin.py:103} INFO - [2021-02-10 08:23:46,937] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:23:47,117] {logging_mixin.py:103} INFO - [2021-02-10 08:23:47,117] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:47,118] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:23:47,118] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:23:47,119] {logging_mixin.py:103} INFO - [2021-02-10 08:23:47,118] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:23:47,327] {logging_mixin.py:103} INFO - [2021-02-10 08:23:47,326] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:47,327] {logging_mixin.py:103} INFO - [2021-02-10 08:23:47,327] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:23:47,328] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:23:47,330] {logging_mixin.py:103} INFO - [2021-02-10 08:23:47,330] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:23:47,506] {logging_mixin.py:103} INFO - [2021-02-10 08:23:47,506] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:47,507] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:23:47,507] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:23:47,508] {logging_mixin.py:103} INFO - [2021-02-10 08:23:47,508] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:23:47,658] {logging_mixin.py:103} INFO - [2021-02-10 08:23:47,658] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:47,659] {logging_mixin.py:103} INFO - [2021-02-10 08:23:47,658] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:23:47,659] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:23:47,662] {logging_mixin.py:103} INFO - [2021-02-10 08:23:47,662] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:23:48,086] {logging_mixin.py:103} INFO - [2021-02-10 08:23:48,086] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:48,086] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:23:48,087] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:23:48,087] {logging_mixin.py:103} INFO - [2021-02-10 08:23:48,087] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:23:48,338] {logging_mixin.py:103} INFO - [2021-02-10 08:23:48,338] {cursor.py:560} INFO - query execution done
[2021-02-10 08:23:48,339] {logging_mixin.py:103} INFO - [2021-02-10 08:23:48,339] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:23:56,775] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:24:28,586] {scheduler_job.py:181} INFO - Started process (PID=59842) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:24:28,587] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:24:28,587] {logging_mixin.py:103} INFO - [2021-02-10 08:24:28,587] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:24:30,488] {logging_mixin.py:103} INFO - [2021-02-10 08:24:30,488] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:24:30,793] {logging_mixin.py:103} INFO - [2021-02-10 08:24:30,793] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:24:31,157] {logging_mixin.py:103} INFO - [2021-02-10 08:24:31,157] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:24:31,157] {logging_mixin.py:103} INFO - [2021-02-10 08:24:31,157] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:24:31,157] {logging_mixin.py:103} INFO - [2021-02-10 08:24:31,157] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:24:32,424] {logging_mixin.py:103} INFO - [2021-02-10 08:24:32,424] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:24:32,568] {logging_mixin.py:103} INFO - [2021-02-10 08:24:32,567] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:32,569] {logging_mixin.py:103} INFO - [2021-02-10 08:24:32,569] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:24:32,741] {logging_mixin.py:103} INFO - [2021-02-10 08:24:32,740] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:32,741] {logging_mixin.py:103} INFO - [2021-02-10 08:24:32,741] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:24:33,033] {logging_mixin.py:103} INFO - [2021-02-10 08:24:33,033] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:33,036] {logging_mixin.py:103} INFO - [2021-02-10 08:24:33,036] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:24:33,230] {logging_mixin.py:103} INFO - [2021-02-10 08:24:33,230] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:33,475] {logging_mixin.py:103} INFO - [2021-02-10 08:24:33,475] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:24:33,631] {logging_mixin.py:103} INFO - [2021-02-10 08:24:33,631] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:33,675] {logging_mixin.py:103} INFO - [2021-02-10 08:24:33,675] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:24:33,675] {logging_mixin.py:103} INFO - [2021-02-10 08:24:33,675] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:24:35,013] {logging_mixin.py:103} INFO - [2021-02-10 08:24:35,013] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:35,015] {logging_mixin.py:103} INFO - [2021-02-10 08:24:35,015] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:24:35,023] {logging_mixin.py:103} INFO - [2021-02-10 08:24:35,023] {data_context.py:1281} INFO - Setting run_name to: 20210210T072435.023181Z
[2021-02-10 08:24:35,024] {logging_mixin.py:103} INFO - [2021-02-10 08:24:35,024] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:24:35,032] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:24:35,034] {logging_mixin.py:103} INFO - [2021-02-10 08:24:35,034] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:24:35,210] {logging_mixin.py:103} INFO - [2021-02-10 08:24:35,210] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:35,212] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:24:35,212] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:24:35,213] {logging_mixin.py:103} INFO - [2021-02-10 08:24:35,213] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:24:35,406] {logging_mixin.py:103} INFO - [2021-02-10 08:24:35,406] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:35,406] {logging_mixin.py:103} INFO - [2021-02-10 08:24:35,406] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:24:35,409] {logging_mixin.py:103} INFO - [2021-02-10 08:24:35,408] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:24:35,588] {logging_mixin.py:103} INFO - [2021-02-10 08:24:35,587] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:35,591] {logging_mixin.py:103} INFO - [2021-02-10 08:24:35,591] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:24:35,765] {logging_mixin.py:103} INFO - [2021-02-10 08:24:35,765] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:35,769] {logging_mixin.py:103} INFO - [2021-02-10 08:24:35,768] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:24:35,938] {logging_mixin.py:103} INFO - [2021-02-10 08:24:35,937] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:35,938] {logging_mixin.py:103} INFO - [2021-02-10 08:24:35,938] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:24:35,963] {logging_mixin.py:103} INFO - [2021-02-10 08:24:35,962] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:24:35,964] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:24:35,966] {logging_mixin.py:103} INFO - [2021-02-10 08:24:35,966] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:24:36,124] {logging_mixin.py:103} INFO - [2021-02-10 08:24:36,123] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:36,124] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:24:36,125] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:24:36,126] {logging_mixin.py:103} INFO - [2021-02-10 08:24:36,126] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:24:36,293] {logging_mixin.py:103} INFO - [2021-02-10 08:24:36,292] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:36,293] {logging_mixin.py:103} INFO - [2021-02-10 08:24:36,293] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:24:36,294] {logging_mixin.py:103} INFO - [2021-02-10 08:24:36,294] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:24:36,476] {logging_mixin.py:103} INFO - [2021-02-10 08:24:36,476] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:36,478] {logging_mixin.py:103} INFO - [2021-02-10 08:24:36,478] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:24:36,638] {logging_mixin.py:103} INFO - [2021-02-10 08:24:36,637] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:36,641] {logging_mixin.py:103} INFO - [2021-02-10 08:24:36,641] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:24:36,794] {logging_mixin.py:103} INFO - [2021-02-10 08:24:36,794] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:36,797] {logging_mixin.py:103} INFO - [2021-02-10 08:24:36,797] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:24:36,962] {logging_mixin.py:103} INFO - [2021-02-10 08:24:36,962] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:36,963] {logging_mixin.py:103} INFO - [2021-02-10 08:24:36,963] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:24:36,967] {logging_mixin.py:103} INFO - [2021-02-10 08:24:36,967] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:24:37,128] {logging_mixin.py:103} INFO - [2021-02-10 08:24:37,128] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:37,133] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:24:37,136] {logging_mixin.py:103} INFO - [2021-02-10 08:24:37,136] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:24:37,521] {logging_mixin.py:103} INFO - [2021-02-10 08:24:37,521] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:37,522] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:24:37,523] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:24:37,524] {logging_mixin.py:103} INFO - [2021-02-10 08:24:37,524] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:24:37,683] {logging_mixin.py:103} INFO - [2021-02-10 08:24:37,683] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:37,683] {logging_mixin.py:103} INFO - [2021-02-10 08:24:37,683] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:24:37,684] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:24:37,687] {logging_mixin.py:103} INFO - [2021-02-10 08:24:37,687] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:24:37,832] {logging_mixin.py:103} INFO - [2021-02-10 08:24:37,831] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:37,833] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:24:37,833] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:24:37,835] {logging_mixin.py:103} INFO - [2021-02-10 08:24:37,835] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:24:38,019] {logging_mixin.py:103} INFO - [2021-02-10 08:24:38,019] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:38,019] {logging_mixin.py:103} INFO - [2021-02-10 08:24:38,019] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:24:38,020] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:24:38,024] {logging_mixin.py:103} INFO - [2021-02-10 08:24:38,023] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:24:38,248] {logging_mixin.py:103} INFO - [2021-02-10 08:24:38,248] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:38,249] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:24:38,249] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:24:38,250] {logging_mixin.py:103} INFO - [2021-02-10 08:24:38,250] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:24:38,408] {logging_mixin.py:103} INFO - [2021-02-10 08:24:38,408] {cursor.py:560} INFO - query execution done
[2021-02-10 08:24:38,409] {logging_mixin.py:103} INFO - [2021-02-10 08:24:38,409] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:24:43,317] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:25:20,916] {scheduler_job.py:181} INFO - Started process (PID=59917) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:25:20,917] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:25:20,917] {logging_mixin.py:103} INFO - [2021-02-10 08:25:20,917] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:25:23,116] {logging_mixin.py:103} INFO - [2021-02-10 08:25:23,116] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:25:23,529] {logging_mixin.py:103} INFO - [2021-02-10 08:25:23,529] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:25:24,169] {logging_mixin.py:103} INFO - [2021-02-10 08:25:24,169] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:25:24,169] {logging_mixin.py:103} INFO - [2021-02-10 08:25:24,169] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:25:24,169] {logging_mixin.py:103} INFO - [2021-02-10 08:25:24,169] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:25:25,573] {logging_mixin.py:103} INFO - [2021-02-10 08:25:25,572] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:25:27,717] {logging_mixin.py:103} INFO - [2021-02-10 08:25:27,717] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:27,718] {logging_mixin.py:103} INFO - [2021-02-10 08:25:27,718] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:25:28,629] {logging_mixin.py:103} INFO - [2021-02-10 08:25:28,629] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:28,629] {logging_mixin.py:103} INFO - [2021-02-10 08:25:28,629] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:25:28,904] {logging_mixin.py:103} INFO - [2021-02-10 08:25:28,904] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:28,907] {logging_mixin.py:103} INFO - [2021-02-10 08:25:28,907] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:25:29,488] {logging_mixin.py:103} INFO - [2021-02-10 08:25:29,488] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:29,727] {logging_mixin.py:103} INFO - [2021-02-10 08:25:29,727] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:25:30,187] {logging_mixin.py:103} INFO - [2021-02-10 08:25:30,187] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:30,234] {logging_mixin.py:103} INFO - [2021-02-10 08:25:30,234] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:25:30,235] {logging_mixin.py:103} INFO - [2021-02-10 08:25:30,235] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:25:31,711] {logging_mixin.py:103} INFO - [2021-02-10 08:25:31,711] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:31,713] {logging_mixin.py:103} INFO - [2021-02-10 08:25:31,713] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:25:31,726] {logging_mixin.py:103} INFO - [2021-02-10 08:25:31,726] {data_context.py:1281} INFO - Setting run_name to: 20210210T072531.726014Z
[2021-02-10 08:25:31,727] {logging_mixin.py:103} INFO - [2021-02-10 08:25:31,727] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:25:31,737] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:25:31,745] {logging_mixin.py:103} INFO - [2021-02-10 08:25:31,745] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:25:32,034] {logging_mixin.py:103} INFO - [2021-02-10 08:25:32,033] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:32,035] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:25:32,035] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:25:32,037] {logging_mixin.py:103} INFO - [2021-02-10 08:25:32,037] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:25:32,632] {logging_mixin.py:103} INFO - [2021-02-10 08:25:32,632] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:32,632] {logging_mixin.py:103} INFO - [2021-02-10 08:25:32,632] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:25:32,633] {logging_mixin.py:103} INFO - [2021-02-10 08:25:32,633] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:25:32,785] {logging_mixin.py:103} INFO - [2021-02-10 08:25:32,785] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:32,787] {logging_mixin.py:103} INFO - [2021-02-10 08:25:32,787] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:25:32,956] {logging_mixin.py:103} INFO - [2021-02-10 08:25:32,956] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:32,958] {logging_mixin.py:103} INFO - [2021-02-10 08:25:32,958] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:25:33,127] {logging_mixin.py:103} INFO - [2021-02-10 08:25:33,127] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:33,127] {logging_mixin.py:103} INFO - [2021-02-10 08:25:33,127] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:25:33,140] {logging_mixin.py:103} INFO - [2021-02-10 08:25:33,140] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:25:33,141] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:25:33,143] {logging_mixin.py:103} INFO - [2021-02-10 08:25:33,143] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:25:33,510] {logging_mixin.py:103} INFO - [2021-02-10 08:25:33,510] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:33,511] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:25:33,511] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:25:33,512] {logging_mixin.py:103} INFO - [2021-02-10 08:25:33,512] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:25:33,681] {logging_mixin.py:103} INFO - [2021-02-10 08:25:33,681] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:33,681] {logging_mixin.py:103} INFO - [2021-02-10 08:25:33,681] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:25:33,683] {logging_mixin.py:103} INFO - [2021-02-10 08:25:33,682] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:25:33,853] {logging_mixin.py:103} INFO - [2021-02-10 08:25:33,853] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:33,854] {logging_mixin.py:103} INFO - [2021-02-10 08:25:33,854] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:25:34,173] {logging_mixin.py:103} INFO - [2021-02-10 08:25:34,173] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:34,175] {logging_mixin.py:103} INFO - [2021-02-10 08:25:34,174] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:25:34,430] {logging_mixin.py:103} INFO - [2021-02-10 08:25:34,430] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:34,431] {logging_mixin.py:103} INFO - [2021-02-10 08:25:34,431] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:25:35,705] {logging_mixin.py:103} INFO - [2021-02-10 08:25:35,704] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:35,705] {logging_mixin.py:103} INFO - [2021-02-10 08:25:35,705] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:25:35,707] {logging_mixin.py:103} INFO - [2021-02-10 08:25:35,707] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:25:36,626] {logging_mixin.py:103} INFO - [2021-02-10 08:25:36,626] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:36,629] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:25:36,630] {logging_mixin.py:103} INFO - [2021-02-10 08:25:36,630] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:25:37,522] {logging_mixin.py:103} INFO - [2021-02-10 08:25:37,522] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:37,523] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:25:37,523] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:25:37,523] {logging_mixin.py:103} INFO - [2021-02-10 08:25:37,523] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:25:37,804] {logging_mixin.py:103} INFO - [2021-02-10 08:25:37,804] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:37,804] {logging_mixin.py:103} INFO - [2021-02-10 08:25:37,804] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:25:37,804] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:25:37,807] {logging_mixin.py:103} INFO - [2021-02-10 08:25:37,807] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:25:37,970] {logging_mixin.py:103} INFO - [2021-02-10 08:25:37,968] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:37,971] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:25:37,971] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:25:37,973] {logging_mixin.py:103} INFO - [2021-02-10 08:25:37,973] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:25:38,475] {logging_mixin.py:103} INFO - [2021-02-10 08:25:38,475] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:38,475] {logging_mixin.py:103} INFO - [2021-02-10 08:25:38,475] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:25:38,476] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:25:38,478] {logging_mixin.py:103} INFO - [2021-02-10 08:25:38,477] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:25:38,667] {logging_mixin.py:103} INFO - [2021-02-10 08:25:38,667] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:38,668] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:25:38,668] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:25:38,669] {logging_mixin.py:103} INFO - [2021-02-10 08:25:38,669] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:25:38,830] {logging_mixin.py:103} INFO - [2021-02-10 08:25:38,830] {cursor.py:560} INFO - query execution done
[2021-02-10 08:25:38,831] {logging_mixin.py:103} INFO - [2021-02-10 08:25:38,831] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:25:46,145] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:26:23,080] {scheduler_job.py:181} INFO - Started process (PID=60001) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:26:23,081] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:26:23,082] {logging_mixin.py:103} INFO - [2021-02-10 08:26:23,082] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:26:25,257] {logging_mixin.py:103} INFO - [2021-02-10 08:26:25,257] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:26:25,659] {logging_mixin.py:103} INFO - [2021-02-10 08:26:25,659] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:26:26,040] {logging_mixin.py:103} INFO - [2021-02-10 08:26:26,040] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:26:26,040] {logging_mixin.py:103} INFO - [2021-02-10 08:26:26,040] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:26:26,040] {logging_mixin.py:103} INFO - [2021-02-10 08:26:26,040] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:26:27,633] {logging_mixin.py:103} INFO - [2021-02-10 08:26:27,632] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:26:27,769] {logging_mixin.py:103} INFO - [2021-02-10 08:26:27,769] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:27,774] {logging_mixin.py:103} INFO - [2021-02-10 08:26:27,773] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:26:27,933] {logging_mixin.py:103} INFO - [2021-02-10 08:26:27,933] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:27,934] {logging_mixin.py:103} INFO - [2021-02-10 08:26:27,934] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:26:28,072] {logging_mixin.py:103} INFO - [2021-02-10 08:26:28,071] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:28,075] {logging_mixin.py:103} INFO - [2021-02-10 08:26:28,075] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:26:28,226] {logging_mixin.py:103} INFO - [2021-02-10 08:26:28,226] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:28,567] {logging_mixin.py:103} INFO - [2021-02-10 08:26:28,567] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:26:28,739] {logging_mixin.py:103} INFO - [2021-02-10 08:26:28,739] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:28,847] {logging_mixin.py:103} INFO - [2021-02-10 08:26:28,846] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:26:28,847] {logging_mixin.py:103} INFO - [2021-02-10 08:26:28,847] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:26:30,698] {logging_mixin.py:103} INFO - [2021-02-10 08:26:30,698] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:30,701] {logging_mixin.py:103} INFO - [2021-02-10 08:26:30,701] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:26:30,712] {logging_mixin.py:103} INFO - [2021-02-10 08:26:30,712] {data_context.py:1281} INFO - Setting run_name to: 20210210T072630.712111Z
[2021-02-10 08:26:30,713] {logging_mixin.py:103} INFO - [2021-02-10 08:26:30,713] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:26:30,722] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:26:30,724] {logging_mixin.py:103} INFO - [2021-02-10 08:26:30,724] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:26:30,888] {logging_mixin.py:103} INFO - [2021-02-10 08:26:30,888] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:30,889] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:26:30,889] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:26:30,891] {logging_mixin.py:103} INFO - [2021-02-10 08:26:30,890] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:26:31,316] {logging_mixin.py:103} INFO - [2021-02-10 08:26:31,316] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:31,317] {logging_mixin.py:103} INFO - [2021-02-10 08:26:31,317] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:26:31,319] {logging_mixin.py:103} INFO - [2021-02-10 08:26:31,319] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:26:32,034] {logging_mixin.py:103} INFO - [2021-02-10 08:26:32,034] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:32,037] {logging_mixin.py:103} INFO - [2021-02-10 08:26:32,036] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:26:32,232] {logging_mixin.py:103} INFO - [2021-02-10 08:26:32,231] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:32,234] {logging_mixin.py:103} INFO - [2021-02-10 08:26:32,234] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:26:32,404] {logging_mixin.py:103} INFO - [2021-02-10 08:26:32,404] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:32,405] {logging_mixin.py:103} INFO - [2021-02-10 08:26:32,404] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:26:32,425] {logging_mixin.py:103} INFO - [2021-02-10 08:26:32,424] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:26:32,425] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:26:32,427] {logging_mixin.py:103} INFO - [2021-02-10 08:26:32,427] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:26:32,584] {logging_mixin.py:103} INFO - [2021-02-10 08:26:32,584] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:32,585] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:26:32,585] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:26:32,587] {logging_mixin.py:103} INFO - [2021-02-10 08:26:32,587] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:26:33,154] {logging_mixin.py:103} INFO - [2021-02-10 08:26:33,154] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:33,155] {logging_mixin.py:103} INFO - [2021-02-10 08:26:33,154] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:26:33,157] {logging_mixin.py:103} INFO - [2021-02-10 08:26:33,157] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:26:33,327] {logging_mixin.py:103} INFO - [2021-02-10 08:26:33,327] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:33,329] {logging_mixin.py:103} INFO - [2021-02-10 08:26:33,329] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:26:33,775] {logging_mixin.py:103} INFO - [2021-02-10 08:26:33,775] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:33,778] {logging_mixin.py:103} INFO - [2021-02-10 08:26:33,778] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:26:33,944] {logging_mixin.py:103} INFO - [2021-02-10 08:26:33,944] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:33,947] {logging_mixin.py:103} INFO - [2021-02-10 08:26:33,947] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:26:34,155] {logging_mixin.py:103} INFO - [2021-02-10 08:26:34,155] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:34,156] {logging_mixin.py:103} INFO - [2021-02-10 08:26:34,156] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:26:34,160] {logging_mixin.py:103} INFO - [2021-02-10 08:26:34,160] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:26:34,324] {logging_mixin.py:103} INFO - [2021-02-10 08:26:34,324] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:34,329] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:26:34,332] {logging_mixin.py:103} INFO - [2021-02-10 08:26:34,331] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:26:34,495] {logging_mixin.py:103} INFO - [2021-02-10 08:26:34,494] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:34,496] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:26:34,496] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:26:34,497] {logging_mixin.py:103} INFO - [2021-02-10 08:26:34,497] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:26:35,305] {logging_mixin.py:103} INFO - [2021-02-10 08:26:35,305] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:35,306] {logging_mixin.py:103} INFO - [2021-02-10 08:26:35,305] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:26:35,307] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:26:35,310] {logging_mixin.py:103} INFO - [2021-02-10 08:26:35,309] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:26:35,582] {logging_mixin.py:103} INFO - [2021-02-10 08:26:35,582] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:35,583] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:26:35,584] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:26:35,585] {logging_mixin.py:103} INFO - [2021-02-10 08:26:35,585] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:26:35,770] {logging_mixin.py:103} INFO - [2021-02-10 08:26:35,770] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:35,771] {logging_mixin.py:103} INFO - [2021-02-10 08:26:35,771] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:26:35,772] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:26:35,775] {logging_mixin.py:103} INFO - [2021-02-10 08:26:35,775] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:26:35,959] {logging_mixin.py:103} INFO - [2021-02-10 08:26:35,959] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:35,960] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:26:35,960] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:26:35,962] {logging_mixin.py:103} INFO - [2021-02-10 08:26:35,961] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:26:36,154] {logging_mixin.py:103} INFO - [2021-02-10 08:26:36,154] {cursor.py:560} INFO - query execution done
[2021-02-10 08:26:36,154] {logging_mixin.py:103} INFO - [2021-02-10 08:26:36,154] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:26:40,948] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:27:13,898] {scheduler_job.py:181} INFO - Started process (PID=60065) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:27:13,899] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:27:13,899] {logging_mixin.py:103} INFO - [2021-02-10 08:27:13,899] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:27:15,981] {logging_mixin.py:103} INFO - [2021-02-10 08:27:15,980] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:27:16,449] {logging_mixin.py:103} INFO - [2021-02-10 08:27:16,449] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:27:16,784] {logging_mixin.py:103} INFO - [2021-02-10 08:27:16,784] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:27:16,785] {logging_mixin.py:103} INFO - [2021-02-10 08:27:16,785] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:27:16,785] {logging_mixin.py:103} INFO - [2021-02-10 08:27:16,785] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:27:18,621] {logging_mixin.py:103} INFO - [2021-02-10 08:27:18,621] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:27:18,768] {logging_mixin.py:103} INFO - [2021-02-10 08:27:18,768] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:18,770] {logging_mixin.py:103} INFO - [2021-02-10 08:27:18,770] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:27:18,920] {logging_mixin.py:103} INFO - [2021-02-10 08:27:18,920] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:18,921] {logging_mixin.py:103} INFO - [2021-02-10 08:27:18,921] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:27:19,060] {logging_mixin.py:103} INFO - [2021-02-10 08:27:19,060] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:19,062] {logging_mixin.py:103} INFO - [2021-02-10 08:27:19,062] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:27:19,273] {logging_mixin.py:103} INFO - [2021-02-10 08:27:19,273] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:19,628] {logging_mixin.py:103} INFO - [2021-02-10 08:27:19,628] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:27:19,817] {logging_mixin.py:103} INFO - [2021-02-10 08:27:19,817] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:19,895] {logging_mixin.py:103} INFO - [2021-02-10 08:27:19,895] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:27:19,896] {logging_mixin.py:103} INFO - [2021-02-10 08:27:19,896] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:27:21,702] {logging_mixin.py:103} INFO - [2021-02-10 08:27:21,702] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:21,706] {logging_mixin.py:103} INFO - [2021-02-10 08:27:21,706] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:27:21,727] {logging_mixin.py:103} INFO - [2021-02-10 08:27:21,727] {data_context.py:1281} INFO - Setting run_name to: 20210210T072721.727344Z
[2021-02-10 08:27:21,731] {logging_mixin.py:103} INFO - [2021-02-10 08:27:21,730] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:27:21,761] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:27:21,770] {logging_mixin.py:103} INFO - [2021-02-10 08:27:21,769] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:27:21,972] {logging_mixin.py:103} INFO - [2021-02-10 08:27:21,972] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:21,973] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:27:21,973] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:27:21,974] {logging_mixin.py:103} INFO - [2021-02-10 08:27:21,974] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:27:22,288] {logging_mixin.py:103} INFO - [2021-02-10 08:27:22,288] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:22,289] {logging_mixin.py:103} INFO - [2021-02-10 08:27:22,289] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:27:22,291] {logging_mixin.py:103} INFO - [2021-02-10 08:27:22,291] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:27:23,229] {logging_mixin.py:103} INFO - [2021-02-10 08:27:23,229] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:23,231] {logging_mixin.py:103} INFO - [2021-02-10 08:27:23,231] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:27:23,754] {logging_mixin.py:103} INFO - [2021-02-10 08:27:23,754] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:23,756] {logging_mixin.py:103} INFO - [2021-02-10 08:27:23,756] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:27:24,765] {logging_mixin.py:103} INFO - [2021-02-10 08:27:24,765] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:24,766] {logging_mixin.py:103} INFO - [2021-02-10 08:27:24,765] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:27:24,783] {logging_mixin.py:103} INFO - [2021-02-10 08:27:24,783] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:27:24,784] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:27:24,785] {logging_mixin.py:103} INFO - [2021-02-10 08:27:24,785] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:27:24,992] {logging_mixin.py:103} INFO - [2021-02-10 08:27:24,992] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:24,993] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:27:24,993] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:27:24,995] {logging_mixin.py:103} INFO - [2021-02-10 08:27:24,995] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:27:25,208] {logging_mixin.py:103} INFO - [2021-02-10 08:27:25,208] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:25,209] {logging_mixin.py:103} INFO - [2021-02-10 08:27:25,209] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:27:25,211] {logging_mixin.py:103} INFO - [2021-02-10 08:27:25,211] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:27:25,426] {logging_mixin.py:103} INFO - [2021-02-10 08:27:25,426] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:25,428] {logging_mixin.py:103} INFO - [2021-02-10 08:27:25,428] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:27:25,586] {logging_mixin.py:103} INFO - [2021-02-10 08:27:25,586] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:25,588] {logging_mixin.py:103} INFO - [2021-02-10 08:27:25,588] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:27:25,994] {logging_mixin.py:103} INFO - [2021-02-10 08:27:25,993] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:25,996] {logging_mixin.py:103} INFO - [2021-02-10 08:27:25,996] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:27:26,280] {logging_mixin.py:103} INFO - [2021-02-10 08:27:26,280] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:26,280] {logging_mixin.py:103} INFO - [2021-02-10 08:27:26,280] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:27:26,284] {logging_mixin.py:103} INFO - [2021-02-10 08:27:26,284] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:27:26,461] {logging_mixin.py:103} INFO - [2021-02-10 08:27:26,461] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:26,466] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:27:26,468] {logging_mixin.py:103} INFO - [2021-02-10 08:27:26,468] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:27:26,915] {logging_mixin.py:103} INFO - [2021-02-10 08:27:26,915] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:26,916] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:27:26,916] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:27:26,918] {logging_mixin.py:103} INFO - [2021-02-10 08:27:26,917] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:27:27,164] {logging_mixin.py:103} INFO - [2021-02-10 08:27:27,164] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:27,165] {logging_mixin.py:103} INFO - [2021-02-10 08:27:27,165] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:27:27,166] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:27:27,169] {logging_mixin.py:103} INFO - [2021-02-10 08:27:27,169] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:27:27,356] {logging_mixin.py:103} INFO - [2021-02-10 08:27:27,356] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:27,358] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:27:27,358] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:27:27,360] {logging_mixin.py:103} INFO - [2021-02-10 08:27:27,360] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:27:27,550] {logging_mixin.py:103} INFO - [2021-02-10 08:27:27,550] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:27,551] {logging_mixin.py:103} INFO - [2021-02-10 08:27:27,551] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:27:27,553] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:27:27,556] {logging_mixin.py:103} INFO - [2021-02-10 08:27:27,556] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:27:27,747] {logging_mixin.py:103} INFO - [2021-02-10 08:27:27,746] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:27,748] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:27:27,748] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:27:27,749] {logging_mixin.py:103} INFO - [2021-02-10 08:27:27,749] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:27:27,915] {logging_mixin.py:103} INFO - [2021-02-10 08:27:27,915] {cursor.py:560} INFO - query execution done
[2021-02-10 08:27:27,916] {logging_mixin.py:103} INFO - [2021-02-10 08:27:27,916] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:27:32,673] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:28:01,852] {scheduler_job.py:181} INFO - Started process (PID=60125) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:28:01,853] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:28:01,853] {logging_mixin.py:103} INFO - [2021-02-10 08:28:01,853] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:28:03,946] {logging_mixin.py:103} INFO - [2021-02-10 08:28:03,946] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:28:04,485] {logging_mixin.py:103} INFO - [2021-02-10 08:28:04,485] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:28:04,982] {logging_mixin.py:103} INFO - [2021-02-10 08:28:04,982] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:28:04,983] {logging_mixin.py:103} INFO - [2021-02-10 08:28:04,983] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:28:04,983] {logging_mixin.py:103} INFO - [2021-02-10 08:28:04,983] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:28:06,239] {logging_mixin.py:103} INFO - [2021-02-10 08:28:06,239] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:28:06,460] {logging_mixin.py:103} INFO - [2021-02-10 08:28:06,460] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:06,464] {logging_mixin.py:103} INFO - [2021-02-10 08:28:06,464] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:28:06,612] {logging_mixin.py:103} INFO - [2021-02-10 08:28:06,612] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:06,613] {logging_mixin.py:103} INFO - [2021-02-10 08:28:06,613] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:28:06,740] {logging_mixin.py:103} INFO - [2021-02-10 08:28:06,740] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:06,743] {logging_mixin.py:103} INFO - [2021-02-10 08:28:06,743] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:28:06,892] {logging_mixin.py:103} INFO - [2021-02-10 08:28:06,892] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:07,126] {logging_mixin.py:103} INFO - [2021-02-10 08:28:07,126] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:28:07,326] {logging_mixin.py:103} INFO - [2021-02-10 08:28:07,326] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:07,372] {logging_mixin.py:103} INFO - [2021-02-10 08:28:07,372] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:28:07,372] {logging_mixin.py:103} INFO - [2021-02-10 08:28:07,372] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:28:10,233] {logging_mixin.py:103} INFO - [2021-02-10 08:28:10,233] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:10,237] {logging_mixin.py:103} INFO - [2021-02-10 08:28:10,237] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:28:10,247] {logging_mixin.py:103} INFO - [2021-02-10 08:28:10,247] {data_context.py:1281} INFO - Setting run_name to: 20210210T072810.247472Z
[2021-02-10 08:28:10,248] {logging_mixin.py:103} INFO - [2021-02-10 08:28:10,248] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:28:10,258] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:28:10,260] {logging_mixin.py:103} INFO - [2021-02-10 08:28:10,260] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:28:10,497] {logging_mixin.py:103} INFO - [2021-02-10 08:28:10,497] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:10,498] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:28:10,498] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:28:10,500] {logging_mixin.py:103} INFO - [2021-02-10 08:28:10,500] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:28:10,668] {logging_mixin.py:103} INFO - [2021-02-10 08:28:10,668] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:10,669] {logging_mixin.py:103} INFO - [2021-02-10 08:28:10,669] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:28:10,671] {logging_mixin.py:103} INFO - [2021-02-10 08:28:10,671] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:28:10,880] {logging_mixin.py:103} INFO - [2021-02-10 08:28:10,880] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:10,884] {logging_mixin.py:103} INFO - [2021-02-10 08:28:10,883] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:28:11,106] {logging_mixin.py:103} INFO - [2021-02-10 08:28:11,106] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:11,108] {logging_mixin.py:103} INFO - [2021-02-10 08:28:11,108] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:28:11,285] {logging_mixin.py:103} INFO - [2021-02-10 08:28:11,284] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:11,285] {logging_mixin.py:103} INFO - [2021-02-10 08:28:11,285] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:28:11,314] {logging_mixin.py:103} INFO - [2021-02-10 08:28:11,313] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:28:11,315] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:28:11,318] {logging_mixin.py:103} INFO - [2021-02-10 08:28:11,317] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:28:11,581] {logging_mixin.py:103} INFO - [2021-02-10 08:28:11,581] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:11,582] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:28:11,582] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:28:11,583] {logging_mixin.py:103} INFO - [2021-02-10 08:28:11,583] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:28:11,737] {logging_mixin.py:103} INFO - [2021-02-10 08:28:11,737] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:11,738] {logging_mixin.py:103} INFO - [2021-02-10 08:28:11,738] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:28:11,741] {logging_mixin.py:103} INFO - [2021-02-10 08:28:11,740] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:28:11,986] {logging_mixin.py:103} INFO - [2021-02-10 08:28:11,986] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:11,988] {logging_mixin.py:103} INFO - [2021-02-10 08:28:11,988] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:28:12,188] {logging_mixin.py:103} INFO - [2021-02-10 08:28:12,188] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:12,191] {logging_mixin.py:103} INFO - [2021-02-10 08:28:12,191] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:28:12,997] {logging_mixin.py:103} INFO - [2021-02-10 08:28:12,996] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:12,999] {logging_mixin.py:103} INFO - [2021-02-10 08:28:12,999] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:28:13,178] {logging_mixin.py:103} INFO - [2021-02-10 08:28:13,178] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:13,179] {logging_mixin.py:103} INFO - [2021-02-10 08:28:13,178] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:28:13,183] {logging_mixin.py:103} INFO - [2021-02-10 08:28:13,183] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:28:13,337] {logging_mixin.py:103} INFO - [2021-02-10 08:28:13,337] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:13,341] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:28:13,344] {logging_mixin.py:103} INFO - [2021-02-10 08:28:13,344] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:28:13,589] {logging_mixin.py:103} INFO - [2021-02-10 08:28:13,589] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:13,590] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:28:13,590] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:28:13,591] {logging_mixin.py:103} INFO - [2021-02-10 08:28:13,591] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:28:13,841] {logging_mixin.py:103} INFO - [2021-02-10 08:28:13,841] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:13,842] {logging_mixin.py:103} INFO - [2021-02-10 08:28:13,842] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:28:13,843] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:28:13,852] {logging_mixin.py:103} INFO - [2021-02-10 08:28:13,851] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:28:14,028] {logging_mixin.py:103} INFO - [2021-02-10 08:28:14,027] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:14,029] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:28:14,029] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:28:14,032] {logging_mixin.py:103} INFO - [2021-02-10 08:28:14,030] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:28:14,217] {logging_mixin.py:103} INFO - [2021-02-10 08:28:14,217] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:14,218] {logging_mixin.py:103} INFO - [2021-02-10 08:28:14,218] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:28:14,219] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:28:14,222] {logging_mixin.py:103} INFO - [2021-02-10 08:28:14,222] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:28:14,511] {logging_mixin.py:103} INFO - [2021-02-10 08:28:14,511] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:14,513] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:28:14,513] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:28:14,515] {logging_mixin.py:103} INFO - [2021-02-10 08:28:14,515] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:28:14,701] {logging_mixin.py:103} INFO - [2021-02-10 08:28:14,700] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:14,701] {logging_mixin.py:103} INFO - [2021-02-10 08:28:14,701] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:28:20,365] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:28:51,211] {scheduler_job.py:181} INFO - Started process (PID=60185) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:28:51,211] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:28:51,212] {logging_mixin.py:103} INFO - [2021-02-10 08:28:51,212] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:28:53,015] {logging_mixin.py:103} INFO - [2021-02-10 08:28:53,015] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:28:53,296] {logging_mixin.py:103} INFO - [2021-02-10 08:28:53,296] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:28:53,630] {logging_mixin.py:103} INFO - [2021-02-10 08:28:53,630] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:28:53,630] {logging_mixin.py:103} INFO - [2021-02-10 08:28:53,630] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:28:53,630] {logging_mixin.py:103} INFO - [2021-02-10 08:28:53,630] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:28:54,525] {logging_mixin.py:103} INFO - [2021-02-10 08:28:54,524] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:28:54,657] {logging_mixin.py:103} INFO - [2021-02-10 08:28:54,657] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:54,659] {logging_mixin.py:103} INFO - [2021-02-10 08:28:54,659] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:28:54,785] {logging_mixin.py:103} INFO - [2021-02-10 08:28:54,785] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:54,786] {logging_mixin.py:103} INFO - [2021-02-10 08:28:54,786] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:28:54,964] {logging_mixin.py:103} INFO - [2021-02-10 08:28:54,964] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:54,967] {logging_mixin.py:103} INFO - [2021-02-10 08:28:54,967] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:28:55,096] {logging_mixin.py:103} INFO - [2021-02-10 08:28:55,096] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:55,354] {logging_mixin.py:103} INFO - [2021-02-10 08:28:55,354] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:28:55,671] {logging_mixin.py:103} INFO - [2021-02-10 08:28:55,670] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:55,719] {logging_mixin.py:103} INFO - [2021-02-10 08:28:55,719] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:28:55,719] {logging_mixin.py:103} INFO - [2021-02-10 08:28:55,719] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:28:58,924] {logging_mixin.py:103} INFO - [2021-02-10 08:28:58,924] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:58,927] {logging_mixin.py:103} INFO - [2021-02-10 08:28:58,927] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:28:58,937] {logging_mixin.py:103} INFO - [2021-02-10 08:28:58,937] {data_context.py:1281} INFO - Setting run_name to: 20210210T072858.937673Z
[2021-02-10 08:28:58,938] {logging_mixin.py:103} INFO - [2021-02-10 08:28:58,938] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:28:58,947] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:28:58,949] {logging_mixin.py:103} INFO - [2021-02-10 08:28:58,949] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:28:59,332] {logging_mixin.py:103} INFO - [2021-02-10 08:28:59,331] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:59,333] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:28:59,333] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:28:59,334] {logging_mixin.py:103} INFO - [2021-02-10 08:28:59,334] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:28:59,542] {logging_mixin.py:103} INFO - [2021-02-10 08:28:59,542] {cursor.py:560} INFO - query execution done
[2021-02-10 08:28:59,543] {logging_mixin.py:103} INFO - [2021-02-10 08:28:59,543] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:28:59,545] {logging_mixin.py:103} INFO - [2021-02-10 08:28:59,545] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:29:00,052] {logging_mixin.py:103} INFO - [2021-02-10 08:29:00,052] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:00,055] {logging_mixin.py:103} INFO - [2021-02-10 08:29:00,055] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:29:00,240] {logging_mixin.py:103} INFO - [2021-02-10 08:29:00,239] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:00,243] {logging_mixin.py:103} INFO - [2021-02-10 08:29:00,243] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:29:00,580] {logging_mixin.py:103} INFO - [2021-02-10 08:29:00,580] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:00,581] {logging_mixin.py:103} INFO - [2021-02-10 08:29:00,581] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:29:00,598] {logging_mixin.py:103} INFO - [2021-02-10 08:29:00,597] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:29:00,598] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:29:00,600] {logging_mixin.py:103} INFO - [2021-02-10 08:29:00,600] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:29:01,121] {logging_mixin.py:103} INFO - [2021-02-10 08:29:01,121] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:01,122] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:29:01,122] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:29:01,123] {logging_mixin.py:103} INFO - [2021-02-10 08:29:01,123] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:29:01,483] {logging_mixin.py:103} INFO - [2021-02-10 08:29:01,483] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:01,483] {logging_mixin.py:103} INFO - [2021-02-10 08:29:01,483] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:29:01,486] {logging_mixin.py:103} INFO - [2021-02-10 08:29:01,486] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:29:01,674] {logging_mixin.py:103} INFO - [2021-02-10 08:29:01,674] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:01,675] {logging_mixin.py:103} INFO - [2021-02-10 08:29:01,675] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:29:02,187] {logging_mixin.py:103} INFO - [2021-02-10 08:29:02,187] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:02,190] {logging_mixin.py:103} INFO - [2021-02-10 08:29:02,190] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:29:02,374] {logging_mixin.py:103} INFO - [2021-02-10 08:29:02,374] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:02,376] {logging_mixin.py:103} INFO - [2021-02-10 08:29:02,376] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:29:02,699] {logging_mixin.py:103} INFO - [2021-02-10 08:29:02,699] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:02,699] {logging_mixin.py:103} INFO - [2021-02-10 08:29:02,699] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:29:02,703] {logging_mixin.py:103} INFO - [2021-02-10 08:29:02,703] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:29:02,853] {logging_mixin.py:103} INFO - [2021-02-10 08:29:02,853] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:02,858] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:29:02,861] {logging_mixin.py:103} INFO - [2021-02-10 08:29:02,861] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:29:03,038] {logging_mixin.py:103} INFO - [2021-02-10 08:29:03,038] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:03,039] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:29:03,039] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:29:03,041] {logging_mixin.py:103} INFO - [2021-02-10 08:29:03,041] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:29:03,229] {logging_mixin.py:103} INFO - [2021-02-10 08:29:03,229] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:03,230] {logging_mixin.py:103} INFO - [2021-02-10 08:29:03,230] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:29:03,231] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:29:03,234] {logging_mixin.py:103} INFO - [2021-02-10 08:29:03,234] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:29:03,587] {logging_mixin.py:103} INFO - [2021-02-10 08:29:03,587] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:03,588] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:29:03,588] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:29:03,591] {logging_mixin.py:103} INFO - [2021-02-10 08:29:03,591] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:29:03,768] {logging_mixin.py:103} INFO - [2021-02-10 08:29:03,765] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:03,768] {logging_mixin.py:103} INFO - [2021-02-10 08:29:03,768] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:29:03,769] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:29:03,772] {logging_mixin.py:103} INFO - [2021-02-10 08:29:03,772] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:29:03,930] {logging_mixin.py:103} INFO - [2021-02-10 08:29:03,930] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:03,931] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:29:03,932] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:29:03,933] {logging_mixin.py:103} INFO - [2021-02-10 08:29:03,933] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:29:04,082] {logging_mixin.py:103} INFO - [2021-02-10 08:29:04,081] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:04,082] {logging_mixin.py:103} INFO - [2021-02-10 08:29:04,082] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:29:09,088] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:29:39,432] {scheduler_job.py:181} INFO - Started process (PID=60244) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:29:39,432] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:29:39,432] {logging_mixin.py:103} INFO - [2021-02-10 08:29:39,432] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:29:41,550] {logging_mixin.py:103} INFO - [2021-02-10 08:29:41,550] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:29:41,931] {logging_mixin.py:103} INFO - [2021-02-10 08:29:41,931] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:29:42,271] {logging_mixin.py:103} INFO - [2021-02-10 08:29:42,271] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:29:42,272] {logging_mixin.py:103} INFO - [2021-02-10 08:29:42,272] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:29:42,272] {logging_mixin.py:103} INFO - [2021-02-10 08:29:42,272] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:29:43,559] {logging_mixin.py:103} INFO - [2021-02-10 08:29:43,559] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:29:43,686] {logging_mixin.py:103} INFO - [2021-02-10 08:29:43,686] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:43,688] {logging_mixin.py:103} INFO - [2021-02-10 08:29:43,688] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:29:43,839] {logging_mixin.py:103} INFO - [2021-02-10 08:29:43,839] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:43,840] {logging_mixin.py:103} INFO - [2021-02-10 08:29:43,840] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:29:44,025] {logging_mixin.py:103} INFO - [2021-02-10 08:29:44,024] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:44,028] {logging_mixin.py:103} INFO - [2021-02-10 08:29:44,027] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:29:44,180] {logging_mixin.py:103} INFO - [2021-02-10 08:29:44,180] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:44,397] {logging_mixin.py:103} INFO - [2021-02-10 08:29:44,397] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:29:44,561] {logging_mixin.py:103} INFO - [2021-02-10 08:29:44,561] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:44,605] {logging_mixin.py:103} INFO - [2021-02-10 08:29:44,605] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:29:44,606] {logging_mixin.py:103} INFO - [2021-02-10 08:29:44,605] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:29:46,389] {logging_mixin.py:103} INFO - [2021-02-10 08:29:46,389] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:46,393] {logging_mixin.py:103} INFO - [2021-02-10 08:29:46,393] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:29:46,415] {logging_mixin.py:103} INFO - [2021-02-10 08:29:46,415] {data_context.py:1281} INFO - Setting run_name to: 20210210T072946.415351Z
[2021-02-10 08:29:46,416] {logging_mixin.py:103} INFO - [2021-02-10 08:29:46,416] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:29:46,431] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:29:46,433] {logging_mixin.py:103} INFO - [2021-02-10 08:29:46,433] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:29:46,739] {logging_mixin.py:103} INFO - [2021-02-10 08:29:46,739] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:46,740] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:29:46,740] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:29:46,742] {logging_mixin.py:103} INFO - [2021-02-10 08:29:46,741] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:29:46,887] {logging_mixin.py:103} INFO - [2021-02-10 08:29:46,887] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:46,888] {logging_mixin.py:103} INFO - [2021-02-10 08:29:46,887] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:29:46,890] {logging_mixin.py:103} INFO - [2021-02-10 08:29:46,890] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:29:47,026] {logging_mixin.py:103} INFO - [2021-02-10 08:29:47,026] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:47,028] {logging_mixin.py:103} INFO - [2021-02-10 08:29:47,028] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:29:47,242] {logging_mixin.py:103} INFO - [2021-02-10 08:29:47,242] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:47,244] {logging_mixin.py:103} INFO - [2021-02-10 08:29:47,244] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:29:47,446] {logging_mixin.py:103} INFO - [2021-02-10 08:29:47,445] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:47,446] {logging_mixin.py:103} INFO - [2021-02-10 08:29:47,446] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:29:47,464] {logging_mixin.py:103} INFO - [2021-02-10 08:29:47,464] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:29:47,465] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:29:47,467] {logging_mixin.py:103} INFO - [2021-02-10 08:29:47,467] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:29:47,645] {logging_mixin.py:103} INFO - [2021-02-10 08:29:47,644] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:47,646] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:29:47,646] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:29:47,647] {logging_mixin.py:103} INFO - [2021-02-10 08:29:47,647] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:29:47,914] {logging_mixin.py:103} INFO - [2021-02-10 08:29:47,914] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:47,914] {logging_mixin.py:103} INFO - [2021-02-10 08:29:47,914] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:29:47,917] {logging_mixin.py:103} INFO - [2021-02-10 08:29:47,916] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:29:48,081] {logging_mixin.py:103} INFO - [2021-02-10 08:29:48,081] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:48,083] {logging_mixin.py:103} INFO - [2021-02-10 08:29:48,083] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:29:48,229] {logging_mixin.py:103} INFO - [2021-02-10 08:29:48,228] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:48,245] {logging_mixin.py:103} INFO - [2021-02-10 08:29:48,245] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:29:48,400] {logging_mixin.py:103} INFO - [2021-02-10 08:29:48,399] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:48,403] {logging_mixin.py:103} INFO - [2021-02-10 08:29:48,403] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:29:48,600] {logging_mixin.py:103} INFO - [2021-02-10 08:29:48,600] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:48,600] {logging_mixin.py:103} INFO - [2021-02-10 08:29:48,600] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:29:48,605] {logging_mixin.py:103} INFO - [2021-02-10 08:29:48,605] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:29:48,779] {logging_mixin.py:103} INFO - [2021-02-10 08:29:48,779] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:48,784] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:29:48,787] {logging_mixin.py:103} INFO - [2021-02-10 08:29:48,787] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:29:48,962] {logging_mixin.py:103} INFO - [2021-02-10 08:29:48,962] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:48,963] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:29:48,963] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:29:48,964] {logging_mixin.py:103} INFO - [2021-02-10 08:29:48,964] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:29:49,253] {logging_mixin.py:103} INFO - [2021-02-10 08:29:49,253] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:49,253] {logging_mixin.py:103} INFO - [2021-02-10 08:29:49,253] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:29:49,254] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:29:49,257] {logging_mixin.py:103} INFO - [2021-02-10 08:29:49,257] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:29:49,453] {logging_mixin.py:103} INFO - [2021-02-10 08:29:49,453] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:49,454] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:29:49,454] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:29:49,456] {logging_mixin.py:103} INFO - [2021-02-10 08:29:49,456] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:29:49,689] {logging_mixin.py:103} INFO - [2021-02-10 08:29:49,689] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:49,690] {logging_mixin.py:103} INFO - [2021-02-10 08:29:49,690] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:29:49,691] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:29:49,694] {logging_mixin.py:103} INFO - [2021-02-10 08:29:49,694] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:29:49,884] {logging_mixin.py:103} INFO - [2021-02-10 08:29:49,884] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:49,885] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:29:49,886] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:29:49,887] {logging_mixin.py:103} INFO - [2021-02-10 08:29:49,887] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:29:50,044] {logging_mixin.py:103} INFO - [2021-02-10 08:29:50,044] {cursor.py:560} INFO - query execution done
[2021-02-10 08:29:50,045] {logging_mixin.py:103} INFO - [2021-02-10 08:29:50,045] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:29:56,536] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:30:30,763] {scheduler_job.py:181} INFO - Started process (PID=60304) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:30:30,764] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:30:30,765] {logging_mixin.py:103} INFO - [2021-02-10 08:30:30,765] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:30:32,502] {logging_mixin.py:103} INFO - [2021-02-10 08:30:32,502] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:30:32,796] {logging_mixin.py:103} INFO - [2021-02-10 08:30:32,796] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:30:33,120] {logging_mixin.py:103} INFO - [2021-02-10 08:30:33,120] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:30:33,121] {logging_mixin.py:103} INFO - [2021-02-10 08:30:33,120] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:30:33,121] {logging_mixin.py:103} INFO - [2021-02-10 08:30:33,121] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:30:34,314] {logging_mixin.py:103} INFO - [2021-02-10 08:30:34,314] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:30:35,243] {logging_mixin.py:103} INFO - [2021-02-10 08:30:35,243] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:35,244] {logging_mixin.py:103} INFO - [2021-02-10 08:30:35,244] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:30:37,084] {logging_mixin.py:103} INFO - [2021-02-10 08:30:37,084] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:37,085] {logging_mixin.py:103} INFO - [2021-02-10 08:30:37,085] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:30:38,312] {logging_mixin.py:103} INFO - [2021-02-10 08:30:38,312] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:38,317] {logging_mixin.py:103} INFO - [2021-02-10 08:30:38,316] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:30:38,643] {logging_mixin.py:103} INFO - [2021-02-10 08:30:38,643] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:38,962] {logging_mixin.py:103} INFO - [2021-02-10 08:30:38,962] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:30:39,177] {logging_mixin.py:103} INFO - [2021-02-10 08:30:39,177] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:39,232] {logging_mixin.py:103} INFO - [2021-02-10 08:30:39,232] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:30:39,233] {logging_mixin.py:103} INFO - [2021-02-10 08:30:39,233] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:30:45,994] {logging_mixin.py:103} INFO - [2021-02-10 08:30:45,994] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:46,002] {logging_mixin.py:103} INFO - [2021-02-10 08:30:46,002] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:30:46,015] {logging_mixin.py:103} INFO - [2021-02-10 08:30:46,015] {data_context.py:1281} INFO - Setting run_name to: 20210210T073046.015207Z
[2021-02-10 08:30:46,016] {logging_mixin.py:103} INFO - [2021-02-10 08:30:46,016] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:30:46,026] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:30:46,029] {logging_mixin.py:103} INFO - [2021-02-10 08:30:46,028] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:30:46,206] {logging_mixin.py:103} INFO - [2021-02-10 08:30:46,206] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:46,210] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:30:46,210] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:30:46,212] {logging_mixin.py:103} INFO - [2021-02-10 08:30:46,212] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:30:46,414] {logging_mixin.py:103} INFO - [2021-02-10 08:30:46,414] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:46,414] {logging_mixin.py:103} INFO - [2021-02-10 08:30:46,414] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:30:46,416] {logging_mixin.py:103} INFO - [2021-02-10 08:30:46,416] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:30:46,599] {logging_mixin.py:103} INFO - [2021-02-10 08:30:46,599] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:46,601] {logging_mixin.py:103} INFO - [2021-02-10 08:30:46,601] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:30:46,770] {logging_mixin.py:103} INFO - [2021-02-10 08:30:46,770] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:46,773] {logging_mixin.py:103} INFO - [2021-02-10 08:30:46,773] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:30:46,935] {logging_mixin.py:103} INFO - [2021-02-10 08:30:46,935] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:46,935] {logging_mixin.py:103} INFO - [2021-02-10 08:30:46,935] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:30:46,959] {logging_mixin.py:103} INFO - [2021-02-10 08:30:46,959] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:30:46,960] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:30:46,963] {logging_mixin.py:103} INFO - [2021-02-10 08:30:46,963] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:30:47,142] {logging_mixin.py:103} INFO - [2021-02-10 08:30:47,142] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:47,143] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:30:47,143] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:30:47,145] {logging_mixin.py:103} INFO - [2021-02-10 08:30:47,145] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:30:47,522] {logging_mixin.py:103} INFO - [2021-02-10 08:30:47,522] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:47,523] {logging_mixin.py:103} INFO - [2021-02-10 08:30:47,523] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:30:47,525] {logging_mixin.py:103} INFO - [2021-02-10 08:30:47,525] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:30:47,707] {logging_mixin.py:103} INFO - [2021-02-10 08:30:47,707] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:47,709] {logging_mixin.py:103} INFO - [2021-02-10 08:30:47,709] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:30:48,446] {logging_mixin.py:103} INFO - [2021-02-10 08:30:48,445] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:48,449] {logging_mixin.py:103} INFO - [2021-02-10 08:30:48,449] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:30:49,059] {logging_mixin.py:103} INFO - [2021-02-10 08:30:49,059] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:49,062] {logging_mixin.py:103} INFO - [2021-02-10 08:30:49,061] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:30:49,564] {logging_mixin.py:103} INFO - [2021-02-10 08:30:49,564] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:49,565] {logging_mixin.py:103} INFO - [2021-02-10 08:30:49,565] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:30:49,569] {logging_mixin.py:103} INFO - [2021-02-10 08:30:49,569] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:30:49,733] {logging_mixin.py:103} INFO - [2021-02-10 08:30:49,733] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:49,745] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:30:49,747] {logging_mixin.py:103} INFO - [2021-02-10 08:30:49,747] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:30:49,982] {logging_mixin.py:103} INFO - [2021-02-10 08:30:49,981] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:49,982] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:30:49,983] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:30:49,984] {logging_mixin.py:103} INFO - [2021-02-10 08:30:49,984] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:30:50,143] {logging_mixin.py:103} INFO - [2021-02-10 08:30:50,142] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:50,143] {logging_mixin.py:103} INFO - [2021-02-10 08:30:50,143] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:30:50,144] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:30:50,147] {logging_mixin.py:103} INFO - [2021-02-10 08:30:50,147] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:30:50,318] {logging_mixin.py:103} INFO - [2021-02-10 08:30:50,317] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:50,319] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:30:50,319] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:30:50,320] {logging_mixin.py:103} INFO - [2021-02-10 08:30:50,320] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:30:51,516] {logging_mixin.py:103} INFO - [2021-02-10 08:30:51,516] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:51,517] {logging_mixin.py:103} INFO - [2021-02-10 08:30:51,517] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:30:51,519] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:30:51,522] {logging_mixin.py:103} INFO - [2021-02-10 08:30:51,522] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:30:51,688] {logging_mixin.py:103} INFO - [2021-02-10 08:30:51,688] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:51,689] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:30:51,689] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:30:51,690] {logging_mixin.py:103} INFO - [2021-02-10 08:30:51,690] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:30:52,746] {logging_mixin.py:103} INFO - [2021-02-10 08:30:52,746] {cursor.py:560} INFO - query execution done
[2021-02-10 08:30:52,747] {logging_mixin.py:103} INFO - [2021-02-10 08:30:52,747] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:30:58,080] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:31:36,176] {scheduler_job.py:181} INFO - Started process (PID=60369) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:31:36,177] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:31:36,178] {logging_mixin.py:103} INFO - [2021-02-10 08:31:36,178] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:31:38,083] {logging_mixin.py:103} INFO - [2021-02-10 08:31:38,083] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:31:38,467] {logging_mixin.py:103} INFO - [2021-02-10 08:31:38,467] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:31:38,869] {logging_mixin.py:103} INFO - [2021-02-10 08:31:38,869] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:31:38,869] {logging_mixin.py:103} INFO - [2021-02-10 08:31:38,869] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:31:38,869] {logging_mixin.py:103} INFO - [2021-02-10 08:31:38,869] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:31:40,364] {logging_mixin.py:103} INFO - [2021-02-10 08:31:40,364] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:31:40,553] {logging_mixin.py:103} INFO - [2021-02-10 08:31:40,553] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:40,555] {logging_mixin.py:103} INFO - [2021-02-10 08:31:40,555] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:31:41,285] {logging_mixin.py:103} INFO - [2021-02-10 08:31:41,285] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:41,286] {logging_mixin.py:103} INFO - [2021-02-10 08:31:41,286] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:31:41,443] {logging_mixin.py:103} INFO - [2021-02-10 08:31:41,443] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:41,448] {logging_mixin.py:103} INFO - [2021-02-10 08:31:41,447] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:31:41,737] {logging_mixin.py:103} INFO - [2021-02-10 08:31:41,737] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:42,029] {logging_mixin.py:103} INFO - [2021-02-10 08:31:42,029] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:31:42,170] {logging_mixin.py:103} INFO - [2021-02-10 08:31:42,170] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:42,247] {logging_mixin.py:103} INFO - [2021-02-10 08:31:42,247] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:31:42,248] {logging_mixin.py:103} INFO - [2021-02-10 08:31:42,248] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:31:43,661] {logging_mixin.py:103} INFO - [2021-02-10 08:31:43,661] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:43,663] {logging_mixin.py:103} INFO - [2021-02-10 08:31:43,663] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:31:43,675] {logging_mixin.py:103} INFO - [2021-02-10 08:31:43,675] {data_context.py:1281} INFO - Setting run_name to: 20210210T073143.675531Z
[2021-02-10 08:31:43,677] {logging_mixin.py:103} INFO - [2021-02-10 08:31:43,677] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:31:43,687] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:31:43,689] {logging_mixin.py:103} INFO - [2021-02-10 08:31:43,688] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:31:43,854] {logging_mixin.py:103} INFO - [2021-02-10 08:31:43,854] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:43,855] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:31:43,855] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:31:43,856] {logging_mixin.py:103} INFO - [2021-02-10 08:31:43,856] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:31:44,402] {logging_mixin.py:103} INFO - [2021-02-10 08:31:44,402] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:44,402] {logging_mixin.py:103} INFO - [2021-02-10 08:31:44,402] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:31:44,404] {logging_mixin.py:103} INFO - [2021-02-10 08:31:44,404] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:31:44,600] {logging_mixin.py:103} INFO - [2021-02-10 08:31:44,600] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:44,604] {logging_mixin.py:103} INFO - [2021-02-10 08:31:44,604] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:31:44,769] {logging_mixin.py:103} INFO - [2021-02-10 08:31:44,768] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:44,771] {logging_mixin.py:103} INFO - [2021-02-10 08:31:44,771] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:31:45,053] {logging_mixin.py:103} INFO - [2021-02-10 08:31:45,053] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:45,053] {logging_mixin.py:103} INFO - [2021-02-10 08:31:45,053] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:31:45,075] {logging_mixin.py:103} INFO - [2021-02-10 08:31:45,075] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:31:45,076] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:31:45,079] {logging_mixin.py:103} INFO - [2021-02-10 08:31:45,079] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:31:45,897] {logging_mixin.py:103} INFO - [2021-02-10 08:31:45,897] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:45,897] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:31:45,898] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:31:45,900] {logging_mixin.py:103} INFO - [2021-02-10 08:31:45,899] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:31:46,076] {logging_mixin.py:103} INFO - [2021-02-10 08:31:46,075] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:46,076] {logging_mixin.py:103} INFO - [2021-02-10 08:31:46,076] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:31:46,078] {logging_mixin.py:103} INFO - [2021-02-10 08:31:46,078] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:31:46,291] {logging_mixin.py:103} INFO - [2021-02-10 08:31:46,291] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:46,292] {logging_mixin.py:103} INFO - [2021-02-10 08:31:46,292] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:31:46,478] {logging_mixin.py:103} INFO - [2021-02-10 08:31:46,478] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:46,481] {logging_mixin.py:103} INFO - [2021-02-10 08:31:46,481] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:31:48,043] {logging_mixin.py:103} INFO - [2021-02-10 08:31:48,043] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:48,045] {logging_mixin.py:103} INFO - [2021-02-10 08:31:48,045] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:31:48,262] {logging_mixin.py:103} INFO - [2021-02-10 08:31:48,262] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:48,262] {logging_mixin.py:103} INFO - [2021-02-10 08:31:48,262] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:31:48,266] {logging_mixin.py:103} INFO - [2021-02-10 08:31:48,265] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:31:48,437] {logging_mixin.py:103} INFO - [2021-02-10 08:31:48,437] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:48,441] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:31:48,444] {logging_mixin.py:103} INFO - [2021-02-10 08:31:48,444] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:31:48,710] {logging_mixin.py:103} INFO - [2021-02-10 08:31:48,710] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:48,711] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:31:48,711] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:31:48,714] {logging_mixin.py:103} INFO - [2021-02-10 08:31:48,714] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:31:48,917] {logging_mixin.py:103} INFO - [2021-02-10 08:31:48,917] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:48,918] {logging_mixin.py:103} INFO - [2021-02-10 08:31:48,917] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:31:48,922] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:31:48,925] {logging_mixin.py:103} INFO - [2021-02-10 08:31:48,925] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:31:49,829] {logging_mixin.py:103} INFO - [2021-02-10 08:31:49,829] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:49,830] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:31:49,832] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:31:49,834] {logging_mixin.py:103} INFO - [2021-02-10 08:31:49,834] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:31:51,121] {logging_mixin.py:103} INFO - [2021-02-10 08:31:51,121] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:51,121] {logging_mixin.py:103} INFO - [2021-02-10 08:31:51,121] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:31:51,124] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:31:51,127] {logging_mixin.py:103} INFO - [2021-02-10 08:31:51,126] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:31:52,342] {logging_mixin.py:103} INFO - [2021-02-10 08:31:52,342] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:52,343] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:31:52,343] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:31:52,344] {logging_mixin.py:103} INFO - [2021-02-10 08:31:52,344] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:31:53,270] {logging_mixin.py:103} INFO - [2021-02-10 08:31:53,270] {cursor.py:560} INFO - query execution done
[2021-02-10 08:31:53,271] {logging_mixin.py:103} INFO - [2021-02-10 08:31:53,271] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:32:02,514] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:32:42,726] {scheduler_job.py:181} INFO - Started process (PID=60436) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:32:42,728] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:32:42,729] {logging_mixin.py:103} INFO - [2021-02-10 08:32:42,729] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:32:44,499] {logging_mixin.py:103} INFO - [2021-02-10 08:32:44,499] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:32:44,818] {logging_mixin.py:103} INFO - [2021-02-10 08:32:44,818] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:32:45,163] {logging_mixin.py:103} INFO - [2021-02-10 08:32:45,163] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:32:45,163] {logging_mixin.py:103} INFO - [2021-02-10 08:32:45,163] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:32:45,163] {logging_mixin.py:103} INFO - [2021-02-10 08:32:45,163] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:32:46,414] {logging_mixin.py:103} INFO - [2021-02-10 08:32:46,414] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:32:46,565] {logging_mixin.py:103} INFO - [2021-02-10 08:32:46,565] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:46,567] {logging_mixin.py:103} INFO - [2021-02-10 08:32:46,567] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:32:46,716] {logging_mixin.py:103} INFO - [2021-02-10 08:32:46,716] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:46,717] {logging_mixin.py:103} INFO - [2021-02-10 08:32:46,717] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:32:47,001] {logging_mixin.py:103} INFO - [2021-02-10 08:32:47,001] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:47,004] {logging_mixin.py:103} INFO - [2021-02-10 08:32:47,004] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:32:47,267] {logging_mixin.py:103} INFO - [2021-02-10 08:32:47,266] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:47,488] {logging_mixin.py:103} INFO - [2021-02-10 08:32:47,488] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:32:47,672] {logging_mixin.py:103} INFO - [2021-02-10 08:32:47,672] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:47,716] {logging_mixin.py:103} INFO - [2021-02-10 08:32:47,716] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:32:47,717] {logging_mixin.py:103} INFO - [2021-02-10 08:32:47,717] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:32:49,485] {logging_mixin.py:103} INFO - [2021-02-10 08:32:49,485] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:49,489] {logging_mixin.py:103} INFO - [2021-02-10 08:32:49,489] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:32:49,499] {logging_mixin.py:103} INFO - [2021-02-10 08:32:49,499] {data_context.py:1281} INFO - Setting run_name to: 20210210T073249.499770Z
[2021-02-10 08:32:49,501] {logging_mixin.py:103} INFO - [2021-02-10 08:32:49,501] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:32:49,509] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:32:49,511] {logging_mixin.py:103} INFO - [2021-02-10 08:32:49,511] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:32:49,778] {logging_mixin.py:103} INFO - [2021-02-10 08:32:49,777] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:49,779] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:32:49,779] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:32:49,780] {logging_mixin.py:103} INFO - [2021-02-10 08:32:49,780] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:32:50,407] {logging_mixin.py:103} INFO - [2021-02-10 08:32:50,407] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:50,408] {logging_mixin.py:103} INFO - [2021-02-10 08:32:50,408] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:32:50,410] {logging_mixin.py:103} INFO - [2021-02-10 08:32:50,410] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:32:50,593] {logging_mixin.py:103} INFO - [2021-02-10 08:32:50,593] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:50,595] {logging_mixin.py:103} INFO - [2021-02-10 08:32:50,595] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:32:50,744] {logging_mixin.py:103} INFO - [2021-02-10 08:32:50,743] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:50,746] {logging_mixin.py:103} INFO - [2021-02-10 08:32:50,746] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:32:50,999] {logging_mixin.py:103} INFO - [2021-02-10 08:32:50,999] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:50,999] {logging_mixin.py:103} INFO - [2021-02-10 08:32:50,999] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:32:51,021] {logging_mixin.py:103} INFO - [2021-02-10 08:32:51,021] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:32:51,022] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:32:51,024] {logging_mixin.py:103} INFO - [2021-02-10 08:32:51,024] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:32:51,291] {logging_mixin.py:103} INFO - [2021-02-10 08:32:51,291] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:51,292] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:32:51,292] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:32:51,293] {logging_mixin.py:103} INFO - [2021-02-10 08:32:51,293] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:32:51,942] {logging_mixin.py:103} INFO - [2021-02-10 08:32:51,942] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:51,942] {logging_mixin.py:103} INFO - [2021-02-10 08:32:51,942] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:32:51,945] {logging_mixin.py:103} INFO - [2021-02-10 08:32:51,945] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:32:52,422] {logging_mixin.py:103} INFO - [2021-02-10 08:32:52,421] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:52,423] {logging_mixin.py:103} INFO - [2021-02-10 08:32:52,423] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:32:53,489] {logging_mixin.py:103} INFO - [2021-02-10 08:32:53,489] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:53,492] {logging_mixin.py:103} INFO - [2021-02-10 08:32:53,492] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:32:53,691] {logging_mixin.py:103} INFO - [2021-02-10 08:32:53,691] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:53,694] {logging_mixin.py:103} INFO - [2021-02-10 08:32:53,694] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:32:53,847] {logging_mixin.py:103} INFO - [2021-02-10 08:32:53,847] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:53,847] {logging_mixin.py:103} INFO - [2021-02-10 08:32:53,847] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:32:53,852] {logging_mixin.py:103} INFO - [2021-02-10 08:32:53,851] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:32:54,006] {logging_mixin.py:103} INFO - [2021-02-10 08:32:54,006] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:54,010] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:32:54,013] {logging_mixin.py:103} INFO - [2021-02-10 08:32:54,013] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:32:54,400] {logging_mixin.py:103} INFO - [2021-02-10 08:32:54,400] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:54,401] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:32:54,401] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:32:54,403] {logging_mixin.py:103} INFO - [2021-02-10 08:32:54,403] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:32:54,549] {logging_mixin.py:103} INFO - [2021-02-10 08:32:54,548] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:54,549] {logging_mixin.py:103} INFO - [2021-02-10 08:32:54,549] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:32:54,550] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:32:54,553] {logging_mixin.py:103} INFO - [2021-02-10 08:32:54,553] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:32:54,715] {logging_mixin.py:103} INFO - [2021-02-10 08:32:54,715] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:54,717] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:32:54,717] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:32:54,718] {logging_mixin.py:103} INFO - [2021-02-10 08:32:54,718] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:32:55,627] {logging_mixin.py:103} INFO - [2021-02-10 08:32:55,627] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:55,628] {logging_mixin.py:103} INFO - [2021-02-10 08:32:55,627] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:32:55,628] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:32:55,630] {logging_mixin.py:103} INFO - [2021-02-10 08:32:55,630] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:32:55,777] {logging_mixin.py:103} INFO - [2021-02-10 08:32:55,777] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:55,778] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:32:55,779] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:32:55,780] {logging_mixin.py:103} INFO - [2021-02-10 08:32:55,780] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:32:56,289] {logging_mixin.py:103} INFO - [2021-02-10 08:32:56,289] {cursor.py:560} INFO - query execution done
[2021-02-10 08:32:56,289] {logging_mixin.py:103} INFO - [2021-02-10 08:32:56,289] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:33:01,493] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:33:30,840] {scheduler_job.py:181} INFO - Started process (PID=60500) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:33:30,840] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:33:30,840] {logging_mixin.py:103} INFO - [2021-02-10 08:33:30,840] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:33:32,577] {logging_mixin.py:103} INFO - [2021-02-10 08:33:32,576] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:33:32,878] {logging_mixin.py:103} INFO - [2021-02-10 08:33:32,878] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:33:33,204] {logging_mixin.py:103} INFO - [2021-02-10 08:33:33,203] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:33:33,204] {logging_mixin.py:103} INFO - [2021-02-10 08:33:33,204] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:33:33,204] {logging_mixin.py:103} INFO - [2021-02-10 08:33:33,204] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:33:34,378] {logging_mixin.py:103} INFO - [2021-02-10 08:33:34,378] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:33:34,637] {logging_mixin.py:103} INFO - [2021-02-10 08:33:34,637] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:34,639] {logging_mixin.py:103} INFO - [2021-02-10 08:33:34,639] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:33:34,921] {logging_mixin.py:103} INFO - [2021-02-10 08:33:34,921] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:34,922] {logging_mixin.py:103} INFO - [2021-02-10 08:33:34,922] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:33:35,129] {logging_mixin.py:103} INFO - [2021-02-10 08:33:35,129] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:35,132] {logging_mixin.py:103} INFO - [2021-02-10 08:33:35,132] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:33:35,275] {logging_mixin.py:103} INFO - [2021-02-10 08:33:35,275] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:35,494] {logging_mixin.py:103} INFO - [2021-02-10 08:33:35,494] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:33:35,636] {logging_mixin.py:103} INFO - [2021-02-10 08:33:35,636] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:35,677] {logging_mixin.py:103} INFO - [2021-02-10 08:33:35,677] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:33:35,677] {logging_mixin.py:103} INFO - [2021-02-10 08:33:35,677] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:33:37,488] {logging_mixin.py:103} INFO - [2021-02-10 08:33:37,488] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:37,492] {logging_mixin.py:103} INFO - [2021-02-10 08:33:37,492] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:33:37,502] {logging_mixin.py:103} INFO - [2021-02-10 08:33:37,502] {data_context.py:1281} INFO - Setting run_name to: 20210210T073337.502232Z
[2021-02-10 08:33:37,503] {logging_mixin.py:103} INFO - [2021-02-10 08:33:37,503] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:33:37,512] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:33:37,514] {logging_mixin.py:103} INFO - [2021-02-10 08:33:37,514] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:33:37,683] {logging_mixin.py:103} INFO - [2021-02-10 08:33:37,683] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:37,684] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:33:37,685] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:33:37,686] {logging_mixin.py:103} INFO - [2021-02-10 08:33:37,686] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:33:37,850] {logging_mixin.py:103} INFO - [2021-02-10 08:33:37,850] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:37,851] {logging_mixin.py:103} INFO - [2021-02-10 08:33:37,851] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:33:37,853] {logging_mixin.py:103} INFO - [2021-02-10 08:33:37,853] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:33:38,011] {logging_mixin.py:103} INFO - [2021-02-10 08:33:38,010] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:38,013] {logging_mixin.py:103} INFO - [2021-02-10 08:33:38,013] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:33:38,229] {logging_mixin.py:103} INFO - [2021-02-10 08:33:38,229] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:38,232] {logging_mixin.py:103} INFO - [2021-02-10 08:33:38,232] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:33:38,402] {logging_mixin.py:103} INFO - [2021-02-10 08:33:38,402] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:38,403] {logging_mixin.py:103} INFO - [2021-02-10 08:33:38,403] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:33:38,414] {logging_mixin.py:103} INFO - [2021-02-10 08:33:38,414] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:33:38,414] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:33:38,416] {logging_mixin.py:103} INFO - [2021-02-10 08:33:38,416] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:33:38,614] {logging_mixin.py:103} INFO - [2021-02-10 08:33:38,614] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:38,614] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:33:38,614] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:33:38,615] {logging_mixin.py:103} INFO - [2021-02-10 08:33:38,615] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:33:38,808] {logging_mixin.py:103} INFO - [2021-02-10 08:33:38,808] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:38,809] {logging_mixin.py:103} INFO - [2021-02-10 08:33:38,809] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:33:38,812] {logging_mixin.py:103} INFO - [2021-02-10 08:33:38,811] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:33:38,969] {logging_mixin.py:103} INFO - [2021-02-10 08:33:38,968] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:38,970] {logging_mixin.py:103} INFO - [2021-02-10 08:33:38,970] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:33:39,121] {logging_mixin.py:103} INFO - [2021-02-10 08:33:39,121] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:39,124] {logging_mixin.py:103} INFO - [2021-02-10 08:33:39,124] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:33:39,297] {logging_mixin.py:103} INFO - [2021-02-10 08:33:39,297] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:39,300] {logging_mixin.py:103} INFO - [2021-02-10 08:33:39,300] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:33:39,511] {logging_mixin.py:103} INFO - [2021-02-10 08:33:39,511] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:39,512] {logging_mixin.py:103} INFO - [2021-02-10 08:33:39,512] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:33:39,517] {logging_mixin.py:103} INFO - [2021-02-10 08:33:39,516] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:33:39,795] {logging_mixin.py:103} INFO - [2021-02-10 08:33:39,795] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:39,800] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:33:39,802] {logging_mixin.py:103} INFO - [2021-02-10 08:33:39,802] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:33:40,481] {logging_mixin.py:103} INFO - [2021-02-10 08:33:40,481] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:40,482] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:33:40,482] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:33:40,483] {logging_mixin.py:103} INFO - [2021-02-10 08:33:40,483] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:33:40,628] {logging_mixin.py:103} INFO - [2021-02-10 08:33:40,628] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:40,629] {logging_mixin.py:103} INFO - [2021-02-10 08:33:40,629] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:33:40,630] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:33:40,634] {logging_mixin.py:103} INFO - [2021-02-10 08:33:40,634] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:33:40,798] {logging_mixin.py:103} INFO - [2021-02-10 08:33:40,798] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:40,799] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:33:40,799] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:33:40,801] {logging_mixin.py:103} INFO - [2021-02-10 08:33:40,801] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:33:41,709] {logging_mixin.py:103} INFO - [2021-02-10 08:33:41,709] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:41,709] {logging_mixin.py:103} INFO - [2021-02-10 08:33:41,709] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:33:41,710] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:33:41,712] {logging_mixin.py:103} INFO - [2021-02-10 08:33:41,712] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:33:41,901] {logging_mixin.py:103} INFO - [2021-02-10 08:33:41,901] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:41,902] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:33:41,902] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:33:41,904] {logging_mixin.py:103} INFO - [2021-02-10 08:33:41,904] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:33:42,211] {logging_mixin.py:103} INFO - [2021-02-10 08:33:42,211] {cursor.py:560} INFO - query execution done
[2021-02-10 08:33:42,212] {logging_mixin.py:103} INFO - [2021-02-10 08:33:42,212] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:33:46,302] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:34:13,950] {scheduler_job.py:181} INFO - Started process (PID=60558) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:34:13,951] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:34:13,951] {logging_mixin.py:103} INFO - [2021-02-10 08:34:13,951] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:34:16,097] {logging_mixin.py:103} INFO - [2021-02-10 08:34:16,097] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:34:16,407] {logging_mixin.py:103} INFO - [2021-02-10 08:34:16,407] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:34:16,758] {logging_mixin.py:103} INFO - [2021-02-10 08:34:16,758] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:34:16,758] {logging_mixin.py:103} INFO - [2021-02-10 08:34:16,758] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:34:16,758] {logging_mixin.py:103} INFO - [2021-02-10 08:34:16,758] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:34:17,715] {logging_mixin.py:103} INFO - [2021-02-10 08:34:17,715] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:34:17,860] {logging_mixin.py:103} INFO - [2021-02-10 08:34:17,859] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:17,861] {logging_mixin.py:103} INFO - [2021-02-10 08:34:17,861] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:34:18,067] {logging_mixin.py:103} INFO - [2021-02-10 08:34:18,067] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:18,068] {logging_mixin.py:103} INFO - [2021-02-10 08:34:18,068] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:34:18,212] {logging_mixin.py:103} INFO - [2021-02-10 08:34:18,212] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:18,216] {logging_mixin.py:103} INFO - [2021-02-10 08:34:18,216] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:34:18,493] {logging_mixin.py:103} INFO - [2021-02-10 08:34:18,493] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:18,731] {logging_mixin.py:103} INFO - [2021-02-10 08:34:18,731] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:34:18,879] {logging_mixin.py:103} INFO - [2021-02-10 08:34:18,879] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:18,913] {logging_mixin.py:103} INFO - [2021-02-10 08:34:18,913] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:34:18,914] {logging_mixin.py:103} INFO - [2021-02-10 08:34:18,914] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:34:21,648] {logging_mixin.py:103} INFO - [2021-02-10 08:34:21,648] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:21,652] {logging_mixin.py:103} INFO - [2021-02-10 08:34:21,652] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:34:21,662] {logging_mixin.py:103} INFO - [2021-02-10 08:34:21,662] {data_context.py:1281} INFO - Setting run_name to: 20210210T073421.662615Z
[2021-02-10 08:34:21,663] {logging_mixin.py:103} INFO - [2021-02-10 08:34:21,663] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:34:21,672] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:34:21,674] {logging_mixin.py:103} INFO - [2021-02-10 08:34:21,674] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:34:22,574] {logging_mixin.py:103} INFO - [2021-02-10 08:34:22,573] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:22,575] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:34:22,575] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:34:22,576] {logging_mixin.py:103} INFO - [2021-02-10 08:34:22,576] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:34:22,740] {logging_mixin.py:103} INFO - [2021-02-10 08:34:22,740] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:22,740] {logging_mixin.py:103} INFO - [2021-02-10 08:34:22,740] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:34:22,743] {logging_mixin.py:103} INFO - [2021-02-10 08:34:22,743] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:34:22,922] {logging_mixin.py:103} INFO - [2021-02-10 08:34:22,921] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:22,924] {logging_mixin.py:103} INFO - [2021-02-10 08:34:22,924] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:34:23,103] {logging_mixin.py:103} INFO - [2021-02-10 08:34:23,103] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:23,106] {logging_mixin.py:103} INFO - [2021-02-10 08:34:23,106] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:34:23,277] {logging_mixin.py:103} INFO - [2021-02-10 08:34:23,277] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:23,277] {logging_mixin.py:103} INFO - [2021-02-10 08:34:23,277] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:34:23,300] {logging_mixin.py:103} INFO - [2021-02-10 08:34:23,299] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:34:23,301] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:34:23,303] {logging_mixin.py:103} INFO - [2021-02-10 08:34:23,303] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:34:23,455] {logging_mixin.py:103} INFO - [2021-02-10 08:34:23,454] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:23,455] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:34:23,456] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:34:23,457] {logging_mixin.py:103} INFO - [2021-02-10 08:34:23,457] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:34:23,666] {logging_mixin.py:103} INFO - [2021-02-10 08:34:23,666] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:23,666] {logging_mixin.py:103} INFO - [2021-02-10 08:34:23,666] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:34:23,668] {logging_mixin.py:103} INFO - [2021-02-10 08:34:23,668] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:34:23,869] {logging_mixin.py:103} INFO - [2021-02-10 08:34:23,869] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:23,871] {logging_mixin.py:103} INFO - [2021-02-10 08:34:23,871] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:34:24,060] {logging_mixin.py:103} INFO - [2021-02-10 08:34:24,060] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:24,063] {logging_mixin.py:103} INFO - [2021-02-10 08:34:24,063] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:34:24,227] {logging_mixin.py:103} INFO - [2021-02-10 08:34:24,227] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:24,229] {logging_mixin.py:103} INFO - [2021-02-10 08:34:24,229] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:34:24,412] {logging_mixin.py:103} INFO - [2021-02-10 08:34:24,411] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:24,412] {logging_mixin.py:103} INFO - [2021-02-10 08:34:24,412] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:34:24,417] {logging_mixin.py:103} INFO - [2021-02-10 08:34:24,416] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:34:24,586] {logging_mixin.py:103} INFO - [2021-02-10 08:34:24,586] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:24,598] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:34:24,601] {logging_mixin.py:103} INFO - [2021-02-10 08:34:24,601] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:34:24,766] {logging_mixin.py:103} INFO - [2021-02-10 08:34:24,766] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:24,767] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:34:24,767] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:34:24,769] {logging_mixin.py:103} INFO - [2021-02-10 08:34:24,768] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:34:24,936] {logging_mixin.py:103} INFO - [2021-02-10 08:34:24,936] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:24,937] {logging_mixin.py:103} INFO - [2021-02-10 08:34:24,936] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:34:24,937] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:34:24,940] {logging_mixin.py:103} INFO - [2021-02-10 08:34:24,940] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:34:25,134] {logging_mixin.py:103} INFO - [2021-02-10 08:34:25,133] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:25,135] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:34:25,135] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:34:25,136] {logging_mixin.py:103} INFO - [2021-02-10 08:34:25,136] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:34:25,287] {logging_mixin.py:103} INFO - [2021-02-10 08:34:25,286] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:25,287] {logging_mixin.py:103} INFO - [2021-02-10 08:34:25,287] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:34:25,288] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:34:25,291] {logging_mixin.py:103} INFO - [2021-02-10 08:34:25,291] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:34:25,463] {logging_mixin.py:103} INFO - [2021-02-10 08:34:25,463] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:25,464] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:34:25,464] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:34:25,466] {logging_mixin.py:103} INFO - [2021-02-10 08:34:25,466] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:34:25,635] {logging_mixin.py:103} INFO - [2021-02-10 08:34:25,634] {cursor.py:560} INFO - query execution done
[2021-02-10 08:34:25,635] {logging_mixin.py:103} INFO - [2021-02-10 08:34:25,635] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:34:30,522] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:34:59,513] {scheduler_job.py:181} INFO - Started process (PID=60620) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:34:59,515] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:34:59,516] {logging_mixin.py:103} INFO - [2021-02-10 08:34:59,516] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:35:01,446] {logging_mixin.py:103} INFO - [2021-02-10 08:35:01,446] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:35:01,744] {logging_mixin.py:103} INFO - [2021-02-10 08:35:01,743] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:35:02,078] {logging_mixin.py:103} INFO - [2021-02-10 08:35:02,078] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:35:02,078] {logging_mixin.py:103} INFO - [2021-02-10 08:35:02,078] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:35:02,078] {logging_mixin.py:103} INFO - [2021-02-10 08:35:02,078] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:35:03,308] {logging_mixin.py:103} INFO - [2021-02-10 08:35:03,308] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:35:03,481] {logging_mixin.py:103} INFO - [2021-02-10 08:35:03,481] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:03,483] {logging_mixin.py:103} INFO - [2021-02-10 08:35:03,483] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:35:03,616] {logging_mixin.py:103} INFO - [2021-02-10 08:35:03,616] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:03,616] {logging_mixin.py:103} INFO - [2021-02-10 08:35:03,616] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:35:03,761] {logging_mixin.py:103} INFO - [2021-02-10 08:35:03,761] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:03,762] {logging_mixin.py:103} INFO - [2021-02-10 08:35:03,762] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:35:03,909] {logging_mixin.py:103} INFO - [2021-02-10 08:35:03,909] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:04,134] {logging_mixin.py:103} INFO - [2021-02-10 08:35:04,133] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:35:04,295] {logging_mixin.py:103} INFO - [2021-02-10 08:35:04,294] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:04,344] {logging_mixin.py:103} INFO - [2021-02-10 08:35:04,344] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:35:04,345] {logging_mixin.py:103} INFO - [2021-02-10 08:35:04,345] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:35:05,620] {logging_mixin.py:103} INFO - [2021-02-10 08:35:05,620] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:05,624] {logging_mixin.py:103} INFO - [2021-02-10 08:35:05,624] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:35:05,635] {logging_mixin.py:103} INFO - [2021-02-10 08:35:05,635] {data_context.py:1281} INFO - Setting run_name to: 20210210T073505.635485Z
[2021-02-10 08:35:05,636] {logging_mixin.py:103} INFO - [2021-02-10 08:35:05,636] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:35:05,645] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:35:05,647] {logging_mixin.py:103} INFO - [2021-02-10 08:35:05,647] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:35:05,864] {logging_mixin.py:103} INFO - [2021-02-10 08:35:05,864] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:05,865] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:35:05,865] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:35:05,867] {logging_mixin.py:103} INFO - [2021-02-10 08:35:05,867] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:35:06,022] {logging_mixin.py:103} INFO - [2021-02-10 08:35:06,021] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:06,022] {logging_mixin.py:103} INFO - [2021-02-10 08:35:06,022] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:35:06,024] {logging_mixin.py:103} INFO - [2021-02-10 08:35:06,024] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:35:06,220] {logging_mixin.py:103} INFO - [2021-02-10 08:35:06,219] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:06,222] {logging_mixin.py:103} INFO - [2021-02-10 08:35:06,222] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:35:06,478] {logging_mixin.py:103} INFO - [2021-02-10 08:35:06,478] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:06,480] {logging_mixin.py:103} INFO - [2021-02-10 08:35:06,480] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:35:06,657] {logging_mixin.py:103} INFO - [2021-02-10 08:35:06,657] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:06,657] {logging_mixin.py:103} INFO - [2021-02-10 08:35:06,657] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:35:06,679] {logging_mixin.py:103} INFO - [2021-02-10 08:35:06,679] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:35:06,680] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:35:06,683] {logging_mixin.py:103} INFO - [2021-02-10 08:35:06,683] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:35:06,840] {logging_mixin.py:103} INFO - [2021-02-10 08:35:06,839] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:06,840] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:35:06,841] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:35:06,842] {logging_mixin.py:103} INFO - [2021-02-10 08:35:06,842] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:35:07,019] {logging_mixin.py:103} INFO - [2021-02-10 08:35:07,018] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:07,019] {logging_mixin.py:103} INFO - [2021-02-10 08:35:07,019] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:35:07,022] {logging_mixin.py:103} INFO - [2021-02-10 08:35:07,022] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:35:07,177] {logging_mixin.py:103} INFO - [2021-02-10 08:35:07,177] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:07,179] {logging_mixin.py:103} INFO - [2021-02-10 08:35:07,179] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:35:07,326] {logging_mixin.py:103} INFO - [2021-02-10 08:35:07,326] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:07,329] {logging_mixin.py:103} INFO - [2021-02-10 08:35:07,329] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:35:07,480] {logging_mixin.py:103} INFO - [2021-02-10 08:35:07,480] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:07,485] {logging_mixin.py:103} INFO - [2021-02-10 08:35:07,484] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:35:07,639] {logging_mixin.py:103} INFO - [2021-02-10 08:35:07,639] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:07,639] {logging_mixin.py:103} INFO - [2021-02-10 08:35:07,639] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:35:07,644] {logging_mixin.py:103} INFO - [2021-02-10 08:35:07,644] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:35:07,802] {logging_mixin.py:103} INFO - [2021-02-10 08:35:07,802] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:07,806] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:35:07,808] {logging_mixin.py:103} INFO - [2021-02-10 08:35:07,808] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:35:07,961] {logging_mixin.py:103} INFO - [2021-02-10 08:35:07,961] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:07,962] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:35:07,962] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:35:07,963] {logging_mixin.py:103} INFO - [2021-02-10 08:35:07,963] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:35:08,172] {logging_mixin.py:103} INFO - [2021-02-10 08:35:08,171] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:08,172] {logging_mixin.py:103} INFO - [2021-02-10 08:35:08,172] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:35:08,173] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:35:08,176] {logging_mixin.py:103} INFO - [2021-02-10 08:35:08,176] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:35:08,375] {logging_mixin.py:103} INFO - [2021-02-10 08:35:08,375] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:08,377] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:35:08,377] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:35:08,378] {logging_mixin.py:103} INFO - [2021-02-10 08:35:08,378] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:35:08,535] {logging_mixin.py:103} INFO - [2021-02-10 08:35:08,535] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:08,535] {logging_mixin.py:103} INFO - [2021-02-10 08:35:08,535] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:35:08,536] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:35:08,539] {logging_mixin.py:103} INFO - [2021-02-10 08:35:08,539] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:35:08,683] {logging_mixin.py:103} INFO - [2021-02-10 08:35:08,683] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:08,684] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:35:08,684] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:35:08,685] {logging_mixin.py:103} INFO - [2021-02-10 08:35:08,684] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:35:08,833] {logging_mixin.py:103} INFO - [2021-02-10 08:35:08,833] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:08,833] {logging_mixin.py:103} INFO - [2021-02-10 08:35:08,833] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:35:13,694] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:35:49,912] {scheduler_job.py:181} INFO - Started process (PID=60682) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:35:49,913] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:35:49,914] {logging_mixin.py:103} INFO - [2021-02-10 08:35:49,914] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:35:52,263] {logging_mixin.py:103} INFO - [2021-02-10 08:35:52,263] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:35:52,607] {logging_mixin.py:103} INFO - [2021-02-10 08:35:52,607] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:35:53,026] {logging_mixin.py:103} INFO - [2021-02-10 08:35:53,026] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:35:53,026] {logging_mixin.py:103} INFO - [2021-02-10 08:35:53,026] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:35:53,026] {logging_mixin.py:103} INFO - [2021-02-10 08:35:53,026] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:35:54,565] {logging_mixin.py:103} INFO - [2021-02-10 08:35:54,565] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:35:54,757] {logging_mixin.py:103} INFO - [2021-02-10 08:35:54,757] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:54,759] {logging_mixin.py:103} INFO - [2021-02-10 08:35:54,759] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:35:54,902] {logging_mixin.py:103} INFO - [2021-02-10 08:35:54,902] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:54,903] {logging_mixin.py:103} INFO - [2021-02-10 08:35:54,903] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:35:55,074] {logging_mixin.py:103} INFO - [2021-02-10 08:35:55,074] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:55,075] {logging_mixin.py:103} INFO - [2021-02-10 08:35:55,075] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:35:55,217] {logging_mixin.py:103} INFO - [2021-02-10 08:35:55,217] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:55,538] {logging_mixin.py:103} INFO - [2021-02-10 08:35:55,538] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:35:55,945] {logging_mixin.py:103} INFO - [2021-02-10 08:35:55,945] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:56,028] {logging_mixin.py:103} INFO - [2021-02-10 08:35:56,028] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:35:56,029] {logging_mixin.py:103} INFO - [2021-02-10 08:35:56,029] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:35:59,511] {logging_mixin.py:103} INFO - [2021-02-10 08:35:59,511] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:59,514] {logging_mixin.py:103} INFO - [2021-02-10 08:35:59,514] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:35:59,526] {logging_mixin.py:103} INFO - [2021-02-10 08:35:59,526] {data_context.py:1281} INFO - Setting run_name to: 20210210T073559.526156Z
[2021-02-10 08:35:59,527] {logging_mixin.py:103} INFO - [2021-02-10 08:35:59,527] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:35:59,536] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:35:59,538] {logging_mixin.py:103} INFO - [2021-02-10 08:35:59,538] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:35:59,713] {logging_mixin.py:103} INFO - [2021-02-10 08:35:59,712] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:59,714] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:35:59,714] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:35:59,715] {logging_mixin.py:103} INFO - [2021-02-10 08:35:59,715] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:35:59,892] {logging_mixin.py:103} INFO - [2021-02-10 08:35:59,891] {cursor.py:560} INFO - query execution done
[2021-02-10 08:35:59,892] {logging_mixin.py:103} INFO - [2021-02-10 08:35:59,892] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:35:59,894] {logging_mixin.py:103} INFO - [2021-02-10 08:35:59,894] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:36:00,077] {logging_mixin.py:103} INFO - [2021-02-10 08:36:00,076] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:00,079] {logging_mixin.py:103} INFO - [2021-02-10 08:36:00,079] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:36:00,386] {logging_mixin.py:103} INFO - [2021-02-10 08:36:00,386] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:00,389] {logging_mixin.py:103} INFO - [2021-02-10 08:36:00,389] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:36:00,529] {logging_mixin.py:103} INFO - [2021-02-10 08:36:00,529] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:00,530] {logging_mixin.py:103} INFO - [2021-02-10 08:36:00,530] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:36:00,549] {logging_mixin.py:103} INFO - [2021-02-10 08:36:00,549] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:36:00,550] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:36:00,551] {logging_mixin.py:103} INFO - [2021-02-10 08:36:00,551] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:36:00,788] {logging_mixin.py:103} INFO - [2021-02-10 08:36:00,788] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:00,789] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:36:00,789] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:36:00,790] {logging_mixin.py:103} INFO - [2021-02-10 08:36:00,790] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:36:01,042] {logging_mixin.py:103} INFO - [2021-02-10 08:36:01,042] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:01,042] {logging_mixin.py:103} INFO - [2021-02-10 08:36:01,042] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:36:01,045] {logging_mixin.py:103} INFO - [2021-02-10 08:36:01,045] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:36:01,219] {logging_mixin.py:103} INFO - [2021-02-10 08:36:01,219] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:01,221] {logging_mixin.py:103} INFO - [2021-02-10 08:36:01,220] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:36:01,405] {logging_mixin.py:103} INFO - [2021-02-10 08:36:01,405] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:01,408] {logging_mixin.py:103} INFO - [2021-02-10 08:36:01,408] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:36:01,734] {logging_mixin.py:103} INFO - [2021-02-10 08:36:01,734] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:01,736] {logging_mixin.py:103} INFO - [2021-02-10 08:36:01,736] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:36:01,905] {logging_mixin.py:103} INFO - [2021-02-10 08:36:01,905] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:01,905] {logging_mixin.py:103} INFO - [2021-02-10 08:36:01,905] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:36:01,909] {logging_mixin.py:103} INFO - [2021-02-10 08:36:01,909] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:36:02,111] {logging_mixin.py:103} INFO - [2021-02-10 08:36:02,111] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:02,123] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:36:02,125] {logging_mixin.py:103} INFO - [2021-02-10 08:36:02,125] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:36:02,331] {logging_mixin.py:103} INFO - [2021-02-10 08:36:02,331] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:02,333] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:36:02,333] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:36:02,335] {logging_mixin.py:103} INFO - [2021-02-10 08:36:02,335] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:36:02,504] {logging_mixin.py:103} INFO - [2021-02-10 08:36:02,504] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:02,505] {logging_mixin.py:103} INFO - [2021-02-10 08:36:02,504] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:36:02,506] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:36:02,509] {logging_mixin.py:103} INFO - [2021-02-10 08:36:02,509] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:36:02,690] {logging_mixin.py:103} INFO - [2021-02-10 08:36:02,689] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:02,691] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:36:02,691] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:36:02,694] {logging_mixin.py:103} INFO - [2021-02-10 08:36:02,693] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:36:02,852] {logging_mixin.py:103} INFO - [2021-02-10 08:36:02,851] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:02,853] {logging_mixin.py:103} INFO - [2021-02-10 08:36:02,853] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:36:02,854] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:36:02,856] {logging_mixin.py:103} INFO - [2021-02-10 08:36:02,856] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:36:03,023] {logging_mixin.py:103} INFO - [2021-02-10 08:36:03,022] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:03,025] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:36:03,026] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:36:03,036] {logging_mixin.py:103} INFO - [2021-02-10 08:36:03,036] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:36:03,256] {logging_mixin.py:103} INFO - [2021-02-10 08:36:03,256] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:03,257] {logging_mixin.py:103} INFO - [2021-02-10 08:36:03,257] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:36:08,569] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:36:39,793] {scheduler_job.py:181} INFO - Started process (PID=60742) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:36:39,793] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:36:39,793] {logging_mixin.py:103} INFO - [2021-02-10 08:36:39,793] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:36:41,560] {logging_mixin.py:103} INFO - [2021-02-10 08:36:41,560] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:36:41,847] {logging_mixin.py:103} INFO - [2021-02-10 08:36:41,847] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:36:42,186] {logging_mixin.py:103} INFO - [2021-02-10 08:36:42,186] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:36:42,187] {logging_mixin.py:103} INFO - [2021-02-10 08:36:42,187] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:36:42,187] {logging_mixin.py:103} INFO - [2021-02-10 08:36:42,187] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:36:43,756] {logging_mixin.py:103} INFO - [2021-02-10 08:36:43,756] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:36:43,884] {logging_mixin.py:103} INFO - [2021-02-10 08:36:43,884] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:43,885] {logging_mixin.py:103} INFO - [2021-02-10 08:36:43,885] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:36:44,189] {logging_mixin.py:103} INFO - [2021-02-10 08:36:44,189] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:44,189] {logging_mixin.py:103} INFO - [2021-02-10 08:36:44,189] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:36:44,807] {logging_mixin.py:103} INFO - [2021-02-10 08:36:44,807] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:44,810] {logging_mixin.py:103} INFO - [2021-02-10 08:36:44,810] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:36:44,959] {logging_mixin.py:103} INFO - [2021-02-10 08:36:44,959] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:45,187] {logging_mixin.py:103} INFO - [2021-02-10 08:36:45,187] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:36:45,352] {logging_mixin.py:103} INFO - [2021-02-10 08:36:45,352] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:45,395] {logging_mixin.py:103} INFO - [2021-02-10 08:36:45,395] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:36:45,396] {logging_mixin.py:103} INFO - [2021-02-10 08:36:45,396] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:36:47,879] {logging_mixin.py:103} INFO - [2021-02-10 08:36:47,879] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:47,883] {logging_mixin.py:103} INFO - [2021-02-10 08:36:47,883] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:36:47,894] {logging_mixin.py:103} INFO - [2021-02-10 08:36:47,894] {data_context.py:1281} INFO - Setting run_name to: 20210210T073647.894128Z
[2021-02-10 08:36:47,895] {logging_mixin.py:103} INFO - [2021-02-10 08:36:47,895] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:36:47,904] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:36:47,906] {logging_mixin.py:103} INFO - [2021-02-10 08:36:47,906] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:36:48,078] {logging_mixin.py:103} INFO - [2021-02-10 08:36:48,078] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:48,079] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:36:48,079] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:36:48,081] {logging_mixin.py:103} INFO - [2021-02-10 08:36:48,081] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:36:48,654] {logging_mixin.py:103} INFO - [2021-02-10 08:36:48,654] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:48,655] {logging_mixin.py:103} INFO - [2021-02-10 08:36:48,655] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:36:48,656] {logging_mixin.py:103} INFO - [2021-02-10 08:36:48,656] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:36:48,842] {logging_mixin.py:103} INFO - [2021-02-10 08:36:48,841] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:48,843] {logging_mixin.py:103} INFO - [2021-02-10 08:36:48,843] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:36:48,993] {logging_mixin.py:103} INFO - [2021-02-10 08:36:48,993] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:48,994] {logging_mixin.py:103} INFO - [2021-02-10 08:36:48,994] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:36:49,130] {logging_mixin.py:103} INFO - [2021-02-10 08:36:49,129] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:49,130] {logging_mixin.py:103} INFO - [2021-02-10 08:36:49,130] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:36:49,149] {logging_mixin.py:103} INFO - [2021-02-10 08:36:49,148] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:36:49,149] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:36:49,151] {logging_mixin.py:103} INFO - [2021-02-10 08:36:49,151] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:36:49,308] {logging_mixin.py:103} INFO - [2021-02-10 08:36:49,308] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:49,309] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:36:49,309] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:36:49,310] {logging_mixin.py:103} INFO - [2021-02-10 08:36:49,310] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:36:49,491] {logging_mixin.py:103} INFO - [2021-02-10 08:36:49,491] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:49,492] {logging_mixin.py:103} INFO - [2021-02-10 08:36:49,492] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:36:49,494] {logging_mixin.py:103} INFO - [2021-02-10 08:36:49,494] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:36:49,638] {logging_mixin.py:103} INFO - [2021-02-10 08:36:49,638] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:49,640] {logging_mixin.py:103} INFO - [2021-02-10 08:36:49,639] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:36:49,782] {logging_mixin.py:103} INFO - [2021-02-10 08:36:49,782] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:49,785] {logging_mixin.py:103} INFO - [2021-02-10 08:36:49,785] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:36:49,971] {logging_mixin.py:103} INFO - [2021-02-10 08:36:49,970] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:49,974] {logging_mixin.py:103} INFO - [2021-02-10 08:36:49,974] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:36:50,335] {logging_mixin.py:103} INFO - [2021-02-10 08:36:50,335] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:50,336] {logging_mixin.py:103} INFO - [2021-02-10 08:36:50,336] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:36:50,340] {logging_mixin.py:103} INFO - [2021-02-10 08:36:50,340] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:36:50,951] {logging_mixin.py:103} INFO - [2021-02-10 08:36:50,951] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:50,960] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:36:50,963] {logging_mixin.py:103} INFO - [2021-02-10 08:36:50,963] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:36:51,157] {logging_mixin.py:103} INFO - [2021-02-10 08:36:51,157] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:51,158] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:36:51,158] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:36:51,160] {logging_mixin.py:103} INFO - [2021-02-10 08:36:51,160] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:36:51,328] {logging_mixin.py:103} INFO - [2021-02-10 08:36:51,328] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:51,329] {logging_mixin.py:103} INFO - [2021-02-10 08:36:51,329] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:36:51,332] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:36:51,335] {logging_mixin.py:103} INFO - [2021-02-10 08:36:51,334] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:36:51,604] {logging_mixin.py:103} INFO - [2021-02-10 08:36:51,604] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:51,605] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:36:51,605] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:36:51,608] {logging_mixin.py:103} INFO - [2021-02-10 08:36:51,607] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:36:51,782] {logging_mixin.py:103} INFO - [2021-02-10 08:36:51,781] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:51,783] {logging_mixin.py:103} INFO - [2021-02-10 08:36:51,783] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:36:51,785] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:36:51,822] {logging_mixin.py:103} INFO - [2021-02-10 08:36:51,822] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:36:52,109] {logging_mixin.py:103} INFO - [2021-02-10 08:36:52,109] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:52,110] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:36:52,110] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:36:52,112] {logging_mixin.py:103} INFO - [2021-02-10 08:36:52,111] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:36:52,276] {logging_mixin.py:103} INFO - [2021-02-10 08:36:52,276] {cursor.py:560} INFO - query execution done
[2021-02-10 08:36:52,277] {logging_mixin.py:103} INFO - [2021-02-10 08:36:52,277] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:36:57,442] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:37:26,003] {scheduler_job.py:181} INFO - Started process (PID=60800) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:37:26,003] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:37:26,003] {logging_mixin.py:103} INFO - [2021-02-10 08:37:26,003] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:37:27,822] {logging_mixin.py:103} INFO - [2021-02-10 08:37:27,821] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:37:28,165] {logging_mixin.py:103} INFO - [2021-02-10 08:37:28,164] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:37:28,511] {logging_mixin.py:103} INFO - [2021-02-10 08:37:28,511] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:37:28,511] {logging_mixin.py:103} INFO - [2021-02-10 08:37:28,511] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:37:28,511] {logging_mixin.py:103} INFO - [2021-02-10 08:37:28,511] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:37:29,558] {logging_mixin.py:103} INFO - [2021-02-10 08:37:29,557] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:37:29,775] {logging_mixin.py:103} INFO - [2021-02-10 08:37:29,775] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:29,777] {logging_mixin.py:103} INFO - [2021-02-10 08:37:29,777] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:37:29,943] {logging_mixin.py:103} INFO - [2021-02-10 08:37:29,943] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:29,943] {logging_mixin.py:103} INFO - [2021-02-10 08:37:29,943] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:37:30,130] {logging_mixin.py:103} INFO - [2021-02-10 08:37:30,129] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:30,133] {logging_mixin.py:103} INFO - [2021-02-10 08:37:30,132] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:37:30,287] {logging_mixin.py:103} INFO - [2021-02-10 08:37:30,287] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:30,512] {logging_mixin.py:103} INFO - [2021-02-10 08:37:30,512] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:37:30,676] {logging_mixin.py:103} INFO - [2021-02-10 08:37:30,676] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:30,720] {logging_mixin.py:103} INFO - [2021-02-10 08:37:30,720] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:37:30,720] {logging_mixin.py:103} INFO - [2021-02-10 08:37:30,720] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:37:32,117] {logging_mixin.py:103} INFO - [2021-02-10 08:37:32,116] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:32,120] {logging_mixin.py:103} INFO - [2021-02-10 08:37:32,120] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:37:32,130] {logging_mixin.py:103} INFO - [2021-02-10 08:37:32,130] {data_context.py:1281} INFO - Setting run_name to: 20210210T073732.130550Z
[2021-02-10 08:37:32,131] {logging_mixin.py:103} INFO - [2021-02-10 08:37:32,131] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:37:32,140] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:37:32,142] {logging_mixin.py:103} INFO - [2021-02-10 08:37:32,142] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:37:32,294] {logging_mixin.py:103} INFO - [2021-02-10 08:37:32,293] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:32,295] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:37:32,295] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:37:32,296] {logging_mixin.py:103} INFO - [2021-02-10 08:37:32,296] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:37:32,461] {logging_mixin.py:103} INFO - [2021-02-10 08:37:32,461] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:32,462] {logging_mixin.py:103} INFO - [2021-02-10 08:37:32,461] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:37:32,465] {logging_mixin.py:103} INFO - [2021-02-10 08:37:32,465] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:37:32,624] {logging_mixin.py:103} INFO - [2021-02-10 08:37:32,624] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:32,626] {logging_mixin.py:103} INFO - [2021-02-10 08:37:32,626] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:37:33,038] {logging_mixin.py:103} INFO - [2021-02-10 08:37:33,037] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:33,040] {logging_mixin.py:103} INFO - [2021-02-10 08:37:33,040] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:37:33,232] {logging_mixin.py:103} INFO - [2021-02-10 08:37:33,231] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:33,232] {logging_mixin.py:103} INFO - [2021-02-10 08:37:33,232] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:37:33,255] {logging_mixin.py:103} INFO - [2021-02-10 08:37:33,255] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:37:33,256] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:37:33,258] {logging_mixin.py:103} INFO - [2021-02-10 08:37:33,257] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:37:33,492] {logging_mixin.py:103} INFO - [2021-02-10 08:37:33,492] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:33,493] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:37:33,493] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:37:33,494] {logging_mixin.py:103} INFO - [2021-02-10 08:37:33,494] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:37:33,642] {logging_mixin.py:103} INFO - [2021-02-10 08:37:33,642] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:33,642] {logging_mixin.py:103} INFO - [2021-02-10 08:37:33,642] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:37:33,645] {logging_mixin.py:103} INFO - [2021-02-10 08:37:33,645] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:37:33,801] {logging_mixin.py:103} INFO - [2021-02-10 08:37:33,801] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:33,802] {logging_mixin.py:103} INFO - [2021-02-10 08:37:33,802] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:37:34,056] {logging_mixin.py:103} INFO - [2021-02-10 08:37:34,056] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:34,059] {logging_mixin.py:103} INFO - [2021-02-10 08:37:34,059] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:37:34,325] {logging_mixin.py:103} INFO - [2021-02-10 08:37:34,325] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:34,327] {logging_mixin.py:103} INFO - [2021-02-10 08:37:34,327] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:37:34,489] {logging_mixin.py:103} INFO - [2021-02-10 08:37:34,488] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:34,489] {logging_mixin.py:103} INFO - [2021-02-10 08:37:34,489] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:37:34,492] {logging_mixin.py:103} INFO - [2021-02-10 08:37:34,492] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:37:34,634] {logging_mixin.py:103} INFO - [2021-02-10 08:37:34,634] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:34,645] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:37:34,649] {logging_mixin.py:103} INFO - [2021-02-10 08:37:34,649] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:37:34,815] {logging_mixin.py:103} INFO - [2021-02-10 08:37:34,815] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:34,816] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:37:34,816] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:37:34,818] {logging_mixin.py:103} INFO - [2021-02-10 08:37:34,818] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:37:35,057] {logging_mixin.py:103} INFO - [2021-02-10 08:37:35,057] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:35,058] {logging_mixin.py:103} INFO - [2021-02-10 08:37:35,058] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:37:35,059] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:37:35,062] {logging_mixin.py:103} INFO - [2021-02-10 08:37:35,062] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:37:35,808] {logging_mixin.py:103} INFO - [2021-02-10 08:37:35,807] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:35,809] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:37:35,809] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:37:35,810] {logging_mixin.py:103} INFO - [2021-02-10 08:37:35,810] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:37:35,989] {logging_mixin.py:103} INFO - [2021-02-10 08:37:35,989] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:35,990] {logging_mixin.py:103} INFO - [2021-02-10 08:37:35,990] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:37:35,991] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:37:35,994] {logging_mixin.py:103} INFO - [2021-02-10 08:37:35,994] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:37:36,223] {logging_mixin.py:103} INFO - [2021-02-10 08:37:36,223] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:36,224] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:37:36,225] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:37:36,226] {logging_mixin.py:103} INFO - [2021-02-10 08:37:36,226] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:37:36,512] {logging_mixin.py:103} INFO - [2021-02-10 08:37:36,511] {cursor.py:560} INFO - query execution done
[2021-02-10 08:37:36,512] {logging_mixin.py:103} INFO - [2021-02-10 08:37:36,512] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:37:41,716] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:38:07,480] {scheduler_job.py:181} INFO - Started process (PID=60858) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:38:07,481] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:38:07,481] {logging_mixin.py:103} INFO - [2021-02-10 08:38:07,481] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:38:09,121] {logging_mixin.py:103} INFO - [2021-02-10 08:38:09,120] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:38:09,415] {logging_mixin.py:103} INFO - [2021-02-10 08:38:09,414] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:38:09,743] {logging_mixin.py:103} INFO - [2021-02-10 08:38:09,743] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:38:09,744] {logging_mixin.py:103} INFO - [2021-02-10 08:38:09,744] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:38:09,744] {logging_mixin.py:103} INFO - [2021-02-10 08:38:09,744] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:38:11,133] {logging_mixin.py:103} INFO - [2021-02-10 08:38:11,133] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:38:11,300] {logging_mixin.py:103} INFO - [2021-02-10 08:38:11,300] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:11,302] {logging_mixin.py:103} INFO - [2021-02-10 08:38:11,302] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:38:11,449] {logging_mixin.py:103} INFO - [2021-02-10 08:38:11,449] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:11,450] {logging_mixin.py:103} INFO - [2021-02-10 08:38:11,449] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:38:11,612] {logging_mixin.py:103} INFO - [2021-02-10 08:38:11,612] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:11,615] {logging_mixin.py:103} INFO - [2021-02-10 08:38:11,615] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:38:11,823] {logging_mixin.py:103} INFO - [2021-02-10 08:38:11,823] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:12,036] {logging_mixin.py:103} INFO - [2021-02-10 08:38:12,035] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:38:12,295] {logging_mixin.py:103} INFO - [2021-02-10 08:38:12,295] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:12,336] {logging_mixin.py:103} INFO - [2021-02-10 08:38:12,336] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:38:12,336] {logging_mixin.py:103} INFO - [2021-02-10 08:38:12,336] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:38:14,819] {logging_mixin.py:103} INFO - [2021-02-10 08:38:14,819] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:14,823] {logging_mixin.py:103} INFO - [2021-02-10 08:38:14,823] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:38:14,833] {logging_mixin.py:103} INFO - [2021-02-10 08:38:14,833] {data_context.py:1281} INFO - Setting run_name to: 20210210T073814.833713Z
[2021-02-10 08:38:14,835] {logging_mixin.py:103} INFO - [2021-02-10 08:38:14,834] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:38:14,843] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:38:14,845] {logging_mixin.py:103} INFO - [2021-02-10 08:38:14,845] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:38:15,080] {logging_mixin.py:103} INFO - [2021-02-10 08:38:15,080] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:15,081] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:38:15,081] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:38:15,083] {logging_mixin.py:103} INFO - [2021-02-10 08:38:15,083] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:38:15,272] {logging_mixin.py:103} INFO - [2021-02-10 08:38:15,272] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:15,273] {logging_mixin.py:103} INFO - [2021-02-10 08:38:15,272] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:38:15,275] {logging_mixin.py:103} INFO - [2021-02-10 08:38:15,275] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:38:15,426] {logging_mixin.py:103} INFO - [2021-02-10 08:38:15,426] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:15,428] {logging_mixin.py:103} INFO - [2021-02-10 08:38:15,428] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:38:15,710] {logging_mixin.py:103} INFO - [2021-02-10 08:38:15,710] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:15,713] {logging_mixin.py:103} INFO - [2021-02-10 08:38:15,712] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:38:15,869] {logging_mixin.py:103} INFO - [2021-02-10 08:38:15,869] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:15,870] {logging_mixin.py:103} INFO - [2021-02-10 08:38:15,869] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:38:15,881] {logging_mixin.py:103} INFO - [2021-02-10 08:38:15,881] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:38:15,882] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:38:15,883] {logging_mixin.py:103} INFO - [2021-02-10 08:38:15,883] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:38:16,054] {logging_mixin.py:103} INFO - [2021-02-10 08:38:16,054] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:16,055] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:38:16,055] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:38:16,057] {logging_mixin.py:103} INFO - [2021-02-10 08:38:16,057] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:38:16,204] {logging_mixin.py:103} INFO - [2021-02-10 08:38:16,204] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:16,205] {logging_mixin.py:103} INFO - [2021-02-10 08:38:16,205] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:38:16,207] {logging_mixin.py:103} INFO - [2021-02-10 08:38:16,207] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:38:16,485] {logging_mixin.py:103} INFO - [2021-02-10 08:38:16,485] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:16,487] {logging_mixin.py:103} INFO - [2021-02-10 08:38:16,486] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:38:16,747] {logging_mixin.py:103} INFO - [2021-02-10 08:38:16,747] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:16,750] {logging_mixin.py:103} INFO - [2021-02-10 08:38:16,750] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:38:17,276] {logging_mixin.py:103} INFO - [2021-02-10 08:38:17,276] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:17,279] {logging_mixin.py:103} INFO - [2021-02-10 08:38:17,278] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:38:17,537] {logging_mixin.py:103} INFO - [2021-02-10 08:38:17,537] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:17,538] {logging_mixin.py:103} INFO - [2021-02-10 08:38:17,538] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:38:17,542] {logging_mixin.py:103} INFO - [2021-02-10 08:38:17,542] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:38:17,794] {logging_mixin.py:103} INFO - [2021-02-10 08:38:17,794] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:17,799] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:38:17,802] {logging_mixin.py:103} INFO - [2021-02-10 08:38:17,801] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:38:17,961] {logging_mixin.py:103} INFO - [2021-02-10 08:38:17,961] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:17,962] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:38:17,962] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:38:17,964] {logging_mixin.py:103} INFO - [2021-02-10 08:38:17,964] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:38:18,103] {logging_mixin.py:103} INFO - [2021-02-10 08:38:18,103] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:18,104] {logging_mixin.py:103} INFO - [2021-02-10 08:38:18,104] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:38:18,105] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:38:18,108] {logging_mixin.py:103} INFO - [2021-02-10 08:38:18,108] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:38:18,270] {logging_mixin.py:103} INFO - [2021-02-10 08:38:18,270] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:18,272] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:38:18,272] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:38:18,273] {logging_mixin.py:103} INFO - [2021-02-10 08:38:18,273] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:38:18,448] {logging_mixin.py:103} INFO - [2021-02-10 08:38:18,448] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:18,449] {logging_mixin.py:103} INFO - [2021-02-10 08:38:18,448] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:38:18,449] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:38:18,451] {logging_mixin.py:103} INFO - [2021-02-10 08:38:18,451] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:38:18,621] {logging_mixin.py:103} INFO - [2021-02-10 08:38:18,621] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:18,622] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:38:18,622] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:38:18,624] {logging_mixin.py:103} INFO - [2021-02-10 08:38:18,624] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:38:18,774] {logging_mixin.py:103} INFO - [2021-02-10 08:38:18,773] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:18,774] {logging_mixin.py:103} INFO - [2021-02-10 08:38:18,774] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:38:22,546] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:38:48,887] {scheduler_job.py:181} INFO - Started process (PID=60919) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:38:48,888] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:38:48,889] {logging_mixin.py:103} INFO - [2021-02-10 08:38:48,889] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:38:50,616] {logging_mixin.py:103} INFO - [2021-02-10 08:38:50,616] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:38:50,920] {logging_mixin.py:103} INFO - [2021-02-10 08:38:50,920] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:38:51,257] {logging_mixin.py:103} INFO - [2021-02-10 08:38:51,257] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:38:51,257] {logging_mixin.py:103} INFO - [2021-02-10 08:38:51,257] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:38:51,258] {logging_mixin.py:103} INFO - [2021-02-10 08:38:51,257] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:38:52,616] {logging_mixin.py:103} INFO - [2021-02-10 08:38:52,616] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:38:52,799] {logging_mixin.py:103} INFO - [2021-02-10 08:38:52,798] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:52,801] {logging_mixin.py:103} INFO - [2021-02-10 08:38:52,801] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:38:52,941] {logging_mixin.py:103} INFO - [2021-02-10 08:38:52,941] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:52,942] {logging_mixin.py:103} INFO - [2021-02-10 08:38:52,942] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:38:53,070] {logging_mixin.py:103} INFO - [2021-02-10 08:38:53,070] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:53,073] {logging_mixin.py:103} INFO - [2021-02-10 08:38:53,073] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:38:53,235] {logging_mixin.py:103} INFO - [2021-02-10 08:38:53,234] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:53,536] {logging_mixin.py:103} INFO - [2021-02-10 08:38:53,535] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:38:53,684] {logging_mixin.py:103} INFO - [2021-02-10 08:38:53,683] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:53,734] {logging_mixin.py:103} INFO - [2021-02-10 08:38:53,734] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:38:53,734] {logging_mixin.py:103} INFO - [2021-02-10 08:38:53,734] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:38:55,064] {logging_mixin.py:103} INFO - [2021-02-10 08:38:55,063] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:55,068] {logging_mixin.py:103} INFO - [2021-02-10 08:38:55,067] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:38:55,080] {logging_mixin.py:103} INFO - [2021-02-10 08:38:55,080] {data_context.py:1281} INFO - Setting run_name to: 20210210T073855.080794Z
[2021-02-10 08:38:55,082] {logging_mixin.py:103} INFO - [2021-02-10 08:38:55,082] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:38:55,092] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:38:55,094] {logging_mixin.py:103} INFO - [2021-02-10 08:38:55,094] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:38:55,990] {logging_mixin.py:103} INFO - [2021-02-10 08:38:55,990] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:55,992] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:38:55,992] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:38:55,993] {logging_mixin.py:103} INFO - [2021-02-10 08:38:55,993] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:38:56,159] {logging_mixin.py:103} INFO - [2021-02-10 08:38:56,159] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:56,159] {logging_mixin.py:103} INFO - [2021-02-10 08:38:56,159] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:38:56,162] {logging_mixin.py:103} INFO - [2021-02-10 08:38:56,161] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:38:56,335] {logging_mixin.py:103} INFO - [2021-02-10 08:38:56,335] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:56,338] {logging_mixin.py:103} INFO - [2021-02-10 08:38:56,338] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:38:56,540] {logging_mixin.py:103} INFO - [2021-02-10 08:38:56,540] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:56,543] {logging_mixin.py:103} INFO - [2021-02-10 08:38:56,543] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:38:56,905] {logging_mixin.py:103} INFO - [2021-02-10 08:38:56,905] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:56,906] {logging_mixin.py:103} INFO - [2021-02-10 08:38:56,906] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:38:56,926] {logging_mixin.py:103} INFO - [2021-02-10 08:38:56,926] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:38:56,927] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:38:56,929] {logging_mixin.py:103} INFO - [2021-02-10 08:38:56,929] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:38:57,114] {logging_mixin.py:103} INFO - [2021-02-10 08:38:57,114] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:57,115] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:38:57,115] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:38:57,117] {logging_mixin.py:103} INFO - [2021-02-10 08:38:57,117] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:38:57,388] {logging_mixin.py:103} INFO - [2021-02-10 08:38:57,388] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:57,389] {logging_mixin.py:103} INFO - [2021-02-10 08:38:57,389] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:38:57,391] {logging_mixin.py:103} INFO - [2021-02-10 08:38:57,391] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:38:57,535] {logging_mixin.py:103} INFO - [2021-02-10 08:38:57,535] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:57,536] {logging_mixin.py:103} INFO - [2021-02-10 08:38:57,536] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:38:57,694] {logging_mixin.py:103} INFO - [2021-02-10 08:38:57,694] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:57,697] {logging_mixin.py:103} INFO - [2021-02-10 08:38:57,697] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:38:57,844] {logging_mixin.py:103} INFO - [2021-02-10 08:38:57,844] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:57,848] {logging_mixin.py:103} INFO - [2021-02-10 08:38:57,848] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:38:58,005] {logging_mixin.py:103} INFO - [2021-02-10 08:38:58,004] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:58,005] {logging_mixin.py:103} INFO - [2021-02-10 08:38:58,005] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:38:58,009] {logging_mixin.py:103} INFO - [2021-02-10 08:38:58,009] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:38:58,315] {logging_mixin.py:103} INFO - [2021-02-10 08:38:58,315] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:58,326] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:38:58,329] {logging_mixin.py:103} INFO - [2021-02-10 08:38:58,329] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:38:58,530] {logging_mixin.py:103} INFO - [2021-02-10 08:38:58,530] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:58,531] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:38:58,531] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:38:58,532] {logging_mixin.py:103} INFO - [2021-02-10 08:38:58,532] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:38:58,777] {logging_mixin.py:103} INFO - [2021-02-10 08:38:58,777] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:58,778] {logging_mixin.py:103} INFO - [2021-02-10 08:38:58,777] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:38:58,780] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:38:58,782] {logging_mixin.py:103} INFO - [2021-02-10 08:38:58,782] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:38:58,951] {logging_mixin.py:103} INFO - [2021-02-10 08:38:58,951] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:58,953] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:38:58,953] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:38:58,954] {logging_mixin.py:103} INFO - [2021-02-10 08:38:58,954] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:38:59,152] {logging_mixin.py:103} INFO - [2021-02-10 08:38:59,152] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:59,152] {logging_mixin.py:103} INFO - [2021-02-10 08:38:59,152] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:38:59,153] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:38:59,157] {logging_mixin.py:103} INFO - [2021-02-10 08:38:59,156] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:38:59,536] {logging_mixin.py:103} INFO - [2021-02-10 08:38:59,536] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:59,537] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:38:59,537] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:38:59,538] {logging_mixin.py:103} INFO - [2021-02-10 08:38:59,538] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:38:59,696] {logging_mixin.py:103} INFO - [2021-02-10 08:38:59,696] {cursor.py:560} INFO - query execution done
[2021-02-10 08:38:59,696] {logging_mixin.py:103} INFO - [2021-02-10 08:38:59,696] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:39:05,093] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:39:33,577] {scheduler_job.py:181} INFO - Started process (PID=60984) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:39:33,579] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:39:33,579] {logging_mixin.py:103} INFO - [2021-02-10 08:39:33,579] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:39:35,540] {logging_mixin.py:103} INFO - [2021-02-10 08:39:35,540] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:39:35,837] {logging_mixin.py:103} INFO - [2021-02-10 08:39:35,837] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:39:36,292] {logging_mixin.py:103} INFO - [2021-02-10 08:39:36,292] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:39:36,292] {logging_mixin.py:103} INFO - [2021-02-10 08:39:36,292] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:39:36,292] {logging_mixin.py:103} INFO - [2021-02-10 08:39:36,292] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:39:37,105] {logging_mixin.py:103} INFO - [2021-02-10 08:39:37,105] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:39:37,262] {logging_mixin.py:103} INFO - [2021-02-10 08:39:37,262] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:37,264] {logging_mixin.py:103} INFO - [2021-02-10 08:39:37,264] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:39:37,399] {logging_mixin.py:103} INFO - [2021-02-10 08:39:37,399] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:37,400] {logging_mixin.py:103} INFO - [2021-02-10 08:39:37,399] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:39:37,547] {logging_mixin.py:103} INFO - [2021-02-10 08:39:37,547] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:37,550] {logging_mixin.py:103} INFO - [2021-02-10 08:39:37,550] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:39:37,681] {logging_mixin.py:103} INFO - [2021-02-10 08:39:37,681] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:37,951] {logging_mixin.py:103} INFO - [2021-02-10 08:39:37,951] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:39:38,460] {logging_mixin.py:103} INFO - [2021-02-10 08:39:38,460] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:38,505] {logging_mixin.py:103} INFO - [2021-02-10 08:39:38,505] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:39:38,506] {logging_mixin.py:103} INFO - [2021-02-10 08:39:38,505] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:39:39,778] {logging_mixin.py:103} INFO - [2021-02-10 08:39:39,778] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:39,782] {logging_mixin.py:103} INFO - [2021-02-10 08:39:39,782] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:39:39,792] {logging_mixin.py:103} INFO - [2021-02-10 08:39:39,792] {data_context.py:1281} INFO - Setting run_name to: 20210210T073939.792839Z
[2021-02-10 08:39:39,794] {logging_mixin.py:103} INFO - [2021-02-10 08:39:39,794] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:39:39,802] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:39:39,804] {logging_mixin.py:103} INFO - [2021-02-10 08:39:39,804] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:39:39,976] {logging_mixin.py:103} INFO - [2021-02-10 08:39:39,976] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:39,977] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:39:39,977] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:39:39,978] {logging_mixin.py:103} INFO - [2021-02-10 08:39:39,978] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:39:40,224] {logging_mixin.py:103} INFO - [2021-02-10 08:39:40,224] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:40,225] {logging_mixin.py:103} INFO - [2021-02-10 08:39:40,224] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:39:40,227] {logging_mixin.py:103} INFO - [2021-02-10 08:39:40,226] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:39:40,407] {logging_mixin.py:103} INFO - [2021-02-10 08:39:40,407] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:40,409] {logging_mixin.py:103} INFO - [2021-02-10 08:39:40,409] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:39:40,575] {logging_mixin.py:103} INFO - [2021-02-10 08:39:40,575] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:40,578] {logging_mixin.py:103} INFO - [2021-02-10 08:39:40,578] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:39:40,749] {logging_mixin.py:103} INFO - [2021-02-10 08:39:40,748] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:40,749] {logging_mixin.py:103} INFO - [2021-02-10 08:39:40,749] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:39:40,771] {logging_mixin.py:103} INFO - [2021-02-10 08:39:40,771] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:39:40,772] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:39:40,774] {logging_mixin.py:103} INFO - [2021-02-10 08:39:40,774] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:39:40,929] {logging_mixin.py:103} INFO - [2021-02-10 08:39:40,928] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:40,930] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:39:40,930] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:39:40,931] {logging_mixin.py:103} INFO - [2021-02-10 08:39:40,931] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:39:41,109] {logging_mixin.py:103} INFO - [2021-02-10 08:39:41,109] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:41,110] {logging_mixin.py:103} INFO - [2021-02-10 08:39:41,110] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:39:41,113] {logging_mixin.py:103} INFO - [2021-02-10 08:39:41,112] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:39:42,065] {logging_mixin.py:103} INFO - [2021-02-10 08:39:42,065] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:42,067] {logging_mixin.py:103} INFO - [2021-02-10 08:39:42,067] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:39:42,264] {logging_mixin.py:103} INFO - [2021-02-10 08:39:42,264] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:42,267] {logging_mixin.py:103} INFO - [2021-02-10 08:39:42,267] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:39:42,438] {logging_mixin.py:103} INFO - [2021-02-10 08:39:42,438] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:42,441] {logging_mixin.py:103} INFO - [2021-02-10 08:39:42,441] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:39:42,601] {logging_mixin.py:103} INFO - [2021-02-10 08:39:42,601] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:42,602] {logging_mixin.py:103} INFO - [2021-02-10 08:39:42,601] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:39:42,605] {logging_mixin.py:103} INFO - [2021-02-10 08:39:42,605] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:39:42,870] {logging_mixin.py:103} INFO - [2021-02-10 08:39:42,870] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:42,882] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:39:42,884] {logging_mixin.py:103} INFO - [2021-02-10 08:39:42,884] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:39:43,108] {logging_mixin.py:103} INFO - [2021-02-10 08:39:43,108] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:43,110] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:39:43,110] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:39:43,111] {logging_mixin.py:103} INFO - [2021-02-10 08:39:43,111] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:39:43,264] {logging_mixin.py:103} INFO - [2021-02-10 08:39:43,264] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:43,264] {logging_mixin.py:103} INFO - [2021-02-10 08:39:43,264] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:39:43,265] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:39:43,270] {logging_mixin.py:103} INFO - [2021-02-10 08:39:43,269] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:39:43,523] {logging_mixin.py:103} INFO - [2021-02-10 08:39:43,522] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:43,524] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:39:43,524] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:39:43,525] {logging_mixin.py:103} INFO - [2021-02-10 08:39:43,525] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:39:43,703] {logging_mixin.py:103} INFO - [2021-02-10 08:39:43,703] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:43,703] {logging_mixin.py:103} INFO - [2021-02-10 08:39:43,703] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:39:43,704] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:39:43,707] {logging_mixin.py:103} INFO - [2021-02-10 08:39:43,707] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:39:43,848] {logging_mixin.py:103} INFO - [2021-02-10 08:39:43,848] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:43,849] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:39:43,849] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:39:43,851] {logging_mixin.py:103} INFO - [2021-02-10 08:39:43,851] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:39:44,032] {logging_mixin.py:103} INFO - [2021-02-10 08:39:44,031] {cursor.py:560} INFO - query execution done
[2021-02-10 08:39:44,032] {logging_mixin.py:103} INFO - [2021-02-10 08:39:44,032] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:39:49,465] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:40:18,354] {scheduler_job.py:181} INFO - Started process (PID=61042) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:40:18,355] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:40:18,356] {logging_mixin.py:103} INFO - [2021-02-10 08:40:18,356] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:40:20,305] {logging_mixin.py:103} INFO - [2021-02-10 08:40:20,304] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:40:20,649] {logging_mixin.py:103} INFO - [2021-02-10 08:40:20,649] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:40:21,046] {logging_mixin.py:103} INFO - [2021-02-10 08:40:21,046] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:40:21,046] {logging_mixin.py:103} INFO - [2021-02-10 08:40:21,046] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:40:21,047] {logging_mixin.py:103} INFO - [2021-02-10 08:40:21,046] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:40:21,959] {logging_mixin.py:103} INFO - [2021-02-10 08:40:21,959] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:40:22,092] {logging_mixin.py:103} INFO - [2021-02-10 08:40:22,092] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:22,095] {logging_mixin.py:103} INFO - [2021-02-10 08:40:22,094] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:40:22,253] {logging_mixin.py:103} INFO - [2021-02-10 08:40:22,253] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:22,254] {logging_mixin.py:103} INFO - [2021-02-10 08:40:22,254] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:40:22,381] {logging_mixin.py:103} INFO - [2021-02-10 08:40:22,381] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:22,384] {logging_mixin.py:103} INFO - [2021-02-10 08:40:22,384] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:40:22,518] {logging_mixin.py:103} INFO - [2021-02-10 08:40:22,518] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:22,799] {logging_mixin.py:103} INFO - [2021-02-10 08:40:22,798] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:40:22,955] {logging_mixin.py:103} INFO - [2021-02-10 08:40:22,955] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:23,011] {logging_mixin.py:103} INFO - [2021-02-10 08:40:23,011] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:40:23,011] {logging_mixin.py:103} INFO - [2021-02-10 08:40:23,011] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:40:25,383] {logging_mixin.py:103} INFO - [2021-02-10 08:40:25,383] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:25,386] {logging_mixin.py:103} INFO - [2021-02-10 08:40:25,386] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:40:25,398] {logging_mixin.py:103} INFO - [2021-02-10 08:40:25,398] {data_context.py:1281} INFO - Setting run_name to: 20210210T074025.398612Z
[2021-02-10 08:40:25,400] {logging_mixin.py:103} INFO - [2021-02-10 08:40:25,399] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:40:25,409] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:40:25,411] {logging_mixin.py:103} INFO - [2021-02-10 08:40:25,411] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:40:25,585] {logging_mixin.py:103} INFO - [2021-02-10 08:40:25,585] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:25,585] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:40:25,586] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:40:25,587] {logging_mixin.py:103} INFO - [2021-02-10 08:40:25,587] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:40:25,743] {logging_mixin.py:103} INFO - [2021-02-10 08:40:25,743] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:25,744] {logging_mixin.py:103} INFO - [2021-02-10 08:40:25,744] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:40:25,747] {logging_mixin.py:103} INFO - [2021-02-10 08:40:25,746] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:40:25,920] {logging_mixin.py:103} INFO - [2021-02-10 08:40:25,920] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:25,922] {logging_mixin.py:103} INFO - [2021-02-10 08:40:25,922] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:40:26,091] {logging_mixin.py:103} INFO - [2021-02-10 08:40:26,091] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:26,094] {logging_mixin.py:103} INFO - [2021-02-10 08:40:26,094] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:40:26,265] {logging_mixin.py:103} INFO - [2021-02-10 08:40:26,265] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:26,265] {logging_mixin.py:103} INFO - [2021-02-10 08:40:26,265] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:40:26,285] {logging_mixin.py:103} INFO - [2021-02-10 08:40:26,285] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:40:26,286] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:40:26,288] {logging_mixin.py:103} INFO - [2021-02-10 08:40:26,288] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:40:26,583] {logging_mixin.py:103} INFO - [2021-02-10 08:40:26,583] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:26,584] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:40:26,584] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:40:26,586] {logging_mixin.py:103} INFO - [2021-02-10 08:40:26,585] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:40:26,776] {logging_mixin.py:103} INFO - [2021-02-10 08:40:26,776] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:26,776] {logging_mixin.py:103} INFO - [2021-02-10 08:40:26,776] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:40:26,780] {logging_mixin.py:103} INFO - [2021-02-10 08:40:26,779] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:40:26,962] {logging_mixin.py:103} INFO - [2021-02-10 08:40:26,961] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:26,964] {logging_mixin.py:103} INFO - [2021-02-10 08:40:26,964] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:40:27,181] {logging_mixin.py:103} INFO - [2021-02-10 08:40:27,181] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:27,184] {logging_mixin.py:103} INFO - [2021-02-10 08:40:27,184] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:40:27,435] {logging_mixin.py:103} INFO - [2021-02-10 08:40:27,435] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:27,437] {logging_mixin.py:103} INFO - [2021-02-10 08:40:27,437] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:40:27,583] {logging_mixin.py:103} INFO - [2021-02-10 08:40:27,583] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:27,583] {logging_mixin.py:103} INFO - [2021-02-10 08:40:27,583] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:40:27,587] {logging_mixin.py:103} INFO - [2021-02-10 08:40:27,587] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:40:27,780] {logging_mixin.py:103} INFO - [2021-02-10 08:40:27,780] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:27,792] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:40:27,795] {logging_mixin.py:103} INFO - [2021-02-10 08:40:27,794] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:40:27,947] {logging_mixin.py:103} INFO - [2021-02-10 08:40:27,947] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:27,949] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:40:27,949] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:40:27,950] {logging_mixin.py:103} INFO - [2021-02-10 08:40:27,950] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:40:28,212] {logging_mixin.py:103} INFO - [2021-02-10 08:40:28,212] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:28,213] {logging_mixin.py:103} INFO - [2021-02-10 08:40:28,212] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:40:28,215] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:40:28,219] {logging_mixin.py:103} INFO - [2021-02-10 08:40:28,218] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:40:28,397] {logging_mixin.py:103} INFO - [2021-02-10 08:40:28,397] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:28,397] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:40:28,398] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:40:28,399] {logging_mixin.py:103} INFO - [2021-02-10 08:40:28,399] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:40:28,557] {logging_mixin.py:103} INFO - [2021-02-10 08:40:28,557] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:28,557] {logging_mixin.py:103} INFO - [2021-02-10 08:40:28,557] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:40:28,558] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:40:28,562] {logging_mixin.py:103} INFO - [2021-02-10 08:40:28,561] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:40:28,717] {logging_mixin.py:103} INFO - [2021-02-10 08:40:28,717] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:28,719] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:40:28,719] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:40:28,721] {logging_mixin.py:103} INFO - [2021-02-10 08:40:28,721] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:40:28,910] {logging_mixin.py:103} INFO - [2021-02-10 08:40:28,909] {cursor.py:560} INFO - query execution done
[2021-02-10 08:40:28,911] {logging_mixin.py:103} INFO - [2021-02-10 08:40:28,911] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:40:34,363] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:41:06,086] {scheduler_job.py:181} INFO - Started process (PID=61105) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:41:06,088] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:41:06,088] {logging_mixin.py:103} INFO - [2021-02-10 08:41:06,088] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:41:07,818] {logging_mixin.py:103} INFO - [2021-02-10 08:41:07,818] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:41:08,123] {logging_mixin.py:103} INFO - [2021-02-10 08:41:08,123] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:41:08,474] {logging_mixin.py:103} INFO - [2021-02-10 08:41:08,474] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:41:08,474] {logging_mixin.py:103} INFO - [2021-02-10 08:41:08,474] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:41:08,474] {logging_mixin.py:103} INFO - [2021-02-10 08:41:08,474] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:41:09,694] {logging_mixin.py:103} INFO - [2021-02-10 08:41:09,694] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:41:09,916] {logging_mixin.py:103} INFO - [2021-02-10 08:41:09,916] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:09,918] {logging_mixin.py:103} INFO - [2021-02-10 08:41:09,918] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:41:10,052] {logging_mixin.py:103} INFO - [2021-02-10 08:41:10,052] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:10,053] {logging_mixin.py:103} INFO - [2021-02-10 08:41:10,052] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:41:10,182] {logging_mixin.py:103} INFO - [2021-02-10 08:41:10,182] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:10,185] {logging_mixin.py:103} INFO - [2021-02-10 08:41:10,185] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:41:10,391] {logging_mixin.py:103} INFO - [2021-02-10 08:41:10,391] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:10,622] {logging_mixin.py:103} INFO - [2021-02-10 08:41:10,621] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:41:10,785] {logging_mixin.py:103} INFO - [2021-02-10 08:41:10,785] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:10,829] {logging_mixin.py:103} INFO - [2021-02-10 08:41:10,829] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:41:10,829] {logging_mixin.py:103} INFO - [2021-02-10 08:41:10,829] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:41:12,394] {logging_mixin.py:103} INFO - [2021-02-10 08:41:12,393] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:12,397] {logging_mixin.py:103} INFO - [2021-02-10 08:41:12,397] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:41:12,408] {logging_mixin.py:103} INFO - [2021-02-10 08:41:12,408] {data_context.py:1281} INFO - Setting run_name to: 20210210T074112.408055Z
[2021-02-10 08:41:12,409] {logging_mixin.py:103} INFO - [2021-02-10 08:41:12,409] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:41:12,418] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:41:12,420] {logging_mixin.py:103} INFO - [2021-02-10 08:41:12,419] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:41:12,596] {logging_mixin.py:103} INFO - [2021-02-10 08:41:12,596] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:12,597] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:41:12,597] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:41:12,599] {logging_mixin.py:103} INFO - [2021-02-10 08:41:12,599] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:41:12,754] {logging_mixin.py:103} INFO - [2021-02-10 08:41:12,754] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:12,755] {logging_mixin.py:103} INFO - [2021-02-10 08:41:12,754] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:41:12,757] {logging_mixin.py:103} INFO - [2021-02-10 08:41:12,757] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:41:12,950] {logging_mixin.py:103} INFO - [2021-02-10 08:41:12,950] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:12,953] {logging_mixin.py:103} INFO - [2021-02-10 08:41:12,952] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:41:13,114] {logging_mixin.py:103} INFO - [2021-02-10 08:41:13,113] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:13,116] {logging_mixin.py:103} INFO - [2021-02-10 08:41:13,116] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:41:13,268] {logging_mixin.py:103} INFO - [2021-02-10 08:41:13,268] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:13,269] {logging_mixin.py:103} INFO - [2021-02-10 08:41:13,268] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:41:13,290] {logging_mixin.py:103} INFO - [2021-02-10 08:41:13,290] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:41:13,291] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:41:13,292] {logging_mixin.py:103} INFO - [2021-02-10 08:41:13,292] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:41:13,430] {logging_mixin.py:103} INFO - [2021-02-10 08:41:13,429] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:13,431] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:41:13,431] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:41:13,432] {logging_mixin.py:103} INFO - [2021-02-10 08:41:13,432] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:41:13,590] {logging_mixin.py:103} INFO - [2021-02-10 08:41:13,590] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:13,590] {logging_mixin.py:103} INFO - [2021-02-10 08:41:13,590] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:41:13,593] {logging_mixin.py:103} INFO - [2021-02-10 08:41:13,593] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:41:13,778] {logging_mixin.py:103} INFO - [2021-02-10 08:41:13,778] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:13,780] {logging_mixin.py:103} INFO - [2021-02-10 08:41:13,780] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:41:14,045] {logging_mixin.py:103} INFO - [2021-02-10 08:41:14,045] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:14,048] {logging_mixin.py:103} INFO - [2021-02-10 08:41:14,048] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:41:14,211] {logging_mixin.py:103} INFO - [2021-02-10 08:41:14,211] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:14,213] {logging_mixin.py:103} INFO - [2021-02-10 08:41:14,213] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:41:14,364] {logging_mixin.py:103} INFO - [2021-02-10 08:41:14,364] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:14,364] {logging_mixin.py:103} INFO - [2021-02-10 08:41:14,364] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:41:14,368] {logging_mixin.py:103} INFO - [2021-02-10 08:41:14,368] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:41:15,149] {logging_mixin.py:103} INFO - [2021-02-10 08:41:15,149] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:15,161] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:41:15,163] {logging_mixin.py:103} INFO - [2021-02-10 08:41:15,163] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:41:15,349] {logging_mixin.py:103} INFO - [2021-02-10 08:41:15,348] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:15,350] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:41:15,350] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:41:15,352] {logging_mixin.py:103} INFO - [2021-02-10 08:41:15,351] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:41:15,505] {logging_mixin.py:103} INFO - [2021-02-10 08:41:15,505] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:15,506] {logging_mixin.py:103} INFO - [2021-02-10 08:41:15,506] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:41:15,507] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:41:15,510] {logging_mixin.py:103} INFO - [2021-02-10 08:41:15,510] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:41:15,737] {logging_mixin.py:103} INFO - [2021-02-10 08:41:15,737] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:15,738] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:41:15,738] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:41:15,740] {logging_mixin.py:103} INFO - [2021-02-10 08:41:15,740] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:41:15,888] {logging_mixin.py:103} INFO - [2021-02-10 08:41:15,888] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:15,889] {logging_mixin.py:103} INFO - [2021-02-10 08:41:15,889] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:41:15,890] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:41:15,892] {logging_mixin.py:103} INFO - [2021-02-10 08:41:15,892] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:41:16,041] {logging_mixin.py:103} INFO - [2021-02-10 08:41:16,041] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:16,042] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:41:16,042] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:41:16,044] {logging_mixin.py:103} INFO - [2021-02-10 08:41:16,043] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:41:16,205] {logging_mixin.py:103} INFO - [2021-02-10 08:41:16,204] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:16,206] {logging_mixin.py:103} INFO - [2021-02-10 08:41:16,205] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:41:21,093] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:41:49,260] {scheduler_job.py:181} INFO - Started process (PID=61164) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:41:49,261] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:41:49,261] {logging_mixin.py:103} INFO - [2021-02-10 08:41:49,261] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:41:51,187] {logging_mixin.py:103} INFO - [2021-02-10 08:41:51,187] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:41:51,558] {logging_mixin.py:103} INFO - [2021-02-10 08:41:51,558] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:41:51,919] {logging_mixin.py:103} INFO - [2021-02-10 08:41:51,919] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:41:51,920] {logging_mixin.py:103} INFO - [2021-02-10 08:41:51,920] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:41:51,920] {logging_mixin.py:103} INFO - [2021-02-10 08:41:51,920] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:41:52,943] {logging_mixin.py:103} INFO - [2021-02-10 08:41:52,943] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:41:53,103] {logging_mixin.py:103} INFO - [2021-02-10 08:41:53,103] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:53,105] {logging_mixin.py:103} INFO - [2021-02-10 08:41:53,105] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:41:53,280] {logging_mixin.py:103} INFO - [2021-02-10 08:41:53,279] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:53,281] {logging_mixin.py:103} INFO - [2021-02-10 08:41:53,281] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:41:53,418] {logging_mixin.py:103} INFO - [2021-02-10 08:41:53,418] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:53,420] {logging_mixin.py:103} INFO - [2021-02-10 08:41:53,420] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:41:53,666] {logging_mixin.py:103} INFO - [2021-02-10 08:41:53,666] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:53,910] {logging_mixin.py:103} INFO - [2021-02-10 08:41:53,910] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:41:54,165] {logging_mixin.py:103} INFO - [2021-02-10 08:41:54,165] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:54,213] {logging_mixin.py:103} INFO - [2021-02-10 08:41:54,213] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:41:54,213] {logging_mixin.py:103} INFO - [2021-02-10 08:41:54,213] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:41:56,317] {logging_mixin.py:103} INFO - [2021-02-10 08:41:56,316] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:56,320] {logging_mixin.py:103} INFO - [2021-02-10 08:41:56,320] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:41:56,332] {logging_mixin.py:103} INFO - [2021-02-10 08:41:56,332] {data_context.py:1281} INFO - Setting run_name to: 20210210T074156.332650Z
[2021-02-10 08:41:56,333] {logging_mixin.py:103} INFO - [2021-02-10 08:41:56,333] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:41:56,344] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:41:56,346] {logging_mixin.py:103} INFO - [2021-02-10 08:41:56,346] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:41:56,930] {logging_mixin.py:103} INFO - [2021-02-10 08:41:56,930] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:56,931] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:41:56,932] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:41:56,933] {logging_mixin.py:103} INFO - [2021-02-10 08:41:56,933] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:41:57,419] {logging_mixin.py:103} INFO - [2021-02-10 08:41:57,418] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:57,419] {logging_mixin.py:103} INFO - [2021-02-10 08:41:57,419] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:41:57,421] {logging_mixin.py:103} INFO - [2021-02-10 08:41:57,421] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:41:57,590] {logging_mixin.py:103} INFO - [2021-02-10 08:41:57,590] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:57,594] {logging_mixin.py:103} INFO - [2021-02-10 08:41:57,594] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:41:58,159] {logging_mixin.py:103} INFO - [2021-02-10 08:41:58,158] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:58,162] {logging_mixin.py:103} INFO - [2021-02-10 08:41:58,161] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:41:58,351] {logging_mixin.py:103} INFO - [2021-02-10 08:41:58,350] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:58,353] {logging_mixin.py:103} INFO - [2021-02-10 08:41:58,352] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:41:58,377] {logging_mixin.py:103} INFO - [2021-02-10 08:41:58,377] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:41:58,379] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:41:58,382] {logging_mixin.py:103} INFO - [2021-02-10 08:41:58,382] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:41:59,387] {logging_mixin.py:103} INFO - [2021-02-10 08:41:59,387] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:59,391] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:41:59,391] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:41:59,393] {logging_mixin.py:103} INFO - [2021-02-10 08:41:59,393] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:41:59,546] {logging_mixin.py:103} INFO - [2021-02-10 08:41:59,546] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:59,547] {logging_mixin.py:103} INFO - [2021-02-10 08:41:59,547] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:41:59,551] {logging_mixin.py:103} INFO - [2021-02-10 08:41:59,551] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:41:59,821] {logging_mixin.py:103} INFO - [2021-02-10 08:41:59,821] {cursor.py:560} INFO - query execution done
[2021-02-10 08:41:59,822] {logging_mixin.py:103} INFO - [2021-02-10 08:41:59,822] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:42:00,014] {logging_mixin.py:103} INFO - [2021-02-10 08:42:00,014] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:00,017] {logging_mixin.py:103} INFO - [2021-02-10 08:42:00,017] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:42:00,198] {logging_mixin.py:103} INFO - [2021-02-10 08:42:00,198] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:00,201] {logging_mixin.py:103} INFO - [2021-02-10 08:42:00,201] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:42:00,385] {logging_mixin.py:103} INFO - [2021-02-10 08:42:00,385] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:00,386] {logging_mixin.py:103} INFO - [2021-02-10 08:42:00,386] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:42:00,390] {logging_mixin.py:103} INFO - [2021-02-10 08:42:00,390] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:42:00,532] {logging_mixin.py:103} INFO - [2021-02-10 08:42:00,531] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:00,542] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:42:00,545] {logging_mixin.py:103} INFO - [2021-02-10 08:42:00,545] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:42:00,831] {logging_mixin.py:103} INFO - [2021-02-10 08:42:00,831] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:00,834] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:42:00,834] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:42:00,836] {logging_mixin.py:103} INFO - [2021-02-10 08:42:00,835] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:42:01,130] {logging_mixin.py:103} INFO - [2021-02-10 08:42:01,130] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:01,130] {logging_mixin.py:103} INFO - [2021-02-10 08:42:01,130] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:42:01,131] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:42:01,133] {logging_mixin.py:103} INFO - [2021-02-10 08:42:01,133] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:42:01,356] {logging_mixin.py:103} INFO - [2021-02-10 08:42:01,355] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:01,357] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:42:01,357] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:42:01,359] {logging_mixin.py:103} INFO - [2021-02-10 08:42:01,358] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:42:01,518] {logging_mixin.py:103} INFO - [2021-02-10 08:42:01,518] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:01,519] {logging_mixin.py:103} INFO - [2021-02-10 08:42:01,518] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:42:01,522] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:42:01,525] {logging_mixin.py:103} INFO - [2021-02-10 08:42:01,525] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:42:02,041] {logging_mixin.py:103} INFO - [2021-02-10 08:42:02,041] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:02,042] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:42:02,042] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:42:02,043] {logging_mixin.py:103} INFO - [2021-02-10 08:42:02,043] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:42:02,235] {logging_mixin.py:103} INFO - [2021-02-10 08:42:02,235] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:02,236] {logging_mixin.py:103} INFO - [2021-02-10 08:42:02,235] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:42:07,650] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:42:41,033] {scheduler_job.py:181} INFO - Started process (PID=61225) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:42:41,035] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:42:41,035] {logging_mixin.py:103} INFO - [2021-02-10 08:42:41,035] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:42:42,876] {logging_mixin.py:103} INFO - [2021-02-10 08:42:42,875] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:42:43,172] {logging_mixin.py:103} INFO - [2021-02-10 08:42:43,172] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:42:43,514] {logging_mixin.py:103} INFO - [2021-02-10 08:42:43,514] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:42:43,514] {logging_mixin.py:103} INFO - [2021-02-10 08:42:43,514] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:42:43,514] {logging_mixin.py:103} INFO - [2021-02-10 08:42:43,514] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:42:44,664] {logging_mixin.py:103} INFO - [2021-02-10 08:42:44,664] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:42:44,847] {logging_mixin.py:103} INFO - [2021-02-10 08:42:44,846] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:44,849] {logging_mixin.py:103} INFO - [2021-02-10 08:42:44,848] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:42:45,011] {logging_mixin.py:103} INFO - [2021-02-10 08:42:45,011] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:45,012] {logging_mixin.py:103} INFO - [2021-02-10 08:42:45,012] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:42:45,162] {logging_mixin.py:103} INFO - [2021-02-10 08:42:45,162] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:45,163] {logging_mixin.py:103} INFO - [2021-02-10 08:42:45,163] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:42:45,385] {logging_mixin.py:103} INFO - [2021-02-10 08:42:45,384] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:45,648] {logging_mixin.py:103} INFO - [2021-02-10 08:42:45,647] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:42:45,939] {logging_mixin.py:103} INFO - [2021-02-10 08:42:45,939] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:45,987] {logging_mixin.py:103} INFO - [2021-02-10 08:42:45,987] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:42:45,988] {logging_mixin.py:103} INFO - [2021-02-10 08:42:45,987] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:42:48,542] {logging_mixin.py:103} INFO - [2021-02-10 08:42:48,542] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:48,547] {logging_mixin.py:103} INFO - [2021-02-10 08:42:48,547] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:42:48,560] {logging_mixin.py:103} INFO - [2021-02-10 08:42:48,560] {data_context.py:1281} INFO - Setting run_name to: 20210210T074248.560531Z
[2021-02-10 08:42:48,561] {logging_mixin.py:103} INFO - [2021-02-10 08:42:48,561] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:42:48,572] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:42:48,575] {logging_mixin.py:103} INFO - [2021-02-10 08:42:48,575] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:42:48,938] {logging_mixin.py:103} INFO - [2021-02-10 08:42:48,937] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:48,939] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:42:48,939] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:42:48,941] {logging_mixin.py:103} INFO - [2021-02-10 08:42:48,941] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:42:49,131] {logging_mixin.py:103} INFO - [2021-02-10 08:42:49,130] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:49,131] {logging_mixin.py:103} INFO - [2021-02-10 08:42:49,131] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:42:49,133] {logging_mixin.py:103} INFO - [2021-02-10 08:42:49,133] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:42:49,288] {logging_mixin.py:103} INFO - [2021-02-10 08:42:49,288] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:49,290] {logging_mixin.py:103} INFO - [2021-02-10 08:42:49,290] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:42:49,465] {logging_mixin.py:103} INFO - [2021-02-10 08:42:49,465] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:49,467] {logging_mixin.py:103} INFO - [2021-02-10 08:42:49,467] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:42:49,621] {logging_mixin.py:103} INFO - [2021-02-10 08:42:49,621] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:49,622] {logging_mixin.py:103} INFO - [2021-02-10 08:42:49,621] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:42:49,645] {logging_mixin.py:103} INFO - [2021-02-10 08:42:49,645] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:42:49,647] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:42:49,649] {logging_mixin.py:103} INFO - [2021-02-10 08:42:49,649] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:42:49,845] {logging_mixin.py:103} INFO - [2021-02-10 08:42:49,845] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:49,846] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:42:49,846] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:42:49,848] {logging_mixin.py:103} INFO - [2021-02-10 08:42:49,848] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:42:50,061] {logging_mixin.py:103} INFO - [2021-02-10 08:42:50,061] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:50,062] {logging_mixin.py:103} INFO - [2021-02-10 08:42:50,061] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:42:50,064] {logging_mixin.py:103} INFO - [2021-02-10 08:42:50,064] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:42:50,256] {logging_mixin.py:103} INFO - [2021-02-10 08:42:50,256] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:50,258] {logging_mixin.py:103} INFO - [2021-02-10 08:42:50,258] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:42:50,433] {logging_mixin.py:103} INFO - [2021-02-10 08:42:50,433] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:50,436] {logging_mixin.py:103} INFO - [2021-02-10 08:42:50,436] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:42:50,575] {logging_mixin.py:103} INFO - [2021-02-10 08:42:50,575] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:50,578] {logging_mixin.py:103} INFO - [2021-02-10 08:42:50,578] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:42:50,758] {logging_mixin.py:103} INFO - [2021-02-10 08:42:50,758] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:50,758] {logging_mixin.py:103} INFO - [2021-02-10 08:42:50,758] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:42:50,763] {logging_mixin.py:103} INFO - [2021-02-10 08:42:50,763] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:42:50,925] {logging_mixin.py:103} INFO - [2021-02-10 08:42:50,925] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:50,936] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:42:50,939] {logging_mixin.py:103} INFO - [2021-02-10 08:42:50,939] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:42:51,145] {logging_mixin.py:103} INFO - [2021-02-10 08:42:51,145] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:51,146] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:42:51,146] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:42:51,148] {logging_mixin.py:103} INFO - [2021-02-10 08:42:51,148] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:42:51,309] {logging_mixin.py:103} INFO - [2021-02-10 08:42:51,308] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:51,310] {logging_mixin.py:103} INFO - [2021-02-10 08:42:51,309] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:42:51,311] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:42:51,313] {logging_mixin.py:103} INFO - [2021-02-10 08:42:51,313] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:42:51,467] {logging_mixin.py:103} INFO - [2021-02-10 08:42:51,467] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:51,468] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:42:51,468] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:42:51,470] {logging_mixin.py:103} INFO - [2021-02-10 08:42:51,470] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:42:51,641] {logging_mixin.py:103} INFO - [2021-02-10 08:42:51,641] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:51,641] {logging_mixin.py:103} INFO - [2021-02-10 08:42:51,641] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:42:51,643] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:42:51,646] {logging_mixin.py:103} INFO - [2021-02-10 08:42:51,646] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:42:51,822] {logging_mixin.py:103} INFO - [2021-02-10 08:42:51,818] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:51,824] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:42:51,826] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:42:51,830] {logging_mixin.py:103} INFO - [2021-02-10 08:42:51,830] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:42:52,024] {logging_mixin.py:103} INFO - [2021-02-10 08:42:52,023] {cursor.py:560} INFO - query execution done
[2021-02-10 08:42:52,024] {logging_mixin.py:103} INFO - [2021-02-10 08:42:52,024] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:42:58,214] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:43:32,445] {scheduler_job.py:181} INFO - Started process (PID=61285) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:43:32,446] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:43:32,447] {logging_mixin.py:103} INFO - [2021-02-10 08:43:32,447] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:43:34,657] {logging_mixin.py:103} INFO - [2021-02-10 08:43:34,657] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:43:34,986] {logging_mixin.py:103} INFO - [2021-02-10 08:43:34,986] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:43:35,338] {logging_mixin.py:103} INFO - [2021-02-10 08:43:35,338] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:43:35,338] {logging_mixin.py:103} INFO - [2021-02-10 08:43:35,338] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:43:35,338] {logging_mixin.py:103} INFO - [2021-02-10 08:43:35,338] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:43:36,470] {logging_mixin.py:103} INFO - [2021-02-10 08:43:36,470] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:43:36,624] {logging_mixin.py:103} INFO - [2021-02-10 08:43:36,622] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:36,631] {logging_mixin.py:103} INFO - [2021-02-10 08:43:36,631] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:43:36,875] {logging_mixin.py:103} INFO - [2021-02-10 08:43:36,875] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:36,876] {logging_mixin.py:103} INFO - [2021-02-10 08:43:36,876] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:43:37,023] {logging_mixin.py:103} INFO - [2021-02-10 08:43:37,023] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:37,026] {logging_mixin.py:103} INFO - [2021-02-10 08:43:37,026] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:43:37,158] {logging_mixin.py:103} INFO - [2021-02-10 08:43:37,158] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:37,396] {logging_mixin.py:103} INFO - [2021-02-10 08:43:37,395] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:43:37,571] {logging_mixin.py:103} INFO - [2021-02-10 08:43:37,570] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:37,618] {logging_mixin.py:103} INFO - [2021-02-10 08:43:37,618] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:43:37,619] {logging_mixin.py:103} INFO - [2021-02-10 08:43:37,619] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:43:38,831] {logging_mixin.py:103} INFO - [2021-02-10 08:43:38,831] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:38,835] {logging_mixin.py:103} INFO - [2021-02-10 08:43:38,835] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:43:38,845] {logging_mixin.py:103} INFO - [2021-02-10 08:43:38,845] {data_context.py:1281} INFO - Setting run_name to: 20210210T074338.845423Z
[2021-02-10 08:43:38,846] {logging_mixin.py:103} INFO - [2021-02-10 08:43:38,846] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:43:38,855] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:43:38,857] {logging_mixin.py:103} INFO - [2021-02-10 08:43:38,857] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:43:39,166] {logging_mixin.py:103} INFO - [2021-02-10 08:43:39,166] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:39,167] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:43:39,167] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:43:39,168] {logging_mixin.py:103} INFO - [2021-02-10 08:43:39,168] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:43:39,475] {logging_mixin.py:103} INFO - [2021-02-10 08:43:39,474] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:39,475] {logging_mixin.py:103} INFO - [2021-02-10 08:43:39,475] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:43:39,477] {logging_mixin.py:103} INFO - [2021-02-10 08:43:39,477] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:43:39,749] {logging_mixin.py:103} INFO - [2021-02-10 08:43:39,749] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:39,751] {logging_mixin.py:103} INFO - [2021-02-10 08:43:39,751] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:43:39,907] {logging_mixin.py:103} INFO - [2021-02-10 08:43:39,907] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:39,909] {logging_mixin.py:103} INFO - [2021-02-10 08:43:39,909] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:43:40,055] {logging_mixin.py:103} INFO - [2021-02-10 08:43:40,055] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:40,055] {logging_mixin.py:103} INFO - [2021-02-10 08:43:40,055] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:43:40,076] {logging_mixin.py:103} INFO - [2021-02-10 08:43:40,076] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:43:40,077] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:43:40,079] {logging_mixin.py:103} INFO - [2021-02-10 08:43:40,078] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:43:40,259] {logging_mixin.py:103} INFO - [2021-02-10 08:43:40,259] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:40,260] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:43:40,260] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:43:40,262] {logging_mixin.py:103} INFO - [2021-02-10 08:43:40,262] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:43:40,413] {logging_mixin.py:103} INFO - [2021-02-10 08:43:40,413] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:40,413] {logging_mixin.py:103} INFO - [2021-02-10 08:43:40,413] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:43:40,416] {logging_mixin.py:103} INFO - [2021-02-10 08:43:40,416] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:43:40,588] {logging_mixin.py:103} INFO - [2021-02-10 08:43:40,588] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:40,590] {logging_mixin.py:103} INFO - [2021-02-10 08:43:40,590] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:43:40,748] {logging_mixin.py:103} INFO - [2021-02-10 08:43:40,748] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:40,751] {logging_mixin.py:103} INFO - [2021-02-10 08:43:40,751] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:43:40,905] {logging_mixin.py:103} INFO - [2021-02-10 08:43:40,905] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:40,907] {logging_mixin.py:103} INFO - [2021-02-10 08:43:40,907] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:43:41,059] {logging_mixin.py:103} INFO - [2021-02-10 08:43:41,059] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:41,060] {logging_mixin.py:103} INFO - [2021-02-10 08:43:41,060] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:43:41,064] {logging_mixin.py:103} INFO - [2021-02-10 08:43:41,064] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:43:41,253] {logging_mixin.py:103} INFO - [2021-02-10 08:43:41,252] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:41,261] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:43:41,265] {logging_mixin.py:103} INFO - [2021-02-10 08:43:41,265] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:43:41,493] {logging_mixin.py:103} INFO - [2021-02-10 08:43:41,493] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:41,494] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:43:41,495] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:43:41,496] {logging_mixin.py:103} INFO - [2021-02-10 08:43:41,496] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:43:41,675] {logging_mixin.py:103} INFO - [2021-02-10 08:43:41,675] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:41,676] {logging_mixin.py:103} INFO - [2021-02-10 08:43:41,675] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:43:41,677] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:43:41,680] {logging_mixin.py:103} INFO - [2021-02-10 08:43:41,680] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:43:41,837] {logging_mixin.py:103} INFO - [2021-02-10 08:43:41,837] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:41,838] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:43:41,838] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:43:41,840] {logging_mixin.py:103} INFO - [2021-02-10 08:43:41,840] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:43:41,996] {logging_mixin.py:103} INFO - [2021-02-10 08:43:41,995] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:41,996] {logging_mixin.py:103} INFO - [2021-02-10 08:43:41,996] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:43:41,997] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:43:42,001] {logging_mixin.py:103} INFO - [2021-02-10 08:43:42,000] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:43:42,177] {logging_mixin.py:103} INFO - [2021-02-10 08:43:42,176] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:42,178] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:43:42,178] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:43:42,179] {logging_mixin.py:103} INFO - [2021-02-10 08:43:42,179] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:43:42,331] {logging_mixin.py:103} INFO - [2021-02-10 08:43:42,331] {cursor.py:560} INFO - query execution done
[2021-02-10 08:43:42,332] {logging_mixin.py:103} INFO - [2021-02-10 08:43:42,331] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:43:47,414] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:44:19,098] {scheduler_job.py:181} INFO - Started process (PID=61345) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:44:19,099] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:44:19,099] {logging_mixin.py:103} INFO - [2021-02-10 08:44:19,099] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:44:21,208] {logging_mixin.py:103} INFO - [2021-02-10 08:44:21,207] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:44:21,621] {logging_mixin.py:103} INFO - [2021-02-10 08:44:21,621] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:44:21,994] {logging_mixin.py:103} INFO - [2021-02-10 08:44:21,994] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:44:21,994] {logging_mixin.py:103} INFO - [2021-02-10 08:44:21,994] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:44:21,995] {logging_mixin.py:103} INFO - [2021-02-10 08:44:21,995] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:44:23,164] {logging_mixin.py:103} INFO - [2021-02-10 08:44:23,164] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:44:23,384] {logging_mixin.py:103} INFO - [2021-02-10 08:44:23,384] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:23,410] {logging_mixin.py:103} INFO - [2021-02-10 08:44:23,410] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:44:23,563] {logging_mixin.py:103} INFO - [2021-02-10 08:44:23,563] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:23,564] {logging_mixin.py:103} INFO - [2021-02-10 08:44:23,564] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:44:23,739] {logging_mixin.py:103} INFO - [2021-02-10 08:44:23,739] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:23,741] {logging_mixin.py:103} INFO - [2021-02-10 08:44:23,741] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:44:23,870] {logging_mixin.py:103} INFO - [2021-02-10 08:44:23,870] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:24,144] {logging_mixin.py:103} INFO - [2021-02-10 08:44:24,144] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:44:24,347] {logging_mixin.py:103} INFO - [2021-02-10 08:44:24,347] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:24,407] {logging_mixin.py:103} INFO - [2021-02-10 08:44:24,406] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:44:24,407] {logging_mixin.py:103} INFO - [2021-02-10 08:44:24,407] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:44:26,549] {logging_mixin.py:103} INFO - [2021-02-10 08:44:26,549] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:26,554] {logging_mixin.py:103} INFO - [2021-02-10 08:44:26,554] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:44:26,566] {logging_mixin.py:103} INFO - [2021-02-10 08:44:26,566] {data_context.py:1281} INFO - Setting run_name to: 20210210T074426.566750Z
[2021-02-10 08:44:26,568] {logging_mixin.py:103} INFO - [2021-02-10 08:44:26,568] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:44:26,578] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:44:26,581] {logging_mixin.py:103} INFO - [2021-02-10 08:44:26,581] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:44:26,785] {logging_mixin.py:103} INFO - [2021-02-10 08:44:26,785] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:26,786] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:44:26,787] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:44:26,788] {logging_mixin.py:103} INFO - [2021-02-10 08:44:26,788] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:44:26,949] {logging_mixin.py:103} INFO - [2021-02-10 08:44:26,948] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:26,949] {logging_mixin.py:103} INFO - [2021-02-10 08:44:26,949] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:44:26,952] {logging_mixin.py:103} INFO - [2021-02-10 08:44:26,952] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:44:27,101] {logging_mixin.py:103} INFO - [2021-02-10 08:44:27,101] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:27,102] {logging_mixin.py:103} INFO - [2021-02-10 08:44:27,102] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:44:27,240] {logging_mixin.py:103} INFO - [2021-02-10 08:44:27,240] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:27,242] {logging_mixin.py:103} INFO - [2021-02-10 08:44:27,242] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:44:27,435] {logging_mixin.py:103} INFO - [2021-02-10 08:44:27,435] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:27,436] {logging_mixin.py:103} INFO - [2021-02-10 08:44:27,436] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:44:27,466] {logging_mixin.py:103} INFO - [2021-02-10 08:44:27,466] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:44:27,467] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:44:27,470] {logging_mixin.py:103} INFO - [2021-02-10 08:44:27,470] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:44:27,713] {logging_mixin.py:103} INFO - [2021-02-10 08:44:27,713] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:27,715] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:44:27,715] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:44:27,716] {logging_mixin.py:103} INFO - [2021-02-10 08:44:27,716] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:44:27,871] {logging_mixin.py:103} INFO - [2021-02-10 08:44:27,871] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:27,872] {logging_mixin.py:103} INFO - [2021-02-10 08:44:27,871] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:44:27,874] {logging_mixin.py:103} INFO - [2021-02-10 08:44:27,873] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:44:28,034] {logging_mixin.py:103} INFO - [2021-02-10 08:44:28,034] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:28,036] {logging_mixin.py:103} INFO - [2021-02-10 08:44:28,035] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:44:28,190] {logging_mixin.py:103} INFO - [2021-02-10 08:44:28,190] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:28,193] {logging_mixin.py:103} INFO - [2021-02-10 08:44:28,193] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:44:28,478] {logging_mixin.py:103} INFO - [2021-02-10 08:44:28,477] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:28,480] {logging_mixin.py:103} INFO - [2021-02-10 08:44:28,480] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:44:28,663] {logging_mixin.py:103} INFO - [2021-02-10 08:44:28,663] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:28,664] {logging_mixin.py:103} INFO - [2021-02-10 08:44:28,664] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:44:28,668] {logging_mixin.py:103} INFO - [2021-02-10 08:44:28,668] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:44:28,828] {logging_mixin.py:103} INFO - [2021-02-10 08:44:28,828] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:28,837] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:44:28,839] {logging_mixin.py:103} INFO - [2021-02-10 08:44:28,839] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:44:29,014] {logging_mixin.py:103} INFO - [2021-02-10 08:44:29,014] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:29,015] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:44:29,015] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:44:29,016] {logging_mixin.py:103} INFO - [2021-02-10 08:44:29,016] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:44:29,678] {logging_mixin.py:103} INFO - [2021-02-10 08:44:29,678] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:29,679] {logging_mixin.py:103} INFO - [2021-02-10 08:44:29,679] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:44:29,680] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:44:29,683] {logging_mixin.py:103} INFO - [2021-02-10 08:44:29,683] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:44:29,911] {logging_mixin.py:103} INFO - [2021-02-10 08:44:29,911] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:29,912] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:44:29,914] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:44:29,917] {logging_mixin.py:103} INFO - [2021-02-10 08:44:29,916] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:44:30,071] {logging_mixin.py:103} INFO - [2021-02-10 08:44:30,070] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:30,071] {logging_mixin.py:103} INFO - [2021-02-10 08:44:30,071] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:44:30,072] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:44:30,074] {logging_mixin.py:103} INFO - [2021-02-10 08:44:30,074] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:44:30,271] {logging_mixin.py:103} INFO - [2021-02-10 08:44:30,271] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:30,271] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:44:30,271] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:44:30,272] {logging_mixin.py:103} INFO - [2021-02-10 08:44:30,272] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:44:30,422] {logging_mixin.py:103} INFO - [2021-02-10 08:44:30,422] {cursor.py:560} INFO - query execution done
[2021-02-10 08:44:30,423] {logging_mixin.py:103} INFO - [2021-02-10 08:44:30,423] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:44:36,282] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:45:12,024] {scheduler_job.py:181} INFO - Started process (PID=61412) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:45:12,026] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:45:12,027] {logging_mixin.py:103} INFO - [2021-02-10 08:45:12,027] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:45:13,752] {logging_mixin.py:103} INFO - [2021-02-10 08:45:13,752] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:45:14,042] {logging_mixin.py:103} INFO - [2021-02-10 08:45:14,042] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:45:14,384] {logging_mixin.py:103} INFO - [2021-02-10 08:45:14,384] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:45:14,384] {logging_mixin.py:103} INFO - [2021-02-10 08:45:14,384] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:45:14,384] {logging_mixin.py:103} INFO - [2021-02-10 08:45:14,384] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:45:15,272] {logging_mixin.py:103} INFO - [2021-02-10 08:45:15,271] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:45:15,438] {logging_mixin.py:103} INFO - [2021-02-10 08:45:15,438] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:15,439] {logging_mixin.py:103} INFO - [2021-02-10 08:45:15,439] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:45:15,598] {logging_mixin.py:103} INFO - [2021-02-10 08:45:15,598] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:15,598] {logging_mixin.py:103} INFO - [2021-02-10 08:45:15,598] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:45:15,883] {logging_mixin.py:103} INFO - [2021-02-10 08:45:15,883] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:15,886] {logging_mixin.py:103} INFO - [2021-02-10 08:45:15,885] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:45:16,168] {logging_mixin.py:103} INFO - [2021-02-10 08:45:16,168] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:16,396] {logging_mixin.py:103} INFO - [2021-02-10 08:45:16,396] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:45:16,553] {logging_mixin.py:103} INFO - [2021-02-10 08:45:16,553] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:16,597] {logging_mixin.py:103} INFO - [2021-02-10 08:45:16,597] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:45:16,597] {logging_mixin.py:103} INFO - [2021-02-10 08:45:16,597] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:45:18,158] {logging_mixin.py:103} INFO - [2021-02-10 08:45:18,158] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:18,162] {logging_mixin.py:103} INFO - [2021-02-10 08:45:18,162] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:45:18,172] {logging_mixin.py:103} INFO - [2021-02-10 08:45:18,172] {data_context.py:1281} INFO - Setting run_name to: 20210210T074518.172530Z
[2021-02-10 08:45:18,173] {logging_mixin.py:103} INFO - [2021-02-10 08:45:18,173] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:45:18,182] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:45:18,184] {logging_mixin.py:103} INFO - [2021-02-10 08:45:18,184] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:45:18,480] {logging_mixin.py:103} INFO - [2021-02-10 08:45:18,480] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:18,481] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:45:18,481] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:45:18,482] {logging_mixin.py:103} INFO - [2021-02-10 08:45:18,482] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:45:18,732] {logging_mixin.py:103} INFO - [2021-02-10 08:45:18,731] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:18,732] {logging_mixin.py:103} INFO - [2021-02-10 08:45:18,732] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:45:18,734] {logging_mixin.py:103} INFO - [2021-02-10 08:45:18,734] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:45:18,913] {logging_mixin.py:103} INFO - [2021-02-10 08:45:18,912] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:18,915] {logging_mixin.py:103} INFO - [2021-02-10 08:45:18,915] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:45:19,076] {logging_mixin.py:103} INFO - [2021-02-10 08:45:19,075] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:19,078] {logging_mixin.py:103} INFO - [2021-02-10 08:45:19,078] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:45:19,283] {logging_mixin.py:103} INFO - [2021-02-10 08:45:19,283] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:19,284] {logging_mixin.py:103} INFO - [2021-02-10 08:45:19,284] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:45:19,306] {logging_mixin.py:103} INFO - [2021-02-10 08:45:19,306] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:45:19,308] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:45:19,310] {logging_mixin.py:103} INFO - [2021-02-10 08:45:19,310] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:45:19,612] {logging_mixin.py:103} INFO - [2021-02-10 08:45:19,612] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:19,613] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:45:19,613] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:45:19,614] {logging_mixin.py:103} INFO - [2021-02-10 08:45:19,614] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:45:19,893] {logging_mixin.py:103} INFO - [2021-02-10 08:45:19,893] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:19,893] {logging_mixin.py:103} INFO - [2021-02-10 08:45:19,893] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:45:19,896] {logging_mixin.py:103} INFO - [2021-02-10 08:45:19,896] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:45:20,051] {logging_mixin.py:103} INFO - [2021-02-10 08:45:20,051] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:20,052] {logging_mixin.py:103} INFO - [2021-02-10 08:45:20,052] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:45:20,242] {logging_mixin.py:103} INFO - [2021-02-10 08:45:20,242] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:20,246] {logging_mixin.py:103} INFO - [2021-02-10 08:45:20,245] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:45:20,426] {logging_mixin.py:103} INFO - [2021-02-10 08:45:20,426] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:20,428] {logging_mixin.py:103} INFO - [2021-02-10 08:45:20,428] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:45:20,916] {logging_mixin.py:103} INFO - [2021-02-10 08:45:20,916] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:20,917] {logging_mixin.py:103} INFO - [2021-02-10 08:45:20,916] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:45:20,921] {logging_mixin.py:103} INFO - [2021-02-10 08:45:20,920] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:45:21,530] {logging_mixin.py:103} INFO - [2021-02-10 08:45:21,530] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:21,542] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:45:21,545] {logging_mixin.py:103} INFO - [2021-02-10 08:45:21,544] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:45:21,769] {logging_mixin.py:103} INFO - [2021-02-10 08:45:21,769] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:21,771] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:45:21,771] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:45:21,772] {logging_mixin.py:103} INFO - [2021-02-10 08:45:21,772] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:45:22,760] {logging_mixin.py:103} INFO - [2021-02-10 08:45:22,760] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:22,760] {logging_mixin.py:103} INFO - [2021-02-10 08:45:22,760] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:45:22,761] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:45:22,764] {logging_mixin.py:103} INFO - [2021-02-10 08:45:22,764] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:45:23,010] {logging_mixin.py:103} INFO - [2021-02-10 08:45:23,010] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:23,011] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:45:23,012] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:45:23,013] {logging_mixin.py:103} INFO - [2021-02-10 08:45:23,013] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:45:23,683] {logging_mixin.py:103} INFO - [2021-02-10 08:45:23,683] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:23,684] {logging_mixin.py:103} INFO - [2021-02-10 08:45:23,684] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:45:23,685] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:45:23,688] {logging_mixin.py:103} INFO - [2021-02-10 08:45:23,688] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:45:24,108] {logging_mixin.py:103} INFO - [2021-02-10 08:45:24,108] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:24,110] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:45:24,110] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:45:24,112] {logging_mixin.py:103} INFO - [2021-02-10 08:45:24,112] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:45:24,372] {logging_mixin.py:103} INFO - [2021-02-10 08:45:24,372] {cursor.py:560} INFO - query execution done
[2021-02-10 08:45:24,373] {logging_mixin.py:103} INFO - [2021-02-10 08:45:24,372] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:45:29,556] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:46:02,080] {scheduler_job.py:181} INFO - Started process (PID=61477) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:46:02,080] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:46:02,081] {logging_mixin.py:103} INFO - [2021-02-10 08:46:02,081] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:46:03,751] {logging_mixin.py:103} INFO - [2021-02-10 08:46:03,751] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:46:04,059] {logging_mixin.py:103} INFO - [2021-02-10 08:46:04,059] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:46:04,383] {logging_mixin.py:103} INFO - [2021-02-10 08:46:04,383] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:46:04,384] {logging_mixin.py:103} INFO - [2021-02-10 08:46:04,384] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:46:04,384] {logging_mixin.py:103} INFO - [2021-02-10 08:46:04,384] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:46:05,770] {logging_mixin.py:103} INFO - [2021-02-10 08:46:05,770] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:46:05,924] {logging_mixin.py:103} INFO - [2021-02-10 08:46:05,924] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:05,926] {logging_mixin.py:103} INFO - [2021-02-10 08:46:05,926] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:46:06,094] {logging_mixin.py:103} INFO - [2021-02-10 08:46:06,094] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:06,094] {logging_mixin.py:103} INFO - [2021-02-10 08:46:06,094] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:46:06,245] {logging_mixin.py:103} INFO - [2021-02-10 08:46:06,245] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:06,246] {logging_mixin.py:103} INFO - [2021-02-10 08:46:06,246] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:46:06,391] {logging_mixin.py:103} INFO - [2021-02-10 08:46:06,391] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:06,605] {logging_mixin.py:103} INFO - [2021-02-10 08:46:06,605] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:46:06,778] {logging_mixin.py:103} INFO - [2021-02-10 08:46:06,777] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:06,822] {logging_mixin.py:103} INFO - [2021-02-10 08:46:06,822] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:46:06,822] {logging_mixin.py:103} INFO - [2021-02-10 08:46:06,822] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:46:08,669] {logging_mixin.py:103} INFO - [2021-02-10 08:46:08,669] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:08,673] {logging_mixin.py:103} INFO - [2021-02-10 08:46:08,672] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:46:08,683] {logging_mixin.py:103} INFO - [2021-02-10 08:46:08,683] {data_context.py:1281} INFO - Setting run_name to: 20210210T074608.683759Z
[2021-02-10 08:46:08,685] {logging_mixin.py:103} INFO - [2021-02-10 08:46:08,684] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:46:08,693] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:46:08,695] {logging_mixin.py:103} INFO - [2021-02-10 08:46:08,695] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:46:08,851] {logging_mixin.py:103} INFO - [2021-02-10 08:46:08,851] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:08,852] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:46:08,853] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:46:08,854] {logging_mixin.py:103} INFO - [2021-02-10 08:46:08,854] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:46:09,022] {logging_mixin.py:103} INFO - [2021-02-10 08:46:09,022] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:09,022] {logging_mixin.py:103} INFO - [2021-02-10 08:46:09,022] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:46:09,025] {logging_mixin.py:103} INFO - [2021-02-10 08:46:09,024] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:46:09,182] {logging_mixin.py:103} INFO - [2021-02-10 08:46:09,182] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:09,185] {logging_mixin.py:103} INFO - [2021-02-10 08:46:09,185] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:46:09,792] {logging_mixin.py:103} INFO - [2021-02-10 08:46:09,792] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:09,795] {logging_mixin.py:103} INFO - [2021-02-10 08:46:09,795] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:46:10,687] {logging_mixin.py:103} INFO - [2021-02-10 08:46:10,687] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:10,687] {logging_mixin.py:103} INFO - [2021-02-10 08:46:10,687] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:46:10,708] {logging_mixin.py:103} INFO - [2021-02-10 08:46:10,708] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:46:10,709] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:46:10,710] {logging_mixin.py:103} INFO - [2021-02-10 08:46:10,710] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:46:10,910] {logging_mixin.py:103} INFO - [2021-02-10 08:46:10,910] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:10,911] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:46:10,911] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:46:10,913] {logging_mixin.py:103} INFO - [2021-02-10 08:46:10,913] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:46:11,094] {logging_mixin.py:103} INFO - [2021-02-10 08:46:11,094] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:11,094] {logging_mixin.py:103} INFO - [2021-02-10 08:46:11,094] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:46:11,096] {logging_mixin.py:103} INFO - [2021-02-10 08:46:11,096] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:46:11,285] {logging_mixin.py:103} INFO - [2021-02-10 08:46:11,285] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:11,286] {logging_mixin.py:103} INFO - [2021-02-10 08:46:11,286] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:46:11,443] {logging_mixin.py:103} INFO - [2021-02-10 08:46:11,443] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:11,446] {logging_mixin.py:103} INFO - [2021-02-10 08:46:11,446] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:46:12,226] {logging_mixin.py:103} INFO - [2021-02-10 08:46:12,226] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:12,229] {logging_mixin.py:103} INFO - [2021-02-10 08:46:12,229] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:46:12,405] {logging_mixin.py:103} INFO - [2021-02-10 08:46:12,405] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:12,405] {logging_mixin.py:103} INFO - [2021-02-10 08:46:12,405] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:46:12,408] {logging_mixin.py:103} INFO - [2021-02-10 08:46:12,408] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:46:13,145] {logging_mixin.py:103} INFO - [2021-02-10 08:46:13,144] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:13,157] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:46:13,159] {logging_mixin.py:103} INFO - [2021-02-10 08:46:13,159] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:46:14,064] {logging_mixin.py:103} INFO - [2021-02-10 08:46:14,064] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:14,065] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:46:14,065] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:46:14,067] {logging_mixin.py:103} INFO - [2021-02-10 08:46:14,066] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:46:14,229] {logging_mixin.py:103} INFO - [2021-02-10 08:46:14,229] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:14,229] {logging_mixin.py:103} INFO - [2021-02-10 08:46:14,229] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:46:14,230] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:46:14,233] {logging_mixin.py:103} INFO - [2021-02-10 08:46:14,233] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:46:14,477] {logging_mixin.py:103} INFO - [2021-02-10 08:46:14,477] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:14,478] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:46:14,478] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:46:14,479] {logging_mixin.py:103} INFO - [2021-02-10 08:46:14,479] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:46:14,658] {logging_mixin.py:103} INFO - [2021-02-10 08:46:14,658] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:14,659] {logging_mixin.py:103} INFO - [2021-02-10 08:46:14,659] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:46:14,660] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:46:14,663] {logging_mixin.py:103} INFO - [2021-02-10 08:46:14,663] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:46:14,825] {logging_mixin.py:103} INFO - [2021-02-10 08:46:14,825] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:14,826] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:46:14,826] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:46:14,827] {logging_mixin.py:103} INFO - [2021-02-10 08:46:14,827] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:46:15,093] {logging_mixin.py:103} INFO - [2021-02-10 08:46:15,093] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:15,094] {logging_mixin.py:103} INFO - [2021-02-10 08:46:15,094] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:46:20,307] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:46:46,623] {scheduler_job.py:181} INFO - Started process (PID=61537) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:46:46,624] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:46:46,624] {logging_mixin.py:103} INFO - [2021-02-10 08:46:46,624] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:46:48,343] {logging_mixin.py:103} INFO - [2021-02-10 08:46:48,343] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:46:48,630] {logging_mixin.py:103} INFO - [2021-02-10 08:46:48,630] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:46:48,959] {logging_mixin.py:103} INFO - [2021-02-10 08:46:48,959] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:46:48,959] {logging_mixin.py:103} INFO - [2021-02-10 08:46:48,959] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:46:48,960] {logging_mixin.py:103} INFO - [2021-02-10 08:46:48,959] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:46:50,010] {logging_mixin.py:103} INFO - [2021-02-10 08:46:50,010] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:46:50,140] {logging_mixin.py:103} INFO - [2021-02-10 08:46:50,140] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:50,142] {logging_mixin.py:103} INFO - [2021-02-10 08:46:50,142] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:46:50,295] {logging_mixin.py:103} INFO - [2021-02-10 08:46:50,295] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:50,296] {logging_mixin.py:103} INFO - [2021-02-10 08:46:50,295] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:46:50,456] {logging_mixin.py:103} INFO - [2021-02-10 08:46:50,456] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:50,459] {logging_mixin.py:103} INFO - [2021-02-10 08:46:50,459] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:46:51,237] {logging_mixin.py:103} INFO - [2021-02-10 08:46:51,237] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:51,502] {logging_mixin.py:103} INFO - [2021-02-10 08:46:51,501] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:46:51,736] {logging_mixin.py:103} INFO - [2021-02-10 08:46:51,736] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:51,792] {logging_mixin.py:103} INFO - [2021-02-10 08:46:51,792] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:46:51,792] {logging_mixin.py:103} INFO - [2021-02-10 08:46:51,792] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:46:53,389] {logging_mixin.py:103} INFO - [2021-02-10 08:46:53,388] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:53,394] {logging_mixin.py:103} INFO - [2021-02-10 08:46:53,394] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:46:53,406] {logging_mixin.py:103} INFO - [2021-02-10 08:46:53,406] {data_context.py:1281} INFO - Setting run_name to: 20210210T074653.406233Z
[2021-02-10 08:46:53,408] {logging_mixin.py:103} INFO - [2021-02-10 08:46:53,408] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:46:53,419] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:46:53,421] {logging_mixin.py:103} INFO - [2021-02-10 08:46:53,421] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:46:53,701] {logging_mixin.py:103} INFO - [2021-02-10 08:46:53,701] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:53,703] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:46:53,703] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:46:53,705] {logging_mixin.py:103} INFO - [2021-02-10 08:46:53,705] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:46:53,877] {logging_mixin.py:103} INFO - [2021-02-10 08:46:53,876] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:53,877] {logging_mixin.py:103} INFO - [2021-02-10 08:46:53,877] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:46:53,879] {logging_mixin.py:103} INFO - [2021-02-10 08:46:53,879] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:46:54,044] {logging_mixin.py:103} INFO - [2021-02-10 08:46:54,044] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:54,046] {logging_mixin.py:103} INFO - [2021-02-10 08:46:54,046] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:46:54,258] {logging_mixin.py:103} INFO - [2021-02-10 08:46:54,258] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:54,261] {logging_mixin.py:103} INFO - [2021-02-10 08:46:54,261] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:46:54,474] {logging_mixin.py:103} INFO - [2021-02-10 08:46:54,474] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:54,475] {logging_mixin.py:103} INFO - [2021-02-10 08:46:54,475] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:46:54,487] {logging_mixin.py:103} INFO - [2021-02-10 08:46:54,487] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:46:54,489] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:46:54,491] {logging_mixin.py:103} INFO - [2021-02-10 08:46:54,490] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:46:54,648] {logging_mixin.py:103} INFO - [2021-02-10 08:46:54,648] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:54,649] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:46:54,649] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:46:54,651] {logging_mixin.py:103} INFO - [2021-02-10 08:46:54,651] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:46:55,235] {logging_mixin.py:103} INFO - [2021-02-10 08:46:55,235] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:55,236] {logging_mixin.py:103} INFO - [2021-02-10 08:46:55,236] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:46:55,239] {logging_mixin.py:103} INFO - [2021-02-10 08:46:55,239] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:46:55,844] {logging_mixin.py:103} INFO - [2021-02-10 08:46:55,844] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:55,846] {logging_mixin.py:103} INFO - [2021-02-10 08:46:55,846] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:46:55,993] {logging_mixin.py:103} INFO - [2021-02-10 08:46:55,992] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:55,995] {logging_mixin.py:103} INFO - [2021-02-10 08:46:55,995] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:46:56,156] {logging_mixin.py:103} INFO - [2021-02-10 08:46:56,155] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:56,160] {logging_mixin.py:103} INFO - [2021-02-10 08:46:56,160] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:46:56,462] {logging_mixin.py:103} INFO - [2021-02-10 08:46:56,462] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:56,463] {logging_mixin.py:103} INFO - [2021-02-10 08:46:56,463] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:46:56,468] {logging_mixin.py:103} INFO - [2021-02-10 08:46:56,468] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:46:56,665] {logging_mixin.py:103} INFO - [2021-02-10 08:46:56,664] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:56,670] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:46:56,672] {logging_mixin.py:103} INFO - [2021-02-10 08:46:56,672] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:46:57,138] {logging_mixin.py:103} INFO - [2021-02-10 08:46:57,138] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:57,140] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:46:57,140] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:46:57,143] {logging_mixin.py:103} INFO - [2021-02-10 08:46:57,142] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:46:57,310] {logging_mixin.py:103} INFO - [2021-02-10 08:46:57,310] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:57,311] {logging_mixin.py:103} INFO - [2021-02-10 08:46:57,311] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:46:57,312] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:46:57,315] {logging_mixin.py:103} INFO - [2021-02-10 08:46:57,315] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:46:57,999] {logging_mixin.py:103} INFO - [2021-02-10 08:46:57,999] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:58,000] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:46:58,000] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:46:58,002] {logging_mixin.py:103} INFO - [2021-02-10 08:46:58,001] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:46:58,669] {logging_mixin.py:103} INFO - [2021-02-10 08:46:58,669] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:58,670] {logging_mixin.py:103} INFO - [2021-02-10 08:46:58,670] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:46:58,671] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:46:58,674] {logging_mixin.py:103} INFO - [2021-02-10 08:46:58,674] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:46:59,224] {logging_mixin.py:103} INFO - [2021-02-10 08:46:59,224] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:59,225] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:46:59,225] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:46:59,227] {logging_mixin.py:103} INFO - [2021-02-10 08:46:59,226] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:46:59,417] {logging_mixin.py:103} INFO - [2021-02-10 08:46:59,417] {cursor.py:560} INFO - query execution done
[2021-02-10 08:46:59,418] {logging_mixin.py:103} INFO - [2021-02-10 08:46:59,417] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:47:04,150] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:47:30,750] {scheduler_job.py:181} INFO - Started process (PID=61597) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:47:30,750] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:47:30,751] {logging_mixin.py:103} INFO - [2021-02-10 08:47:30,751] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:47:32,423] {logging_mixin.py:103} INFO - [2021-02-10 08:47:32,423] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:47:32,720] {logging_mixin.py:103} INFO - [2021-02-10 08:47:32,720] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:47:33,049] {logging_mixin.py:103} INFO - [2021-02-10 08:47:33,049] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:47:33,050] {logging_mixin.py:103} INFO - [2021-02-10 08:47:33,050] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:47:33,050] {logging_mixin.py:103} INFO - [2021-02-10 08:47:33,050] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:47:34,248] {logging_mixin.py:103} INFO - [2021-02-10 08:47:34,248] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:47:34,433] {logging_mixin.py:103} INFO - [2021-02-10 08:47:34,433] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:34,435] {logging_mixin.py:103} INFO - [2021-02-10 08:47:34,435] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:47:34,906] {logging_mixin.py:103} INFO - [2021-02-10 08:47:34,906] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:34,907] {logging_mixin.py:103} INFO - [2021-02-10 08:47:34,907] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:47:35,068] {logging_mixin.py:103} INFO - [2021-02-10 08:47:35,068] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:35,069] {logging_mixin.py:103} INFO - [2021-02-10 08:47:35,069] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:47:35,243] {logging_mixin.py:103} INFO - [2021-02-10 08:47:35,242] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:35,515] {logging_mixin.py:103} INFO - [2021-02-10 08:47:35,515] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:47:35,679] {logging_mixin.py:103} INFO - [2021-02-10 08:47:35,679] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:35,720] {logging_mixin.py:103} INFO - [2021-02-10 08:47:35,720] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:47:35,721] {logging_mixin.py:103} INFO - [2021-02-10 08:47:35,720] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:47:38,782] {logging_mixin.py:103} INFO - [2021-02-10 08:47:38,782] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:38,785] {logging_mixin.py:103} INFO - [2021-02-10 08:47:38,785] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:47:38,796] {logging_mixin.py:103} INFO - [2021-02-10 08:47:38,796] {data_context.py:1281} INFO - Setting run_name to: 20210210T074738.796661Z
[2021-02-10 08:47:38,798] {logging_mixin.py:103} INFO - [2021-02-10 08:47:38,798] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:47:38,807] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:47:38,808] {logging_mixin.py:103} INFO - [2021-02-10 08:47:38,808] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:47:39,030] {logging_mixin.py:103} INFO - [2021-02-10 08:47:39,030] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:39,031] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:47:39,031] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:47:39,033] {logging_mixin.py:103} INFO - [2021-02-10 08:47:39,033] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:47:39,310] {logging_mixin.py:103} INFO - [2021-02-10 08:47:39,310] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:39,311] {logging_mixin.py:103} INFO - [2021-02-10 08:47:39,311] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:47:39,313] {logging_mixin.py:103} INFO - [2021-02-10 08:47:39,313] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:47:39,618] {logging_mixin.py:103} INFO - [2021-02-10 08:47:39,618] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:39,621] {logging_mixin.py:103} INFO - [2021-02-10 08:47:39,621] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:47:39,799] {logging_mixin.py:103} INFO - [2021-02-10 08:47:39,799] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:39,802] {logging_mixin.py:103} INFO - [2021-02-10 08:47:39,802] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:47:39,969] {logging_mixin.py:103} INFO - [2021-02-10 08:47:39,968] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:39,969] {logging_mixin.py:103} INFO - [2021-02-10 08:47:39,969] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:47:39,981] {logging_mixin.py:103} INFO - [2021-02-10 08:47:39,980] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:47:39,981] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:47:39,983] {logging_mixin.py:103} INFO - [2021-02-10 08:47:39,983] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:47:40,240] {logging_mixin.py:103} INFO - [2021-02-10 08:47:40,240] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:40,241] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:47:40,241] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:47:40,242] {logging_mixin.py:103} INFO - [2021-02-10 08:47:40,242] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:47:40,426] {logging_mixin.py:103} INFO - [2021-02-10 08:47:40,426] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:40,426] {logging_mixin.py:103} INFO - [2021-02-10 08:47:40,426] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:47:40,429] {logging_mixin.py:103} INFO - [2021-02-10 08:47:40,429] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:47:40,586] {logging_mixin.py:103} INFO - [2021-02-10 08:47:40,586] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:40,588] {logging_mixin.py:103} INFO - [2021-02-10 08:47:40,588] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:47:40,811] {logging_mixin.py:103} INFO - [2021-02-10 08:47:40,811] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:40,814] {logging_mixin.py:103} INFO - [2021-02-10 08:47:40,814] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:47:40,957] {logging_mixin.py:103} INFO - [2021-02-10 08:47:40,957] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:40,960] {logging_mixin.py:103} INFO - [2021-02-10 08:47:40,960] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:47:41,106] {logging_mixin.py:103} INFO - [2021-02-10 08:47:41,106] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:41,107] {logging_mixin.py:103} INFO - [2021-02-10 08:47:41,107] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:47:41,111] {logging_mixin.py:103} INFO - [2021-02-10 08:47:41,111] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:47:41,364] {logging_mixin.py:103} INFO - [2021-02-10 08:47:41,364] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:41,369] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:47:41,371] {logging_mixin.py:103} INFO - [2021-02-10 08:47:41,371] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:47:41,513] {logging_mixin.py:103} INFO - [2021-02-10 08:47:41,513] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:41,514] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:47:41,514] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:47:41,516] {logging_mixin.py:103} INFO - [2021-02-10 08:47:41,516] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:47:41,664] {logging_mixin.py:103} INFO - [2021-02-10 08:47:41,664] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:41,665] {logging_mixin.py:103} INFO - [2021-02-10 08:47:41,665] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:47:41,666] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:47:41,669] {logging_mixin.py:103} INFO - [2021-02-10 08:47:41,669] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:47:41,841] {logging_mixin.py:103} INFO - [2021-02-10 08:47:41,841] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:41,842] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:47:41,842] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:47:41,844] {logging_mixin.py:103} INFO - [2021-02-10 08:47:41,844] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:47:42,007] {logging_mixin.py:103} INFO - [2021-02-10 08:47:42,007] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:42,008] {logging_mixin.py:103} INFO - [2021-02-10 08:47:42,007] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:47:42,009] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:47:42,012] {logging_mixin.py:103} INFO - [2021-02-10 08:47:42,012] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:47:42,291] {logging_mixin.py:103} INFO - [2021-02-10 08:47:42,291] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:42,293] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:47:42,293] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:47:42,294] {logging_mixin.py:103} INFO - [2021-02-10 08:47:42,294] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:47:42,562] {logging_mixin.py:103} INFO - [2021-02-10 08:47:42,562] {cursor.py:560} INFO - query execution done
[2021-02-10 08:47:42,563] {logging_mixin.py:103} INFO - [2021-02-10 08:47:42,563] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:47:46,421] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:48:13,244] {scheduler_job.py:181} INFO - Started process (PID=61654) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:48:13,244] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:48:13,244] {logging_mixin.py:103} INFO - [2021-02-10 08:48:13,244] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:48:14,906] {logging_mixin.py:103} INFO - [2021-02-10 08:48:14,906] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:48:15,196] {logging_mixin.py:103} INFO - [2021-02-10 08:48:15,195] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:48:15,534] {logging_mixin.py:103} INFO - [2021-02-10 08:48:15,534] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:48:15,534] {logging_mixin.py:103} INFO - [2021-02-10 08:48:15,534] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:48:15,534] {logging_mixin.py:103} INFO - [2021-02-10 08:48:15,534] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:48:16,641] {logging_mixin.py:103} INFO - [2021-02-10 08:48:16,641] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:48:16,825] {logging_mixin.py:103} INFO - [2021-02-10 08:48:16,824] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:16,826] {logging_mixin.py:103} INFO - [2021-02-10 08:48:16,826] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:48:17,087] {logging_mixin.py:103} INFO - [2021-02-10 08:48:17,087] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:17,088] {logging_mixin.py:103} INFO - [2021-02-10 08:48:17,088] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:48:17,228] {logging_mixin.py:103} INFO - [2021-02-10 08:48:17,228] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:17,231] {logging_mixin.py:103} INFO - [2021-02-10 08:48:17,230] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:48:17,494] {logging_mixin.py:103} INFO - [2021-02-10 08:48:17,493] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:17,721] {logging_mixin.py:103} INFO - [2021-02-10 08:48:17,721] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:48:17,886] {logging_mixin.py:103} INFO - [2021-02-10 08:48:17,886] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:17,931] {logging_mixin.py:103} INFO - [2021-02-10 08:48:17,930] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:48:17,931] {logging_mixin.py:103} INFO - [2021-02-10 08:48:17,931] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:48:19,642] {logging_mixin.py:103} INFO - [2021-02-10 08:48:19,642] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:19,646] {logging_mixin.py:103} INFO - [2021-02-10 08:48:19,646] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:48:19,656] {logging_mixin.py:103} INFO - [2021-02-10 08:48:19,656] {data_context.py:1281} INFO - Setting run_name to: 20210210T074819.656752Z
[2021-02-10 08:48:19,658] {logging_mixin.py:103} INFO - [2021-02-10 08:48:19,658] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:48:19,667] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:48:19,669] {logging_mixin.py:103} INFO - [2021-02-10 08:48:19,669] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:48:19,922] {logging_mixin.py:103} INFO - [2021-02-10 08:48:19,922] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:19,923] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:48:19,924] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:48:19,925] {logging_mixin.py:103} INFO - [2021-02-10 08:48:19,925] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:48:20,941] {logging_mixin.py:103} INFO - [2021-02-10 08:48:20,940] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:20,941] {logging_mixin.py:103} INFO - [2021-02-10 08:48:20,941] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:48:20,945] {logging_mixin.py:103} INFO - [2021-02-10 08:48:20,944] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:48:21,225] {logging_mixin.py:103} INFO - [2021-02-10 08:48:21,224] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:21,227] {logging_mixin.py:103} INFO - [2021-02-10 08:48:21,227] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:48:21,396] {logging_mixin.py:103} INFO - [2021-02-10 08:48:21,396] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:21,399] {logging_mixin.py:103} INFO - [2021-02-10 08:48:21,399] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:48:21,579] {logging_mixin.py:103} INFO - [2021-02-10 08:48:21,578] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:21,579] {logging_mixin.py:103} INFO - [2021-02-10 08:48:21,579] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:48:21,590] {logging_mixin.py:103} INFO - [2021-02-10 08:48:21,590] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:48:21,591] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:48:21,593] {logging_mixin.py:103} INFO - [2021-02-10 08:48:21,593] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:48:22,482] {logging_mixin.py:103} INFO - [2021-02-10 08:48:22,482] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:22,483] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:48:22,483] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:48:22,485] {logging_mixin.py:103} INFO - [2021-02-10 08:48:22,485] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:48:22,639] {logging_mixin.py:103} INFO - [2021-02-10 08:48:22,639] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:22,640] {logging_mixin.py:103} INFO - [2021-02-10 08:48:22,639] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:48:22,642] {logging_mixin.py:103} INFO - [2021-02-10 08:48:22,642] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:48:22,793] {logging_mixin.py:103} INFO - [2021-02-10 08:48:22,793] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:22,795] {logging_mixin.py:103} INFO - [2021-02-10 08:48:22,795] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:48:23,398] {logging_mixin.py:103} INFO - [2021-02-10 08:48:23,398] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:23,401] {logging_mixin.py:103} INFO - [2021-02-10 08:48:23,401] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:48:23,993] {logging_mixin.py:103} INFO - [2021-02-10 08:48:23,993] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:23,996] {logging_mixin.py:103} INFO - [2021-02-10 08:48:23,995] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:48:24,941] {logging_mixin.py:103} INFO - [2021-02-10 08:48:24,941] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:24,942] {logging_mixin.py:103} INFO - [2021-02-10 08:48:24,942] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:48:24,946] {logging_mixin.py:103} INFO - [2021-02-10 08:48:24,946] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:48:25,112] {logging_mixin.py:103} INFO - [2021-02-10 08:48:25,112] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:25,115] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:48:25,117] {logging_mixin.py:103} INFO - [2021-02-10 08:48:25,117] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:48:25,265] {logging_mixin.py:103} INFO - [2021-02-10 08:48:25,265] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:25,267] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:48:25,267] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:48:25,269] {logging_mixin.py:103} INFO - [2021-02-10 08:48:25,269] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:48:25,856] {logging_mixin.py:103} INFO - [2021-02-10 08:48:25,856] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:25,857] {logging_mixin.py:103} INFO - [2021-02-10 08:48:25,857] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:48:25,858] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:48:25,860] {logging_mixin.py:103} INFO - [2021-02-10 08:48:25,860] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:48:26,470] {logging_mixin.py:103} INFO - [2021-02-10 08:48:26,470] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:26,471] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:48:26,472] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:48:26,473] {logging_mixin.py:103} INFO - [2021-02-10 08:48:26,473] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:48:26,720] {logging_mixin.py:103} INFO - [2021-02-10 08:48:26,720] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:26,721] {logging_mixin.py:103} INFO - [2021-02-10 08:48:26,721] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:48:26,722] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:48:26,725] {logging_mixin.py:103} INFO - [2021-02-10 08:48:26,725] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:48:26,891] {logging_mixin.py:103} INFO - [2021-02-10 08:48:26,890] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:26,892] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:48:26,892] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:48:26,893] {logging_mixin.py:103} INFO - [2021-02-10 08:48:26,893] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:48:27,404] {logging_mixin.py:103} INFO - [2021-02-10 08:48:27,404] {cursor.py:560} INFO - query execution done
[2021-02-10 08:48:27,404] {logging_mixin.py:103} INFO - [2021-02-10 08:48:27,404] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:48:31,188] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:48:58,606] {scheduler_job.py:181} INFO - Started process (PID=61712) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:48:58,607] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:48:58,607] {logging_mixin.py:103} INFO - [2021-02-10 08:48:58,607] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:49:00,229] {logging_mixin.py:103} INFO - [2021-02-10 08:49:00,229] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:49:00,528] {logging_mixin.py:103} INFO - [2021-02-10 08:49:00,528] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:49:00,861] {logging_mixin.py:103} INFO - [2021-02-10 08:49:00,861] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:49:00,862] {logging_mixin.py:103} INFO - [2021-02-10 08:49:00,862] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:49:00,862] {logging_mixin.py:103} INFO - [2021-02-10 08:49:00,862] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:49:01,934] {logging_mixin.py:103} INFO - [2021-02-10 08:49:01,934] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:49:02,198] {logging_mixin.py:103} INFO - [2021-02-10 08:49:02,198] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:02,200] {logging_mixin.py:103} INFO - [2021-02-10 08:49:02,199] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:49:02,443] {logging_mixin.py:103} INFO - [2021-02-10 08:49:02,443] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:02,444] {logging_mixin.py:103} INFO - [2021-02-10 08:49:02,444] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:49:02,816] {logging_mixin.py:103} INFO - [2021-02-10 08:49:02,816] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:02,817] {logging_mixin.py:103} INFO - [2021-02-10 08:49:02,817] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:49:03,145] {logging_mixin.py:103} INFO - [2021-02-10 08:49:03,145] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:03,400] {logging_mixin.py:103} INFO - [2021-02-10 08:49:03,400] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:49:03,870] {logging_mixin.py:103} INFO - [2021-02-10 08:49:03,870] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:03,916] {logging_mixin.py:103} INFO - [2021-02-10 08:49:03,916] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:49:03,916] {logging_mixin.py:103} INFO - [2021-02-10 08:49:03,916] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:49:06,103] {logging_mixin.py:103} INFO - [2021-02-10 08:49:06,103] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:06,106] {logging_mixin.py:103} INFO - [2021-02-10 08:49:06,106] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:49:06,117] {logging_mixin.py:103} INFO - [2021-02-10 08:49:06,117] {data_context.py:1281} INFO - Setting run_name to: 20210210T074906.117081Z
[2021-02-10 08:49:06,118] {logging_mixin.py:103} INFO - [2021-02-10 08:49:06,118] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:49:06,127] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:49:06,129] {logging_mixin.py:103} INFO - [2021-02-10 08:49:06,128] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:49:06,315] {logging_mixin.py:103} INFO - [2021-02-10 08:49:06,315] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:06,316] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:49:06,317] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:49:06,318] {logging_mixin.py:103} INFO - [2021-02-10 08:49:06,318] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:49:06,504] {logging_mixin.py:103} INFO - [2021-02-10 08:49:06,504] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:06,504] {logging_mixin.py:103} INFO - [2021-02-10 08:49:06,504] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:49:06,505] {logging_mixin.py:103} INFO - [2021-02-10 08:49:06,505] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:49:06,681] {logging_mixin.py:103} INFO - [2021-02-10 08:49:06,681] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:06,684] {logging_mixin.py:103} INFO - [2021-02-10 08:49:06,684] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:49:06,973] {logging_mixin.py:103} INFO - [2021-02-10 08:49:06,973] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:06,976] {logging_mixin.py:103} INFO - [2021-02-10 08:49:06,976] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:49:07,273] {logging_mixin.py:103} INFO - [2021-02-10 08:49:07,273] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:07,274] {logging_mixin.py:103} INFO - [2021-02-10 08:49:07,273] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:49:07,285] {logging_mixin.py:103} INFO - [2021-02-10 08:49:07,285] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:49:07,285] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:49:07,287] {logging_mixin.py:103} INFO - [2021-02-10 08:49:07,287] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:49:07,514] {logging_mixin.py:103} INFO - [2021-02-10 08:49:07,514] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:07,515] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:49:07,515] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:49:07,515] {logging_mixin.py:103} INFO - [2021-02-10 08:49:07,515] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:49:07,691] {logging_mixin.py:103} INFO - [2021-02-10 08:49:07,690] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:07,693] {logging_mixin.py:103} INFO - [2021-02-10 08:49:07,692] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:49:07,695] {logging_mixin.py:103} INFO - [2021-02-10 08:49:07,695] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:49:08,251] {logging_mixin.py:103} INFO - [2021-02-10 08:49:08,251] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:08,252] {logging_mixin.py:103} INFO - [2021-02-10 08:49:08,252] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:49:08,505] {logging_mixin.py:103} INFO - [2021-02-10 08:49:08,505] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:08,509] {logging_mixin.py:103} INFO - [2021-02-10 08:49:08,508] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:49:08,749] {logging_mixin.py:103} INFO - [2021-02-10 08:49:08,749] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:08,752] {logging_mixin.py:103} INFO - [2021-02-10 08:49:08,751] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:49:08,997] {logging_mixin.py:103} INFO - [2021-02-10 08:49:08,997] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:08,998] {logging_mixin.py:103} INFO - [2021-02-10 08:49:08,997] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:49:09,002] {logging_mixin.py:103} INFO - [2021-02-10 08:49:09,002] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:49:09,187] {logging_mixin.py:103} INFO - [2021-02-10 08:49:09,187] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:09,192] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:49:09,195] {logging_mixin.py:103} INFO - [2021-02-10 08:49:09,195] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:49:09,343] {logging_mixin.py:103} INFO - [2021-02-10 08:49:09,343] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:09,345] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:49:09,345] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:49:09,347] {logging_mixin.py:103} INFO - [2021-02-10 08:49:09,347] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:49:09,499] {logging_mixin.py:103} INFO - [2021-02-10 08:49:09,499] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:09,500] {logging_mixin.py:103} INFO - [2021-02-10 08:49:09,500] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:49:09,501] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:49:09,504] {logging_mixin.py:103} INFO - [2021-02-10 08:49:09,504] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:49:09,656] {logging_mixin.py:103} INFO - [2021-02-10 08:49:09,656] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:09,659] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:49:09,659] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:49:09,661] {logging_mixin.py:103} INFO - [2021-02-10 08:49:09,661] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:49:09,808] {logging_mixin.py:103} INFO - [2021-02-10 08:49:09,808] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:09,809] {logging_mixin.py:103} INFO - [2021-02-10 08:49:09,809] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:49:09,809] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:49:09,812] {logging_mixin.py:103} INFO - [2021-02-10 08:49:09,812] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:49:10,709] {logging_mixin.py:103} INFO - [2021-02-10 08:49:10,709] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:10,711] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:49:10,711] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:49:10,716] {logging_mixin.py:103} INFO - [2021-02-10 08:49:10,716] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:49:10,893] {logging_mixin.py:103} INFO - [2021-02-10 08:49:10,892] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:10,893] {logging_mixin.py:103} INFO - [2021-02-10 08:49:10,893] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:49:15,546] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:49:43,309] {scheduler_job.py:181} INFO - Started process (PID=61772) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:49:43,310] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:49:43,310] {logging_mixin.py:103} INFO - [2021-02-10 08:49:43,310] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:49:44,988] {logging_mixin.py:103} INFO - [2021-02-10 08:49:44,988] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:49:45,280] {logging_mixin.py:103} INFO - [2021-02-10 08:49:45,280] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:49:45,609] {logging_mixin.py:103} INFO - [2021-02-10 08:49:45,609] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:49:45,609] {logging_mixin.py:103} INFO - [2021-02-10 08:49:45,609] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:49:45,609] {logging_mixin.py:103} INFO - [2021-02-10 08:49:45,609] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:49:46,654] {logging_mixin.py:103} INFO - [2021-02-10 08:49:46,653] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:49:46,837] {logging_mixin.py:103} INFO - [2021-02-10 08:49:46,837] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:46,839] {logging_mixin.py:103} INFO - [2021-02-10 08:49:46,839] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:49:47,136] {logging_mixin.py:103} INFO - [2021-02-10 08:49:47,136] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:47,137] {logging_mixin.py:103} INFO - [2021-02-10 08:49:47,137] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:49:47,274] {logging_mixin.py:103} INFO - [2021-02-10 08:49:47,274] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:47,277] {logging_mixin.py:103} INFO - [2021-02-10 08:49:47,277] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:49:48,188] {logging_mixin.py:103} INFO - [2021-02-10 08:49:48,188] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:48,400] {logging_mixin.py:103} INFO - [2021-02-10 08:49:48,399] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:49:48,557] {logging_mixin.py:103} INFO - [2021-02-10 08:49:48,557] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:48,597] {logging_mixin.py:103} INFO - [2021-02-10 08:49:48,597] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:49:48,598] {logging_mixin.py:103} INFO - [2021-02-10 08:49:48,598] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:49:51,260] {logging_mixin.py:103} INFO - [2021-02-10 08:49:51,260] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:51,263] {logging_mixin.py:103} INFO - [2021-02-10 08:49:51,263] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:49:51,274] {logging_mixin.py:103} INFO - [2021-02-10 08:49:51,274] {data_context.py:1281} INFO - Setting run_name to: 20210210T074951.274112Z
[2021-02-10 08:49:51,275] {logging_mixin.py:103} INFO - [2021-02-10 08:49:51,275] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:49:51,283] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:49:51,285] {logging_mixin.py:103} INFO - [2021-02-10 08:49:51,285] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:49:51,424] {logging_mixin.py:103} INFO - [2021-02-10 08:49:51,424] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:51,425] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:49:51,426] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:49:51,427] {logging_mixin.py:103} INFO - [2021-02-10 08:49:51,427] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:49:52,489] {logging_mixin.py:103} INFO - [2021-02-10 08:49:52,488] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:52,489] {logging_mixin.py:103} INFO - [2021-02-10 08:49:52,489] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:49:52,491] {logging_mixin.py:103} INFO - [2021-02-10 08:49:52,491] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:49:52,655] {logging_mixin.py:103} INFO - [2021-02-10 08:49:52,655] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:52,658] {logging_mixin.py:103} INFO - [2021-02-10 08:49:52,658] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:49:52,887] {logging_mixin.py:103} INFO - [2021-02-10 08:49:52,887] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:52,890] {logging_mixin.py:103} INFO - [2021-02-10 08:49:52,890] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:49:53,717] {logging_mixin.py:103} INFO - [2021-02-10 08:49:53,717] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:53,718] {logging_mixin.py:103} INFO - [2021-02-10 08:49:53,718] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:49:53,729] {logging_mixin.py:103} INFO - [2021-02-10 08:49:53,729] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:49:53,730] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:49:53,732] {logging_mixin.py:103} INFO - [2021-02-10 08:49:53,732] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:49:53,976] {logging_mixin.py:103} INFO - [2021-02-10 08:49:53,976] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:53,977] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:49:53,977] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:49:53,979] {logging_mixin.py:103} INFO - [2021-02-10 08:49:53,979] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:49:54,130] {logging_mixin.py:103} INFO - [2021-02-10 08:49:54,130] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:54,131] {logging_mixin.py:103} INFO - [2021-02-10 08:49:54,131] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:49:54,134] {logging_mixin.py:103} INFO - [2021-02-10 08:49:54,133] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:49:54,289] {logging_mixin.py:103} INFO - [2021-02-10 08:49:54,289] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:54,290] {logging_mixin.py:103} INFO - [2021-02-10 08:49:54,290] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:49:54,433] {logging_mixin.py:103} INFO - [2021-02-10 08:49:54,433] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:54,436] {logging_mixin.py:103} INFO - [2021-02-10 08:49:54,436] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:49:54,674] {logging_mixin.py:103} INFO - [2021-02-10 08:49:54,674] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:54,677] {logging_mixin.py:103} INFO - [2021-02-10 08:49:54,677] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:49:54,831] {logging_mixin.py:103} INFO - [2021-02-10 08:49:54,831] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:54,832] {logging_mixin.py:103} INFO - [2021-02-10 08:49:54,832] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:49:54,836] {logging_mixin.py:103} INFO - [2021-02-10 08:49:54,836] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:49:55,084] {logging_mixin.py:103} INFO - [2021-02-10 08:49:55,084] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:55,089] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:49:55,091] {logging_mixin.py:103} INFO - [2021-02-10 08:49:55,091] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:49:55,270] {logging_mixin.py:103} INFO - [2021-02-10 08:49:55,270] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:55,272] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:49:55,272] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:49:55,273] {logging_mixin.py:103} INFO - [2021-02-10 08:49:55,273] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:49:55,450] {logging_mixin.py:103} INFO - [2021-02-10 08:49:55,450] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:55,451] {logging_mixin.py:103} INFO - [2021-02-10 08:49:55,451] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:49:55,452] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:49:55,455] {logging_mixin.py:103} INFO - [2021-02-10 08:49:55,455] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:49:55,608] {logging_mixin.py:103} INFO - [2021-02-10 08:49:55,608] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:55,609] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:49:55,609] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:49:55,610] {logging_mixin.py:103} INFO - [2021-02-10 08:49:55,610] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:49:55,761] {logging_mixin.py:103} INFO - [2021-02-10 08:49:55,761] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:55,762] {logging_mixin.py:103} INFO - [2021-02-10 08:49:55,762] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:49:55,763] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:49:55,765] {logging_mixin.py:103} INFO - [2021-02-10 08:49:55,765] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:49:56,049] {logging_mixin.py:103} INFO - [2021-02-10 08:49:56,049] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:56,050] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:49:56,051] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:49:56,052] {logging_mixin.py:103} INFO - [2021-02-10 08:49:56,052] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:49:56,208] {logging_mixin.py:103} INFO - [2021-02-10 08:49:56,208] {cursor.py:560} INFO - query execution done
[2021-02-10 08:49:56,208] {logging_mixin.py:103} INFO - [2021-02-10 08:49:56,208] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:50:00,073] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:50:26,904] {scheduler_job.py:181} INFO - Started process (PID=61829) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:50:26,905] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:50:26,905] {logging_mixin.py:103} INFO - [2021-02-10 08:50:26,905] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:50:28,836] {logging_mixin.py:103} INFO - [2021-02-10 08:50:28,835] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:50:29,115] {logging_mixin.py:103} INFO - [2021-02-10 08:50:29,115] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:50:29,451] {logging_mixin.py:103} INFO - [2021-02-10 08:50:29,451] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:50:29,451] {logging_mixin.py:103} INFO - [2021-02-10 08:50:29,451] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:50:29,451] {logging_mixin.py:103} INFO - [2021-02-10 08:50:29,451] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:50:31,512] {logging_mixin.py:103} INFO - [2021-02-10 08:50:31,512] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:50:31,682] {logging_mixin.py:103} INFO - [2021-02-10 08:50:31,682] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:31,684] {logging_mixin.py:103} INFO - [2021-02-10 08:50:31,684] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:50:32,739] {logging_mixin.py:103} INFO - [2021-02-10 08:50:32,739] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:32,740] {logging_mixin.py:103} INFO - [2021-02-10 08:50:32,740] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:50:32,967] {logging_mixin.py:103} INFO - [2021-02-10 08:50:32,967] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:32,972] {logging_mixin.py:103} INFO - [2021-02-10 08:50:32,972] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:50:33,133] {logging_mixin.py:103} INFO - [2021-02-10 08:50:33,133] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:33,368] {logging_mixin.py:103} INFO - [2021-02-10 08:50:33,368] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:50:33,759] {logging_mixin.py:103} INFO - [2021-02-10 08:50:33,759] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:33,803] {logging_mixin.py:103} INFO - [2021-02-10 08:50:33,803] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:50:33,803] {logging_mixin.py:103} INFO - [2021-02-10 08:50:33,803] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:50:35,050] {logging_mixin.py:103} INFO - [2021-02-10 08:50:35,050] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:35,054] {logging_mixin.py:103} INFO - [2021-02-10 08:50:35,054] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:50:35,064] {logging_mixin.py:103} INFO - [2021-02-10 08:50:35,064] {data_context.py:1281} INFO - Setting run_name to: 20210210T075035.064750Z
[2021-02-10 08:50:35,066] {logging_mixin.py:103} INFO - [2021-02-10 08:50:35,065] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:50:35,074] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:50:35,076] {logging_mixin.py:103} INFO - [2021-02-10 08:50:35,076] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:50:35,299] {logging_mixin.py:103} INFO - [2021-02-10 08:50:35,299] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:35,300] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:50:35,300] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:50:35,301] {logging_mixin.py:103} INFO - [2021-02-10 08:50:35,301] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:50:35,785] {logging_mixin.py:103} INFO - [2021-02-10 08:50:35,784] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:35,785] {logging_mixin.py:103} INFO - [2021-02-10 08:50:35,785] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:50:35,787] {logging_mixin.py:103} INFO - [2021-02-10 08:50:35,787] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:50:36,017] {logging_mixin.py:103} INFO - [2021-02-10 08:50:36,016] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:36,019] {logging_mixin.py:103} INFO - [2021-02-10 08:50:36,019] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:50:36,178] {logging_mixin.py:103} INFO - [2021-02-10 08:50:36,178] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:36,181] {logging_mixin.py:103} INFO - [2021-02-10 08:50:36,181] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:50:36,364] {logging_mixin.py:103} INFO - [2021-02-10 08:50:36,363] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:36,364] {logging_mixin.py:103} INFO - [2021-02-10 08:50:36,364] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:50:36,376] {logging_mixin.py:103} INFO - [2021-02-10 08:50:36,375] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:50:36,376] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:50:36,378] {logging_mixin.py:103} INFO - [2021-02-10 08:50:36,378] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:50:36,530] {logging_mixin.py:103} INFO - [2021-02-10 08:50:36,530] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:36,531] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:50:36,531] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:50:36,532] {logging_mixin.py:103} INFO - [2021-02-10 08:50:36,532] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:50:36,671] {logging_mixin.py:103} INFO - [2021-02-10 08:50:36,671] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:36,672] {logging_mixin.py:103} INFO - [2021-02-10 08:50:36,672] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:50:36,675] {logging_mixin.py:103} INFO - [2021-02-10 08:50:36,674] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:50:36,843] {logging_mixin.py:103} INFO - [2021-02-10 08:50:36,843] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:36,845] {logging_mixin.py:103} INFO - [2021-02-10 08:50:36,844] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:50:37,021] {logging_mixin.py:103} INFO - [2021-02-10 08:50:37,021] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:37,025] {logging_mixin.py:103} INFO - [2021-02-10 08:50:37,024] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:50:37,327] {logging_mixin.py:103} INFO - [2021-02-10 08:50:37,327] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:37,330] {logging_mixin.py:103} INFO - [2021-02-10 08:50:37,330] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:50:37,482] {logging_mixin.py:103} INFO - [2021-02-10 08:50:37,482] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:37,482] {logging_mixin.py:103} INFO - [2021-02-10 08:50:37,482] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:50:37,487] {logging_mixin.py:103} INFO - [2021-02-10 08:50:37,487] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:50:37,675] {logging_mixin.py:103} INFO - [2021-02-10 08:50:37,675] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:37,680] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:50:37,682] {logging_mixin.py:103} INFO - [2021-02-10 08:50:37,682] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:50:37,880] {logging_mixin.py:103} INFO - [2021-02-10 08:50:37,880] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:37,881] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:50:37,881] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:50:37,882] {logging_mixin.py:103} INFO - [2021-02-10 08:50:37,882] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:50:38,060] {logging_mixin.py:103} INFO - [2021-02-10 08:50:38,059] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:38,060] {logging_mixin.py:103} INFO - [2021-02-10 08:50:38,060] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:50:38,061] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:50:38,064] {logging_mixin.py:103} INFO - [2021-02-10 08:50:38,064] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:50:38,679] {logging_mixin.py:103} INFO - [2021-02-10 08:50:38,678] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:38,680] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:50:38,680] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:50:38,681] {logging_mixin.py:103} INFO - [2021-02-10 08:50:38,681] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:50:38,845] {logging_mixin.py:103} INFO - [2021-02-10 08:50:38,844] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:38,845] {logging_mixin.py:103} INFO - [2021-02-10 08:50:38,845] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:50:38,846] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:50:38,849] {logging_mixin.py:103} INFO - [2021-02-10 08:50:38,849] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:50:39,128] {logging_mixin.py:103} INFO - [2021-02-10 08:50:39,128] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:39,130] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:50:39,130] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:50:39,131] {logging_mixin.py:103} INFO - [2021-02-10 08:50:39,131] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:50:39,539] {logging_mixin.py:103} INFO - [2021-02-10 08:50:39,538] {cursor.py:560} INFO - query execution done
[2021-02-10 08:50:39,539] {logging_mixin.py:103} INFO - [2021-02-10 08:50:39,539] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:50:43,802] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:51:16,173] {scheduler_job.py:181} INFO - Started process (PID=61890) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:51:16,175] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:51:16,175] {logging_mixin.py:103} INFO - [2021-02-10 08:51:16,175] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:51:18,779] {logging_mixin.py:103} INFO - [2021-02-10 08:51:18,779] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:51:19,338] {logging_mixin.py:103} INFO - [2021-02-10 08:51:19,338] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:51:19,785] {logging_mixin.py:103} INFO - [2021-02-10 08:51:19,784] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:51:19,785] {logging_mixin.py:103} INFO - [2021-02-10 08:51:19,785] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:51:19,785] {logging_mixin.py:103} INFO - [2021-02-10 08:51:19,785] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:51:21,273] {logging_mixin.py:103} INFO - [2021-02-10 08:51:21,273] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:51:21,510] {logging_mixin.py:103} INFO - [2021-02-10 08:51:21,509] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:21,511] {logging_mixin.py:103} INFO - [2021-02-10 08:51:21,511] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:51:21,773] {logging_mixin.py:103} INFO - [2021-02-10 08:51:21,773] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:21,775] {logging_mixin.py:103} INFO - [2021-02-10 08:51:21,774] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:51:22,067] {logging_mixin.py:103} INFO - [2021-02-10 08:51:22,067] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:22,073] {logging_mixin.py:103} INFO - [2021-02-10 08:51:22,073] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:51:22,324] {logging_mixin.py:103} INFO - [2021-02-10 08:51:22,324] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:22,562] {logging_mixin.py:103} INFO - [2021-02-10 08:51:22,562] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:51:22,875] {logging_mixin.py:103} INFO - [2021-02-10 08:51:22,875] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:22,922] {logging_mixin.py:103} INFO - [2021-02-10 08:51:22,921] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:51:22,922] {logging_mixin.py:103} INFO - [2021-02-10 08:51:22,922] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:51:24,318] {logging_mixin.py:103} INFO - [2021-02-10 08:51:24,317] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:24,324] {logging_mixin.py:103} INFO - [2021-02-10 08:51:24,323] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:51:24,334] {logging_mixin.py:103} INFO - [2021-02-10 08:51:24,334] {data_context.py:1281} INFO - Setting run_name to: 20210210T075124.334613Z
[2021-02-10 08:51:24,335] {logging_mixin.py:103} INFO - [2021-02-10 08:51:24,335] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:51:24,345] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:51:24,347] {logging_mixin.py:103} INFO - [2021-02-10 08:51:24,347] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:51:24,591] {logging_mixin.py:103} INFO - [2021-02-10 08:51:24,590] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:24,593] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:51:24,593] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:51:24,596] {logging_mixin.py:103} INFO - [2021-02-10 08:51:24,595] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:51:25,265] {logging_mixin.py:103} INFO - [2021-02-10 08:51:25,264] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:25,265] {logging_mixin.py:103} INFO - [2021-02-10 08:51:25,265] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:51:25,267] {logging_mixin.py:103} INFO - [2021-02-10 08:51:25,267] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:51:25,549] {logging_mixin.py:103} INFO - [2021-02-10 08:51:25,549] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:25,552] {logging_mixin.py:103} INFO - [2021-02-10 08:51:25,552] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:51:26,192] {logging_mixin.py:103} INFO - [2021-02-10 08:51:26,192] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:26,194] {logging_mixin.py:103} INFO - [2021-02-10 08:51:26,194] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:51:26,395] {logging_mixin.py:103} INFO - [2021-02-10 08:51:26,395] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:26,395] {logging_mixin.py:103} INFO - [2021-02-10 08:51:26,395] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:51:26,411] {logging_mixin.py:103} INFO - [2021-02-10 08:51:26,411] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:51:26,412] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:51:26,414] {logging_mixin.py:103} INFO - [2021-02-10 08:51:26,414] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:51:27,423] {logging_mixin.py:103} INFO - [2021-02-10 08:51:27,423] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:27,424] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:51:27,425] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:51:27,426] {logging_mixin.py:103} INFO - [2021-02-10 08:51:27,426] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:51:27,793] {logging_mixin.py:103} INFO - [2021-02-10 08:51:27,792] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:27,794] {logging_mixin.py:103} INFO - [2021-02-10 08:51:27,794] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:51:27,798] {logging_mixin.py:103} INFO - [2021-02-10 08:51:27,798] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:51:28,041] {logging_mixin.py:103} INFO - [2021-02-10 08:51:28,041] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:28,045] {logging_mixin.py:103} INFO - [2021-02-10 08:51:28,044] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:51:28,394] {logging_mixin.py:103} INFO - [2021-02-10 08:51:28,394] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:28,397] {logging_mixin.py:103} INFO - [2021-02-10 08:51:28,397] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:51:28,564] {logging_mixin.py:103} INFO - [2021-02-10 08:51:28,564] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:28,566] {logging_mixin.py:103} INFO - [2021-02-10 08:51:28,566] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:51:29,268] {logging_mixin.py:103} INFO - [2021-02-10 08:51:29,268] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:29,268] {logging_mixin.py:103} INFO - [2021-02-10 08:51:29,268] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:51:29,273] {logging_mixin.py:103} INFO - [2021-02-10 08:51:29,272] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:51:29,529] {logging_mixin.py:103} INFO - [2021-02-10 08:51:29,529] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:29,536] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:51:29,538] {logging_mixin.py:103} INFO - [2021-02-10 08:51:29,538] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:51:30,178] {logging_mixin.py:103} INFO - [2021-02-10 08:51:30,177] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:30,178] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:51:30,179] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:51:30,180] {logging_mixin.py:103} INFO - [2021-02-10 08:51:30,180] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:51:30,475] {logging_mixin.py:103} INFO - [2021-02-10 08:51:30,474] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:30,475] {logging_mixin.py:103} INFO - [2021-02-10 08:51:30,475] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:51:30,476] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:51:30,479] {logging_mixin.py:103} INFO - [2021-02-10 08:51:30,479] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:51:30,678] {logging_mixin.py:103} INFO - [2021-02-10 08:51:30,678] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:30,679] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:51:30,679] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:51:30,680] {logging_mixin.py:103} INFO - [2021-02-10 08:51:30,680] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:51:31,409] {logging_mixin.py:103} INFO - [2021-02-10 08:51:31,409] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:31,410] {logging_mixin.py:103} INFO - [2021-02-10 08:51:31,409] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:51:31,410] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:51:31,413] {logging_mixin.py:103} INFO - [2021-02-10 08:51:31,413] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:51:32,331] {logging_mixin.py:103} INFO - [2021-02-10 08:51:32,331] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:32,332] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:51:32,333] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:51:32,334] {logging_mixin.py:103} INFO - [2021-02-10 08:51:32,334] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:51:32,626] {logging_mixin.py:103} INFO - [2021-02-10 08:51:32,625] {cursor.py:560} INFO - query execution done
[2021-02-10 08:51:32,626] {logging_mixin.py:103} INFO - [2021-02-10 08:51:32,626] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:51:37,746] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:52:12,145] {scheduler_job.py:181} INFO - Started process (PID=61952) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:52:12,146] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:52:12,147] {logging_mixin.py:103} INFO - [2021-02-10 08:52:12,147] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:52:14,183] {logging_mixin.py:103} INFO - [2021-02-10 08:52:14,183] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:52:14,490] {logging_mixin.py:103} INFO - [2021-02-10 08:52:14,490] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:52:14,866] {logging_mixin.py:103} INFO - [2021-02-10 08:52:14,866] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:52:14,866] {logging_mixin.py:103} INFO - [2021-02-10 08:52:14,866] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:52:14,866] {logging_mixin.py:103} INFO - [2021-02-10 08:52:14,866] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:52:17,498] {logging_mixin.py:103} INFO - [2021-02-10 08:52:17,498] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:52:17,786] {logging_mixin.py:103} INFO - [2021-02-10 08:52:17,786] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:17,788] {logging_mixin.py:103} INFO - [2021-02-10 08:52:17,788] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:52:18,051] {logging_mixin.py:103} INFO - [2021-02-10 08:52:18,051] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:18,052] {logging_mixin.py:103} INFO - [2021-02-10 08:52:18,052] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:52:18,331] {logging_mixin.py:103} INFO - [2021-02-10 08:52:18,331] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:18,333] {logging_mixin.py:103} INFO - [2021-02-10 08:52:18,333] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:52:18,471] {logging_mixin.py:103} INFO - [2021-02-10 08:52:18,470] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:18,878] {logging_mixin.py:103} INFO - [2021-02-10 08:52:18,878] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:52:20,878] {logging_mixin.py:103} INFO - [2021-02-10 08:52:20,878] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:20,926] {logging_mixin.py:103} INFO - [2021-02-10 08:52:20,926] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:52:20,927] {logging_mixin.py:103} INFO - [2021-02-10 08:52:20,926] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:52:22,734] {logging_mixin.py:103} INFO - [2021-02-10 08:52:22,734] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:22,739] {logging_mixin.py:103} INFO - [2021-02-10 08:52:22,738] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:52:22,750] {logging_mixin.py:103} INFO - [2021-02-10 08:52:22,750] {data_context.py:1281} INFO - Setting run_name to: 20210210T075222.750087Z
[2021-02-10 08:52:22,751] {logging_mixin.py:103} INFO - [2021-02-10 08:52:22,751] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:52:22,761] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:52:22,763] {logging_mixin.py:103} INFO - [2021-02-10 08:52:22,763] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:52:22,968] {logging_mixin.py:103} INFO - [2021-02-10 08:52:22,968] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:22,970] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:52:22,970] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:52:22,972] {logging_mixin.py:103} INFO - [2021-02-10 08:52:22,972] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:52:23,441] {logging_mixin.py:103} INFO - [2021-02-10 08:52:23,441] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:23,442] {logging_mixin.py:103} INFO - [2021-02-10 08:52:23,442] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:52:23,445] {logging_mixin.py:103} INFO - [2021-02-10 08:52:23,444] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:52:23,805] {logging_mixin.py:103} INFO - [2021-02-10 08:52:23,805] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:23,807] {logging_mixin.py:103} INFO - [2021-02-10 08:52:23,807] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:52:24,705] {logging_mixin.py:103} INFO - [2021-02-10 08:52:24,705] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:24,708] {logging_mixin.py:103} INFO - [2021-02-10 08:52:24,708] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:52:24,852] {logging_mixin.py:103} INFO - [2021-02-10 08:52:24,852] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:24,853] {logging_mixin.py:103} INFO - [2021-02-10 08:52:24,853] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:52:24,881] {logging_mixin.py:103} INFO - [2021-02-10 08:52:24,881] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:52:24,882] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:52:24,886] {logging_mixin.py:103} INFO - [2021-02-10 08:52:24,886] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:52:25,222] {logging_mixin.py:103} INFO - [2021-02-10 08:52:25,222] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:25,222] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:52:25,223] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:52:25,224] {logging_mixin.py:103} INFO - [2021-02-10 08:52:25,224] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:52:25,621] {logging_mixin.py:103} INFO - [2021-02-10 08:52:25,621] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:25,622] {logging_mixin.py:103} INFO - [2021-02-10 08:52:25,621] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:52:25,625] {logging_mixin.py:103} INFO - [2021-02-10 08:52:25,625] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:52:25,905] {logging_mixin.py:103} INFO - [2021-02-10 08:52:25,905] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:25,907] {logging_mixin.py:103} INFO - [2021-02-10 08:52:25,906] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:52:26,241] {logging_mixin.py:103} INFO - [2021-02-10 08:52:26,241] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:26,245] {logging_mixin.py:103} INFO - [2021-02-10 08:52:26,244] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:52:26,499] {logging_mixin.py:103} INFO - [2021-02-10 08:52:26,499] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:26,504] {logging_mixin.py:103} INFO - [2021-02-10 08:52:26,504] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:52:26,740] {logging_mixin.py:103} INFO - [2021-02-10 08:52:26,739] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:26,740] {logging_mixin.py:103} INFO - [2021-02-10 08:52:26,740] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:52:26,744] {logging_mixin.py:103} INFO - [2021-02-10 08:52:26,744] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:52:26,918] {logging_mixin.py:103} INFO - [2021-02-10 08:52:26,918] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:26,928] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:52:26,930] {logging_mixin.py:103} INFO - [2021-02-10 08:52:26,930] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:52:27,087] {logging_mixin.py:103} INFO - [2021-02-10 08:52:27,087] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:27,088] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:52:27,088] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:52:27,089] {logging_mixin.py:103} INFO - [2021-02-10 08:52:27,089] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:52:27,268] {logging_mixin.py:103} INFO - [2021-02-10 08:52:27,268] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:27,269] {logging_mixin.py:103} INFO - [2021-02-10 08:52:27,269] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:52:27,270] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:52:27,277] {logging_mixin.py:103} INFO - [2021-02-10 08:52:27,277] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:52:27,452] {logging_mixin.py:103} INFO - [2021-02-10 08:52:27,452] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:27,452] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:52:27,452] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:52:27,453] {logging_mixin.py:103} INFO - [2021-02-10 08:52:27,453] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:52:27,738] {logging_mixin.py:103} INFO - [2021-02-10 08:52:27,738] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:27,738] {logging_mixin.py:103} INFO - [2021-02-10 08:52:27,738] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:52:27,739] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:52:27,743] {logging_mixin.py:103} INFO - [2021-02-10 08:52:27,743] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:52:27,904] {logging_mixin.py:103} INFO - [2021-02-10 08:52:27,903] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:27,904] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:52:27,904] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:52:27,906] {logging_mixin.py:103} INFO - [2021-02-10 08:52:27,905] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:52:28,189] {logging_mixin.py:103} INFO - [2021-02-10 08:52:28,189] {cursor.py:560} INFO - query execution done
[2021-02-10 08:52:28,189] {logging_mixin.py:103} INFO - [2021-02-10 08:52:28,189] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:52:34,418] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:53:12,319] {scheduler_job.py:181} INFO - Started process (PID=62022) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:53:12,320] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:53:12,320] {logging_mixin.py:103} INFO - [2021-02-10 08:53:12,320] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:53:14,782] {logging_mixin.py:103} INFO - [2021-02-10 08:53:14,782] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:53:15,107] {logging_mixin.py:103} INFO - [2021-02-10 08:53:15,107] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:53:15,485] {logging_mixin.py:103} INFO - [2021-02-10 08:53:15,485] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:53:15,486] {logging_mixin.py:103} INFO - [2021-02-10 08:53:15,486] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:53:15,486] {logging_mixin.py:103} INFO - [2021-02-10 08:53:15,486] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:53:16,783] {logging_mixin.py:103} INFO - [2021-02-10 08:53:16,783] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:53:16,933] {logging_mixin.py:103} INFO - [2021-02-10 08:53:16,933] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:16,935] {logging_mixin.py:103} INFO - [2021-02-10 08:53:16,935] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:53:17,403] {logging_mixin.py:103} INFO - [2021-02-10 08:53:17,403] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:17,404] {logging_mixin.py:103} INFO - [2021-02-10 08:53:17,404] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:53:17,540] {logging_mixin.py:103} INFO - [2021-02-10 08:53:17,539] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:17,543] {logging_mixin.py:103} INFO - [2021-02-10 08:53:17,542] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:53:17,693] {logging_mixin.py:103} INFO - [2021-02-10 08:53:17,693] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:17,984] {logging_mixin.py:103} INFO - [2021-02-10 08:53:17,983] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:53:18,149] {logging_mixin.py:103} INFO - [2021-02-10 08:53:18,149] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:18,194] {logging_mixin.py:103} INFO - [2021-02-10 08:53:18,194] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:53:18,195] {logging_mixin.py:103} INFO - [2021-02-10 08:53:18,195] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:53:19,545] {logging_mixin.py:103} INFO - [2021-02-10 08:53:19,545] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:19,549] {logging_mixin.py:103} INFO - [2021-02-10 08:53:19,549] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:53:19,560] {logging_mixin.py:103} INFO - [2021-02-10 08:53:19,559] {data_context.py:1281} INFO - Setting run_name to: 20210210T075319.559857Z
[2021-02-10 08:53:19,561] {logging_mixin.py:103} INFO - [2021-02-10 08:53:19,561] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:53:19,569] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:53:19,571] {logging_mixin.py:103} INFO - [2021-02-10 08:53:19,571] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:53:20,472] {logging_mixin.py:103} INFO - [2021-02-10 08:53:20,472] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:20,472] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:53:20,473] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:53:20,474] {logging_mixin.py:103} INFO - [2021-02-10 08:53:20,473] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:53:20,858] {logging_mixin.py:103} INFO - [2021-02-10 08:53:20,857] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:20,858] {logging_mixin.py:103} INFO - [2021-02-10 08:53:20,858] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:53:20,862] {logging_mixin.py:103} INFO - [2021-02-10 08:53:20,861] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:53:21,029] {logging_mixin.py:103} INFO - [2021-02-10 08:53:21,029] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:21,031] {logging_mixin.py:103} INFO - [2021-02-10 08:53:21,031] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:53:21,370] {logging_mixin.py:103} INFO - [2021-02-10 08:53:21,370] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:21,372] {logging_mixin.py:103} INFO - [2021-02-10 08:53:21,372] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:53:21,538] {logging_mixin.py:103} INFO - [2021-02-10 08:53:21,538] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:21,538] {logging_mixin.py:103} INFO - [2021-02-10 08:53:21,538] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:53:21,559] {logging_mixin.py:103} INFO - [2021-02-10 08:53:21,558] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:53:21,560] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:53:21,561] {logging_mixin.py:103} INFO - [2021-02-10 08:53:21,561] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:53:21,725] {logging_mixin.py:103} INFO - [2021-02-10 08:53:21,725] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:21,726] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:53:21,726] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:53:21,727] {logging_mixin.py:103} INFO - [2021-02-10 08:53:21,727] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:53:21,996] {logging_mixin.py:103} INFO - [2021-02-10 08:53:21,995] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:21,996] {logging_mixin.py:103} INFO - [2021-02-10 08:53:21,996] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:53:22,000] {logging_mixin.py:103} INFO - [2021-02-10 08:53:22,000] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:53:22,162] {logging_mixin.py:103} INFO - [2021-02-10 08:53:22,162] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:22,164] {logging_mixin.py:103} INFO - [2021-02-10 08:53:22,164] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:53:22,929] {logging_mixin.py:103} INFO - [2021-02-10 08:53:22,928] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:22,931] {logging_mixin.py:103} INFO - [2021-02-10 08:53:22,931] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:53:23,849] {logging_mixin.py:103} INFO - [2021-02-10 08:53:23,849] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:23,852] {logging_mixin.py:103} INFO - [2021-02-10 08:53:23,852] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:53:24,015] {logging_mixin.py:103} INFO - [2021-02-10 08:53:24,015] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:24,016] {logging_mixin.py:103} INFO - [2021-02-10 08:53:24,016] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:53:24,021] {logging_mixin.py:103} INFO - [2021-02-10 08:53:24,020] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:53:24,183] {logging_mixin.py:103} INFO - [2021-02-10 08:53:24,183] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:24,197] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:53:24,203] {logging_mixin.py:103} INFO - [2021-02-10 08:53:24,202] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:53:24,352] {logging_mixin.py:103} INFO - [2021-02-10 08:53:24,352] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:24,352] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:53:24,353] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:53:24,354] {logging_mixin.py:103} INFO - [2021-02-10 08:53:24,354] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:53:24,494] {logging_mixin.py:103} INFO - [2021-02-10 08:53:24,494] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:24,495] {logging_mixin.py:103} INFO - [2021-02-10 08:53:24,495] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:53:24,495] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:53:24,503] {logging_mixin.py:103} INFO - [2021-02-10 08:53:24,502] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:53:24,668] {logging_mixin.py:103} INFO - [2021-02-10 08:53:24,667] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:24,669] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:53:24,669] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:53:24,672] {logging_mixin.py:103} INFO - [2021-02-10 08:53:24,672] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:53:24,833] {logging_mixin.py:103} INFO - [2021-02-10 08:53:24,833] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:24,834] {logging_mixin.py:103} INFO - [2021-02-10 08:53:24,834] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:53:24,835] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:53:24,839] {logging_mixin.py:103} INFO - [2021-02-10 08:53:24,839] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:53:25,074] {logging_mixin.py:103} INFO - [2021-02-10 08:53:25,073] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:25,075] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:53:25,075] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:53:25,076] {logging_mixin.py:103} INFO - [2021-02-10 08:53:25,076] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:53:25,216] {logging_mixin.py:103} INFO - [2021-02-10 08:53:25,216] {cursor.py:560} INFO - query execution done
[2021-02-10 08:53:25,218] {logging_mixin.py:103} INFO - [2021-02-10 08:53:25,218] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:53:31,143] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:54:06,658] {scheduler_job.py:181} INFO - Started process (PID=62080) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:54:06,660] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:54:06,660] {logging_mixin.py:103} INFO - [2021-02-10 08:54:06,660] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:54:08,781] {logging_mixin.py:103} INFO - [2021-02-10 08:54:08,781] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:54:09,159] {logging_mixin.py:103} INFO - [2021-02-10 08:54:09,159] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:54:09,580] {logging_mixin.py:103} INFO - [2021-02-10 08:54:09,580] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:54:09,581] {logging_mixin.py:103} INFO - [2021-02-10 08:54:09,581] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:54:09,581] {logging_mixin.py:103} INFO - [2021-02-10 08:54:09,581] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:54:10,814] {logging_mixin.py:103} INFO - [2021-02-10 08:54:10,813] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:54:10,964] {logging_mixin.py:103} INFO - [2021-02-10 08:54:10,964] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:10,966] {logging_mixin.py:103} INFO - [2021-02-10 08:54:10,965] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:54:11,122] {logging_mixin.py:103} INFO - [2021-02-10 08:54:11,122] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:11,123] {logging_mixin.py:103} INFO - [2021-02-10 08:54:11,123] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:54:11,267] {logging_mixin.py:103} INFO - [2021-02-10 08:54:11,267] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:11,270] {logging_mixin.py:103} INFO - [2021-02-10 08:54:11,269] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:54:11,394] {logging_mixin.py:103} INFO - [2021-02-10 08:54:11,393] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:11,652] {logging_mixin.py:103} INFO - [2021-02-10 08:54:11,651] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:54:11,872] {logging_mixin.py:103} INFO - [2021-02-10 08:54:11,872] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:11,921] {logging_mixin.py:103} INFO - [2021-02-10 08:54:11,921] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:54:11,922] {logging_mixin.py:103} INFO - [2021-02-10 08:54:11,921] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:54:14,541] {logging_mixin.py:103} INFO - [2021-02-10 08:54:14,541] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:14,544] {logging_mixin.py:103} INFO - [2021-02-10 08:54:14,544] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:54:14,555] {logging_mixin.py:103} INFO - [2021-02-10 08:54:14,555] {data_context.py:1281} INFO - Setting run_name to: 20210210T075414.555495Z
[2021-02-10 08:54:14,556] {logging_mixin.py:103} INFO - [2021-02-10 08:54:14,556] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:54:14,567] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:54:14,570] {logging_mixin.py:103} INFO - [2021-02-10 08:54:14,569] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:54:14,734] {logging_mixin.py:103} INFO - [2021-02-10 08:54:14,733] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:14,735] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:54:14,736] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:54:14,738] {logging_mixin.py:103} INFO - [2021-02-10 08:54:14,738] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:54:14,893] {logging_mixin.py:103} INFO - [2021-02-10 08:54:14,893] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:14,894] {logging_mixin.py:103} INFO - [2021-02-10 08:54:14,893] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:54:14,896] {logging_mixin.py:103} INFO - [2021-02-10 08:54:14,895] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:54:15,142] {logging_mixin.py:103} INFO - [2021-02-10 08:54:15,142] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:15,144] {logging_mixin.py:103} INFO - [2021-02-10 08:54:15,144] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:54:16,074] {logging_mixin.py:103} INFO - [2021-02-10 08:54:16,074] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:16,077] {logging_mixin.py:103} INFO - [2021-02-10 08:54:16,077] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:54:16,689] {logging_mixin.py:103} INFO - [2021-02-10 08:54:16,688] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:16,689] {logging_mixin.py:103} INFO - [2021-02-10 08:54:16,689] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:54:16,710] {logging_mixin.py:103} INFO - [2021-02-10 08:54:16,710] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:54:16,711] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:54:16,713] {logging_mixin.py:103} INFO - [2021-02-10 08:54:16,713] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:54:16,865] {logging_mixin.py:103} INFO - [2021-02-10 08:54:16,865] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:16,866] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:54:16,866] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:54:16,867] {logging_mixin.py:103} INFO - [2021-02-10 08:54:16,867] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:54:17,026] {logging_mixin.py:103} INFO - [2021-02-10 08:54:17,026] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:17,026] {logging_mixin.py:103} INFO - [2021-02-10 08:54:17,026] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:54:17,030] {logging_mixin.py:103} INFO - [2021-02-10 08:54:17,030] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:54:17,324] {logging_mixin.py:103} INFO - [2021-02-10 08:54:17,324] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:17,326] {logging_mixin.py:103} INFO - [2021-02-10 08:54:17,326] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:54:17,492] {logging_mixin.py:103} INFO - [2021-02-10 08:54:17,492] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:17,495] {logging_mixin.py:103} INFO - [2021-02-10 08:54:17,495] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:54:17,659] {logging_mixin.py:103} INFO - [2021-02-10 08:54:17,658] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:17,661] {logging_mixin.py:103} INFO - [2021-02-10 08:54:17,661] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:54:18,224] {logging_mixin.py:103} INFO - [2021-02-10 08:54:18,224] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:18,224] {logging_mixin.py:103} INFO - [2021-02-10 08:54:18,224] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:54:18,228] {logging_mixin.py:103} INFO - [2021-02-10 08:54:18,228] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:54:18,388] {logging_mixin.py:103} INFO - [2021-02-10 08:54:18,387] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:18,399] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:54:18,401] {logging_mixin.py:103} INFO - [2021-02-10 08:54:18,401] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:54:18,571] {logging_mixin.py:103} INFO - [2021-02-10 08:54:18,571] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:18,573] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:54:18,573] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:54:18,575] {logging_mixin.py:103} INFO - [2021-02-10 08:54:18,574] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:54:18,747] {logging_mixin.py:103} INFO - [2021-02-10 08:54:18,747] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:18,748] {logging_mixin.py:103} INFO - [2021-02-10 08:54:18,748] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:54:18,749] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:54:18,752] {logging_mixin.py:103} INFO - [2021-02-10 08:54:18,752] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:54:18,917] {logging_mixin.py:103} INFO - [2021-02-10 08:54:18,917] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:18,919] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:54:18,919] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:54:18,920] {logging_mixin.py:103} INFO - [2021-02-10 08:54:18,920] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:54:19,114] {logging_mixin.py:103} INFO - [2021-02-10 08:54:19,114] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:19,114] {logging_mixin.py:103} INFO - [2021-02-10 08:54:19,114] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:54:19,115] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:54:19,118] {logging_mixin.py:103} INFO - [2021-02-10 08:54:19,118] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:54:19,275] {logging_mixin.py:103} INFO - [2021-02-10 08:54:19,275] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:19,277] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:54:19,277] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:54:19,278] {logging_mixin.py:103} INFO - [2021-02-10 08:54:19,278] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:54:19,491] {logging_mixin.py:103} INFO - [2021-02-10 08:54:19,491] {cursor.py:560} INFO - query execution done
[2021-02-10 08:54:19,492] {logging_mixin.py:103} INFO - [2021-02-10 08:54:19,492] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:54:24,998] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:54:58,670] {scheduler_job.py:181} INFO - Started process (PID=62149) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:54:58,671] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:54:58,672] {logging_mixin.py:103} INFO - [2021-02-10 08:54:58,672] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:55:00,881] {logging_mixin.py:103} INFO - [2021-02-10 08:55:00,881] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:55:01,277] {logging_mixin.py:103} INFO - [2021-02-10 08:55:01,277] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:55:01,719] {logging_mixin.py:103} INFO - [2021-02-10 08:55:01,719] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:55:01,719] {logging_mixin.py:103} INFO - [2021-02-10 08:55:01,719] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:55:01,720] {logging_mixin.py:103} INFO - [2021-02-10 08:55:01,720] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:55:03,041] {logging_mixin.py:103} INFO - [2021-02-10 08:55:03,041] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:55:03,235] {logging_mixin.py:103} INFO - [2021-02-10 08:55:03,235] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:03,237] {logging_mixin.py:103} INFO - [2021-02-10 08:55:03,236] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:55:03,395] {logging_mixin.py:103} INFO - [2021-02-10 08:55:03,395] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:03,396] {logging_mixin.py:103} INFO - [2021-02-10 08:55:03,396] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:55:03,558] {logging_mixin.py:103} INFO - [2021-02-10 08:55:03,558] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:03,561] {logging_mixin.py:103} INFO - [2021-02-10 08:55:03,560] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:55:03,709] {logging_mixin.py:103} INFO - [2021-02-10 08:55:03,709] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:03,993] {logging_mixin.py:103} INFO - [2021-02-10 08:55:03,993] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:55:04,236] {logging_mixin.py:103} INFO - [2021-02-10 08:55:04,236] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:04,293] {logging_mixin.py:103} INFO - [2021-02-10 08:55:04,293] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:55:04,294] {logging_mixin.py:103} INFO - [2021-02-10 08:55:04,293] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:55:06,773] {logging_mixin.py:103} INFO - [2021-02-10 08:55:06,773] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:06,776] {logging_mixin.py:103} INFO - [2021-02-10 08:55:06,776] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:55:06,786] {logging_mixin.py:103} INFO - [2021-02-10 08:55:06,786] {data_context.py:1281} INFO - Setting run_name to: 20210210T075506.786239Z
[2021-02-10 08:55:06,787] {logging_mixin.py:103} INFO - [2021-02-10 08:55:06,787] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:55:06,797] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:55:06,799] {logging_mixin.py:103} INFO - [2021-02-10 08:55:06,799] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:55:06,966] {logging_mixin.py:103} INFO - [2021-02-10 08:55:06,966] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:06,967] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:55:06,967] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:55:06,969] {logging_mixin.py:103} INFO - [2021-02-10 08:55:06,969] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:55:07,118] {logging_mixin.py:103} INFO - [2021-02-10 08:55:07,118] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:07,118] {logging_mixin.py:103} INFO - [2021-02-10 08:55:07,118] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:55:07,120] {logging_mixin.py:103} INFO - [2021-02-10 08:55:07,120] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:55:07,310] {logging_mixin.py:103} INFO - [2021-02-10 08:55:07,310] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:07,314] {logging_mixin.py:103} INFO - [2021-02-10 08:55:07,314] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:55:07,491] {logging_mixin.py:103} INFO - [2021-02-10 08:55:07,491] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:07,495] {logging_mixin.py:103} INFO - [2021-02-10 08:55:07,495] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:55:07,661] {logging_mixin.py:103} INFO - [2021-02-10 08:55:07,661] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:07,662] {logging_mixin.py:103} INFO - [2021-02-10 08:55:07,662] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:55:07,697] {logging_mixin.py:103} INFO - [2021-02-10 08:55:07,696] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:55:07,698] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:55:07,700] {logging_mixin.py:103} INFO - [2021-02-10 08:55:07,699] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:55:07,896] {logging_mixin.py:103} INFO - [2021-02-10 08:55:07,896] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:07,897] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:55:07,897] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:55:07,898] {logging_mixin.py:103} INFO - [2021-02-10 08:55:07,898] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:55:08,105] {logging_mixin.py:103} INFO - [2021-02-10 08:55:08,104] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:08,106] {logging_mixin.py:103} INFO - [2021-02-10 08:55:08,105] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:55:08,108] {logging_mixin.py:103} INFO - [2021-02-10 08:55:08,108] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:55:08,263] {logging_mixin.py:103} INFO - [2021-02-10 08:55:08,263] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:08,265] {logging_mixin.py:103} INFO - [2021-02-10 08:55:08,265] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:55:08,684] {logging_mixin.py:103} INFO - [2021-02-10 08:55:08,684] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:08,687] {logging_mixin.py:103} INFO - [2021-02-10 08:55:08,687] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:55:08,853] {logging_mixin.py:103} INFO - [2021-02-10 08:55:08,853] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:08,856] {logging_mixin.py:103} INFO - [2021-02-10 08:55:08,856] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:55:08,998] {logging_mixin.py:103} INFO - [2021-02-10 08:55:08,998] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:08,999] {logging_mixin.py:103} INFO - [2021-02-10 08:55:08,998] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:55:09,002] {logging_mixin.py:103} INFO - [2021-02-10 08:55:09,002] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:55:09,258] {logging_mixin.py:103} INFO - [2021-02-10 08:55:09,257] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:09,269] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:55:09,279] {logging_mixin.py:103} INFO - [2021-02-10 08:55:09,278] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:55:09,531] {logging_mixin.py:103} INFO - [2021-02-10 08:55:09,530] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:09,532] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:55:09,532] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:55:09,533] {logging_mixin.py:103} INFO - [2021-02-10 08:55:09,533] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:55:10,132] {logging_mixin.py:103} INFO - [2021-02-10 08:55:10,131] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:10,132] {logging_mixin.py:103} INFO - [2021-02-10 08:55:10,132] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:55:10,133] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:55:10,136] {logging_mixin.py:103} INFO - [2021-02-10 08:55:10,136] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:55:10,296] {logging_mixin.py:103} INFO - [2021-02-10 08:55:10,296] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:10,297] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:55:10,297] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:55:10,299] {logging_mixin.py:103} INFO - [2021-02-10 08:55:10,299] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:55:10,459] {logging_mixin.py:103} INFO - [2021-02-10 08:55:10,459] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:10,460] {logging_mixin.py:103} INFO - [2021-02-10 08:55:10,460] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:55:10,461] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:55:10,464] {logging_mixin.py:103} INFO - [2021-02-10 08:55:10,464] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:55:10,699] {logging_mixin.py:103} INFO - [2021-02-10 08:55:10,699] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:10,701] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:55:10,701] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:55:10,703] {logging_mixin.py:103} INFO - [2021-02-10 08:55:10,703] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:55:10,920] {logging_mixin.py:103} INFO - [2021-02-10 08:55:10,920] {cursor.py:560} INFO - query execution done
[2021-02-10 08:55:10,921] {logging_mixin.py:103} INFO - [2021-02-10 08:55:10,921] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:55:17,089] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:55:57,848] {scheduler_job.py:181} INFO - Started process (PID=62211) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:55:57,849] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:55:57,850] {logging_mixin.py:103} INFO - [2021-02-10 08:55:57,849] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:56:00,774] {logging_mixin.py:103} INFO - [2021-02-10 08:56:00,774] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:56:01,342] {logging_mixin.py:103} INFO - [2021-02-10 08:56:01,342] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:56:01,710] {logging_mixin.py:103} INFO - [2021-02-10 08:56:01,710] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:56:01,710] {logging_mixin.py:103} INFO - [2021-02-10 08:56:01,710] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:56:01,710] {logging_mixin.py:103} INFO - [2021-02-10 08:56:01,710] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:56:02,984] {logging_mixin.py:103} INFO - [2021-02-10 08:56:02,983] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:56:03,215] {logging_mixin.py:103} INFO - [2021-02-10 08:56:03,215] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:03,218] {logging_mixin.py:103} INFO - [2021-02-10 08:56:03,218] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:56:03,365] {logging_mixin.py:103} INFO - [2021-02-10 08:56:03,365] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:03,366] {logging_mixin.py:103} INFO - [2021-02-10 08:56:03,366] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:56:03,585] {logging_mixin.py:103} INFO - [2021-02-10 08:56:03,585] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:03,588] {logging_mixin.py:103} INFO - [2021-02-10 08:56:03,588] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:56:03,733] {logging_mixin.py:103} INFO - [2021-02-10 08:56:03,733] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:03,970] {logging_mixin.py:103} INFO - [2021-02-10 08:56:03,970] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:56:04,278] {logging_mixin.py:103} INFO - [2021-02-10 08:56:04,278] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:04,322] {logging_mixin.py:103} INFO - [2021-02-10 08:56:04,322] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:56:04,323] {logging_mixin.py:103} INFO - [2021-02-10 08:56:04,323] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:56:06,670] {logging_mixin.py:103} INFO - [2021-02-10 08:56:06,670] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:06,674] {logging_mixin.py:103} INFO - [2021-02-10 08:56:06,674] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:56:06,685] {logging_mixin.py:103} INFO - [2021-02-10 08:56:06,685] {data_context.py:1281} INFO - Setting run_name to: 20210210T075606.685086Z
[2021-02-10 08:56:06,686] {logging_mixin.py:103} INFO - [2021-02-10 08:56:06,686] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:56:06,695] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:56:06,697] {logging_mixin.py:103} INFO - [2021-02-10 08:56:06,697] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:56:06,909] {logging_mixin.py:103} INFO - [2021-02-10 08:56:06,909] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:06,910] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:56:06,910] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:56:06,911] {logging_mixin.py:103} INFO - [2021-02-10 08:56:06,911] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:56:07,146] {logging_mixin.py:103} INFO - [2021-02-10 08:56:07,146] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:07,146] {logging_mixin.py:103} INFO - [2021-02-10 08:56:07,146] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:56:07,148] {logging_mixin.py:103} INFO - [2021-02-10 08:56:07,148] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:56:07,902] {logging_mixin.py:103} INFO - [2021-02-10 08:56:07,902] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:07,904] {logging_mixin.py:103} INFO - [2021-02-10 08:56:07,904] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:56:08,081] {logging_mixin.py:103} INFO - [2021-02-10 08:56:08,080] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:08,083] {logging_mixin.py:103} INFO - [2021-02-10 08:56:08,083] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:56:08,249] {logging_mixin.py:103} INFO - [2021-02-10 08:56:08,248] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:08,249] {logging_mixin.py:103} INFO - [2021-02-10 08:56:08,249] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:56:08,263] {logging_mixin.py:103} INFO - [2021-02-10 08:56:08,263] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:56:08,264] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:56:08,266] {logging_mixin.py:103} INFO - [2021-02-10 08:56:08,265] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:56:08,469] {logging_mixin.py:103} INFO - [2021-02-10 08:56:08,468] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:08,469] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:56:08,470] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:56:08,471] {logging_mixin.py:103} INFO - [2021-02-10 08:56:08,471] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:56:08,611] {logging_mixin.py:103} INFO - [2021-02-10 08:56:08,611] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:08,612] {logging_mixin.py:103} INFO - [2021-02-10 08:56:08,612] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:56:08,614] {logging_mixin.py:103} INFO - [2021-02-10 08:56:08,614] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:56:08,797] {logging_mixin.py:103} INFO - [2021-02-10 08:56:08,796] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:08,798] {logging_mixin.py:103} INFO - [2021-02-10 08:56:08,798] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:56:08,967] {logging_mixin.py:103} INFO - [2021-02-10 08:56:08,967] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:08,971] {logging_mixin.py:103} INFO - [2021-02-10 08:56:08,971] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:56:09,133] {logging_mixin.py:103} INFO - [2021-02-10 08:56:09,133] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:09,135] {logging_mixin.py:103} INFO - [2021-02-10 08:56:09,135] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:56:09,297] {logging_mixin.py:103} INFO - [2021-02-10 08:56:09,297] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:09,298] {logging_mixin.py:103} INFO - [2021-02-10 08:56:09,298] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:56:09,302] {logging_mixin.py:103} INFO - [2021-02-10 08:56:09,302] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:56:09,474] {logging_mixin.py:103} INFO - [2021-02-10 08:56:09,474] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:09,489] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:56:09,491] {logging_mixin.py:103} INFO - [2021-02-10 08:56:09,491] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:56:09,739] {logging_mixin.py:103} INFO - [2021-02-10 08:56:09,739] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:09,741] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:56:09,741] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:56:09,742] {logging_mixin.py:103} INFO - [2021-02-10 08:56:09,742] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:56:09,930] {logging_mixin.py:103} INFO - [2021-02-10 08:56:09,930] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:09,931] {logging_mixin.py:103} INFO - [2021-02-10 08:56:09,931] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:56:09,932] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:56:09,935] {logging_mixin.py:103} INFO - [2021-02-10 08:56:09,935] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:56:10,102] {logging_mixin.py:103} INFO - [2021-02-10 08:56:10,101] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:10,103] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:56:10,104] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:56:10,105] {logging_mixin.py:103} INFO - [2021-02-10 08:56:10,105] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:56:10,280] {logging_mixin.py:103} INFO - [2021-02-10 08:56:10,279] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:10,280] {logging_mixin.py:103} INFO - [2021-02-10 08:56:10,280] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:56:10,281] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:56:10,284] {logging_mixin.py:103} INFO - [2021-02-10 08:56:10,283] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:56:10,436] {logging_mixin.py:103} INFO - [2021-02-10 08:56:10,436] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:10,437] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:56:10,438] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:56:10,439] {logging_mixin.py:103} INFO - [2021-02-10 08:56:10,439] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:56:10,578] {logging_mixin.py:103} INFO - [2021-02-10 08:56:10,578] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:10,578] {logging_mixin.py:103} INFO - [2021-02-10 08:56:10,578] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:56:15,746] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:56:46,643] {scheduler_job.py:181} INFO - Started process (PID=62272) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:56:46,643] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:56:46,644] {logging_mixin.py:103} INFO - [2021-02-10 08:56:46,644] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:56:48,371] {logging_mixin.py:103} INFO - [2021-02-10 08:56:48,371] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:56:48,681] {logging_mixin.py:103} INFO - [2021-02-10 08:56:48,681] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:56:49,036] {logging_mixin.py:103} INFO - [2021-02-10 08:56:49,036] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:56:49,036] {logging_mixin.py:103} INFO - [2021-02-10 08:56:49,036] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:56:49,037] {logging_mixin.py:103} INFO - [2021-02-10 08:56:49,036] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:56:50,295] {logging_mixin.py:103} INFO - [2021-02-10 08:56:50,295] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:56:50,441] {logging_mixin.py:103} INFO - [2021-02-10 08:56:50,441] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:50,442] {logging_mixin.py:103} INFO - [2021-02-10 08:56:50,442] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:56:50,571] {logging_mixin.py:103} INFO - [2021-02-10 08:56:50,571] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:50,572] {logging_mixin.py:103} INFO - [2021-02-10 08:56:50,572] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:56:50,717] {logging_mixin.py:103} INFO - [2021-02-10 08:56:50,717] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:50,718] {logging_mixin.py:103} INFO - [2021-02-10 08:56:50,718] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:56:51,221] {logging_mixin.py:103} INFO - [2021-02-10 08:56:51,221] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:51,449] {logging_mixin.py:103} INFO - [2021-02-10 08:56:51,449] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:56:51,591] {logging_mixin.py:103} INFO - [2021-02-10 08:56:51,591] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:51,635] {logging_mixin.py:103} INFO - [2021-02-10 08:56:51,635] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:56:51,636] {logging_mixin.py:103} INFO - [2021-02-10 08:56:51,636] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:56:53,058] {logging_mixin.py:103} INFO - [2021-02-10 08:56:53,058] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:53,061] {logging_mixin.py:103} INFO - [2021-02-10 08:56:53,061] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:56:53,072] {logging_mixin.py:103} INFO - [2021-02-10 08:56:53,072] {data_context.py:1281} INFO - Setting run_name to: 20210210T075653.072311Z
[2021-02-10 08:56:53,073] {logging_mixin.py:103} INFO - [2021-02-10 08:56:53,073] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:56:53,082] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:56:53,084] {logging_mixin.py:103} INFO - [2021-02-10 08:56:53,084] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:56:53,271] {logging_mixin.py:103} INFO - [2021-02-10 08:56:53,271] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:53,272] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:56:53,273] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:56:53,274] {logging_mixin.py:103} INFO - [2021-02-10 08:56:53,274] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:56:53,456] {logging_mixin.py:103} INFO - [2021-02-10 08:56:53,456] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:53,456] {logging_mixin.py:103} INFO - [2021-02-10 08:56:53,456] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:56:53,458] {logging_mixin.py:103} INFO - [2021-02-10 08:56:53,457] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:56:53,625] {logging_mixin.py:103} INFO - [2021-02-10 08:56:53,625] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:53,627] {logging_mixin.py:103} INFO - [2021-02-10 08:56:53,627] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:56:53,776] {logging_mixin.py:103} INFO - [2021-02-10 08:56:53,776] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:53,779] {logging_mixin.py:103} INFO - [2021-02-10 08:56:53,779] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:56:53,935] {logging_mixin.py:103} INFO - [2021-02-10 08:56:53,935] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:53,936] {logging_mixin.py:103} INFO - [2021-02-10 08:56:53,935] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:56:53,952] {logging_mixin.py:103} INFO - [2021-02-10 08:56:53,952] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:56:53,953] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:56:53,955] {logging_mixin.py:103} INFO - [2021-02-10 08:56:53,955] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:56:54,114] {logging_mixin.py:103} INFO - [2021-02-10 08:56:54,114] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:54,115] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:56:54,116] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:56:54,117] {logging_mixin.py:103} INFO - [2021-02-10 08:56:54,117] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:56:54,266] {logging_mixin.py:103} INFO - [2021-02-10 08:56:54,266] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:54,267] {logging_mixin.py:103} INFO - [2021-02-10 08:56:54,266] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:56:54,269] {logging_mixin.py:103} INFO - [2021-02-10 08:56:54,269] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:56:54,430] {logging_mixin.py:103} INFO - [2021-02-10 08:56:54,430] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:54,432] {logging_mixin.py:103} INFO - [2021-02-10 08:56:54,432] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:56:54,643] {logging_mixin.py:103} INFO - [2021-02-10 08:56:54,643] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:54,646] {logging_mixin.py:103} INFO - [2021-02-10 08:56:54,646] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:56:54,837] {logging_mixin.py:103} INFO - [2021-02-10 08:56:54,837] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:54,840] {logging_mixin.py:103} INFO - [2021-02-10 08:56:54,840] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:56:55,005] {logging_mixin.py:103} INFO - [2021-02-10 08:56:55,004] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:55,005] {logging_mixin.py:103} INFO - [2021-02-10 08:56:55,005] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:56:55,009] {logging_mixin.py:103} INFO - [2021-02-10 08:56:55,009] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:56:55,183] {logging_mixin.py:103} INFO - [2021-02-10 08:56:55,182] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:55,191] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:56:55,193] {logging_mixin.py:103} INFO - [2021-02-10 08:56:55,193] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:56:55,360] {logging_mixin.py:103} INFO - [2021-02-10 08:56:55,360] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:55,362] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:56:55,362] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:56:55,363] {logging_mixin.py:103} INFO - [2021-02-10 08:56:55,363] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:56:55,546] {logging_mixin.py:103} INFO - [2021-02-10 08:56:55,546] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:55,547] {logging_mixin.py:103} INFO - [2021-02-10 08:56:55,547] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:56:55,547] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:56:55,549] {logging_mixin.py:103} INFO - [2021-02-10 08:56:55,549] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:56:55,700] {logging_mixin.py:103} INFO - [2021-02-10 08:56:55,699] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:55,701] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:56:55,701] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:56:55,702] {logging_mixin.py:103} INFO - [2021-02-10 08:56:55,702] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:56:55,943] {logging_mixin.py:103} INFO - [2021-02-10 08:56:55,943] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:55,944] {logging_mixin.py:103} INFO - [2021-02-10 08:56:55,944] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:56:55,945] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:56:55,947] {logging_mixin.py:103} INFO - [2021-02-10 08:56:55,947] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:56:56,096] {logging_mixin.py:103} INFO - [2021-02-10 08:56:56,096] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:56,097] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:56:56,097] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:56:56,099] {logging_mixin.py:103} INFO - [2021-02-10 08:56:56,099] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:56:56,263] {logging_mixin.py:103} INFO - [2021-02-10 08:56:56,263] {cursor.py:560} INFO - query execution done
[2021-02-10 08:56:56,263] {logging_mixin.py:103} INFO - [2021-02-10 08:56:56,263] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:57:01,674] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:57:29,706] {scheduler_job.py:181} INFO - Started process (PID=62328) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:57:29,707] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:57:29,707] {logging_mixin.py:103} INFO - [2021-02-10 08:57:29,707] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:57:31,698] {logging_mixin.py:103} INFO - [2021-02-10 08:57:31,697] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:57:32,069] {logging_mixin.py:103} INFO - [2021-02-10 08:57:32,069] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:57:32,444] {logging_mixin.py:103} INFO - [2021-02-10 08:57:32,444] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:57:32,444] {logging_mixin.py:103} INFO - [2021-02-10 08:57:32,444] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:57:32,445] {logging_mixin.py:103} INFO - [2021-02-10 08:57:32,445] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:57:33,918] {logging_mixin.py:103} INFO - [2021-02-10 08:57:33,918] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:57:34,068] {logging_mixin.py:103} INFO - [2021-02-10 08:57:34,068] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:34,070] {logging_mixin.py:103} INFO - [2021-02-10 08:57:34,070] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:57:34,215] {logging_mixin.py:103} INFO - [2021-02-10 08:57:34,215] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:34,215] {logging_mixin.py:103} INFO - [2021-02-10 08:57:34,215] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:57:34,352] {logging_mixin.py:103} INFO - [2021-02-10 08:57:34,352] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:34,355] {logging_mixin.py:103} INFO - [2021-02-10 08:57:34,355] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:57:34,580] {logging_mixin.py:103} INFO - [2021-02-10 08:57:34,580] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:34,819] {logging_mixin.py:103} INFO - [2021-02-10 08:57:34,818] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:57:34,981] {logging_mixin.py:103} INFO - [2021-02-10 08:57:34,981] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:35,029] {logging_mixin.py:103} INFO - [2021-02-10 08:57:35,029] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:57:35,030] {logging_mixin.py:103} INFO - [2021-02-10 08:57:35,030] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:57:36,990] {logging_mixin.py:103} INFO - [2021-02-10 08:57:36,990] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:36,994] {logging_mixin.py:103} INFO - [2021-02-10 08:57:36,993] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:57:37,004] {logging_mixin.py:103} INFO - [2021-02-10 08:57:37,004] {data_context.py:1281} INFO - Setting run_name to: 20210210T075737.004490Z
[2021-02-10 08:57:37,005] {logging_mixin.py:103} INFO - [2021-02-10 08:57:37,005] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:57:37,014] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:57:37,015] {logging_mixin.py:103} INFO - [2021-02-10 08:57:37,015] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:57:37,170] {logging_mixin.py:103} INFO - [2021-02-10 08:57:37,170] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:37,171] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:57:37,171] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:57:37,173] {logging_mixin.py:103} INFO - [2021-02-10 08:57:37,173] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:57:37,926] {logging_mixin.py:103} INFO - [2021-02-10 08:57:37,926] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:37,927] {logging_mixin.py:103} INFO - [2021-02-10 08:57:37,927] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:57:37,930] {logging_mixin.py:103} INFO - [2021-02-10 08:57:37,930] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:57:38,090] {logging_mixin.py:103} INFO - [2021-02-10 08:57:38,090] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:38,092] {logging_mixin.py:103} INFO - [2021-02-10 08:57:38,092] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:57:38,276] {logging_mixin.py:103} INFO - [2021-02-10 08:57:38,276] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:38,278] {logging_mixin.py:103} INFO - [2021-02-10 08:57:38,278] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:57:38,455] {logging_mixin.py:103} INFO - [2021-02-10 08:57:38,455] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:38,456] {logging_mixin.py:103} INFO - [2021-02-10 08:57:38,456] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:57:38,478] {logging_mixin.py:103} INFO - [2021-02-10 08:57:38,477] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:57:38,479] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:57:38,481] {logging_mixin.py:103} INFO - [2021-02-10 08:57:38,481] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:57:38,671] {logging_mixin.py:103} INFO - [2021-02-10 08:57:38,671] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:38,672] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:57:38,672] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:57:38,674] {logging_mixin.py:103} INFO - [2021-02-10 08:57:38,674] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:57:38,828] {logging_mixin.py:103} INFO - [2021-02-10 08:57:38,828] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:38,829] {logging_mixin.py:103} INFO - [2021-02-10 08:57:38,828] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:57:38,831] {logging_mixin.py:103} INFO - [2021-02-10 08:57:38,831] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:57:38,990] {logging_mixin.py:103} INFO - [2021-02-10 08:57:38,990] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:38,992] {logging_mixin.py:103} INFO - [2021-02-10 08:57:38,992] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:57:39,167] {logging_mixin.py:103} INFO - [2021-02-10 08:57:39,167] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:39,171] {logging_mixin.py:103} INFO - [2021-02-10 08:57:39,170] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:57:39,340] {logging_mixin.py:103} INFO - [2021-02-10 08:57:39,340] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:39,343] {logging_mixin.py:103} INFO - [2021-02-10 08:57:39,342] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:57:39,569] {logging_mixin.py:103} INFO - [2021-02-10 08:57:39,569] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:39,569] {logging_mixin.py:103} INFO - [2021-02-10 08:57:39,569] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:57:39,574] {logging_mixin.py:103} INFO - [2021-02-10 08:57:39,573] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:57:39,729] {logging_mixin.py:103} INFO - [2021-02-10 08:57:39,729] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:39,738] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:57:39,740] {logging_mixin.py:103} INFO - [2021-02-10 08:57:39,740] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:57:39,908] {logging_mixin.py:103} INFO - [2021-02-10 08:57:39,908] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:39,909] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:57:39,910] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:57:39,911] {logging_mixin.py:103} INFO - [2021-02-10 08:57:39,911] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:57:40,087] {logging_mixin.py:103} INFO - [2021-02-10 08:57:40,086] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:40,087] {logging_mixin.py:103} INFO - [2021-02-10 08:57:40,087] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:57:40,088] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:57:40,091] {logging_mixin.py:103} INFO - [2021-02-10 08:57:40,091] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:57:40,295] {logging_mixin.py:103} INFO - [2021-02-10 08:57:40,294] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:40,296] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:57:40,296] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:57:40,297] {logging_mixin.py:103} INFO - [2021-02-10 08:57:40,297] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:57:40,809] {logging_mixin.py:103} INFO - [2021-02-10 08:57:40,809] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:40,810] {logging_mixin.py:103} INFO - [2021-02-10 08:57:40,810] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:57:40,811] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:57:40,813] {logging_mixin.py:103} INFO - [2021-02-10 08:57:40,813] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:57:41,288] {logging_mixin.py:103} INFO - [2021-02-10 08:57:41,288] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:41,289] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:57:41,290] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:57:41,291] {logging_mixin.py:103} INFO - [2021-02-10 08:57:41,291] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:57:41,448] {logging_mixin.py:103} INFO - [2021-02-10 08:57:41,448] {cursor.py:560} INFO - query execution done
[2021-02-10 08:57:41,449] {logging_mixin.py:103} INFO - [2021-02-10 08:57:41,449] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:57:46,615] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:58:15,600] {scheduler_job.py:181} INFO - Started process (PID=62387) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:58:15,601] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:58:15,601] {logging_mixin.py:103} INFO - [2021-02-10 08:58:15,601] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:58:17,447] {logging_mixin.py:103} INFO - [2021-02-10 08:58:17,447] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:58:17,859] {logging_mixin.py:103} INFO - [2021-02-10 08:58:17,859] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:58:18,254] {logging_mixin.py:103} INFO - [2021-02-10 08:58:18,254] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:58:18,254] {logging_mixin.py:103} INFO - [2021-02-10 08:58:18,254] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:58:18,255] {logging_mixin.py:103} INFO - [2021-02-10 08:58:18,255] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:58:19,317] {logging_mixin.py:103} INFO - [2021-02-10 08:58:19,317] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:58:19,459] {logging_mixin.py:103} INFO - [2021-02-10 08:58:19,459] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:19,460] {logging_mixin.py:103} INFO - [2021-02-10 08:58:19,460] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:58:19,601] {logging_mixin.py:103} INFO - [2021-02-10 08:58:19,601] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:19,602] {logging_mixin.py:103} INFO - [2021-02-10 08:58:19,602] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:58:19,961] {logging_mixin.py:103} INFO - [2021-02-10 08:58:19,961] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:19,964] {logging_mixin.py:103} INFO - [2021-02-10 08:58:19,964] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:58:20,099] {logging_mixin.py:103} INFO - [2021-02-10 08:58:20,099] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:20,331] {logging_mixin.py:103} INFO - [2021-02-10 08:58:20,331] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:58:20,480] {logging_mixin.py:103} INFO - [2021-02-10 08:58:20,480] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:20,524] {logging_mixin.py:103} INFO - [2021-02-10 08:58:20,523] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:58:20,524] {logging_mixin.py:103} INFO - [2021-02-10 08:58:20,524] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:58:22,155] {logging_mixin.py:103} INFO - [2021-02-10 08:58:22,155] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:22,161] {logging_mixin.py:103} INFO - [2021-02-10 08:58:22,161] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:58:22,174] {logging_mixin.py:103} INFO - [2021-02-10 08:58:22,174] {data_context.py:1281} INFO - Setting run_name to: 20210210T075822.174096Z
[2021-02-10 08:58:22,175] {logging_mixin.py:103} INFO - [2021-02-10 08:58:22,175] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:58:22,185] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:58:22,188] {logging_mixin.py:103} INFO - [2021-02-10 08:58:22,188] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:58:22,383] {logging_mixin.py:103} INFO - [2021-02-10 08:58:22,382] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:22,386] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:58:22,386] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:58:22,388] {logging_mixin.py:103} INFO - [2021-02-10 08:58:22,388] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:58:22,563] {logging_mixin.py:103} INFO - [2021-02-10 08:58:22,563] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:22,564] {logging_mixin.py:103} INFO - [2021-02-10 08:58:22,564] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:58:22,566] {logging_mixin.py:103} INFO - [2021-02-10 08:58:22,566] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:58:22,726] {logging_mixin.py:103} INFO - [2021-02-10 08:58:22,726] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:22,729] {logging_mixin.py:103} INFO - [2021-02-10 08:58:22,729] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:58:22,878] {logging_mixin.py:103} INFO - [2021-02-10 08:58:22,877] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:22,881] {logging_mixin.py:103} INFO - [2021-02-10 08:58:22,880] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:58:23,051] {logging_mixin.py:103} INFO - [2021-02-10 08:58:23,050] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:23,051] {logging_mixin.py:103} INFO - [2021-02-10 08:58:23,051] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:58:23,066] {logging_mixin.py:103} INFO - [2021-02-10 08:58:23,066] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:58:23,067] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:58:23,069] {logging_mixin.py:103} INFO - [2021-02-10 08:58:23,069] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:58:23,231] {logging_mixin.py:103} INFO - [2021-02-10 08:58:23,231] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:23,232] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:58:23,232] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:58:23,233] {logging_mixin.py:103} INFO - [2021-02-10 08:58:23,233] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:58:23,519] {logging_mixin.py:103} INFO - [2021-02-10 08:58:23,519] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:23,520] {logging_mixin.py:103} INFO - [2021-02-10 08:58:23,520] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:58:23,522] {logging_mixin.py:103} INFO - [2021-02-10 08:58:23,522] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:58:23,686] {logging_mixin.py:103} INFO - [2021-02-10 08:58:23,685] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:23,687] {logging_mixin.py:103} INFO - [2021-02-10 08:58:23,687] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:58:23,851] {logging_mixin.py:103} INFO - [2021-02-10 08:58:23,851] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:23,855] {logging_mixin.py:103} INFO - [2021-02-10 08:58:23,855] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:58:24,051] {logging_mixin.py:103} INFO - [2021-02-10 08:58:24,051] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:24,054] {logging_mixin.py:103} INFO - [2021-02-10 08:58:24,054] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:58:24,199] {logging_mixin.py:103} INFO - [2021-02-10 08:58:24,199] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:24,200] {logging_mixin.py:103} INFO - [2021-02-10 08:58:24,199] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:58:24,206] {logging_mixin.py:103} INFO - [2021-02-10 08:58:24,206] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:58:24,369] {logging_mixin.py:103} INFO - [2021-02-10 08:58:24,369] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:24,381] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:58:24,384] {logging_mixin.py:103} INFO - [2021-02-10 08:58:24,384] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:58:24,548] {logging_mixin.py:103} INFO - [2021-02-10 08:58:24,548] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:24,549] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:58:24,549] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:58:24,550] {logging_mixin.py:103} INFO - [2021-02-10 08:58:24,550] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:58:24,700] {logging_mixin.py:103} INFO - [2021-02-10 08:58:24,700] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:24,700] {logging_mixin.py:103} INFO - [2021-02-10 08:58:24,700] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:58:24,701] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:58:24,705] {logging_mixin.py:103} INFO - [2021-02-10 08:58:24,705] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:58:24,849] {logging_mixin.py:103} INFO - [2021-02-10 08:58:24,849] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:24,850] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:58:24,851] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:58:24,852] {logging_mixin.py:103} INFO - [2021-02-10 08:58:24,852] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:58:25,005] {logging_mixin.py:103} INFO - [2021-02-10 08:58:25,005] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:25,006] {logging_mixin.py:103} INFO - [2021-02-10 08:58:25,006] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:58:25,007] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:58:25,010] {logging_mixin.py:103} INFO - [2021-02-10 08:58:25,010] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:58:25,171] {logging_mixin.py:103} INFO - [2021-02-10 08:58:25,171] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:25,172] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:58:25,173] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:58:25,173] {logging_mixin.py:103} INFO - [2021-02-10 08:58:25,173] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:58:25,321] {logging_mixin.py:103} INFO - [2021-02-10 08:58:25,321] {cursor.py:560} INFO - query execution done
[2021-02-10 08:58:25,322] {logging_mixin.py:103} INFO - [2021-02-10 08:58:25,322] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:58:31,042] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:59:02,985] {scheduler_job.py:181} INFO - Started process (PID=62448) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:59:02,986] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:59:02,986] {logging_mixin.py:103} INFO - [2021-02-10 08:59:02,986] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:59:05,588] {logging_mixin.py:103} INFO - [2021-02-10 08:59:05,588] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:59:05,913] {logging_mixin.py:103} INFO - [2021-02-10 08:59:05,913] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:59:06,272] {logging_mixin.py:103} INFO - [2021-02-10 08:59:06,272] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:59:06,273] {logging_mixin.py:103} INFO - [2021-02-10 08:59:06,273] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:59:06,273] {logging_mixin.py:103} INFO - [2021-02-10 08:59:06,273] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:59:07,401] {logging_mixin.py:103} INFO - [2021-02-10 08:59:07,401] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:59:07,549] {logging_mixin.py:103} INFO - [2021-02-10 08:59:07,549] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:07,551] {logging_mixin.py:103} INFO - [2021-02-10 08:59:07,551] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:59:07,703] {logging_mixin.py:103} INFO - [2021-02-10 08:59:07,703] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:07,704] {logging_mixin.py:103} INFO - [2021-02-10 08:59:07,704] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:59:07,835] {logging_mixin.py:103} INFO - [2021-02-10 08:59:07,835] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:07,837] {logging_mixin.py:103} INFO - [2021-02-10 08:59:07,837] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:59:07,969] {logging_mixin.py:103} INFO - [2021-02-10 08:59:07,969] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:08,300] {logging_mixin.py:103} INFO - [2021-02-10 08:59:08,300] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:59:08,451] {logging_mixin.py:103} INFO - [2021-02-10 08:59:08,451] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:08,496] {logging_mixin.py:103} INFO - [2021-02-10 08:59:08,496] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:59:08,496] {logging_mixin.py:103} INFO - [2021-02-10 08:59:08,496] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 08:59:09,619] {logging_mixin.py:103} INFO - [2021-02-10 08:59:09,618] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:09,622] {logging_mixin.py:103} INFO - [2021-02-10 08:59:09,622] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:59:09,638] {logging_mixin.py:103} INFO - [2021-02-10 08:59:09,638] {data_context.py:1281} INFO - Setting run_name to: 20210210T075909.638676Z
[2021-02-10 08:59:09,640] {logging_mixin.py:103} INFO - [2021-02-10 08:59:09,640] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 08:59:09,653] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:59:09,655] {logging_mixin.py:103} INFO - [2021-02-10 08:59:09,655] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:59:09,811] {logging_mixin.py:103} INFO - [2021-02-10 08:59:09,811] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:09,811] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 08:59:09,812] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:59:09,813] {logging_mixin.py:103} INFO - [2021-02-10 08:59:09,813] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 08:59:10,687] {logging_mixin.py:103} INFO - [2021-02-10 08:59:10,687] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:10,688] {logging_mixin.py:103} INFO - [2021-02-10 08:59:10,687] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:59:10,690] {logging_mixin.py:103} INFO - [2021-02-10 08:59:10,689] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:59:10,852] {logging_mixin.py:103} INFO - [2021-02-10 08:59:10,852] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:10,854] {logging_mixin.py:103} INFO - [2021-02-10 08:59:10,854] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 08:59:11,012] {logging_mixin.py:103} INFO - [2021-02-10 08:59:11,012] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:11,015] {logging_mixin.py:103} INFO - [2021-02-10 08:59:11,015] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 08:59:12,223] {logging_mixin.py:103} INFO - [2021-02-10 08:59:12,223] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:12,223] {logging_mixin.py:103} INFO - [2021-02-10 08:59:12,223] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:59:12,246] {logging_mixin.py:103} INFO - [2021-02-10 08:59:12,246] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 08:59:12,247] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:59:12,249] {logging_mixin.py:103} INFO - [2021-02-10 08:59:12,249] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:59:12,416] {logging_mixin.py:103} INFO - [2021-02-10 08:59:12,415] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:12,416] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 08:59:12,416] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:59:12,418] {logging_mixin.py:103} INFO - [2021-02-10 08:59:12,418] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 08:59:12,574] {logging_mixin.py:103} INFO - [2021-02-10 08:59:12,574] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:12,575] {logging_mixin.py:103} INFO - [2021-02-10 08:59:12,575] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:59:12,580] {logging_mixin.py:103} INFO - [2021-02-10 08:59:12,579] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 08:59:12,764] {logging_mixin.py:103} INFO - [2021-02-10 08:59:12,764] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:12,765] {logging_mixin.py:103} INFO - [2021-02-10 08:59:12,765] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:59:12,924] {logging_mixin.py:103} INFO - [2021-02-10 08:59:12,924] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:12,927] {logging_mixin.py:103} INFO - [2021-02-10 08:59:12,927] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 08:59:13,084] {logging_mixin.py:103} INFO - [2021-02-10 08:59:13,083] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:13,095] {logging_mixin.py:103} INFO - [2021-02-10 08:59:13,095] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 08:59:13,252] {logging_mixin.py:103} INFO - [2021-02-10 08:59:13,251] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:13,252] {logging_mixin.py:103} INFO - [2021-02-10 08:59:13,252] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:59:13,257] {logging_mixin.py:103} INFO - [2021-02-10 08:59:13,257] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 08:59:13,766] {logging_mixin.py:103} INFO - [2021-02-10 08:59:13,766] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:13,777] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:59:13,780] {logging_mixin.py:103} INFO - [2021-02-10 08:59:13,780] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 08:59:13,942] {logging_mixin.py:103} INFO - [2021-02-10 08:59:13,942] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:13,943] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 08:59:13,943] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:59:13,945] {logging_mixin.py:103} INFO - [2021-02-10 08:59:13,945] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 08:59:14,102] {logging_mixin.py:103} INFO - [2021-02-10 08:59:14,102] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:14,103] {logging_mixin.py:103} INFO - [2021-02-10 08:59:14,103] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:59:14,104] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:59:14,107] {logging_mixin.py:103} INFO - [2021-02-10 08:59:14,107] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 08:59:14,256] {logging_mixin.py:103} INFO - [2021-02-10 08:59:14,256] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:14,257] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 08:59:14,258] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:59:14,259] {logging_mixin.py:103} INFO - [2021-02-10 08:59:14,259] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 08:59:14,408] {logging_mixin.py:103} INFO - [2021-02-10 08:59:14,408] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:14,409] {logging_mixin.py:103} INFO - [2021-02-10 08:59:14,409] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:59:14,410] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 08:59:14,413] {logging_mixin.py:103} INFO - [2021-02-10 08:59:14,413] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 08:59:14,996] {logging_mixin.py:103} INFO - [2021-02-10 08:59:14,996] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:14,998] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 08:59:14,998] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 08:59:14,999] {logging_mixin.py:103} INFO - [2021-02-10 08:59:14,999] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 08:59:15,139] {logging_mixin.py:103} INFO - [2021-02-10 08:59:15,139] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:15,140] {logging_mixin.py:103} INFO - [2021-02-10 08:59:15,140] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 08:59:21,025] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 08:59:54,527] {scheduler_job.py:181} INFO - Started process (PID=62511) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:59:54,529] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 08:59:54,529] {logging_mixin.py:103} INFO - [2021-02-10 08:59:54,529] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 08:59:56,821] {logging_mixin.py:103} INFO - [2021-02-10 08:59:56,821] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 08:59:57,163] {logging_mixin.py:103} INFO - [2021-02-10 08:59:57,163] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 08:59:57,528] {logging_mixin.py:103} INFO - [2021-02-10 08:59:57,528] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 08:59:57,528] {logging_mixin.py:103} INFO - [2021-02-10 08:59:57,528] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 08:59:57,528] {logging_mixin.py:103} INFO - [2021-02-10 08:59:57,528] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 08:59:58,692] {logging_mixin.py:103} INFO - [2021-02-10 08:59:58,692] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:59:58,838] {logging_mixin.py:103} INFO - [2021-02-10 08:59:58,838] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:58,840] {logging_mixin.py:103} INFO - [2021-02-10 08:59:58,840] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 08:59:59,087] {logging_mixin.py:103} INFO - [2021-02-10 08:59:59,086] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:59,087] {logging_mixin.py:103} INFO - [2021-02-10 08:59:59,087] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:59:59,254] {logging_mixin.py:103} INFO - [2021-02-10 08:59:59,253] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:59,257] {logging_mixin.py:103} INFO - [2021-02-10 08:59:59,256] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 08:59:59,395] {logging_mixin.py:103} INFO - [2021-02-10 08:59:59,394] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:59,655] {logging_mixin.py:103} INFO - [2021-02-10 08:59:59,654] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 08:59:59,832] {logging_mixin.py:103} INFO - [2021-02-10 08:59:59,832] {cursor.py:560} INFO - query execution done
[2021-02-10 08:59:59,881] {logging_mixin.py:103} INFO - [2021-02-10 08:59:59,881] {json_result.py:116} INFO - fetching data done
[2021-02-10 08:59:59,882] {logging_mixin.py:103} INFO - [2021-02-10 08:59:59,882] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:00:02,300] {logging_mixin.py:103} INFO - [2021-02-10 09:00:02,300] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:02,304] {logging_mixin.py:103} INFO - [2021-02-10 09:00:02,303] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:00:02,315] {logging_mixin.py:103} INFO - [2021-02-10 09:00:02,315] {data_context.py:1281} INFO - Setting run_name to: 20210210T080002.315368Z
[2021-02-10 09:00:02,316] {logging_mixin.py:103} INFO - [2021-02-10 09:00:02,316] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:00:02,326] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:00:02,327] {logging_mixin.py:103} INFO - [2021-02-10 09:00:02,327] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:00:02,525] {logging_mixin.py:103} INFO - [2021-02-10 09:00:02,525] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:02,526] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:00:02,526] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:00:02,527] {logging_mixin.py:103} INFO - [2021-02-10 09:00:02,527] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:00:02,728] {logging_mixin.py:103} INFO - [2021-02-10 09:00:02,728] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:02,728] {logging_mixin.py:103} INFO - [2021-02-10 09:00:02,728] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:00:02,730] {logging_mixin.py:103} INFO - [2021-02-10 09:00:02,730] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:00:02,876] {logging_mixin.py:103} INFO - [2021-02-10 09:00:02,876] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:02,879] {logging_mixin.py:103} INFO - [2021-02-10 09:00:02,878] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:00:03,140] {logging_mixin.py:103} INFO - [2021-02-10 09:00:03,140] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:03,143] {logging_mixin.py:103} INFO - [2021-02-10 09:00:03,143] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:00:03,378] {logging_mixin.py:103} INFO - [2021-02-10 09:00:03,377] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:03,378] {logging_mixin.py:103} INFO - [2021-02-10 09:00:03,378] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:00:03,398] {logging_mixin.py:103} INFO - [2021-02-10 09:00:03,398] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:00:03,399] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:00:03,401] {logging_mixin.py:103} INFO - [2021-02-10 09:00:03,401] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:00:03,555] {logging_mixin.py:103} INFO - [2021-02-10 09:00:03,554] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:03,556] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:00:03,556] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:00:03,557] {logging_mixin.py:103} INFO - [2021-02-10 09:00:03,557] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:00:04,153] {logging_mixin.py:103} INFO - [2021-02-10 09:00:04,153] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:04,153] {logging_mixin.py:103} INFO - [2021-02-10 09:00:04,153] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:00:04,156] {logging_mixin.py:103} INFO - [2021-02-10 09:00:04,156] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:00:04,756] {logging_mixin.py:103} INFO - [2021-02-10 09:00:04,755] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:04,757] {logging_mixin.py:103} INFO - [2021-02-10 09:00:04,757] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:00:04,919] {logging_mixin.py:103} INFO - [2021-02-10 09:00:04,919] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:04,921] {logging_mixin.py:103} INFO - [2021-02-10 09:00:04,921] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:00:05,219] {logging_mixin.py:103} INFO - [2021-02-10 09:00:05,219] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:05,222] {logging_mixin.py:103} INFO - [2021-02-10 09:00:05,222] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:00:05,677] {logging_mixin.py:103} INFO - [2021-02-10 09:00:05,677] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:05,678] {logging_mixin.py:103} INFO - [2021-02-10 09:00:05,678] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:00:05,681] {logging_mixin.py:103} INFO - [2021-02-10 09:00:05,681] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:00:06,605] {logging_mixin.py:103} INFO - [2021-02-10 09:00:06,605] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:06,617] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:00:06,620] {logging_mixin.py:103} INFO - [2021-02-10 09:00:06,619] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:00:06,824] {logging_mixin.py:103} INFO - [2021-02-10 09:00:06,824] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:06,835] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:00:06,835] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:00:06,837] {logging_mixin.py:103} INFO - [2021-02-10 09:00:06,836] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:00:07,157] {logging_mixin.py:103} INFO - [2021-02-10 09:00:07,156] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:07,157] {logging_mixin.py:103} INFO - [2021-02-10 09:00:07,157] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:00:07,158] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:00:07,161] {logging_mixin.py:103} INFO - [2021-02-10 09:00:07,161] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:00:07,405] {logging_mixin.py:103} INFO - [2021-02-10 09:00:07,405] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:07,406] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:00:07,406] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:00:07,408] {logging_mixin.py:103} INFO - [2021-02-10 09:00:07,408] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:00:07,580] {logging_mixin.py:103} INFO - [2021-02-10 09:00:07,580] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:07,580] {logging_mixin.py:103} INFO - [2021-02-10 09:00:07,580] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:00:07,581] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:00:07,585] {logging_mixin.py:103} INFO - [2021-02-10 09:00:07,585] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:00:07,747] {logging_mixin.py:103} INFO - [2021-02-10 09:00:07,747] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:07,749] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:00:07,749] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:00:07,751] {logging_mixin.py:103} INFO - [2021-02-10 09:00:07,751] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:00:07,914] {logging_mixin.py:103} INFO - [2021-02-10 09:00:07,913] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:07,914] {logging_mixin.py:103} INFO - [2021-02-10 09:00:07,914] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:00:14,806] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:00:53,721] {scheduler_job.py:181} INFO - Started process (PID=62576) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:00:53,723] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:00:53,723] {logging_mixin.py:103} INFO - [2021-02-10 09:00:53,723] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:00:55,496] {logging_mixin.py:103} INFO - [2021-02-10 09:00:55,496] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:00:55,805] {logging_mixin.py:103} INFO - [2021-02-10 09:00:55,805] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:00:56,155] {logging_mixin.py:103} INFO - [2021-02-10 09:00:56,155] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:00:56,155] {logging_mixin.py:103} INFO - [2021-02-10 09:00:56,155] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:00:56,155] {logging_mixin.py:103} INFO - [2021-02-10 09:00:56,155] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:00:57,598] {logging_mixin.py:103} INFO - [2021-02-10 09:00:57,597] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:00:57,827] {logging_mixin.py:103} INFO - [2021-02-10 09:00:57,827] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:57,829] {logging_mixin.py:103} INFO - [2021-02-10 09:00:57,828] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:00:58,069] {logging_mixin.py:103} INFO - [2021-02-10 09:00:58,069] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:58,070] {logging_mixin.py:103} INFO - [2021-02-10 09:00:58,069] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:00:58,275] {logging_mixin.py:103} INFO - [2021-02-10 09:00:58,275] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:58,278] {logging_mixin.py:103} INFO - [2021-02-10 09:00:58,278] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:00:58,576] {logging_mixin.py:103} INFO - [2021-02-10 09:00:58,576] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:58,795] {logging_mixin.py:103} INFO - [2021-02-10 09:00:58,795] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:00:59,013] {logging_mixin.py:103} INFO - [2021-02-10 09:00:59,013] {cursor.py:560} INFO - query execution done
[2021-02-10 09:00:59,056] {logging_mixin.py:103} INFO - [2021-02-10 09:00:59,056] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:00:59,057] {logging_mixin.py:103} INFO - [2021-02-10 09:00:59,057] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:01:00,366] {logging_mixin.py:103} INFO - [2021-02-10 09:01:00,365] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:00,369] {logging_mixin.py:103} INFO - [2021-02-10 09:01:00,369] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:01:00,379] {logging_mixin.py:103} INFO - [2021-02-10 09:01:00,379] {data_context.py:1281} INFO - Setting run_name to: 20210210T080100.379813Z
[2021-02-10 09:01:00,381] {logging_mixin.py:103} INFO - [2021-02-10 09:01:00,380] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:01:00,389] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:01:00,391] {logging_mixin.py:103} INFO - [2021-02-10 09:01:00,391] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:01:00,635] {logging_mixin.py:103} INFO - [2021-02-10 09:01:00,635] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:00,636] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:01:00,636] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:01:00,638] {logging_mixin.py:103} INFO - [2021-02-10 09:01:00,638] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:01:00,849] {logging_mixin.py:103} INFO - [2021-02-10 09:01:00,848] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:00,849] {logging_mixin.py:103} INFO - [2021-02-10 09:01:00,849] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:01:00,851] {logging_mixin.py:103} INFO - [2021-02-10 09:01:00,851] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:01:01,047] {logging_mixin.py:103} INFO - [2021-02-10 09:01:01,047] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:01,050] {logging_mixin.py:103} INFO - [2021-02-10 09:01:01,050] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:01:01,903] {logging_mixin.py:103} INFO - [2021-02-10 09:01:01,903] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:01,906] {logging_mixin.py:103} INFO - [2021-02-10 09:01:01,906] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:01:02,072] {logging_mixin.py:103} INFO - [2021-02-10 09:01:02,072] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:02,073] {logging_mixin.py:103} INFO - [2021-02-10 09:01:02,072] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:01:02,093] {logging_mixin.py:103} INFO - [2021-02-10 09:01:02,093] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:01:02,095] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:01:02,098] {logging_mixin.py:103} INFO - [2021-02-10 09:01:02,098] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:01:02,294] {logging_mixin.py:103} INFO - [2021-02-10 09:01:02,294] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:02,295] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:01:02,295] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:01:02,296] {logging_mixin.py:103} INFO - [2021-02-10 09:01:02,296] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:01:02,534] {logging_mixin.py:103} INFO - [2021-02-10 09:01:02,534] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:02,535] {logging_mixin.py:103} INFO - [2021-02-10 09:01:02,535] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:01:02,537] {logging_mixin.py:103} INFO - [2021-02-10 09:01:02,537] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:01:02,782] {logging_mixin.py:103} INFO - [2021-02-10 09:01:02,782] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:02,784] {logging_mixin.py:103} INFO - [2021-02-10 09:01:02,784] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:01:03,006] {logging_mixin.py:103} INFO - [2021-02-10 09:01:03,006] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:03,008] {logging_mixin.py:103} INFO - [2021-02-10 09:01:03,008] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:01:03,250] {logging_mixin.py:103} INFO - [2021-02-10 09:01:03,250] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:03,252] {logging_mixin.py:103} INFO - [2021-02-10 09:01:03,252] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:01:04,277] {logging_mixin.py:103} INFO - [2021-02-10 09:01:04,277] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:04,277] {logging_mixin.py:103} INFO - [2021-02-10 09:01:04,277] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:01:04,280] {logging_mixin.py:103} INFO - [2021-02-10 09:01:04,280] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:01:04,968] {logging_mixin.py:103} INFO - [2021-02-10 09:01:04,968] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:04,980] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:01:04,982] {logging_mixin.py:103} INFO - [2021-02-10 09:01:04,982] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:01:05,260] {logging_mixin.py:103} INFO - [2021-02-10 09:01:05,260] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:05,262] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:01:05,262] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:01:05,263] {logging_mixin.py:103} INFO - [2021-02-10 09:01:05,263] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:01:05,890] {logging_mixin.py:103} INFO - [2021-02-10 09:01:05,890] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:05,891] {logging_mixin.py:103} INFO - [2021-02-10 09:01:05,891] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:01:05,892] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:01:05,897] {logging_mixin.py:103} INFO - [2021-02-10 09:01:05,897] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:01:06,505] {logging_mixin.py:103} INFO - [2021-02-10 09:01:06,504] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:06,506] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:01:06,506] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:01:06,507] {logging_mixin.py:103} INFO - [2021-02-10 09:01:06,507] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:01:06,778] {logging_mixin.py:103} INFO - [2021-02-10 09:01:06,778] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:06,779] {logging_mixin.py:103} INFO - [2021-02-10 09:01:06,779] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:01:06,780] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:01:06,783] {logging_mixin.py:103} INFO - [2021-02-10 09:01:06,783] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:01:07,067] {logging_mixin.py:103} INFO - [2021-02-10 09:01:07,067] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:07,068] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:01:07,068] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:01:07,069] {logging_mixin.py:103} INFO - [2021-02-10 09:01:07,069] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:01:07,234] {logging_mixin.py:103} INFO - [2021-02-10 09:01:07,234] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:07,235] {logging_mixin.py:103} INFO - [2021-02-10 09:01:07,234] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:01:12,695] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:01:42,876] {scheduler_job.py:181} INFO - Started process (PID=62634) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:01:42,876] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:01:42,876] {logging_mixin.py:103} INFO - [2021-02-10 09:01:42,876] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:01:44,773] {logging_mixin.py:103} INFO - [2021-02-10 09:01:44,773] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:01:45,068] {logging_mixin.py:103} INFO - [2021-02-10 09:01:45,068] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:01:45,401] {logging_mixin.py:103} INFO - [2021-02-10 09:01:45,400] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:01:45,401] {logging_mixin.py:103} INFO - [2021-02-10 09:01:45,401] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:01:45,401] {logging_mixin.py:103} INFO - [2021-02-10 09:01:45,401] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:01:46,751] {logging_mixin.py:103} INFO - [2021-02-10 09:01:46,751] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:01:47,369] {logging_mixin.py:103} INFO - [2021-02-10 09:01:47,369] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:47,371] {logging_mixin.py:103} INFO - [2021-02-10 09:01:47,371] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:01:47,535] {logging_mixin.py:103} INFO - [2021-02-10 09:01:47,534] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:47,535] {logging_mixin.py:103} INFO - [2021-02-10 09:01:47,535] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:01:47,685] {logging_mixin.py:103} INFO - [2021-02-10 09:01:47,685] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:47,688] {logging_mixin.py:103} INFO - [2021-02-10 09:01:47,688] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:01:47,940] {logging_mixin.py:103} INFO - [2021-02-10 09:01:47,940] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:48,155] {logging_mixin.py:103} INFO - [2021-02-10 09:01:48,155] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:01:48,314] {logging_mixin.py:103} INFO - [2021-02-10 09:01:48,314] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:48,357] {logging_mixin.py:103} INFO - [2021-02-10 09:01:48,357] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:01:48,358] {logging_mixin.py:103} INFO - [2021-02-10 09:01:48,358] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:01:49,560] {logging_mixin.py:103} INFO - [2021-02-10 09:01:49,560] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:49,564] {logging_mixin.py:103} INFO - [2021-02-10 09:01:49,563] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:01:49,574] {logging_mixin.py:103} INFO - [2021-02-10 09:01:49,574] {data_context.py:1281} INFO - Setting run_name to: 20210210T080149.574400Z
[2021-02-10 09:01:49,575] {logging_mixin.py:103} INFO - [2021-02-10 09:01:49,575] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:01:49,584] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:01:49,585] {logging_mixin.py:103} INFO - [2021-02-10 09:01:49,585] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:01:49,765] {logging_mixin.py:103} INFO - [2021-02-10 09:01:49,765] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:49,766] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:01:49,766] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:01:49,768] {logging_mixin.py:103} INFO - [2021-02-10 09:01:49,767] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:01:49,970] {logging_mixin.py:103} INFO - [2021-02-10 09:01:49,969] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:49,970] {logging_mixin.py:103} INFO - [2021-02-10 09:01:49,970] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:01:49,972] {logging_mixin.py:103} INFO - [2021-02-10 09:01:49,972] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:01:50,140] {logging_mixin.py:103} INFO - [2021-02-10 09:01:50,140] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:50,143] {logging_mixin.py:103} INFO - [2021-02-10 09:01:50,142] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:01:50,347] {logging_mixin.py:103} INFO - [2021-02-10 09:01:50,346] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:50,349] {logging_mixin.py:103} INFO - [2021-02-10 09:01:50,349] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:01:50,492] {logging_mixin.py:103} INFO - [2021-02-10 09:01:50,492] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:50,493] {logging_mixin.py:103} INFO - [2021-02-10 09:01:50,493] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:01:50,512] {logging_mixin.py:103} INFO - [2021-02-10 09:01:50,512] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:01:50,513] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:01:50,516] {logging_mixin.py:103} INFO - [2021-02-10 09:01:50,516] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:01:51,357] {logging_mixin.py:103} INFO - [2021-02-10 09:01:51,357] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:51,358] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:01:51,358] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:01:51,359] {logging_mixin.py:103} INFO - [2021-02-10 09:01:51,359] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:01:51,545] {logging_mixin.py:103} INFO - [2021-02-10 09:01:51,545] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:51,545] {logging_mixin.py:103} INFO - [2021-02-10 09:01:51,545] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:01:51,548] {logging_mixin.py:103} INFO - [2021-02-10 09:01:51,548] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:01:51,703] {logging_mixin.py:103} INFO - [2021-02-10 09:01:51,703] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:51,705] {logging_mixin.py:103} INFO - [2021-02-10 09:01:51,705] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:01:51,852] {logging_mixin.py:103} INFO - [2021-02-10 09:01:51,852] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:51,855] {logging_mixin.py:103} INFO - [2021-02-10 09:01:51,855] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:01:52,062] {logging_mixin.py:103} INFO - [2021-02-10 09:01:52,061] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:52,064] {logging_mixin.py:103} INFO - [2021-02-10 09:01:52,063] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:01:52,215] {logging_mixin.py:103} INFO - [2021-02-10 09:01:52,215] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:52,215] {logging_mixin.py:103} INFO - [2021-02-10 09:01:52,215] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:01:52,220] {logging_mixin.py:103} INFO - [2021-02-10 09:01:52,219] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:01:52,467] {logging_mixin.py:103} INFO - [2021-02-10 09:01:52,466] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:52,478] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:01:52,480] {logging_mixin.py:103} INFO - [2021-02-10 09:01:52,480] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:01:52,627] {logging_mixin.py:103} INFO - [2021-02-10 09:01:52,627] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:52,629] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:01:52,629] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:01:52,630] {logging_mixin.py:103} INFO - [2021-02-10 09:01:52,630] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:01:53,522] {logging_mixin.py:103} INFO - [2021-02-10 09:01:53,522] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:53,523] {logging_mixin.py:103} INFO - [2021-02-10 09:01:53,523] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:01:53,524] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:01:53,527] {logging_mixin.py:103} INFO - [2021-02-10 09:01:53,527] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:01:53,683] {logging_mixin.py:103} INFO - [2021-02-10 09:01:53,683] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:53,684] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:01:53,685] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:01:53,686] {logging_mixin.py:103} INFO - [2021-02-10 09:01:53,686] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:01:53,958] {logging_mixin.py:103} INFO - [2021-02-10 09:01:53,958] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:53,959] {logging_mixin.py:103} INFO - [2021-02-10 09:01:53,959] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:01:53,960] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:01:53,962] {logging_mixin.py:103} INFO - [2021-02-10 09:01:53,962] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:01:54,114] {logging_mixin.py:103} INFO - [2021-02-10 09:01:54,114] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:54,115] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:01:54,116] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:01:54,117] {logging_mixin.py:103} INFO - [2021-02-10 09:01:54,117] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:01:54,258] {logging_mixin.py:103} INFO - [2021-02-10 09:01:54,258] {cursor.py:560} INFO - query execution done
[2021-02-10 09:01:54,258] {logging_mixin.py:103} INFO - [2021-02-10 09:01:54,258] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:01:58,452] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:02:25,494] {scheduler_job.py:181} INFO - Started process (PID=62691) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:02:25,494] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:02:25,495] {logging_mixin.py:103} INFO - [2021-02-10 09:02:25,495] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:02:27,153] {logging_mixin.py:103} INFO - [2021-02-10 09:02:27,153] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:02:27,450] {logging_mixin.py:103} INFO - [2021-02-10 09:02:27,450] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:02:27,780] {logging_mixin.py:103} INFO - [2021-02-10 09:02:27,780] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:02:27,781] {logging_mixin.py:103} INFO - [2021-02-10 09:02:27,781] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:02:27,781] {logging_mixin.py:103} INFO - [2021-02-10 09:02:27,781] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:02:28,947] {logging_mixin.py:103} INFO - [2021-02-10 09:02:28,946] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:02:29,096] {logging_mixin.py:103} INFO - [2021-02-10 09:02:29,096] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:29,098] {logging_mixin.py:103} INFO - [2021-02-10 09:02:29,097] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:02:29,233] {logging_mixin.py:103} INFO - [2021-02-10 09:02:29,233] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:29,234] {logging_mixin.py:103} INFO - [2021-02-10 09:02:29,234] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:02:29,374] {logging_mixin.py:103} INFO - [2021-02-10 09:02:29,374] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:29,378] {logging_mixin.py:103} INFO - [2021-02-10 09:02:29,377] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:02:29,702] {logging_mixin.py:103} INFO - [2021-02-10 09:02:29,702] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:29,917] {logging_mixin.py:103} INFO - [2021-02-10 09:02:29,917] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:02:30,285] {logging_mixin.py:103} INFO - [2021-02-10 09:02:30,285] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:30,327] {logging_mixin.py:103} INFO - [2021-02-10 09:02:30,327] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:02:30,327] {logging_mixin.py:103} INFO - [2021-02-10 09:02:30,327] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:02:31,910] {logging_mixin.py:103} INFO - [2021-02-10 09:02:31,910] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:31,913] {logging_mixin.py:103} INFO - [2021-02-10 09:02:31,913] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:02:31,923] {logging_mixin.py:103} INFO - [2021-02-10 09:02:31,923] {data_context.py:1281} INFO - Setting run_name to: 20210210T080231.923098Z
[2021-02-10 09:02:31,924] {logging_mixin.py:103} INFO - [2021-02-10 09:02:31,924] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:02:31,932] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:02:31,934] {logging_mixin.py:103} INFO - [2021-02-10 09:02:31,934] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:02:32,170] {logging_mixin.py:103} INFO - [2021-02-10 09:02:32,170] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:32,171] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:02:32,171] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:02:32,173] {logging_mixin.py:103} INFO - [2021-02-10 09:02:32,172] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:02:32,393] {logging_mixin.py:103} INFO - [2021-02-10 09:02:32,392] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:32,393] {logging_mixin.py:103} INFO - [2021-02-10 09:02:32,393] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:02:32,395] {logging_mixin.py:103} INFO - [2021-02-10 09:02:32,395] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:02:32,636] {logging_mixin.py:103} INFO - [2021-02-10 09:02:32,636] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:32,638] {logging_mixin.py:103} INFO - [2021-02-10 09:02:32,638] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:02:32,838] {logging_mixin.py:103} INFO - [2021-02-10 09:02:32,837] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:32,840] {logging_mixin.py:103} INFO - [2021-02-10 09:02:32,840] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:02:33,042] {logging_mixin.py:103} INFO - [2021-02-10 09:02:33,041] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:33,042] {logging_mixin.py:103} INFO - [2021-02-10 09:02:33,042] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:02:33,061] {logging_mixin.py:103} INFO - [2021-02-10 09:02:33,061] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:02:33,062] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:02:33,065] {logging_mixin.py:103} INFO - [2021-02-10 09:02:33,065] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:02:33,447] {logging_mixin.py:103} INFO - [2021-02-10 09:02:33,446] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:33,448] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:02:33,448] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:02:33,449] {logging_mixin.py:103} INFO - [2021-02-10 09:02:33,449] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:02:33,621] {logging_mixin.py:103} INFO - [2021-02-10 09:02:33,620] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:33,621] {logging_mixin.py:103} INFO - [2021-02-10 09:02:33,621] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:02:33,624] {logging_mixin.py:103} INFO - [2021-02-10 09:02:33,624] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:02:33,816] {logging_mixin.py:103} INFO - [2021-02-10 09:02:33,816] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:33,818] {logging_mixin.py:103} INFO - [2021-02-10 09:02:33,818] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:02:33,984] {logging_mixin.py:103} INFO - [2021-02-10 09:02:33,984] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:33,987] {logging_mixin.py:103} INFO - [2021-02-10 09:02:33,987] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:02:34,199] {logging_mixin.py:103} INFO - [2021-02-10 09:02:34,199] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:34,202] {logging_mixin.py:103} INFO - [2021-02-10 09:02:34,202] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:02:34,383] {logging_mixin.py:103} INFO - [2021-02-10 09:02:34,383] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:34,384] {logging_mixin.py:103} INFO - [2021-02-10 09:02:34,384] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:02:34,388] {logging_mixin.py:103} INFO - [2021-02-10 09:02:34,388] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:02:34,550] {logging_mixin.py:103} INFO - [2021-02-10 09:02:34,550] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:34,559] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:02:34,562] {logging_mixin.py:103} INFO - [2021-02-10 09:02:34,562] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:02:34,775] {logging_mixin.py:103} INFO - [2021-02-10 09:02:34,775] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:34,776] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:02:34,776] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:02:34,777] {logging_mixin.py:103} INFO - [2021-02-10 09:02:34,777] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:02:35,595] {logging_mixin.py:103} INFO - [2021-02-10 09:02:35,595] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:35,595] {logging_mixin.py:103} INFO - [2021-02-10 09:02:35,595] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:02:35,596] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:02:35,600] {logging_mixin.py:103} INFO - [2021-02-10 09:02:35,599] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:02:35,846] {logging_mixin.py:103} INFO - [2021-02-10 09:02:35,845] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:35,847] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:02:35,847] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:02:35,848] {logging_mixin.py:103} INFO - [2021-02-10 09:02:35,848] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:02:36,018] {logging_mixin.py:103} INFO - [2021-02-10 09:02:36,018] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:36,019] {logging_mixin.py:103} INFO - [2021-02-10 09:02:36,019] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:02:36,020] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:02:36,023] {logging_mixin.py:103} INFO - [2021-02-10 09:02:36,022] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:02:36,255] {logging_mixin.py:103} INFO - [2021-02-10 09:02:36,255] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:36,256] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:02:36,256] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:02:36,258] {logging_mixin.py:103} INFO - [2021-02-10 09:02:36,258] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:02:36,418] {logging_mixin.py:103} INFO - [2021-02-10 09:02:36,418] {cursor.py:560} INFO - query execution done
[2021-02-10 09:02:36,419] {logging_mixin.py:103} INFO - [2021-02-10 09:02:36,419] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:02:40,599] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:03:06,699] {scheduler_job.py:181} INFO - Started process (PID=62749) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:03:06,700] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:03:06,700] {logging_mixin.py:103} INFO - [2021-02-10 09:03:06,700] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:03:08,345] {logging_mixin.py:103} INFO - [2021-02-10 09:03:08,344] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:03:08,639] {logging_mixin.py:103} INFO - [2021-02-10 09:03:08,639] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:03:08,966] {logging_mixin.py:103} INFO - [2021-02-10 09:03:08,965] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:03:08,966] {logging_mixin.py:103} INFO - [2021-02-10 09:03:08,966] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:03:08,966] {logging_mixin.py:103} INFO - [2021-02-10 09:03:08,966] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:03:09,768] {logging_mixin.py:103} INFO - [2021-02-10 09:03:09,768] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:03:09,905] {logging_mixin.py:103} INFO - [2021-02-10 09:03:09,905] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:09,907] {logging_mixin.py:103} INFO - [2021-02-10 09:03:09,907] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:03:10,069] {logging_mixin.py:103} INFO - [2021-02-10 09:03:10,069] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:10,070] {logging_mixin.py:103} INFO - [2021-02-10 09:03:10,070] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:03:10,273] {logging_mixin.py:103} INFO - [2021-02-10 09:03:10,273] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:10,276] {logging_mixin.py:103} INFO - [2021-02-10 09:03:10,276] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:03:10,569] {logging_mixin.py:103} INFO - [2021-02-10 09:03:10,569] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:10,782] {logging_mixin.py:103} INFO - [2021-02-10 09:03:10,782] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:03:11,069] {logging_mixin.py:103} INFO - [2021-02-10 09:03:11,068] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:11,110] {logging_mixin.py:103} INFO - [2021-02-10 09:03:11,110] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:03:11,110] {logging_mixin.py:103} INFO - [2021-02-10 09:03:11,110] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:03:13,693] {logging_mixin.py:103} INFO - [2021-02-10 09:03:13,693] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:13,700] {logging_mixin.py:103} INFO - [2021-02-10 09:03:13,700] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:03:13,713] {logging_mixin.py:103} INFO - [2021-02-10 09:03:13,713] {data_context.py:1281} INFO - Setting run_name to: 20210210T080313.713184Z
[2021-02-10 09:03:13,714] {logging_mixin.py:103} INFO - [2021-02-10 09:03:13,714] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:03:13,726] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:03:13,729] {logging_mixin.py:103} INFO - [2021-02-10 09:03:13,729] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:03:14,616] {logging_mixin.py:103} INFO - [2021-02-10 09:03:14,616] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:14,617] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:03:14,618] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:03:14,620] {logging_mixin.py:103} INFO - [2021-02-10 09:03:14,620] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:03:15,225] {logging_mixin.py:103} INFO - [2021-02-10 09:03:15,225] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:15,225] {logging_mixin.py:103} INFO - [2021-02-10 09:03:15,225] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:03:15,227] {logging_mixin.py:103} INFO - [2021-02-10 09:03:15,227] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:03:15,412] {logging_mixin.py:103} INFO - [2021-02-10 09:03:15,412] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:15,415] {logging_mixin.py:103} INFO - [2021-02-10 09:03:15,415] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:03:15,555] {logging_mixin.py:103} INFO - [2021-02-10 09:03:15,555] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:15,557] {logging_mixin.py:103} INFO - [2021-02-10 09:03:15,557] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:03:15,716] {logging_mixin.py:103} INFO - [2021-02-10 09:03:15,716] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:15,716] {logging_mixin.py:103} INFO - [2021-02-10 09:03:15,716] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:03:15,728] {logging_mixin.py:103} INFO - [2021-02-10 09:03:15,728] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:03:15,729] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:03:15,731] {logging_mixin.py:103} INFO - [2021-02-10 09:03:15,731] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:03:15,886] {logging_mixin.py:103} INFO - [2021-02-10 09:03:15,886] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:15,887] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:03:15,887] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:03:15,889] {logging_mixin.py:103} INFO - [2021-02-10 09:03:15,889] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:03:16,051] {logging_mixin.py:103} INFO - [2021-02-10 09:03:16,051] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:16,051] {logging_mixin.py:103} INFO - [2021-02-10 09:03:16,051] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:03:16,054] {logging_mixin.py:103} INFO - [2021-02-10 09:03:16,054] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:03:16,194] {logging_mixin.py:103} INFO - [2021-02-10 09:03:16,194] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:16,196] {logging_mixin.py:103} INFO - [2021-02-10 09:03:16,195] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:03:16,385] {logging_mixin.py:103} INFO - [2021-02-10 09:03:16,385] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:16,388] {logging_mixin.py:103} INFO - [2021-02-10 09:03:16,388] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:03:16,533] {logging_mixin.py:103} INFO - [2021-02-10 09:03:16,533] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:16,536] {logging_mixin.py:103} INFO - [2021-02-10 09:03:16,536] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:03:16,697] {logging_mixin.py:103} INFO - [2021-02-10 09:03:16,696] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:16,697] {logging_mixin.py:103} INFO - [2021-02-10 09:03:16,697] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:03:16,701] {logging_mixin.py:103} INFO - [2021-02-10 09:03:16,701] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:03:16,846] {logging_mixin.py:103} INFO - [2021-02-10 09:03:16,846] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:16,851] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:03:16,854] {logging_mixin.py:103} INFO - [2021-02-10 09:03:16,853] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:03:17,003] {logging_mixin.py:103} INFO - [2021-02-10 09:03:17,003] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:17,004] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:03:17,004] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:03:17,006] {logging_mixin.py:103} INFO - [2021-02-10 09:03:17,005] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:03:17,171] {logging_mixin.py:103} INFO - [2021-02-10 09:03:17,171] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:17,171] {logging_mixin.py:103} INFO - [2021-02-10 09:03:17,171] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:03:17,172] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:03:17,176] {logging_mixin.py:103} INFO - [2021-02-10 09:03:17,175] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:03:17,359] {logging_mixin.py:103} INFO - [2021-02-10 09:03:17,359] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:17,361] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:03:17,361] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:03:17,362] {logging_mixin.py:103} INFO - [2021-02-10 09:03:17,362] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:03:17,507] {logging_mixin.py:103} INFO - [2021-02-10 09:03:17,507] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:17,508] {logging_mixin.py:103} INFO - [2021-02-10 09:03:17,507] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:03:17,509] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:03:17,512] {logging_mixin.py:103} INFO - [2021-02-10 09:03:17,512] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:03:17,671] {logging_mixin.py:103} INFO - [2021-02-10 09:03:17,671] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:17,672] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:03:17,672] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:03:17,674] {logging_mixin.py:103} INFO - [2021-02-10 09:03:17,674] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:03:18,039] {logging_mixin.py:103} INFO - [2021-02-10 09:03:18,038] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:18,039] {logging_mixin.py:103} INFO - [2021-02-10 09:03:18,039] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:03:22,060] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:03:49,434] {scheduler_job.py:181} INFO - Started process (PID=62809) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:03:49,434] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:03:49,435] {logging_mixin.py:103} INFO - [2021-02-10 09:03:49,435] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:03:51,177] {logging_mixin.py:103} INFO - [2021-02-10 09:03:51,177] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:03:51,477] {logging_mixin.py:103} INFO - [2021-02-10 09:03:51,477] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:03:51,809] {logging_mixin.py:103} INFO - [2021-02-10 09:03:51,809] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:03:51,809] {logging_mixin.py:103} INFO - [2021-02-10 09:03:51,809] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:03:51,809] {logging_mixin.py:103} INFO - [2021-02-10 09:03:51,809] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:03:52,768] {logging_mixin.py:103} INFO - [2021-02-10 09:03:52,768] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:03:52,932] {logging_mixin.py:103} INFO - [2021-02-10 09:03:52,932] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:52,934] {logging_mixin.py:103} INFO - [2021-02-10 09:03:52,934] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:03:53,096] {logging_mixin.py:103} INFO - [2021-02-10 09:03:53,096] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:53,097] {logging_mixin.py:103} INFO - [2021-02-10 09:03:53,097] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:03:53,251] {logging_mixin.py:103} INFO - [2021-02-10 09:03:53,250] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:53,252] {logging_mixin.py:103} INFO - [2021-02-10 09:03:53,252] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:03:53,383] {logging_mixin.py:103} INFO - [2021-02-10 09:03:53,383] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:53,599] {logging_mixin.py:103} INFO - [2021-02-10 09:03:53,599] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:03:53,782] {logging_mixin.py:103} INFO - [2021-02-10 09:03:53,782] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:53,823] {logging_mixin.py:103} INFO - [2021-02-10 09:03:53,823] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:03:53,824] {logging_mixin.py:103} INFO - [2021-02-10 09:03:53,824] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:03:56,085] {logging_mixin.py:103} INFO - [2021-02-10 09:03:56,085] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:56,089] {logging_mixin.py:103} INFO - [2021-02-10 09:03:56,089] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:03:56,099] {logging_mixin.py:103} INFO - [2021-02-10 09:03:56,099] {data_context.py:1281} INFO - Setting run_name to: 20210210T080356.099680Z
[2021-02-10 09:03:56,101] {logging_mixin.py:103} INFO - [2021-02-10 09:03:56,101] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:03:56,111] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:03:56,113] {logging_mixin.py:103} INFO - [2021-02-10 09:03:56,113] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:03:56,291] {logging_mixin.py:103} INFO - [2021-02-10 09:03:56,290] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:56,292] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:03:56,292] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:03:56,293] {logging_mixin.py:103} INFO - [2021-02-10 09:03:56,293] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:03:56,473] {logging_mixin.py:103} INFO - [2021-02-10 09:03:56,473] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:56,474] {logging_mixin.py:103} INFO - [2021-02-10 09:03:56,474] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:03:56,475] {logging_mixin.py:103} INFO - [2021-02-10 09:03:56,475] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:03:56,623] {logging_mixin.py:103} INFO - [2021-02-10 09:03:56,623] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:56,626] {logging_mixin.py:103} INFO - [2021-02-10 09:03:56,626] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:03:56,818] {logging_mixin.py:103} INFO - [2021-02-10 09:03:56,818] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:56,821] {logging_mixin.py:103} INFO - [2021-02-10 09:03:56,821] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:03:57,433] {logging_mixin.py:103} INFO - [2021-02-10 09:03:57,433] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:57,434] {logging_mixin.py:103} INFO - [2021-02-10 09:03:57,434] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:03:57,450] {logging_mixin.py:103} INFO - [2021-02-10 09:03:57,450] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:03:57,451] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:03:57,453] {logging_mixin.py:103} INFO - [2021-02-10 09:03:57,453] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:03:57,621] {logging_mixin.py:103} INFO - [2021-02-10 09:03:57,621] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:57,622] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:03:57,622] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:03:57,623] {logging_mixin.py:103} INFO - [2021-02-10 09:03:57,623] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:03:58,114] {logging_mixin.py:103} INFO - [2021-02-10 09:03:58,114] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:58,115] {logging_mixin.py:103} INFO - [2021-02-10 09:03:58,114] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:03:58,117] {logging_mixin.py:103} INFO - [2021-02-10 09:03:58,117] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:03:58,313] {logging_mixin.py:103} INFO - [2021-02-10 09:03:58,313] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:58,316] {logging_mixin.py:103} INFO - [2021-02-10 09:03:58,315] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:03:58,539] {logging_mixin.py:103} INFO - [2021-02-10 09:03:58,538] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:58,550] {logging_mixin.py:103} INFO - [2021-02-10 09:03:58,550] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:03:58,713] {logging_mixin.py:103} INFO - [2021-02-10 09:03:58,713] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:58,716] {logging_mixin.py:103} INFO - [2021-02-10 09:03:58,716] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:03:58,933] {logging_mixin.py:103} INFO - [2021-02-10 09:03:58,933] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:58,933] {logging_mixin.py:103} INFO - [2021-02-10 09:03:58,933] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:03:58,936] {logging_mixin.py:103} INFO - [2021-02-10 09:03:58,936] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:03:59,112] {logging_mixin.py:103} INFO - [2021-02-10 09:03:59,111] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:59,121] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:03:59,124] {logging_mixin.py:103} INFO - [2021-02-10 09:03:59,124] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:03:59,561] {logging_mixin.py:103} INFO - [2021-02-10 09:03:59,561] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:59,562] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:03:59,562] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:03:59,563] {logging_mixin.py:103} INFO - [2021-02-10 09:03:59,563] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:03:59,713] {logging_mixin.py:103} INFO - [2021-02-10 09:03:59,713] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:59,714] {logging_mixin.py:103} INFO - [2021-02-10 09:03:59,714] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:03:59,715] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:03:59,718] {logging_mixin.py:103} INFO - [2021-02-10 09:03:59,718] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:03:59,910] {logging_mixin.py:103} INFO - [2021-02-10 09:03:59,910] {cursor.py:560} INFO - query execution done
[2021-02-10 09:03:59,911] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:03:59,911] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:03:59,912] {logging_mixin.py:103} INFO - [2021-02-10 09:03:59,912] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:04:00,069] {logging_mixin.py:103} INFO - [2021-02-10 09:04:00,069] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:00,070] {logging_mixin.py:103} INFO - [2021-02-10 09:04:00,070] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:04:00,071] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:04:00,073] {logging_mixin.py:103} INFO - [2021-02-10 09:04:00,073] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:04:00,254] {logging_mixin.py:103} INFO - [2021-02-10 09:04:00,253] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:00,255] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:04:00,255] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:04:00,256] {logging_mixin.py:103} INFO - [2021-02-10 09:04:00,256] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:04:00,432] {logging_mixin.py:103} INFO - [2021-02-10 09:04:00,432] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:00,433] {logging_mixin.py:103} INFO - [2021-02-10 09:04:00,433] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:04:07,176] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:04:47,674] {scheduler_job.py:181} INFO - Started process (PID=62887) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:04:47,676] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:04:47,677] {logging_mixin.py:103} INFO - [2021-02-10 09:04:47,677] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:04:50,484] {logging_mixin.py:103} INFO - [2021-02-10 09:04:50,484] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:04:51,044] {logging_mixin.py:103} INFO - [2021-02-10 09:04:51,044] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:04:51,500] {logging_mixin.py:103} INFO - [2021-02-10 09:04:51,500] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:04:51,500] {logging_mixin.py:103} INFO - [2021-02-10 09:04:51,500] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:04:51,500] {logging_mixin.py:103} INFO - [2021-02-10 09:04:51,500] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:04:52,927] {logging_mixin.py:103} INFO - [2021-02-10 09:04:52,927] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:04:53,056] {logging_mixin.py:103} INFO - [2021-02-10 09:04:53,056] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:53,058] {logging_mixin.py:103} INFO - [2021-02-10 09:04:53,058] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:04:53,194] {logging_mixin.py:103} INFO - [2021-02-10 09:04:53,194] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:53,195] {logging_mixin.py:103} INFO - [2021-02-10 09:04:53,195] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:04:53,332] {logging_mixin.py:103} INFO - [2021-02-10 09:04:53,332] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:53,335] {logging_mixin.py:103} INFO - [2021-02-10 09:04:53,335] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:04:53,529] {logging_mixin.py:103} INFO - [2021-02-10 09:04:53,529] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:53,797] {logging_mixin.py:103} INFO - [2021-02-10 09:04:53,797] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:04:53,966] {logging_mixin.py:103} INFO - [2021-02-10 09:04:53,966] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:54,013] {logging_mixin.py:103} INFO - [2021-02-10 09:04:54,013] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:04:54,013] {logging_mixin.py:103} INFO - [2021-02-10 09:04:54,013] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:04:55,684] {logging_mixin.py:103} INFO - [2021-02-10 09:04:55,684] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:55,687] {logging_mixin.py:103} INFO - [2021-02-10 09:04:55,687] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:04:55,698] {logging_mixin.py:103} INFO - [2021-02-10 09:04:55,698] {data_context.py:1281} INFO - Setting run_name to: 20210210T080455.698554Z
[2021-02-10 09:04:55,701] {logging_mixin.py:103} INFO - [2021-02-10 09:04:55,700] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:04:55,732] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:04:55,734] {logging_mixin.py:103} INFO - [2021-02-10 09:04:55,733] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:04:55,912] {logging_mixin.py:103} INFO - [2021-02-10 09:04:55,912] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:55,913] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:04:55,914] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:04:55,916] {logging_mixin.py:103} INFO - [2021-02-10 09:04:55,916] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:04:56,096] {logging_mixin.py:103} INFO - [2021-02-10 09:04:56,096] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:56,097] {logging_mixin.py:103} INFO - [2021-02-10 09:04:56,097] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:04:56,099] {logging_mixin.py:103} INFO - [2021-02-10 09:04:56,099] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:04:56,256] {logging_mixin.py:103} INFO - [2021-02-10 09:04:56,255] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:56,258] {logging_mixin.py:103} INFO - [2021-02-10 09:04:56,258] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:04:56,429] {logging_mixin.py:103} INFO - [2021-02-10 09:04:56,429] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:56,432] {logging_mixin.py:103} INFO - [2021-02-10 09:04:56,432] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:04:56,590] {logging_mixin.py:103} INFO - [2021-02-10 09:04:56,590] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:56,591] {logging_mixin.py:103} INFO - [2021-02-10 09:04:56,591] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:04:56,613] {logging_mixin.py:103} INFO - [2021-02-10 09:04:56,613] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:04:56,614] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:04:56,616] {logging_mixin.py:103} INFO - [2021-02-10 09:04:56,616] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:04:56,781] {logging_mixin.py:103} INFO - [2021-02-10 09:04:56,781] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:56,782] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:04:56,782] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:04:56,783] {logging_mixin.py:103} INFO - [2021-02-10 09:04:56,783] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:04:56,951] {logging_mixin.py:103} INFO - [2021-02-10 09:04:56,951] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:56,951] {logging_mixin.py:103} INFO - [2021-02-10 09:04:56,951] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:04:56,954] {logging_mixin.py:103} INFO - [2021-02-10 09:04:56,953] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:04:57,134] {logging_mixin.py:103} INFO - [2021-02-10 09:04:57,134] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:57,136] {logging_mixin.py:103} INFO - [2021-02-10 09:04:57,135] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:04:57,356] {logging_mixin.py:103} INFO - [2021-02-10 09:04:57,356] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:57,358] {logging_mixin.py:103} INFO - [2021-02-10 09:04:57,358] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:04:57,588] {logging_mixin.py:103} INFO - [2021-02-10 09:04:57,588] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:57,591] {logging_mixin.py:103} INFO - [2021-02-10 09:04:57,591] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:04:57,765] {logging_mixin.py:103} INFO - [2021-02-10 09:04:57,764] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:57,765] {logging_mixin.py:103} INFO - [2021-02-10 09:04:57,765] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:04:57,769] {logging_mixin.py:103} INFO - [2021-02-10 09:04:57,769] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:04:57,932] {logging_mixin.py:103} INFO - [2021-02-10 09:04:57,931] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:57,943] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:04:57,946] {logging_mixin.py:103} INFO - [2021-02-10 09:04:57,945] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:04:58,122] {logging_mixin.py:103} INFO - [2021-02-10 09:04:58,122] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:58,123] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:04:58,123] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:04:58,125] {logging_mixin.py:103} INFO - [2021-02-10 09:04:58,125] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:04:58,349] {logging_mixin.py:103} INFO - [2021-02-10 09:04:58,349] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:58,350] {logging_mixin.py:103} INFO - [2021-02-10 09:04:58,349] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:04:58,351] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:04:58,353] {logging_mixin.py:103} INFO - [2021-02-10 09:04:58,353] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:04:58,507] {logging_mixin.py:103} INFO - [2021-02-10 09:04:58,507] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:58,508] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:04:58,508] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:04:58,509] {logging_mixin.py:103} INFO - [2021-02-10 09:04:58,509] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:04:58,683] {logging_mixin.py:103} INFO - [2021-02-10 09:04:58,683] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:58,683] {logging_mixin.py:103} INFO - [2021-02-10 09:04:58,683] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:04:58,684] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:04:58,687] {logging_mixin.py:103} INFO - [2021-02-10 09:04:58,687] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:04:58,868] {logging_mixin.py:103} INFO - [2021-02-10 09:04:58,868] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:58,869] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:04:58,870] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:04:58,871] {logging_mixin.py:103} INFO - [2021-02-10 09:04:58,871] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:04:59,028] {logging_mixin.py:103} INFO - [2021-02-10 09:04:59,028] {cursor.py:560} INFO - query execution done
[2021-02-10 09:04:59,043] {logging_mixin.py:103} INFO - [2021-02-10 09:04:59,043] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:05:04,696] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:05:35,958] {scheduler_job.py:181} INFO - Started process (PID=62954) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:05:35,960] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:05:35,961] {logging_mixin.py:103} INFO - [2021-02-10 09:05:35,961] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:05:38,942] {logging_mixin.py:103} INFO - [2021-02-10 09:05:38,942] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:05:39,382] {logging_mixin.py:103} INFO - [2021-02-10 09:05:39,381] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:05:39,749] {logging_mixin.py:103} INFO - [2021-02-10 09:05:39,749] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:05:39,749] {logging_mixin.py:103} INFO - [2021-02-10 09:05:39,749] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:05:39,749] {logging_mixin.py:103} INFO - [2021-02-10 09:05:39,749] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:05:41,155] {logging_mixin.py:103} INFO - [2021-02-10 09:05:41,155] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:05:41,768] {logging_mixin.py:103} INFO - [2021-02-10 09:05:41,768] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:41,770] {logging_mixin.py:103} INFO - [2021-02-10 09:05:41,770] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:05:41,955] {logging_mixin.py:103} INFO - [2021-02-10 09:05:41,955] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:41,956] {logging_mixin.py:103} INFO - [2021-02-10 09:05:41,956] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:05:42,104] {logging_mixin.py:103} INFO - [2021-02-10 09:05:42,104] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:42,108] {logging_mixin.py:103} INFO - [2021-02-10 09:05:42,107] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:05:42,289] {logging_mixin.py:103} INFO - [2021-02-10 09:05:42,289] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:42,683] {logging_mixin.py:103} INFO - [2021-02-10 09:05:42,683] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:05:42,836] {logging_mixin.py:103} INFO - [2021-02-10 09:05:42,836] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:42,891] {logging_mixin.py:103} INFO - [2021-02-10 09:05:42,891] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:05:42,891] {logging_mixin.py:103} INFO - [2021-02-10 09:05:42,891] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:05:44,224] {logging_mixin.py:103} INFO - [2021-02-10 09:05:44,223] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:44,227] {logging_mixin.py:103} INFO - [2021-02-10 09:05:44,227] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:05:44,239] {logging_mixin.py:103} INFO - [2021-02-10 09:05:44,239] {data_context.py:1281} INFO - Setting run_name to: 20210210T080544.239071Z
[2021-02-10 09:05:44,241] {logging_mixin.py:103} INFO - [2021-02-10 09:05:44,241] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:05:44,251] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:05:44,253] {logging_mixin.py:103} INFO - [2021-02-10 09:05:44,252] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:05:44,413] {logging_mixin.py:103} INFO - [2021-02-10 09:05:44,413] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:44,415] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:05:44,415] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:05:44,418] {logging_mixin.py:103} INFO - [2021-02-10 09:05:44,417] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:05:44,571] {logging_mixin.py:103} INFO - [2021-02-10 09:05:44,571] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:44,572] {logging_mixin.py:103} INFO - [2021-02-10 09:05:44,572] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:05:44,577] {logging_mixin.py:103} INFO - [2021-02-10 09:05:44,577] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:05:44,751] {logging_mixin.py:103} INFO - [2021-02-10 09:05:44,750] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:44,753] {logging_mixin.py:103} INFO - [2021-02-10 09:05:44,753] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:05:44,911] {logging_mixin.py:103} INFO - [2021-02-10 09:05:44,911] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:44,914] {logging_mixin.py:103} INFO - [2021-02-10 09:05:44,913] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:05:45,070] {logging_mixin.py:103} INFO - [2021-02-10 09:05:45,069] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:45,070] {logging_mixin.py:103} INFO - [2021-02-10 09:05:45,070] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:05:45,091] {logging_mixin.py:103} INFO - [2021-02-10 09:05:45,090] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:05:45,093] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:05:45,095] {logging_mixin.py:103} INFO - [2021-02-10 09:05:45,095] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:05:45,259] {logging_mixin.py:103} INFO - [2021-02-10 09:05:45,259] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:45,262] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:05:45,262] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:05:45,264] {logging_mixin.py:103} INFO - [2021-02-10 09:05:45,264] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:05:45,429] {logging_mixin.py:103} INFO - [2021-02-10 09:05:45,429] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:45,430] {logging_mixin.py:103} INFO - [2021-02-10 09:05:45,430] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:05:45,432] {logging_mixin.py:103} INFO - [2021-02-10 09:05:45,432] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:05:45,627] {logging_mixin.py:103} INFO - [2021-02-10 09:05:45,627] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:45,629] {logging_mixin.py:103} INFO - [2021-02-10 09:05:45,629] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:05:45,781] {logging_mixin.py:103} INFO - [2021-02-10 09:05:45,781] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:45,784] {logging_mixin.py:103} INFO - [2021-02-10 09:05:45,784] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:05:45,977] {logging_mixin.py:103} INFO - [2021-02-10 09:05:45,977] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:45,979] {logging_mixin.py:103} INFO - [2021-02-10 09:05:45,979] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:05:46,143] {logging_mixin.py:103} INFO - [2021-02-10 09:05:46,143] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:46,144] {logging_mixin.py:103} INFO - [2021-02-10 09:05:46,144] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:05:46,148] {logging_mixin.py:103} INFO - [2021-02-10 09:05:46,148] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:05:46,319] {logging_mixin.py:103} INFO - [2021-02-10 09:05:46,318] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:46,329] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:05:46,332] {logging_mixin.py:103} INFO - [2021-02-10 09:05:46,332] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:05:46,492] {logging_mixin.py:103} INFO - [2021-02-10 09:05:46,491] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:46,492] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:05:46,493] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:05:46,494] {logging_mixin.py:103} INFO - [2021-02-10 09:05:46,494] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:05:46,637] {logging_mixin.py:103} INFO - [2021-02-10 09:05:46,636] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:46,637] {logging_mixin.py:103} INFO - [2021-02-10 09:05:46,637] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:05:46,638] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:05:46,641] {logging_mixin.py:103} INFO - [2021-02-10 09:05:46,641] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:05:46,803] {logging_mixin.py:103} INFO - [2021-02-10 09:05:46,803] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:46,804] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:05:46,804] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:05:46,807] {logging_mixin.py:103} INFO - [2021-02-10 09:05:46,806] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:05:46,990] {logging_mixin.py:103} INFO - [2021-02-10 09:05:46,989] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:46,990] {logging_mixin.py:103} INFO - [2021-02-10 09:05:46,990] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:05:46,991] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:05:46,993] {logging_mixin.py:103} INFO - [2021-02-10 09:05:46,993] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:05:47,190] {logging_mixin.py:103} INFO - [2021-02-10 09:05:47,190] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:47,191] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:05:47,191] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:05:47,192] {logging_mixin.py:103} INFO - [2021-02-10 09:05:47,192] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:05:47,422] {logging_mixin.py:103} INFO - [2021-02-10 09:05:47,422] {cursor.py:560} INFO - query execution done
[2021-02-10 09:05:47,423] {logging_mixin.py:103} INFO - [2021-02-10 09:05:47,422] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:05:53,963] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:06:33,363] {scheduler_job.py:181} INFO - Started process (PID=63019) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:06:33,365] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:06:33,366] {logging_mixin.py:103} INFO - [2021-02-10 09:06:33,366] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:06:35,443] {logging_mixin.py:103} INFO - [2021-02-10 09:06:35,443] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:06:35,776] {logging_mixin.py:103} INFO - [2021-02-10 09:06:35,776] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:06:36,106] {logging_mixin.py:103} INFO - [2021-02-10 09:06:36,106] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:06:36,106] {logging_mixin.py:103} INFO - [2021-02-10 09:06:36,106] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:06:36,107] {logging_mixin.py:103} INFO - [2021-02-10 09:06:36,107] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:06:37,374] {logging_mixin.py:103} INFO - [2021-02-10 09:06:37,374] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:06:37,568] {logging_mixin.py:103} INFO - [2021-02-10 09:06:37,568] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:37,571] {logging_mixin.py:103} INFO - [2021-02-10 09:06:37,571] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:06:37,805] {logging_mixin.py:103} INFO - [2021-02-10 09:06:37,805] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:37,806] {logging_mixin.py:103} INFO - [2021-02-10 09:06:37,806] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:06:37,953] {logging_mixin.py:103} INFO - [2021-02-10 09:06:37,953] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:37,956] {logging_mixin.py:103} INFO - [2021-02-10 09:06:37,956] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:06:38,152] {logging_mixin.py:103} INFO - [2021-02-10 09:06:38,152] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:38,417] {logging_mixin.py:103} INFO - [2021-02-10 09:06:38,417] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:06:38,621] {logging_mixin.py:103} INFO - [2021-02-10 09:06:38,621] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:38,695] {logging_mixin.py:103} INFO - [2021-02-10 09:06:38,695] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:06:38,695] {logging_mixin.py:103} INFO - [2021-02-10 09:06:38,695] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:06:40,751] {logging_mixin.py:103} INFO - [2021-02-10 09:06:40,751] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:40,755] {logging_mixin.py:103} INFO - [2021-02-10 09:06:40,754] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:06:40,766] {logging_mixin.py:103} INFO - [2021-02-10 09:06:40,765] {data_context.py:1281} INFO - Setting run_name to: 20210210T080640.765830Z
[2021-02-10 09:06:40,767] {logging_mixin.py:103} INFO - [2021-02-10 09:06:40,767] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:06:40,776] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:06:40,780] {logging_mixin.py:103} INFO - [2021-02-10 09:06:40,779] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:06:40,971] {logging_mixin.py:103} INFO - [2021-02-10 09:06:40,970] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:40,972] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:06:40,973] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:06:40,974] {logging_mixin.py:103} INFO - [2021-02-10 09:06:40,974] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:06:41,129] {logging_mixin.py:103} INFO - [2021-02-10 09:06:41,129] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:41,130] {logging_mixin.py:103} INFO - [2021-02-10 09:06:41,130] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:06:41,133] {logging_mixin.py:103} INFO - [2021-02-10 09:06:41,133] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:06:41,276] {logging_mixin.py:103} INFO - [2021-02-10 09:06:41,276] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:41,278] {logging_mixin.py:103} INFO - [2021-02-10 09:06:41,278] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:06:41,437] {logging_mixin.py:103} INFO - [2021-02-10 09:06:41,436] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:41,440] {logging_mixin.py:103} INFO - [2021-02-10 09:06:41,440] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:06:41,589] {logging_mixin.py:103} INFO - [2021-02-10 09:06:41,589] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:41,590] {logging_mixin.py:103} INFO - [2021-02-10 09:06:41,590] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:06:41,609] {logging_mixin.py:103} INFO - [2021-02-10 09:06:41,609] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:06:41,610] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:06:41,612] {logging_mixin.py:103} INFO - [2021-02-10 09:06:41,612] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:06:41,772] {logging_mixin.py:103} INFO - [2021-02-10 09:06:41,772] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:41,773] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:06:41,773] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:06:41,774] {logging_mixin.py:103} INFO - [2021-02-10 09:06:41,774] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:06:41,933] {logging_mixin.py:103} INFO - [2021-02-10 09:06:41,933] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:41,934] {logging_mixin.py:103} INFO - [2021-02-10 09:06:41,933] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:06:41,936] {logging_mixin.py:103} INFO - [2021-02-10 09:06:41,936] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:06:42,086] {logging_mixin.py:103} INFO - [2021-02-10 09:06:42,086] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:42,087] {logging_mixin.py:103} INFO - [2021-02-10 09:06:42,087] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:06:42,243] {logging_mixin.py:103} INFO - [2021-02-10 09:06:42,242] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:42,246] {logging_mixin.py:103} INFO - [2021-02-10 09:06:42,245] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:06:42,399] {logging_mixin.py:103} INFO - [2021-02-10 09:06:42,399] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:42,402] {logging_mixin.py:103} INFO - [2021-02-10 09:06:42,402] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:06:42,560] {logging_mixin.py:103} INFO - [2021-02-10 09:06:42,559] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:42,560] {logging_mixin.py:103} INFO - [2021-02-10 09:06:42,560] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:06:42,564] {logging_mixin.py:103} INFO - [2021-02-10 09:06:42,564] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:06:42,714] {logging_mixin.py:103} INFO - [2021-02-10 09:06:42,714] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:42,727] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:06:42,730] {logging_mixin.py:103} INFO - [2021-02-10 09:06:42,730] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:06:42,880] {logging_mixin.py:103} INFO - [2021-02-10 09:06:42,880] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:42,881] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:06:42,881] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:06:42,883] {logging_mixin.py:103} INFO - [2021-02-10 09:06:42,883] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:06:43,041] {logging_mixin.py:103} INFO - [2021-02-10 09:06:43,041] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:43,042] {logging_mixin.py:103} INFO - [2021-02-10 09:06:43,042] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:06:43,043] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:06:43,047] {logging_mixin.py:103} INFO - [2021-02-10 09:06:43,047] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:06:43,281] {logging_mixin.py:103} INFO - [2021-02-10 09:06:43,281] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:43,282] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:06:43,282] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:06:43,284] {logging_mixin.py:103} INFO - [2021-02-10 09:06:43,284] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:06:43,435] {logging_mixin.py:103} INFO - [2021-02-10 09:06:43,435] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:43,435] {logging_mixin.py:103} INFO - [2021-02-10 09:06:43,435] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:06:43,436] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:06:43,440] {logging_mixin.py:103} INFO - [2021-02-10 09:06:43,440] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:06:43,616] {logging_mixin.py:103} INFO - [2021-02-10 09:06:43,616] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:43,617] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:06:43,617] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:06:43,619] {logging_mixin.py:103} INFO - [2021-02-10 09:06:43,619] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:06:43,824] {logging_mixin.py:103} INFO - [2021-02-10 09:06:43,824] {cursor.py:560} INFO - query execution done
[2021-02-10 09:06:43,825] {logging_mixin.py:103} INFO - [2021-02-10 09:06:43,824] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:06:49,628] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:07:19,921] {scheduler_job.py:181} INFO - Started process (PID=63075) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:07:19,922] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:07:19,922] {logging_mixin.py:103} INFO - [2021-02-10 09:07:19,922] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:07:22,011] {logging_mixin.py:103} INFO - [2021-02-10 09:07:22,011] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:07:22,334] {logging_mixin.py:103} INFO - [2021-02-10 09:07:22,334] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:07:22,669] {logging_mixin.py:103} INFO - [2021-02-10 09:07:22,669] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:07:22,669] {logging_mixin.py:103} INFO - [2021-02-10 09:07:22,669] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:07:22,669] {logging_mixin.py:103} INFO - [2021-02-10 09:07:22,669] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:07:24,373] {logging_mixin.py:103} INFO - [2021-02-10 09:07:24,373] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:07:24,502] {logging_mixin.py:103} INFO - [2021-02-10 09:07:24,502] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:24,507] {logging_mixin.py:103} INFO - [2021-02-10 09:07:24,507] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:07:24,641] {logging_mixin.py:103} INFO - [2021-02-10 09:07:24,641] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:24,642] {logging_mixin.py:103} INFO - [2021-02-10 09:07:24,641] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:07:24,779] {logging_mixin.py:103} INFO - [2021-02-10 09:07:24,778] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:24,782] {logging_mixin.py:103} INFO - [2021-02-10 09:07:24,781] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:07:24,951] {logging_mixin.py:103} INFO - [2021-02-10 09:07:24,951] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:25,164] {logging_mixin.py:103} INFO - [2021-02-10 09:07:25,164] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:07:25,317] {logging_mixin.py:103} INFO - [2021-02-10 09:07:25,316] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:25,358] {logging_mixin.py:103} INFO - [2021-02-10 09:07:25,358] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:07:25,359] {logging_mixin.py:103} INFO - [2021-02-10 09:07:25,359] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:07:27,148] {logging_mixin.py:103} INFO - [2021-02-10 09:07:27,147] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:27,152] {logging_mixin.py:103} INFO - [2021-02-10 09:07:27,151] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:07:27,167] {logging_mixin.py:103} INFO - [2021-02-10 09:07:27,167] {data_context.py:1281} INFO - Setting run_name to: 20210210T080727.167539Z
[2021-02-10 09:07:27,168] {logging_mixin.py:103} INFO - [2021-02-10 09:07:27,168] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:07:27,188] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:07:27,191] {logging_mixin.py:103} INFO - [2021-02-10 09:07:27,190] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:07:27,379] {logging_mixin.py:103} INFO - [2021-02-10 09:07:27,378] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:27,380] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:07:27,380] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:07:27,381] {logging_mixin.py:103} INFO - [2021-02-10 09:07:27,381] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:07:27,534] {logging_mixin.py:103} INFO - [2021-02-10 09:07:27,534] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:27,535] {logging_mixin.py:103} INFO - [2021-02-10 09:07:27,535] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:07:27,537] {logging_mixin.py:103} INFO - [2021-02-10 09:07:27,537] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:07:27,688] {logging_mixin.py:103} INFO - [2021-02-10 09:07:27,688] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:27,691] {logging_mixin.py:103} INFO - [2021-02-10 09:07:27,691] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:07:27,848] {logging_mixin.py:103} INFO - [2021-02-10 09:07:27,848] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:27,851] {logging_mixin.py:103} INFO - [2021-02-10 09:07:27,850] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:07:28,000] {logging_mixin.py:103} INFO - [2021-02-10 09:07:28,000] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:28,001] {logging_mixin.py:103} INFO - [2021-02-10 09:07:28,001] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:07:28,020] {logging_mixin.py:103} INFO - [2021-02-10 09:07:28,020] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:07:28,021] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:07:28,023] {logging_mixin.py:103} INFO - [2021-02-10 09:07:28,023] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:07:28,174] {logging_mixin.py:103} INFO - [2021-02-10 09:07:28,174] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:28,175] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:07:28,175] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:07:28,176] {logging_mixin.py:103} INFO - [2021-02-10 09:07:28,176] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:07:28,358] {logging_mixin.py:103} INFO - [2021-02-10 09:07:28,358] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:28,359] {logging_mixin.py:103} INFO - [2021-02-10 09:07:28,359] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:07:28,362] {logging_mixin.py:103} INFO - [2021-02-10 09:07:28,362] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:07:28,534] {logging_mixin.py:103} INFO - [2021-02-10 09:07:28,534] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:28,536] {logging_mixin.py:103} INFO - [2021-02-10 09:07:28,536] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:07:28,689] {logging_mixin.py:103} INFO - [2021-02-10 09:07:28,689] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:28,693] {logging_mixin.py:103} INFO - [2021-02-10 09:07:28,693] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:07:28,859] {logging_mixin.py:103} INFO - [2021-02-10 09:07:28,859] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:28,862] {logging_mixin.py:103} INFO - [2021-02-10 09:07:28,861] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:07:29,043] {logging_mixin.py:103} INFO - [2021-02-10 09:07:29,043] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:29,044] {logging_mixin.py:103} INFO - [2021-02-10 09:07:29,044] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:07:29,048] {logging_mixin.py:103} INFO - [2021-02-10 09:07:29,048] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:07:29,251] {logging_mixin.py:103} INFO - [2021-02-10 09:07:29,251] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:29,265] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:07:29,269] {logging_mixin.py:103} INFO - [2021-02-10 09:07:29,269] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:07:29,466] {logging_mixin.py:103} INFO - [2021-02-10 09:07:29,465] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:29,467] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:07:29,467] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:07:29,468] {logging_mixin.py:103} INFO - [2021-02-10 09:07:29,468] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:07:29,615] {logging_mixin.py:103} INFO - [2021-02-10 09:07:29,615] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:29,616] {logging_mixin.py:103} INFO - [2021-02-10 09:07:29,615] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:07:29,617] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:07:29,619] {logging_mixin.py:103} INFO - [2021-02-10 09:07:29,619] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:07:29,768] {logging_mixin.py:103} INFO - [2021-02-10 09:07:29,768] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:29,770] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:07:29,770] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:07:29,772] {logging_mixin.py:103} INFO - [2021-02-10 09:07:29,772] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:07:29,920] {logging_mixin.py:103} INFO - [2021-02-10 09:07:29,920] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:29,921] {logging_mixin.py:103} INFO - [2021-02-10 09:07:29,921] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:07:29,923] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:07:29,925] {logging_mixin.py:103} INFO - [2021-02-10 09:07:29,925] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:07:30,083] {logging_mixin.py:103} INFO - [2021-02-10 09:07:30,083] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:30,084] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:07:30,084] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:07:30,085] {logging_mixin.py:103} INFO - [2021-02-10 09:07:30,084] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:07:30,243] {logging_mixin.py:103} INFO - [2021-02-10 09:07:30,242] {cursor.py:560} INFO - query execution done
[2021-02-10 09:07:30,243] {logging_mixin.py:103} INFO - [2021-02-10 09:07:30,243] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:07:36,125] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:08:16,160] {scheduler_job.py:181} INFO - Started process (PID=63139) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:08:16,161] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:08:16,161] {logging_mixin.py:103} INFO - [2021-02-10 09:08:16,161] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:08:18,006] {logging_mixin.py:103} INFO - [2021-02-10 09:08:18,006] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:08:18,318] {logging_mixin.py:103} INFO - [2021-02-10 09:08:18,318] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:08:18,670] {logging_mixin.py:103} INFO - [2021-02-10 09:08:18,670] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:08:18,670] {logging_mixin.py:103} INFO - [2021-02-10 09:08:18,670] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:08:18,670] {logging_mixin.py:103} INFO - [2021-02-10 09:08:18,670] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:08:19,702] {logging_mixin.py:103} INFO - [2021-02-10 09:08:19,702] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:08:19,878] {logging_mixin.py:103} INFO - [2021-02-10 09:08:19,878] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:19,880] {logging_mixin.py:103} INFO - [2021-02-10 09:08:19,879] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:08:20,023] {logging_mixin.py:103} INFO - [2021-02-10 09:08:20,023] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:20,024] {logging_mixin.py:103} INFO - [2021-02-10 09:08:20,024] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:08:20,156] {logging_mixin.py:103} INFO - [2021-02-10 09:08:20,156] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:20,159] {logging_mixin.py:103} INFO - [2021-02-10 09:08:20,159] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:08:20,304] {logging_mixin.py:103} INFO - [2021-02-10 09:08:20,304] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:20,527] {logging_mixin.py:103} INFO - [2021-02-10 09:08:20,527] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:08:20,714] {logging_mixin.py:103} INFO - [2021-02-10 09:08:20,714] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:20,759] {logging_mixin.py:103} INFO - [2021-02-10 09:08:20,759] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:08:20,760] {logging_mixin.py:103} INFO - [2021-02-10 09:08:20,760] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:08:23,055] {logging_mixin.py:103} INFO - [2021-02-10 09:08:23,055] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:23,059] {logging_mixin.py:103} INFO - [2021-02-10 09:08:23,059] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:08:23,069] {logging_mixin.py:103} INFO - [2021-02-10 09:08:23,069] {data_context.py:1281} INFO - Setting run_name to: 20210210T080823.069254Z
[2021-02-10 09:08:23,070] {logging_mixin.py:103} INFO - [2021-02-10 09:08:23,070] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:08:23,078] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:08:23,080] {logging_mixin.py:103} INFO - [2021-02-10 09:08:23,080] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:08:23,243] {logging_mixin.py:103} INFO - [2021-02-10 09:08:23,243] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:23,244] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:08:23,244] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:08:23,246] {logging_mixin.py:103} INFO - [2021-02-10 09:08:23,246] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:08:23,420] {logging_mixin.py:103} INFO - [2021-02-10 09:08:23,420] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:23,420] {logging_mixin.py:103} INFO - [2021-02-10 09:08:23,420] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:08:23,422] {logging_mixin.py:103} INFO - [2021-02-10 09:08:23,422] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:08:23,588] {logging_mixin.py:103} INFO - [2021-02-10 09:08:23,588] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:23,590] {logging_mixin.py:103} INFO - [2021-02-10 09:08:23,590] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:08:23,796] {logging_mixin.py:103} INFO - [2021-02-10 09:08:23,796] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:23,799] {logging_mixin.py:103} INFO - [2021-02-10 09:08:23,799] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:08:23,948] {logging_mixin.py:103} INFO - [2021-02-10 09:08:23,948] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:23,949] {logging_mixin.py:103} INFO - [2021-02-10 09:08:23,949] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:08:23,972] {logging_mixin.py:103} INFO - [2021-02-10 09:08:23,971] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:08:23,973] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:08:23,975] {logging_mixin.py:103} INFO - [2021-02-10 09:08:23,974] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:08:24,149] {logging_mixin.py:103} INFO - [2021-02-10 09:08:24,149] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:24,150] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:08:24,150] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:08:24,151] {logging_mixin.py:103} INFO - [2021-02-10 09:08:24,151] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:08:24,304] {logging_mixin.py:103} INFO - [2021-02-10 09:08:24,304] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:24,304] {logging_mixin.py:103} INFO - [2021-02-10 09:08:24,304] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:08:24,307] {logging_mixin.py:103} INFO - [2021-02-10 09:08:24,307] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:08:24,455] {logging_mixin.py:103} INFO - [2021-02-10 09:08:24,455] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:24,456] {logging_mixin.py:103} INFO - [2021-02-10 09:08:24,456] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:08:24,608] {logging_mixin.py:103} INFO - [2021-02-10 09:08:24,608] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:24,611] {logging_mixin.py:103} INFO - [2021-02-10 09:08:24,611] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:08:24,772] {logging_mixin.py:103} INFO - [2021-02-10 09:08:24,772] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:24,775] {logging_mixin.py:103} INFO - [2021-02-10 09:08:24,775] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:08:24,921] {logging_mixin.py:103} INFO - [2021-02-10 09:08:24,921] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:24,922] {logging_mixin.py:103} INFO - [2021-02-10 09:08:24,922] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:08:24,926] {logging_mixin.py:103} INFO - [2021-02-10 09:08:24,926] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:08:25,079] {logging_mixin.py:103} INFO - [2021-02-10 09:08:25,079] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:25,084] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:08:25,086] {logging_mixin.py:103} INFO - [2021-02-10 09:08:25,086] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:08:25,252] {logging_mixin.py:103} INFO - [2021-02-10 09:08:25,252] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:25,253] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:08:25,253] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:08:25,254] {logging_mixin.py:103} INFO - [2021-02-10 09:08:25,254] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:08:25,427] {logging_mixin.py:103} INFO - [2021-02-10 09:08:25,427] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:25,427] {logging_mixin.py:103} INFO - [2021-02-10 09:08:25,427] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:08:25,428] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:08:25,432] {logging_mixin.py:103} INFO - [2021-02-10 09:08:25,432] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:08:25,590] {logging_mixin.py:103} INFO - [2021-02-10 09:08:25,590] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:25,591] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:08:25,591] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:08:25,593] {logging_mixin.py:103} INFO - [2021-02-10 09:08:25,592] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:08:25,795] {logging_mixin.py:103} INFO - [2021-02-10 09:08:25,795] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:25,795] {logging_mixin.py:103} INFO - [2021-02-10 09:08:25,795] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:08:25,796] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:08:25,799] {logging_mixin.py:103} INFO - [2021-02-10 09:08:25,799] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:08:25,945] {logging_mixin.py:103} INFO - [2021-02-10 09:08:25,945] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:25,946] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:08:25,946] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:08:25,948] {logging_mixin.py:103} INFO - [2021-02-10 09:08:25,948] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:08:26,118] {logging_mixin.py:103} INFO - [2021-02-10 09:08:26,118] {cursor.py:560} INFO - query execution done
[2021-02-10 09:08:26,119] {logging_mixin.py:103} INFO - [2021-02-10 09:08:26,119] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:08:31,983] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:09:00,398] {scheduler_job.py:181} INFO - Started process (PID=63199) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:09:00,399] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:09:00,399] {logging_mixin.py:103} INFO - [2021-02-10 09:09:00,399] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:09:02,239] {logging_mixin.py:103} INFO - [2021-02-10 09:09:02,239] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:09:02,539] {logging_mixin.py:103} INFO - [2021-02-10 09:09:02,539] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:09:02,871] {logging_mixin.py:103} INFO - [2021-02-10 09:09:02,871] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:09:02,871] {logging_mixin.py:103} INFO - [2021-02-10 09:09:02,871] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:09:02,871] {logging_mixin.py:103} INFO - [2021-02-10 09:09:02,871] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:09:03,967] {logging_mixin.py:103} INFO - [2021-02-10 09:09:03,967] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:09:04,214] {logging_mixin.py:103} INFO - [2021-02-10 09:09:04,214] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:04,216] {logging_mixin.py:103} INFO - [2021-02-10 09:09:04,216] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:09:04,483] {logging_mixin.py:103} INFO - [2021-02-10 09:09:04,483] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:04,483] {logging_mixin.py:103} INFO - [2021-02-10 09:09:04,483] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:09:04,723] {logging_mixin.py:103} INFO - [2021-02-10 09:09:04,723] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:04,724] {logging_mixin.py:103} INFO - [2021-02-10 09:09:04,724] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:09:04,904] {logging_mixin.py:103} INFO - [2021-02-10 09:09:04,904] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:05,136] {logging_mixin.py:103} INFO - [2021-02-10 09:09:05,136] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:09:05,429] {logging_mixin.py:103} INFO - [2021-02-10 09:09:05,429] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:05,472] {logging_mixin.py:103} INFO - [2021-02-10 09:09:05,472] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:09:05,472] {logging_mixin.py:103} INFO - [2021-02-10 09:09:05,472] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:09:06,851] {logging_mixin.py:103} INFO - [2021-02-10 09:09:06,851] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:06,854] {logging_mixin.py:103} INFO - [2021-02-10 09:09:06,854] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:09:06,864] {logging_mixin.py:103} INFO - [2021-02-10 09:09:06,864] {data_context.py:1281} INFO - Setting run_name to: 20210210T080906.864439Z
[2021-02-10 09:09:06,865] {logging_mixin.py:103} INFO - [2021-02-10 09:09:06,865] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:09:06,873] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:09:06,875] {logging_mixin.py:103} INFO - [2021-02-10 09:09:06,875] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:09:08,054] {logging_mixin.py:103} INFO - [2021-02-10 09:09:08,054] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:08,055] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:09:08,055] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:09:08,056] {logging_mixin.py:103} INFO - [2021-02-10 09:09:08,056] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:09:08,233] {logging_mixin.py:103} INFO - [2021-02-10 09:09:08,233] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:08,233] {logging_mixin.py:103} INFO - [2021-02-10 09:09:08,233] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:09:08,235] {logging_mixin.py:103} INFO - [2021-02-10 09:09:08,235] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:09:08,404] {logging_mixin.py:103} INFO - [2021-02-10 09:09:08,403] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:08,406] {logging_mixin.py:103} INFO - [2021-02-10 09:09:08,406] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:09:08,547] {logging_mixin.py:103} INFO - [2021-02-10 09:09:08,547] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:08,550] {logging_mixin.py:103} INFO - [2021-02-10 09:09:08,550] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:09:08,701] {logging_mixin.py:103} INFO - [2021-02-10 09:09:08,701] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:08,701] {logging_mixin.py:103} INFO - [2021-02-10 09:09:08,701] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:09:08,722] {logging_mixin.py:103} INFO - [2021-02-10 09:09:08,722] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:09:08,723] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:09:08,726] {logging_mixin.py:103} INFO - [2021-02-10 09:09:08,726] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:09:08,886] {logging_mixin.py:103} INFO - [2021-02-10 09:09:08,886] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:08,887] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:09:08,887] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:09:08,888] {logging_mixin.py:103} INFO - [2021-02-10 09:09:08,888] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:09:09,062] {logging_mixin.py:103} INFO - [2021-02-10 09:09:09,061] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:09,062] {logging_mixin.py:103} INFO - [2021-02-10 09:09:09,062] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:09:09,065] {logging_mixin.py:103} INFO - [2021-02-10 09:09:09,065] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:09:09,226] {logging_mixin.py:103} INFO - [2021-02-10 09:09:09,226] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:09,228] {logging_mixin.py:103} INFO - [2021-02-10 09:09:09,227] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:09:09,410] {logging_mixin.py:103} INFO - [2021-02-10 09:09:09,410] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:09,413] {logging_mixin.py:103} INFO - [2021-02-10 09:09:09,413] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:09:09,568] {logging_mixin.py:103} INFO - [2021-02-10 09:09:09,568] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:09,571] {logging_mixin.py:103} INFO - [2021-02-10 09:09:09,571] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:09:09,718] {logging_mixin.py:103} INFO - [2021-02-10 09:09:09,718] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:09,719] {logging_mixin.py:103} INFO - [2021-02-10 09:09:09,719] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:09:09,723] {logging_mixin.py:103} INFO - [2021-02-10 09:09:09,723] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:09:09,935] {logging_mixin.py:103} INFO - [2021-02-10 09:09:09,935] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:09,940] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:09:09,942] {logging_mixin.py:103} INFO - [2021-02-10 09:09:09,942] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:09:10,142] {logging_mixin.py:103} INFO - [2021-02-10 09:09:10,142] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:10,144] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:09:10,144] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:09:10,146] {logging_mixin.py:103} INFO - [2021-02-10 09:09:10,146] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:09:10,303] {logging_mixin.py:103} INFO - [2021-02-10 09:09:10,303] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:10,303] {logging_mixin.py:103} INFO - [2021-02-10 09:09:10,303] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:09:10,304] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:09:10,308] {logging_mixin.py:103} INFO - [2021-02-10 09:09:10,308] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:09:10,465] {logging_mixin.py:103} INFO - [2021-02-10 09:09:10,465] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:10,466] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:09:10,466] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:09:10,468] {logging_mixin.py:103} INFO - [2021-02-10 09:09:10,468] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:09:10,646] {logging_mixin.py:103} INFO - [2021-02-10 09:09:10,646] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:10,647] {logging_mixin.py:103} INFO - [2021-02-10 09:09:10,647] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:09:10,648] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:09:10,650] {logging_mixin.py:103} INFO - [2021-02-10 09:09:10,650] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:09:10,796] {logging_mixin.py:103} INFO - [2021-02-10 09:09:10,796] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:10,797] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:09:10,797] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:09:10,799] {logging_mixin.py:103} INFO - [2021-02-10 09:09:10,798] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:09:10,946] {logging_mixin.py:103} INFO - [2021-02-10 09:09:10,946] {cursor.py:560} INFO - query execution done
[2021-02-10 09:09:10,947] {logging_mixin.py:103} INFO - [2021-02-10 09:09:10,946] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:09:17,661] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:09:55,629] {scheduler_job.py:181} INFO - Started process (PID=63262) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:09:55,630] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:09:55,630] {logging_mixin.py:103} INFO - [2021-02-10 09:09:55,630] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:09:58,517] {logging_mixin.py:103} INFO - [2021-02-10 09:09:58,516] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:09:58,872] {logging_mixin.py:103} INFO - [2021-02-10 09:09:58,872] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:09:59,254] {logging_mixin.py:103} INFO - [2021-02-10 09:09:59,254] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:09:59,255] {logging_mixin.py:103} INFO - [2021-02-10 09:09:59,255] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:09:59,255] {logging_mixin.py:103} INFO - [2021-02-10 09:09:59,255] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:10:00,743] {logging_mixin.py:103} INFO - [2021-02-10 09:10:00,743] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:10:00,875] {logging_mixin.py:103} INFO - [2021-02-10 09:10:00,875] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:00,876] {logging_mixin.py:103} INFO - [2021-02-10 09:10:00,876] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:10:01,030] {logging_mixin.py:103} INFO - [2021-02-10 09:10:01,030] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:01,032] {logging_mixin.py:103} INFO - [2021-02-10 09:10:01,032] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:10:01,184] {logging_mixin.py:103} INFO - [2021-02-10 09:10:01,184] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:01,187] {logging_mixin.py:103} INFO - [2021-02-10 09:10:01,187] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:10:01,316] {logging_mixin.py:103} INFO - [2021-02-10 09:10:01,315] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:01,592] {logging_mixin.py:103} INFO - [2021-02-10 09:10:01,592] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:10:01,747] {logging_mixin.py:103} INFO - [2021-02-10 09:10:01,747] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:01,806] {logging_mixin.py:103} INFO - [2021-02-10 09:10:01,805] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:10:01,806] {logging_mixin.py:103} INFO - [2021-02-10 09:10:01,806] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:10:03,313] {logging_mixin.py:103} INFO - [2021-02-10 09:10:03,313] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:03,317] {logging_mixin.py:103} INFO - [2021-02-10 09:10:03,316] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:10:03,328] {logging_mixin.py:103} INFO - [2021-02-10 09:10:03,328] {data_context.py:1281} INFO - Setting run_name to: 20210210T081003.328078Z
[2021-02-10 09:10:03,329] {logging_mixin.py:103} INFO - [2021-02-10 09:10:03,329] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:10:03,339] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:10:03,341] {logging_mixin.py:103} INFO - [2021-02-10 09:10:03,341] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:10:03,508] {logging_mixin.py:103} INFO - [2021-02-10 09:10:03,508] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:03,509] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:10:03,509] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:10:03,511] {logging_mixin.py:103} INFO - [2021-02-10 09:10:03,511] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:10:03,674] {logging_mixin.py:103} INFO - [2021-02-10 09:10:03,673] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:03,674] {logging_mixin.py:103} INFO - [2021-02-10 09:10:03,674] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:10:03,676] {logging_mixin.py:103} INFO - [2021-02-10 09:10:03,676] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:10:03,837] {logging_mixin.py:103} INFO - [2021-02-10 09:10:03,837] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:03,839] {logging_mixin.py:103} INFO - [2021-02-10 09:10:03,839] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:10:04,054] {logging_mixin.py:103} INFO - [2021-02-10 09:10:04,054] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:04,057] {logging_mixin.py:103} INFO - [2021-02-10 09:10:04,057] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:10:04,205] {logging_mixin.py:103} INFO - [2021-02-10 09:10:04,204] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:04,205] {logging_mixin.py:103} INFO - [2021-02-10 09:10:04,205] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:10:04,227] {logging_mixin.py:103} INFO - [2021-02-10 09:10:04,226] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:10:04,228] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:10:04,230] {logging_mixin.py:103} INFO - [2021-02-10 09:10:04,229] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:10:04,377] {logging_mixin.py:103} INFO - [2021-02-10 09:10:04,377] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:04,378] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:10:04,378] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:10:04,379] {logging_mixin.py:103} INFO - [2021-02-10 09:10:04,379] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:10:04,577] {logging_mixin.py:103} INFO - [2021-02-10 09:10:04,577] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:04,578] {logging_mixin.py:103} INFO - [2021-02-10 09:10:04,578] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:10:04,580] {logging_mixin.py:103} INFO - [2021-02-10 09:10:04,580] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:10:04,801] {logging_mixin.py:103} INFO - [2021-02-10 09:10:04,801] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:04,803] {logging_mixin.py:103} INFO - [2021-02-10 09:10:04,803] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:10:04,980] {logging_mixin.py:103} INFO - [2021-02-10 09:10:04,980] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:04,984] {logging_mixin.py:103} INFO - [2021-02-10 09:10:04,984] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:10:05,242] {logging_mixin.py:103} INFO - [2021-02-10 09:10:05,242] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:05,244] {logging_mixin.py:103} INFO - [2021-02-10 09:10:05,244] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:10:05,433] {logging_mixin.py:103} INFO - [2021-02-10 09:10:05,433] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:05,433] {logging_mixin.py:103} INFO - [2021-02-10 09:10:05,433] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:10:05,436] {logging_mixin.py:103} INFO - [2021-02-10 09:10:05,436] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:10:05,588] {logging_mixin.py:103} INFO - [2021-02-10 09:10:05,588] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:05,617] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:10:05,622] {logging_mixin.py:103} INFO - [2021-02-10 09:10:05,622] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:10:05,767] {logging_mixin.py:103} INFO - [2021-02-10 09:10:05,767] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:05,768] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:10:05,769] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:10:05,770] {logging_mixin.py:103} INFO - [2021-02-10 09:10:05,770] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:10:05,945] {logging_mixin.py:103} INFO - [2021-02-10 09:10:05,945] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:05,946] {logging_mixin.py:103} INFO - [2021-02-10 09:10:05,946] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:10:05,947] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:10:05,950] {logging_mixin.py:103} INFO - [2021-02-10 09:10:05,950] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:10:06,157] {logging_mixin.py:103} INFO - [2021-02-10 09:10:06,156] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:06,158] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:10:06,158] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:10:06,160] {logging_mixin.py:103} INFO - [2021-02-10 09:10:06,159] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:10:06,335] {logging_mixin.py:103} INFO - [2021-02-10 09:10:06,334] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:06,335] {logging_mixin.py:103} INFO - [2021-02-10 09:10:06,335] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:10:06,336] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:10:06,339] {logging_mixin.py:103} INFO - [2021-02-10 09:10:06,339] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:10:06,496] {logging_mixin.py:103} INFO - [2021-02-10 09:10:06,496] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:06,496] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:10:06,497] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:10:06,498] {logging_mixin.py:103} INFO - [2021-02-10 09:10:06,498] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:10:06,661] {logging_mixin.py:103} INFO - [2021-02-10 09:10:06,661] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:06,661] {logging_mixin.py:103} INFO - [2021-02-10 09:10:06,661] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:10:12,721] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:10:44,762] {scheduler_job.py:181} INFO - Started process (PID=63325) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:10:44,763] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:10:44,763] {logging_mixin.py:103} INFO - [2021-02-10 09:10:44,763] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:10:46,663] {logging_mixin.py:103} INFO - [2021-02-10 09:10:46,663] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:10:46,969] {logging_mixin.py:103} INFO - [2021-02-10 09:10:46,969] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:10:47,319] {logging_mixin.py:103} INFO - [2021-02-10 09:10:47,319] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:10:47,319] {logging_mixin.py:103} INFO - [2021-02-10 09:10:47,319] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:10:47,319] {logging_mixin.py:103} INFO - [2021-02-10 09:10:47,319] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:10:48,372] {logging_mixin.py:103} INFO - [2021-02-10 09:10:48,372] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:10:48,505] {logging_mixin.py:103} INFO - [2021-02-10 09:10:48,505] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:48,507] {logging_mixin.py:103} INFO - [2021-02-10 09:10:48,507] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:10:48,658] {logging_mixin.py:103} INFO - [2021-02-10 09:10:48,658] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:48,659] {logging_mixin.py:103} INFO - [2021-02-10 09:10:48,659] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:10:48,792] {logging_mixin.py:103} INFO - [2021-02-10 09:10:48,792] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:48,793] {logging_mixin.py:103} INFO - [2021-02-10 09:10:48,793] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:10:48,930] {logging_mixin.py:103} INFO - [2021-02-10 09:10:48,930] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:49,150] {logging_mixin.py:103} INFO - [2021-02-10 09:10:49,149] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:10:49,301] {logging_mixin.py:103} INFO - [2021-02-10 09:10:49,301] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:49,344] {logging_mixin.py:103} INFO - [2021-02-10 09:10:49,344] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:10:49,345] {logging_mixin.py:103} INFO - [2021-02-10 09:10:49,344] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:10:50,621] {logging_mixin.py:103} INFO - [2021-02-10 09:10:50,621] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:50,625] {logging_mixin.py:103} INFO - [2021-02-10 09:10:50,625] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:10:50,635] {logging_mixin.py:103} INFO - [2021-02-10 09:10:50,635] {data_context.py:1281} INFO - Setting run_name to: 20210210T081050.635663Z
[2021-02-10 09:10:50,636] {logging_mixin.py:103} INFO - [2021-02-10 09:10:50,636] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:10:50,645] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:10:50,647] {logging_mixin.py:103} INFO - [2021-02-10 09:10:50,647] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:10:50,825] {logging_mixin.py:103} INFO - [2021-02-10 09:10:50,825] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:50,826] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:10:50,826] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:10:50,827] {logging_mixin.py:103} INFO - [2021-02-10 09:10:50,827] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:10:50,995] {logging_mixin.py:103} INFO - [2021-02-10 09:10:50,995] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:50,995] {logging_mixin.py:103} INFO - [2021-02-10 09:10:50,995] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:10:50,997] {logging_mixin.py:103} INFO - [2021-02-10 09:10:50,997] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:10:51,148] {logging_mixin.py:103} INFO - [2021-02-10 09:10:51,148] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:51,150] {logging_mixin.py:103} INFO - [2021-02-10 09:10:51,150] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:10:51,324] {logging_mixin.py:103} INFO - [2021-02-10 09:10:51,324] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:51,328] {logging_mixin.py:103} INFO - [2021-02-10 09:10:51,328] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:10:51,478] {logging_mixin.py:103} INFO - [2021-02-10 09:10:51,478] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:51,479] {logging_mixin.py:103} INFO - [2021-02-10 09:10:51,479] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:10:51,493] {logging_mixin.py:103} INFO - [2021-02-10 09:10:51,493] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:10:51,494] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:10:51,497] {logging_mixin.py:103} INFO - [2021-02-10 09:10:51,497] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:10:51,655] {logging_mixin.py:103} INFO - [2021-02-10 09:10:51,655] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:51,656] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:10:51,656] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:10:51,657] {logging_mixin.py:103} INFO - [2021-02-10 09:10:51,657] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:10:51,799] {logging_mixin.py:103} INFO - [2021-02-10 09:10:51,798] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:51,799] {logging_mixin.py:103} INFO - [2021-02-10 09:10:51,799] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:10:51,802] {logging_mixin.py:103} INFO - [2021-02-10 09:10:51,802] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:10:51,957] {logging_mixin.py:103} INFO - [2021-02-10 09:10:51,957] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:51,959] {logging_mixin.py:103} INFO - [2021-02-10 09:10:51,959] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:10:52,116] {logging_mixin.py:103} INFO - [2021-02-10 09:10:52,116] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:52,118] {logging_mixin.py:103} INFO - [2021-02-10 09:10:52,118] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:10:52,285] {logging_mixin.py:103} INFO - [2021-02-10 09:10:52,285] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:52,288] {logging_mixin.py:103} INFO - [2021-02-10 09:10:52,288] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:10:52,426] {logging_mixin.py:103} INFO - [2021-02-10 09:10:52,426] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:52,426] {logging_mixin.py:103} INFO - [2021-02-10 09:10:52,426] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:10:52,431] {logging_mixin.py:103} INFO - [2021-02-10 09:10:52,431] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:10:52,602] {logging_mixin.py:103} INFO - [2021-02-10 09:10:52,602] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:52,607] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:10:52,609] {logging_mixin.py:103} INFO - [2021-02-10 09:10:52,609] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:10:52,758] {logging_mixin.py:103} INFO - [2021-02-10 09:10:52,758] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:52,760] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:10:52,760] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:10:52,762] {logging_mixin.py:103} INFO - [2021-02-10 09:10:52,762] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:10:52,947] {logging_mixin.py:103} INFO - [2021-02-10 09:10:52,947] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:52,948] {logging_mixin.py:103} INFO - [2021-02-10 09:10:52,948] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:10:52,949] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:10:52,952] {logging_mixin.py:103} INFO - [2021-02-10 09:10:52,952] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:10:53,127] {logging_mixin.py:103} INFO - [2021-02-10 09:10:53,126] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:53,128] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:10:53,128] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:10:53,130] {logging_mixin.py:103} INFO - [2021-02-10 09:10:53,129] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:10:53,306] {logging_mixin.py:103} INFO - [2021-02-10 09:10:53,306] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:53,307] {logging_mixin.py:103} INFO - [2021-02-10 09:10:53,307] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:10:53,308] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:10:53,311] {logging_mixin.py:103} INFO - [2021-02-10 09:10:53,310] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:10:53,460] {logging_mixin.py:103} INFO - [2021-02-10 09:10:53,460] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:53,461] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:10:53,461] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:10:53,463] {logging_mixin.py:103} INFO - [2021-02-10 09:10:53,462] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:10:53,639] {logging_mixin.py:103} INFO - [2021-02-10 09:10:53,638] {cursor.py:560} INFO - query execution done
[2021-02-10 09:10:53,639] {logging_mixin.py:103} INFO - [2021-02-10 09:10:53,639] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:10:58,081] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:11:26,711] {scheduler_job.py:181} INFO - Started process (PID=63386) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:11:26,711] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:11:26,711] {logging_mixin.py:103} INFO - [2021-02-10 09:11:26,711] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:11:28,513] {logging_mixin.py:103} INFO - [2021-02-10 09:11:28,513] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:11:28,831] {logging_mixin.py:103} INFO - [2021-02-10 09:11:28,831] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:11:29,171] {logging_mixin.py:103} INFO - [2021-02-10 09:11:29,171] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:11:29,171] {logging_mixin.py:103} INFO - [2021-02-10 09:11:29,171] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:11:29,171] {logging_mixin.py:103} INFO - [2021-02-10 09:11:29,171] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:11:30,095] {logging_mixin.py:103} INFO - [2021-02-10 09:11:30,095] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:11:30,232] {logging_mixin.py:103} INFO - [2021-02-10 09:11:30,232] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:30,235] {logging_mixin.py:103} INFO - [2021-02-10 09:11:30,234] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:11:30,380] {logging_mixin.py:103} INFO - [2021-02-10 09:11:30,380] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:30,381] {logging_mixin.py:103} INFO - [2021-02-10 09:11:30,380] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:11:30,513] {logging_mixin.py:103} INFO - [2021-02-10 09:11:30,513] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:30,515] {logging_mixin.py:103} INFO - [2021-02-10 09:11:30,515] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:11:30,646] {logging_mixin.py:103} INFO - [2021-02-10 09:11:30,646] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:30,863] {logging_mixin.py:103} INFO - [2021-02-10 09:11:30,863] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:11:31,037] {logging_mixin.py:103} INFO - [2021-02-10 09:11:31,036] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:31,078] {logging_mixin.py:103} INFO - [2021-02-10 09:11:31,078] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:11:31,079] {logging_mixin.py:103} INFO - [2021-02-10 09:11:31,079] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:11:32,365] {logging_mixin.py:103} INFO - [2021-02-10 09:11:32,365] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:32,368] {logging_mixin.py:103} INFO - [2021-02-10 09:11:32,368] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:11:32,378] {logging_mixin.py:103} INFO - [2021-02-10 09:11:32,378] {data_context.py:1281} INFO - Setting run_name to: 20210210T081132.378392Z
[2021-02-10 09:11:32,379] {logging_mixin.py:103} INFO - [2021-02-10 09:11:32,379] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:11:32,387] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:11:32,389] {logging_mixin.py:103} INFO - [2021-02-10 09:11:32,389] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:11:32,544] {logging_mixin.py:103} INFO - [2021-02-10 09:11:32,544] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:32,545] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:11:32,545] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:11:32,547] {logging_mixin.py:103} INFO - [2021-02-10 09:11:32,547] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:11:32,710] {logging_mixin.py:103} INFO - [2021-02-10 09:11:32,710] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:32,710] {logging_mixin.py:103} INFO - [2021-02-10 09:11:32,710] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:11:32,713] {logging_mixin.py:103} INFO - [2021-02-10 09:11:32,713] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:11:32,871] {logging_mixin.py:103} INFO - [2021-02-10 09:11:32,871] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:32,874] {logging_mixin.py:103} INFO - [2021-02-10 09:11:32,873] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:11:33,030] {logging_mixin.py:103} INFO - [2021-02-10 09:11:33,030] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:33,032] {logging_mixin.py:103} INFO - [2021-02-10 09:11:33,032] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:11:33,211] {logging_mixin.py:103} INFO - [2021-02-10 09:11:33,211] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:33,212] {logging_mixin.py:103} INFO - [2021-02-10 09:11:33,212] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:11:33,223] {logging_mixin.py:103} INFO - [2021-02-10 09:11:33,223] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:11:33,224] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:11:33,225] {logging_mixin.py:103} INFO - [2021-02-10 09:11:33,225] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:11:33,405] {logging_mixin.py:103} INFO - [2021-02-10 09:11:33,405] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:33,406] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:11:33,406] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:11:33,407] {logging_mixin.py:103} INFO - [2021-02-10 09:11:33,407] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:11:33,555] {logging_mixin.py:103} INFO - [2021-02-10 09:11:33,555] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:33,555] {logging_mixin.py:103} INFO - [2021-02-10 09:11:33,555] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:11:33,558] {logging_mixin.py:103} INFO - [2021-02-10 09:11:33,558] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:11:33,719] {logging_mixin.py:103} INFO - [2021-02-10 09:11:33,718] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:33,720] {logging_mixin.py:103} INFO - [2021-02-10 09:11:33,720] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:11:33,876] {logging_mixin.py:103} INFO - [2021-02-10 09:11:33,876] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:33,879] {logging_mixin.py:103} INFO - [2021-02-10 09:11:33,879] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:11:34,044] {logging_mixin.py:103} INFO - [2021-02-10 09:11:34,044] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:34,047] {logging_mixin.py:103} INFO - [2021-02-10 09:11:34,047] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:11:34,208] {logging_mixin.py:103} INFO - [2021-02-10 09:11:34,207] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:34,208] {logging_mixin.py:103} INFO - [2021-02-10 09:11:34,208] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:11:34,213] {logging_mixin.py:103} INFO - [2021-02-10 09:11:34,213] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:11:34,368] {logging_mixin.py:103} INFO - [2021-02-10 09:11:34,367] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:34,372] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:11:34,375] {logging_mixin.py:103} INFO - [2021-02-10 09:11:34,375] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:11:34,618] {logging_mixin.py:103} INFO - [2021-02-10 09:11:34,618] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:34,619] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:11:34,619] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:11:34,620] {logging_mixin.py:103} INFO - [2021-02-10 09:11:34,620] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:11:34,756] {logging_mixin.py:103} INFO - [2021-02-10 09:11:34,756] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:34,757] {logging_mixin.py:103} INFO - [2021-02-10 09:11:34,756] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:11:34,757] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:11:34,761] {logging_mixin.py:103} INFO - [2021-02-10 09:11:34,761] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:11:34,907] {logging_mixin.py:103} INFO - [2021-02-10 09:11:34,907] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:34,908] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:11:34,908] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:11:34,910] {logging_mixin.py:103} INFO - [2021-02-10 09:11:34,910] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:11:35,084] {logging_mixin.py:103} INFO - [2021-02-10 09:11:35,084] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:35,085] {logging_mixin.py:103} INFO - [2021-02-10 09:11:35,085] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:11:35,086] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:11:35,089] {logging_mixin.py:103} INFO - [2021-02-10 09:11:35,089] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:11:35,266] {logging_mixin.py:103} INFO - [2021-02-10 09:11:35,266] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:35,267] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:11:35,267] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:11:35,269] {logging_mixin.py:103} INFO - [2021-02-10 09:11:35,269] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:11:35,576] {logging_mixin.py:103} INFO - [2021-02-10 09:11:35,576] {cursor.py:560} INFO - query execution done
[2021-02-10 09:11:35,577] {logging_mixin.py:103} INFO - [2021-02-10 09:11:35,576] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:11:39,950] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:12:12,547] {scheduler_job.py:181} INFO - Started process (PID=63448) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:12:12,547] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:12:12,548] {logging_mixin.py:103} INFO - [2021-02-10 09:12:12,548] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:12:15,170] {logging_mixin.py:103} INFO - [2021-02-10 09:12:15,170] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:12:15,538] {logging_mixin.py:103} INFO - [2021-02-10 09:12:15,538] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:12:15,894] {logging_mixin.py:103} INFO - [2021-02-10 09:12:15,894] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:12:15,894] {logging_mixin.py:103} INFO - [2021-02-10 09:12:15,894] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:12:15,895] {logging_mixin.py:103} INFO - [2021-02-10 09:12:15,895] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:12:17,142] {logging_mixin.py:103} INFO - [2021-02-10 09:12:17,142] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:12:17,271] {logging_mixin.py:103} INFO - [2021-02-10 09:12:17,271] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:17,273] {logging_mixin.py:103} INFO - [2021-02-10 09:12:17,272] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:12:17,397] {logging_mixin.py:103} INFO - [2021-02-10 09:12:17,397] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:17,398] {logging_mixin.py:103} INFO - [2021-02-10 09:12:17,398] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:12:17,524] {logging_mixin.py:103} INFO - [2021-02-10 09:12:17,524] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:17,528] {logging_mixin.py:103} INFO - [2021-02-10 09:12:17,528] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:12:17,654] {logging_mixin.py:103} INFO - [2021-02-10 09:12:17,654] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:17,830] {logging_mixin.py:103} INFO - [2021-02-10 09:12:17,830] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:12:17,967] {logging_mixin.py:103} INFO - [2021-02-10 09:12:17,967] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:18,008] {logging_mixin.py:103} INFO - [2021-02-10 09:12:18,008] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:12:18,008] {logging_mixin.py:103} INFO - [2021-02-10 09:12:18,008] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:12:19,590] {logging_mixin.py:103} INFO - [2021-02-10 09:12:19,590] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:19,594] {logging_mixin.py:103} INFO - [2021-02-10 09:12:19,594] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:12:19,605] {logging_mixin.py:103} INFO - [2021-02-10 09:12:19,604] {data_context.py:1281} INFO - Setting run_name to: 20210210T081219.604875Z
[2021-02-10 09:12:19,606] {logging_mixin.py:103} INFO - [2021-02-10 09:12:19,606] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:12:19,615] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:12:19,616] {logging_mixin.py:103} INFO - [2021-02-10 09:12:19,616] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:12:19,780] {logging_mixin.py:103} INFO - [2021-02-10 09:12:19,780] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:19,781] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:12:19,781] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:12:19,783] {logging_mixin.py:103} INFO - [2021-02-10 09:12:19,783] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:12:19,932] {logging_mixin.py:103} INFO - [2021-02-10 09:12:19,932] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:19,932] {logging_mixin.py:103} INFO - [2021-02-10 09:12:19,932] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:12:19,934] {logging_mixin.py:103} INFO - [2021-02-10 09:12:19,934] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:12:20,148] {logging_mixin.py:103} INFO - [2021-02-10 09:12:20,148] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:20,151] {logging_mixin.py:103} INFO - [2021-02-10 09:12:20,151] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:12:20,365] {logging_mixin.py:103} INFO - [2021-02-10 09:12:20,365] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:20,368] {logging_mixin.py:103} INFO - [2021-02-10 09:12:20,368] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:12:20,511] {logging_mixin.py:103} INFO - [2021-02-10 09:12:20,511] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:20,511] {logging_mixin.py:103} INFO - [2021-02-10 09:12:20,511] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:12:20,527] {logging_mixin.py:103} INFO - [2021-02-10 09:12:20,527] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:12:20,528] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:12:20,530] {logging_mixin.py:103} INFO - [2021-02-10 09:12:20,530] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:12:20,689] {logging_mixin.py:103} INFO - [2021-02-10 09:12:20,689] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:20,690] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:12:20,690] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:12:20,691] {logging_mixin.py:103} INFO - [2021-02-10 09:12:20,691] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:12:20,881] {logging_mixin.py:103} INFO - [2021-02-10 09:12:20,880] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:20,881] {logging_mixin.py:103} INFO - [2021-02-10 09:12:20,881] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:12:20,884] {logging_mixin.py:103} INFO - [2021-02-10 09:12:20,884] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:12:21,059] {logging_mixin.py:103} INFO - [2021-02-10 09:12:21,059] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:21,061] {logging_mixin.py:103} INFO - [2021-02-10 09:12:21,061] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:12:21,211] {logging_mixin.py:103} INFO - [2021-02-10 09:12:21,211] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:21,214] {logging_mixin.py:103} INFO - [2021-02-10 09:12:21,214] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:12:21,398] {logging_mixin.py:103} INFO - [2021-02-10 09:12:21,398] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:21,400] {logging_mixin.py:103} INFO - [2021-02-10 09:12:21,400] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:12:21,553] {logging_mixin.py:103} INFO - [2021-02-10 09:12:21,553] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:21,553] {logging_mixin.py:103} INFO - [2021-02-10 09:12:21,553] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:12:21,557] {logging_mixin.py:103} INFO - [2021-02-10 09:12:21,557] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:12:21,718] {logging_mixin.py:103} INFO - [2021-02-10 09:12:21,718] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:21,722] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:12:21,724] {logging_mixin.py:103} INFO - [2021-02-10 09:12:21,724] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:12:21,911] {logging_mixin.py:103} INFO - [2021-02-10 09:12:21,911] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:21,913] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:12:21,913] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:12:21,914] {logging_mixin.py:103} INFO - [2021-02-10 09:12:21,914] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:12:22,086] {logging_mixin.py:103} INFO - [2021-02-10 09:12:22,086] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:22,087] {logging_mixin.py:103} INFO - [2021-02-10 09:12:22,087] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:12:22,088] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:12:22,091] {logging_mixin.py:103} INFO - [2021-02-10 09:12:22,091] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:12:22,242] {logging_mixin.py:103} INFO - [2021-02-10 09:12:22,241] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:22,243] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:12:22,243] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:12:22,244] {logging_mixin.py:103} INFO - [2021-02-10 09:12:22,244] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:12:22,387] {logging_mixin.py:103} INFO - [2021-02-10 09:12:22,386] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:22,387] {logging_mixin.py:103} INFO - [2021-02-10 09:12:22,387] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:12:22,387] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:12:22,389] {logging_mixin.py:103} INFO - [2021-02-10 09:12:22,389] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:12:22,535] {logging_mixin.py:103} INFO - [2021-02-10 09:12:22,535] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:22,536] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:12:22,536] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:12:22,538] {logging_mixin.py:103} INFO - [2021-02-10 09:12:22,538] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:12:22,692] {logging_mixin.py:103} INFO - [2021-02-10 09:12:22,692] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:22,692] {logging_mixin.py:103} INFO - [2021-02-10 09:12:22,692] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:12:27,321] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:12:55,169] {scheduler_job.py:181} INFO - Started process (PID=63507) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:12:55,170] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:12:55,170] {logging_mixin.py:103} INFO - [2021-02-10 09:12:55,170] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:12:56,845] {logging_mixin.py:103} INFO - [2021-02-10 09:12:56,845] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:12:57,143] {logging_mixin.py:103} INFO - [2021-02-10 09:12:57,143] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:12:57,484] {logging_mixin.py:103} INFO - [2021-02-10 09:12:57,484] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:12:57,484] {logging_mixin.py:103} INFO - [2021-02-10 09:12:57,484] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:12:57,484] {logging_mixin.py:103} INFO - [2021-02-10 09:12:57,484] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:12:58,616] {logging_mixin.py:103} INFO - [2021-02-10 09:12:58,616] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:12:58,752] {logging_mixin.py:103} INFO - [2021-02-10 09:12:58,752] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:58,754] {logging_mixin.py:103} INFO - [2021-02-10 09:12:58,753] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:12:58,903] {logging_mixin.py:103} INFO - [2021-02-10 09:12:58,902] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:58,903] {logging_mixin.py:103} INFO - [2021-02-10 09:12:58,903] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:12:59,054] {logging_mixin.py:103} INFO - [2021-02-10 09:12:59,053] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:59,057] {logging_mixin.py:103} INFO - [2021-02-10 09:12:59,057] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:12:59,191] {logging_mixin.py:103} INFO - [2021-02-10 09:12:59,191] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:59,410] {logging_mixin.py:103} INFO - [2021-02-10 09:12:59,409] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:12:59,561] {logging_mixin.py:103} INFO - [2021-02-10 09:12:59,561] {cursor.py:560} INFO - query execution done
[2021-02-10 09:12:59,604] {logging_mixin.py:103} INFO - [2021-02-10 09:12:59,604] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:12:59,604] {logging_mixin.py:103} INFO - [2021-02-10 09:12:59,604] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:13:01,075] {logging_mixin.py:103} INFO - [2021-02-10 09:13:01,075] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:01,079] {logging_mixin.py:103} INFO - [2021-02-10 09:13:01,079] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:13:01,089] {logging_mixin.py:103} INFO - [2021-02-10 09:13:01,089] {data_context.py:1281} INFO - Setting run_name to: 20210210T081301.089284Z
[2021-02-10 09:13:01,090] {logging_mixin.py:103} INFO - [2021-02-10 09:13:01,090] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:13:01,099] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:13:01,101] {logging_mixin.py:103} INFO - [2021-02-10 09:13:01,101] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:13:01,281] {logging_mixin.py:103} INFO - [2021-02-10 09:13:01,281] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:01,282] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:13:01,282] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:13:01,284] {logging_mixin.py:103} INFO - [2021-02-10 09:13:01,283] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:13:01,431] {logging_mixin.py:103} INFO - [2021-02-10 09:13:01,430] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:01,431] {logging_mixin.py:103} INFO - [2021-02-10 09:13:01,431] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:13:01,433] {logging_mixin.py:103} INFO - [2021-02-10 09:13:01,433] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:13:01,609] {logging_mixin.py:103} INFO - [2021-02-10 09:13:01,609] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:01,612] {logging_mixin.py:103} INFO - [2021-02-10 09:13:01,612] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:13:01,781] {logging_mixin.py:103} INFO - [2021-02-10 09:13:01,781] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:01,783] {logging_mixin.py:103} INFO - [2021-02-10 09:13:01,783] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:13:01,957] {logging_mixin.py:103} INFO - [2021-02-10 09:13:01,957] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:01,958] {logging_mixin.py:103} INFO - [2021-02-10 09:13:01,958] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:13:01,969] {logging_mixin.py:103} INFO - [2021-02-10 09:13:01,969] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:13:01,970] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:13:01,972] {logging_mixin.py:103} INFO - [2021-02-10 09:13:01,971] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:13:02,129] {logging_mixin.py:103} INFO - [2021-02-10 09:13:02,129] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:02,130] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:13:02,130] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:13:02,131] {logging_mixin.py:103} INFO - [2021-02-10 09:13:02,131] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:13:02,306] {logging_mixin.py:103} INFO - [2021-02-10 09:13:02,305] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:02,306] {logging_mixin.py:103} INFO - [2021-02-10 09:13:02,306] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:13:02,309] {logging_mixin.py:103} INFO - [2021-02-10 09:13:02,309] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:13:02,465] {logging_mixin.py:103} INFO - [2021-02-10 09:13:02,464] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:02,466] {logging_mixin.py:103} INFO - [2021-02-10 09:13:02,466] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:13:02,630] {logging_mixin.py:103} INFO - [2021-02-10 09:13:02,630] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:02,633] {logging_mixin.py:103} INFO - [2021-02-10 09:13:02,633] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:13:02,788] {logging_mixin.py:103} INFO - [2021-02-10 09:13:02,788] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:02,791] {logging_mixin.py:103} INFO - [2021-02-10 09:13:02,791] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:13:02,936] {logging_mixin.py:103} INFO - [2021-02-10 09:13:02,936] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:02,937] {logging_mixin.py:103} INFO - [2021-02-10 09:13:02,937] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:13:02,941] {logging_mixin.py:103} INFO - [2021-02-10 09:13:02,941] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:13:03,109] {logging_mixin.py:103} INFO - [2021-02-10 09:13:03,109] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:03,114] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:13:03,116] {logging_mixin.py:103} INFO - [2021-02-10 09:13:03,116] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:13:03,273] {logging_mixin.py:103} INFO - [2021-02-10 09:13:03,273] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:03,273] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:13:03,273] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:13:03,274] {logging_mixin.py:103} INFO - [2021-02-10 09:13:03,274] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:13:03,418] {logging_mixin.py:103} INFO - [2021-02-10 09:13:03,418] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:03,418] {logging_mixin.py:103} INFO - [2021-02-10 09:13:03,418] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:13:03,419] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:13:03,423] {logging_mixin.py:103} INFO - [2021-02-10 09:13:03,422] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:13:03,570] {logging_mixin.py:103} INFO - [2021-02-10 09:13:03,570] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:03,571] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:13:03,571] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:13:03,573] {logging_mixin.py:103} INFO - [2021-02-10 09:13:03,573] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:13:03,723] {logging_mixin.py:103} INFO - [2021-02-10 09:13:03,723] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:03,723] {logging_mixin.py:103} INFO - [2021-02-10 09:13:03,723] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:13:03,724] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:13:03,728] {logging_mixin.py:103} INFO - [2021-02-10 09:13:03,728] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:13:03,908] {logging_mixin.py:103} INFO - [2021-02-10 09:13:03,907] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:03,909] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:13:03,909] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:13:03,911] {logging_mixin.py:103} INFO - [2021-02-10 09:13:03,911] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:13:04,073] {logging_mixin.py:103} INFO - [2021-02-10 09:13:04,073] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:04,074] {logging_mixin.py:103} INFO - [2021-02-10 09:13:04,074] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:13:08,631] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:13:38,544] {scheduler_job.py:181} INFO - Started process (PID=63565) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:13:38,546] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:13:38,547] {logging_mixin.py:103} INFO - [2021-02-10 09:13:38,547] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:13:41,346] {logging_mixin.py:103} INFO - [2021-02-10 09:13:41,346] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:13:41,802] {logging_mixin.py:103} INFO - [2021-02-10 09:13:41,802] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:13:42,511] {logging_mixin.py:103} INFO - [2021-02-10 09:13:42,511] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:13:42,512] {logging_mixin.py:103} INFO - [2021-02-10 09:13:42,512] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:13:42,517] {logging_mixin.py:103} INFO - [2021-02-10 09:13:42,512] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:13:44,084] {logging_mixin.py:103} INFO - [2021-02-10 09:13:44,084] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:13:44,230] {logging_mixin.py:103} INFO - [2021-02-10 09:13:44,229] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:44,231] {logging_mixin.py:103} INFO - [2021-02-10 09:13:44,231] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:13:44,390] {logging_mixin.py:103} INFO - [2021-02-10 09:13:44,390] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:44,391] {logging_mixin.py:103} INFO - [2021-02-10 09:13:44,391] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:13:44,536] {logging_mixin.py:103} INFO - [2021-02-10 09:13:44,536] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:44,540] {logging_mixin.py:103} INFO - [2021-02-10 09:13:44,540] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:13:44,676] {logging_mixin.py:103} INFO - [2021-02-10 09:13:44,676] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:44,944] {logging_mixin.py:103} INFO - [2021-02-10 09:13:44,944] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:13:45,097] {logging_mixin.py:103} INFO - [2021-02-10 09:13:45,097] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:45,147] {logging_mixin.py:103} INFO - [2021-02-10 09:13:45,147] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:13:45,147] {logging_mixin.py:103} INFO - [2021-02-10 09:13:45,147] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:13:46,543] {logging_mixin.py:103} INFO - [2021-02-10 09:13:46,543] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:46,549] {logging_mixin.py:103} INFO - [2021-02-10 09:13:46,549] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:13:46,560] {logging_mixin.py:103} INFO - [2021-02-10 09:13:46,559] {data_context.py:1281} INFO - Setting run_name to: 20210210T081346.559869Z
[2021-02-10 09:13:46,561] {logging_mixin.py:103} INFO - [2021-02-10 09:13:46,561] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:13:46,571] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:13:46,573] {logging_mixin.py:103} INFO - [2021-02-10 09:13:46,573] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:13:46,734] {logging_mixin.py:103} INFO - [2021-02-10 09:13:46,733] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:46,735] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:13:46,735] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:13:46,737] {logging_mixin.py:103} INFO - [2021-02-10 09:13:46,736] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:13:46,898] {logging_mixin.py:103} INFO - [2021-02-10 09:13:46,898] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:46,899] {logging_mixin.py:103} INFO - [2021-02-10 09:13:46,899] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:13:46,902] {logging_mixin.py:103} INFO - [2021-02-10 09:13:46,901] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:13:47,042] {logging_mixin.py:103} INFO - [2021-02-10 09:13:47,042] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:47,044] {logging_mixin.py:103} INFO - [2021-02-10 09:13:47,044] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:13:47,251] {logging_mixin.py:103} INFO - [2021-02-10 09:13:47,250] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:47,253] {logging_mixin.py:103} INFO - [2021-02-10 09:13:47,253] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:13:47,403] {logging_mixin.py:103} INFO - [2021-02-10 09:13:47,403] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:47,404] {logging_mixin.py:103} INFO - [2021-02-10 09:13:47,403] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:13:47,426] {logging_mixin.py:103} INFO - [2021-02-10 09:13:47,425] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:13:47,427] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:13:47,429] {logging_mixin.py:103} INFO - [2021-02-10 09:13:47,429] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:13:47,585] {logging_mixin.py:103} INFO - [2021-02-10 09:13:47,585] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:47,586] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:13:47,587] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:13:47,589] {logging_mixin.py:103} INFO - [2021-02-10 09:13:47,588] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:13:47,783] {logging_mixin.py:103} INFO - [2021-02-10 09:13:47,783] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:47,784] {logging_mixin.py:103} INFO - [2021-02-10 09:13:47,784] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:13:47,787] {logging_mixin.py:103} INFO - [2021-02-10 09:13:47,787] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:13:47,935] {logging_mixin.py:103} INFO - [2021-02-10 09:13:47,935] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:47,937] {logging_mixin.py:103} INFO - [2021-02-10 09:13:47,936] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:13:48,090] {logging_mixin.py:103} INFO - [2021-02-10 09:13:48,090] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:48,092] {logging_mixin.py:103} INFO - [2021-02-10 09:13:48,092] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:13:48,235] {logging_mixin.py:103} INFO - [2021-02-10 09:13:48,234] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:48,238] {logging_mixin.py:103} INFO - [2021-02-10 09:13:48,238] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:13:48,382] {logging_mixin.py:103} INFO - [2021-02-10 09:13:48,382] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:48,382] {logging_mixin.py:103} INFO - [2021-02-10 09:13:48,382] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:13:48,386] {logging_mixin.py:103} INFO - [2021-02-10 09:13:48,386] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:13:48,545] {logging_mixin.py:103} INFO - [2021-02-10 09:13:48,545] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:48,549] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:13:48,552] {logging_mixin.py:103} INFO - [2021-02-10 09:13:48,552] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:13:48,737] {logging_mixin.py:103} INFO - [2021-02-10 09:13:48,737] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:48,737] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:13:48,738] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:13:48,742] {logging_mixin.py:103} INFO - [2021-02-10 09:13:48,742] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:13:48,900] {logging_mixin.py:103} INFO - [2021-02-10 09:13:48,900] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:48,901] {logging_mixin.py:103} INFO - [2021-02-10 09:13:48,901] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:13:48,902] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:13:48,906] {logging_mixin.py:103} INFO - [2021-02-10 09:13:48,906] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:13:49,052] {logging_mixin.py:103} INFO - [2021-02-10 09:13:49,052] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:49,053] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:13:49,053] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:13:49,054] {logging_mixin.py:103} INFO - [2021-02-10 09:13:49,054] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:13:49,213] {logging_mixin.py:103} INFO - [2021-02-10 09:13:49,213] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:49,213] {logging_mixin.py:103} INFO - [2021-02-10 09:13:49,213] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:13:49,214] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:13:49,218] {logging_mixin.py:103} INFO - [2021-02-10 09:13:49,218] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:13:49,370] {logging_mixin.py:103} INFO - [2021-02-10 09:13:49,370] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:49,371] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:13:49,371] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:13:49,372] {logging_mixin.py:103} INFO - [2021-02-10 09:13:49,372] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:13:49,610] {logging_mixin.py:103} INFO - [2021-02-10 09:13:49,610] {cursor.py:560} INFO - query execution done
[2021-02-10 09:13:49,611] {logging_mixin.py:103} INFO - [2021-02-10 09:13:49,611] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:14:02,411] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:14:52,144] {scheduler_job.py:181} INFO - Started process (PID=63688) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:14:52,145] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:14:52,145] {logging_mixin.py:103} INFO - [2021-02-10 09:14:52,145] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:14:54,530] {logging_mixin.py:103} INFO - [2021-02-10 09:14:54,530] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:14:54,947] {logging_mixin.py:103} INFO - [2021-02-10 09:14:54,947] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:14:55,384] {logging_mixin.py:103} INFO - [2021-02-10 09:14:55,384] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:14:55,385] {logging_mixin.py:103} INFO - [2021-02-10 09:14:55,385] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:14:55,385] {logging_mixin.py:103} INFO - [2021-02-10 09:14:55,385] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:14:56,890] {logging_mixin.py:103} INFO - [2021-02-10 09:14:56,890] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:14:57,082] {logging_mixin.py:103} INFO - [2021-02-10 09:14:57,082] {cursor.py:560} INFO - query execution done
[2021-02-10 09:14:57,083] {logging_mixin.py:103} INFO - [2021-02-10 09:14:57,083] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:14:57,224] {logging_mixin.py:103} INFO - [2021-02-10 09:14:57,224] {cursor.py:560} INFO - query execution done
[2021-02-10 09:14:57,225] {logging_mixin.py:103} INFO - [2021-02-10 09:14:57,225] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:14:57,362] {logging_mixin.py:103} INFO - [2021-02-10 09:14:57,361] {cursor.py:560} INFO - query execution done
[2021-02-10 09:14:57,362] {logging_mixin.py:103} INFO - [2021-02-10 09:14:57,362] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:14:57,523] {logging_mixin.py:103} INFO - [2021-02-10 09:14:57,522] {cursor.py:560} INFO - query execution done
[2021-02-10 09:14:57,765] {logging_mixin.py:103} INFO - [2021-02-10 09:14:57,765] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:14:57,899] {logging_mixin.py:103} INFO - [2021-02-10 09:14:57,899] {cursor.py:560} INFO - query execution done
[2021-02-10 09:14:57,948] {logging_mixin.py:103} INFO - [2021-02-10 09:14:57,948] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:14:57,949] {logging_mixin.py:103} INFO - [2021-02-10 09:14:57,949] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:14:59,086] {logging_mixin.py:103} INFO - [2021-02-10 09:14:59,086] {cursor.py:560} INFO - query execution done
[2021-02-10 09:14:59,088] {logging_mixin.py:103} INFO - [2021-02-10 09:14:59,088] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:14:59,096] {logging_mixin.py:103} INFO - [2021-02-10 09:14:59,096] {data_context.py:1281} INFO - Setting run_name to: 20210210T081459.096541Z
[2021-02-10 09:14:59,097] {logging_mixin.py:103} INFO - [2021-02-10 09:14:59,097] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:14:59,106] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:14:59,106] {logging_mixin.py:103} INFO - False
[2021-02-10 09:14:59,108] {logging_mixin.py:103} INFO - [2021-02-10 09:14:59,107] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:14:59,250] {logging_mixin.py:103} INFO - [2021-02-10 09:14:59,250] {cursor.py:560} INFO - query execution done
[2021-02-10 09:14:59,251] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:14:59,251] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:14:59,252] {logging_mixin.py:103} INFO - [2021-02-10 09:14:59,252] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:14:59,419] {logging_mixin.py:103} INFO - [2021-02-10 09:14:59,419] {cursor.py:560} INFO - query execution done
[2021-02-10 09:14:59,420] {logging_mixin.py:103} INFO - [2021-02-10 09:14:59,419] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:14:59,421] {logging_mixin.py:103} INFO - [2021-02-10 09:14:59,421] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:14:59,576] {logging_mixin.py:103} INFO - [2021-02-10 09:14:59,576] {cursor.py:560} INFO - query execution done
[2021-02-10 09:14:59,578] {logging_mixin.py:103} INFO - [2021-02-10 09:14:59,578] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:14:59,732] {logging_mixin.py:103} INFO - [2021-02-10 09:14:59,732] {cursor.py:560} INFO - query execution done
[2021-02-10 09:14:59,733] {logging_mixin.py:103} INFO - [2021-02-10 09:14:59,733] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:14:59,920] {logging_mixin.py:103} INFO - [2021-02-10 09:14:59,920] {cursor.py:560} INFO - query execution done
[2021-02-10 09:14:59,920] {logging_mixin.py:103} INFO - [2021-02-10 09:14:59,920] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:14:59,932] {logging_mixin.py:103} INFO - [2021-02-10 09:14:59,932] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:14:59,933] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:14:59,933] {logging_mixin.py:103} INFO - False
[2021-02-10 09:14:59,935] {logging_mixin.py:103} INFO - [2021-02-10 09:14:59,935] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:15:00,089] {logging_mixin.py:103} INFO - [2021-02-10 09:15:00,089] {cursor.py:560} INFO - query execution done
[2021-02-10 09:15:00,090] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:15:00,090] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:15:00,091] {logging_mixin.py:103} INFO - [2021-02-10 09:15:00,091] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:15:00,243] {logging_mixin.py:103} INFO - [2021-02-10 09:15:00,243] {cursor.py:560} INFO - query execution done
[2021-02-10 09:15:00,243] {logging_mixin.py:103} INFO - [2021-02-10 09:15:00,243] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:15:00,245] {logging_mixin.py:103} INFO - [2021-02-10 09:15:00,245] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:15:00,394] {logging_mixin.py:103} INFO - [2021-02-10 09:15:00,394] {cursor.py:560} INFO - query execution done
[2021-02-10 09:15:00,395] {logging_mixin.py:103} INFO - [2021-02-10 09:15:00,395] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:15:00,560] {logging_mixin.py:103} INFO - [2021-02-10 09:15:00,560] {cursor.py:560} INFO - query execution done
[2021-02-10 09:15:00,562] {logging_mixin.py:103} INFO - [2021-02-10 09:15:00,562] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:15:00,710] {logging_mixin.py:103} INFO - [2021-02-10 09:15:00,710] {cursor.py:560} INFO - query execution done
[2021-02-10 09:15:00,711] {logging_mixin.py:103} INFO - [2021-02-10 09:15:00,711] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:15:00,879] {logging_mixin.py:103} INFO - [2021-02-10 09:15:00,879] {cursor.py:560} INFO - query execution done
[2021-02-10 09:15:00,880] {logging_mixin.py:103} INFO - [2021-02-10 09:15:00,880] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:15:00,883] {logging_mixin.py:103} INFO - [2021-02-10 09:15:00,883] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:15:01,053] {logging_mixin.py:103} INFO - [2021-02-10 09:15:01,053] {cursor.py:560} INFO - query execution done
[2021-02-10 09:15:01,056] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:15:01,056] {logging_mixin.py:103} INFO - False
[2021-02-10 09:15:01,058] {logging_mixin.py:103} INFO - [2021-02-10 09:15:01,058] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:15:01,194] {logging_mixin.py:103} INFO - [2021-02-10 09:15:01,194] {cursor.py:560} INFO - query execution done
[2021-02-10 09:15:01,195] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:15:01,195] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:15:01,196] {logging_mixin.py:103} INFO - [2021-02-10 09:15:01,196] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:15:01,368] {logging_mixin.py:103} INFO - [2021-02-10 09:15:01,368] {cursor.py:560} INFO - query execution done
[2021-02-10 09:15:01,368] {logging_mixin.py:103} INFO - [2021-02-10 09:15:01,368] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:15:01,369] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:15:01,369] {logging_mixin.py:103} INFO - False
[2021-02-10 09:15:01,371] {logging_mixin.py:103} INFO - [2021-02-10 09:15:01,371] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:15:01,532] {logging_mixin.py:103} INFO - [2021-02-10 09:15:01,532] {cursor.py:560} INFO - query execution done
[2021-02-10 09:15:01,533] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:15:01,534] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:15:01,535] {logging_mixin.py:103} INFO - [2021-02-10 09:15:01,535] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:15:01,795] {logging_mixin.py:103} INFO - [2021-02-10 09:15:01,795] {cursor.py:560} INFO - query execution done
[2021-02-10 09:15:01,795] {logging_mixin.py:103} INFO - [2021-02-10 09:15:01,795] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:15:01,795] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:15:01,796] {logging_mixin.py:103} INFO - False
[2021-02-10 09:15:01,797] {logging_mixin.py:103} INFO - [2021-02-10 09:15:01,797] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:15:01,948] {logging_mixin.py:103} INFO - [2021-02-10 09:15:01,948] {cursor.py:560} INFO - query execution done
[2021-02-10 09:15:01,949] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:15:01,949] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:15:01,950] {logging_mixin.py:103} INFO - [2021-02-10 09:15:01,950] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:15:02,129] {logging_mixin.py:103} INFO - [2021-02-10 09:15:02,129] {cursor.py:560} INFO - query execution done
[2021-02-10 09:15:02,130] {logging_mixin.py:103} INFO - [2021-02-10 09:15:02,129] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:15:09,235] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:15:53,961] {scheduler_job.py:181} INFO - Started process (PID=63759) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:15:53,962] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:15:53,962] {logging_mixin.py:103} INFO - [2021-02-10 09:15:53,962] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:15:59,198] {logging_mixin.py:103} INFO - [2021-02-10 09:15:59,197] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:15:59,793] {logging_mixin.py:103} INFO - [2021-02-10 09:15:59,793] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:16:00,432] {logging_mixin.py:103} INFO - [2021-02-10 09:16:00,432] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:16:00,432] {logging_mixin.py:103} INFO - [2021-02-10 09:16:00,432] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:16:00,432] {logging_mixin.py:103} INFO - [2021-02-10 09:16:00,432] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:16:02,019] {logging_mixin.py:103} INFO - [2021-02-10 09:16:02,019] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:16:02,167] {logging_mixin.py:103} INFO - [2021-02-10 09:16:02,167] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:02,169] {logging_mixin.py:103} INFO - [2021-02-10 09:16:02,169] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:16:02,313] {logging_mixin.py:103} INFO - [2021-02-10 09:16:02,313] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:02,313] {logging_mixin.py:103} INFO - [2021-02-10 09:16:02,313] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:16:02,453] {logging_mixin.py:103} INFO - [2021-02-10 09:16:02,453] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:02,456] {logging_mixin.py:103} INFO - [2021-02-10 09:16:02,455] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:16:02,644] {logging_mixin.py:103} INFO - [2021-02-10 09:16:02,644] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:03,014] {logging_mixin.py:103} INFO - [2021-02-10 09:16:03,014] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:16:03,158] {logging_mixin.py:103} INFO - [2021-02-10 09:16:03,158] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:03,219] {logging_mixin.py:103} INFO - [2021-02-10 09:16:03,219] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:16:03,220] {logging_mixin.py:103} INFO - [2021-02-10 09:16:03,220] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:16:05,398] {logging_mixin.py:103} INFO - [2021-02-10 09:16:05,398] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:05,402] {logging_mixin.py:103} INFO - [2021-02-10 09:16:05,401] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:16:05,414] {logging_mixin.py:103} INFO - [2021-02-10 09:16:05,414] {data_context.py:1281} INFO - Setting run_name to: 20210210T081605.414593Z
[2021-02-10 09:16:05,416] {logging_mixin.py:103} INFO - [2021-02-10 09:16:05,416] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:16:05,433] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:16:05,433] {logging_mixin.py:103} INFO - False
[2021-02-10 09:16:05,436] {logging_mixin.py:103} INFO - [2021-02-10 09:16:05,436] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:16:06,013] {logging_mixin.py:103} INFO - [2021-02-10 09:16:06,012] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:06,013] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:16:06,013] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:16:06,014] {logging_mixin.py:103} INFO - [2021-02-10 09:16:06,014] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:16:06,936] {logging_mixin.py:103} INFO - [2021-02-10 09:16:06,936] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:06,936] {logging_mixin.py:103} INFO - [2021-02-10 09:16:06,936] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:16:06,938] {logging_mixin.py:103} INFO - [2021-02-10 09:16:06,938] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:16:07,108] {logging_mixin.py:103} INFO - [2021-02-10 09:16:07,108] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:07,110] {logging_mixin.py:103} INFO - [2021-02-10 09:16:07,110] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:16:07,285] {logging_mixin.py:103} INFO - [2021-02-10 09:16:07,285] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:07,287] {logging_mixin.py:103} INFO - [2021-02-10 09:16:07,287] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:16:07,478] {logging_mixin.py:103} INFO - [2021-02-10 09:16:07,478] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:07,478] {logging_mixin.py:103} INFO - [2021-02-10 09:16:07,478] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:16:07,495] {logging_mixin.py:103} INFO - [2021-02-10 09:16:07,495] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:16:07,497] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:16:07,497] {logging_mixin.py:103} INFO - False
[2021-02-10 09:16:07,499] {logging_mixin.py:103} INFO - [2021-02-10 09:16:07,499] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:16:07,657] {logging_mixin.py:103} INFO - [2021-02-10 09:16:07,657] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:07,658] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:16:07,658] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:16:07,659] {logging_mixin.py:103} INFO - [2021-02-10 09:16:07,659] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:16:07,819] {logging_mixin.py:103} INFO - [2021-02-10 09:16:07,819] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:07,819] {logging_mixin.py:103} INFO - [2021-02-10 09:16:07,819] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:16:07,823] {logging_mixin.py:103} INFO - [2021-02-10 09:16:07,823] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:16:07,970] {logging_mixin.py:103} INFO - [2021-02-10 09:16:07,970] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:07,972] {logging_mixin.py:103} INFO - [2021-02-10 09:16:07,972] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:16:08,126] {logging_mixin.py:103} INFO - [2021-02-10 09:16:08,126] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:08,128] {logging_mixin.py:103} INFO - [2021-02-10 09:16:08,128] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:16:08,298] {logging_mixin.py:103} INFO - [2021-02-10 09:16:08,298] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:08,300] {logging_mixin.py:103} INFO - [2021-02-10 09:16:08,300] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:16:08,587] {logging_mixin.py:103} INFO - [2021-02-10 09:16:08,587] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:08,588] {logging_mixin.py:103} INFO - [2021-02-10 09:16:08,588] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:16:08,592] {logging_mixin.py:103} INFO - [2021-02-10 09:16:08,591] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:16:08,778] {logging_mixin.py:103} INFO - [2021-02-10 09:16:08,778] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:08,781] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:16:08,781] {logging_mixin.py:103} INFO - False
[2021-02-10 09:16:08,784] {logging_mixin.py:103} INFO - [2021-02-10 09:16:08,783] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:16:08,949] {logging_mixin.py:103} INFO - [2021-02-10 09:16:08,948] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:08,949] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:16:08,949] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:16:08,950] {logging_mixin.py:103} INFO - [2021-02-10 09:16:08,950] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:16:09,094] {logging_mixin.py:103} INFO - [2021-02-10 09:16:09,094] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:09,095] {logging_mixin.py:103} INFO - [2021-02-10 09:16:09,095] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:16:09,096] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:16:09,096] {logging_mixin.py:103} INFO - False
[2021-02-10 09:16:09,099] {logging_mixin.py:103} INFO - [2021-02-10 09:16:09,099] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:16:09,305] {logging_mixin.py:103} INFO - [2021-02-10 09:16:09,305] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:09,306] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:16:09,306] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:16:09,308] {logging_mixin.py:103} INFO - [2021-02-10 09:16:09,308] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:16:09,490] {logging_mixin.py:103} INFO - [2021-02-10 09:16:09,490] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:09,491] {logging_mixin.py:103} INFO - [2021-02-10 09:16:09,490] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:16:09,491] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:16:09,491] {logging_mixin.py:103} INFO - False
[2021-02-10 09:16:09,493] {logging_mixin.py:103} INFO - [2021-02-10 09:16:09,493] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:16:09,647] {logging_mixin.py:103} INFO - [2021-02-10 09:16:09,647] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:09,648] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:16:09,648] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:16:09,650] {logging_mixin.py:103} INFO - [2021-02-10 09:16:09,649] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:16:09,801] {logging_mixin.py:103} INFO - [2021-02-10 09:16:09,801] {cursor.py:560} INFO - query execution done
[2021-02-10 09:16:09,802] {logging_mixin.py:103} INFO - [2021-02-10 09:16:09,802] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:16:18,746] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:17:07,849] {scheduler_job.py:181} INFO - Started process (PID=63831) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:17:07,850] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:17:07,852] {logging_mixin.py:103} INFO - [2021-02-10 09:17:07,852] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:17:12,166] {logging_mixin.py:103} INFO - [2021-02-10 09:17:12,165] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:17:12,941] {logging_mixin.py:103} INFO - [2021-02-10 09:17:12,941] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:17:13,690] {logging_mixin.py:103} INFO - [2021-02-10 09:17:13,690] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:17:13,691] {logging_mixin.py:103} INFO - [2021-02-10 09:17:13,691] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:17:13,691] {logging_mixin.py:103} INFO - [2021-02-10 09:17:13,691] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:17:16,065] {logging_mixin.py:103} INFO - [2021-02-10 09:17:16,065] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:17:16,261] {logging_mixin.py:103} INFO - [2021-02-10 09:17:16,261] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:16,265] {logging_mixin.py:103} INFO - [2021-02-10 09:17:16,265] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:17:16,451] {logging_mixin.py:103} INFO - [2021-02-10 09:17:16,451] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:16,451] {logging_mixin.py:103} INFO - [2021-02-10 09:17:16,451] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:17:16,590] {logging_mixin.py:103} INFO - [2021-02-10 09:17:16,589] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:16,592] {logging_mixin.py:103} INFO - [2021-02-10 09:17:16,592] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:17:16,766] {logging_mixin.py:103} INFO - [2021-02-10 09:17:16,765] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:17,115] {logging_mixin.py:103} INFO - [2021-02-10 09:17:17,115] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:17:17,281] {logging_mixin.py:103} INFO - [2021-02-10 09:17:17,281] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:17,375] {logging_mixin.py:103} INFO - [2021-02-10 09:17:17,375] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:17:17,376] {logging_mixin.py:103} INFO - [2021-02-10 09:17:17,376] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:17:18,950] {logging_mixin.py:103} INFO - [2021-02-10 09:17:18,950] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:18,955] {logging_mixin.py:103} INFO - [2021-02-10 09:17:18,955] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:17:18,978] {logging_mixin.py:103} INFO - [2021-02-10 09:17:18,978] {data_context.py:1281} INFO - Setting run_name to: 20210210T081718.978442Z
[2021-02-10 09:17:18,980] {logging_mixin.py:103} INFO - [2021-02-10 09:17:18,980] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:17:19,004] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:17:19,004] {logging_mixin.py:103} INFO - False
[2021-02-10 09:17:19,011] {logging_mixin.py:103} INFO - [2021-02-10 09:17:19,011] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:17:19,210] {logging_mixin.py:103} INFO - [2021-02-10 09:17:19,210] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:19,212] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:17:19,212] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:17:19,213] {logging_mixin.py:103} INFO - [2021-02-10 09:17:19,213] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:17:19,888] {logging_mixin.py:103} INFO - [2021-02-10 09:17:19,888] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:19,888] {logging_mixin.py:103} INFO - [2021-02-10 09:17:19,888] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:17:19,891] {logging_mixin.py:103} INFO - [2021-02-10 09:17:19,891] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:17:20,054] {logging_mixin.py:103} INFO - [2021-02-10 09:17:20,054] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:20,056] {logging_mixin.py:103} INFO - [2021-02-10 09:17:20,056] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:17:20,241] {logging_mixin.py:103} INFO - [2021-02-10 09:17:20,240] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:20,243] {logging_mixin.py:103} INFO - [2021-02-10 09:17:20,242] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:17:20,418] {logging_mixin.py:103} INFO - [2021-02-10 09:17:20,418] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:20,419] {logging_mixin.py:103} INFO - [2021-02-10 09:17:20,419] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:17:20,436] {logging_mixin.py:103} INFO - [2021-02-10 09:17:20,436] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:17:20,438] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:17:20,439] {logging_mixin.py:103} INFO - False
[2021-02-10 09:17:20,441] {logging_mixin.py:103} INFO - [2021-02-10 09:17:20,441] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:17:20,600] {logging_mixin.py:103} INFO - [2021-02-10 09:17:20,600] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:20,601] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:17:20,601] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:17:20,603] {logging_mixin.py:103} INFO - [2021-02-10 09:17:20,603] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:17:20,847] {logging_mixin.py:103} INFO - [2021-02-10 09:17:20,847] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:20,848] {logging_mixin.py:103} INFO - [2021-02-10 09:17:20,847] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:17:20,850] {logging_mixin.py:103} INFO - [2021-02-10 09:17:20,850] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:17:21,588] {logging_mixin.py:103} INFO - [2021-02-10 09:17:21,588] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:21,593] {logging_mixin.py:103} INFO - [2021-02-10 09:17:21,592] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:17:21,741] {logging_mixin.py:103} INFO - [2021-02-10 09:17:21,740] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:21,744] {logging_mixin.py:103} INFO - [2021-02-10 09:17:21,744] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:17:21,921] {logging_mixin.py:103} INFO - [2021-02-10 09:17:21,921] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:21,924] {logging_mixin.py:103} INFO - [2021-02-10 09:17:21,924] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:17:22,087] {logging_mixin.py:103} INFO - [2021-02-10 09:17:22,087] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:22,087] {logging_mixin.py:103} INFO - [2021-02-10 09:17:22,087] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:17:22,092] {logging_mixin.py:103} INFO - [2021-02-10 09:17:22,092] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:17:22,270] {logging_mixin.py:103} INFO - [2021-02-10 09:17:22,270] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:22,276] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:17:22,276] {logging_mixin.py:103} INFO - False
[2021-02-10 09:17:22,279] {logging_mixin.py:103} INFO - [2021-02-10 09:17:22,278] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:17:22,437] {logging_mixin.py:103} INFO - [2021-02-10 09:17:22,437] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:22,438] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:17:22,438] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:17:22,441] {logging_mixin.py:103} INFO - [2021-02-10 09:17:22,440] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:17:22,586] {logging_mixin.py:103} INFO - [2021-02-10 09:17:22,586] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:22,587] {logging_mixin.py:103} INFO - [2021-02-10 09:17:22,587] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:17:22,588] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:17:22,588] {logging_mixin.py:103} INFO - False
[2021-02-10 09:17:22,591] {logging_mixin.py:103} INFO - [2021-02-10 09:17:22,591] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:17:22,772] {logging_mixin.py:103} INFO - [2021-02-10 09:17:22,772] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:22,774] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:17:22,774] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:17:22,775] {logging_mixin.py:103} INFO - [2021-02-10 09:17:22,775] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:17:22,923] {logging_mixin.py:103} INFO - [2021-02-10 09:17:22,922] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:22,923] {logging_mixin.py:103} INFO - [2021-02-10 09:17:22,923] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:17:22,924] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:17:22,924] {logging_mixin.py:103} INFO - False
[2021-02-10 09:17:22,927] {logging_mixin.py:103} INFO - [2021-02-10 09:17:22,927] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:17:23,092] {logging_mixin.py:103} INFO - [2021-02-10 09:17:23,092] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:23,093] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:17:23,093] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:17:23,094] {logging_mixin.py:103} INFO - [2021-02-10 09:17:23,094] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:17:23,276] {logging_mixin.py:103} INFO - [2021-02-10 09:17:23,276] {cursor.py:560} INFO - query execution done
[2021-02-10 09:17:23,277] {logging_mixin.py:103} INFO - [2021-02-10 09:17:23,276] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:17:36,171] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:18:11,245] {scheduler_job.py:181} INFO - Started process (PID=63893) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:18:11,246] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:18:11,246] {logging_mixin.py:103} INFO - [2021-02-10 09:18:11,246] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:18:13,942] {logging_mixin.py:103} INFO - [2021-02-10 09:18:13,942] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:18:14,354] {logging_mixin.py:103} INFO - [2021-02-10 09:18:14,354] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:18:14,805] {logging_mixin.py:103} INFO - [2021-02-10 09:18:14,805] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:18:14,806] {logging_mixin.py:103} INFO - [2021-02-10 09:18:14,805] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:18:14,806] {logging_mixin.py:103} INFO - [2021-02-10 09:18:14,806] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:18:16,075] {logging_mixin.py:103} INFO - [2021-02-10 09:18:16,075] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:18:16,239] {logging_mixin.py:103} INFO - [2021-02-10 09:18:16,239] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:16,240] {logging_mixin.py:103} INFO - [2021-02-10 09:18:16,240] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:18:16,393] {logging_mixin.py:103} INFO - [2021-02-10 09:18:16,393] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:16,393] {logging_mixin.py:103} INFO - [2021-02-10 09:18:16,393] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:18:16,540] {logging_mixin.py:103} INFO - [2021-02-10 09:18:16,540] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:16,543] {logging_mixin.py:103} INFO - [2021-02-10 09:18:16,543] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:18:16,708] {logging_mixin.py:103} INFO - [2021-02-10 09:18:16,708] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:17,091] {logging_mixin.py:103} INFO - [2021-02-10 09:18:17,091] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:18:17,441] {logging_mixin.py:103} INFO - [2021-02-10 09:18:17,441] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:17,559] {logging_mixin.py:103} INFO - [2021-02-10 09:18:17,559] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:18:17,561] {logging_mixin.py:103} INFO - [2021-02-10 09:18:17,560] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:18:18,911] {logging_mixin.py:103} INFO - [2021-02-10 09:18:18,910] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:18,914] {logging_mixin.py:103} INFO - [2021-02-10 09:18:18,913] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:18:18,928] {logging_mixin.py:103} INFO - [2021-02-10 09:18:18,928] {data_context.py:1281} INFO - Setting run_name to: 20210210T081818.928489Z
[2021-02-10 09:18:18,929] {logging_mixin.py:103} INFO - [2021-02-10 09:18:18,929] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:18:18,942] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:18:18,942] {logging_mixin.py:103} INFO - False
[2021-02-10 09:18:18,946] {logging_mixin.py:103} INFO - [2021-02-10 09:18:18,946] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:18:19,134] {logging_mixin.py:103} INFO - [2021-02-10 09:18:19,134] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:19,134] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:18:19,135] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:18:19,135] {logging_mixin.py:103} INFO - [2021-02-10 09:18:19,135] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:18:19,289] {logging_mixin.py:103} INFO - [2021-02-10 09:18:19,288] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:19,289] {logging_mixin.py:103} INFO - [2021-02-10 09:18:19,289] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:18:19,290] {logging_mixin.py:103} INFO - [2021-02-10 09:18:19,290] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:18:19,472] {logging_mixin.py:103} INFO - [2021-02-10 09:18:19,472] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:19,475] {logging_mixin.py:103} INFO - [2021-02-10 09:18:19,475] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:18:19,693] {logging_mixin.py:103} INFO - [2021-02-10 09:18:19,693] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:19,696] {logging_mixin.py:103} INFO - [2021-02-10 09:18:19,696] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:18:19,876] {logging_mixin.py:103} INFO - [2021-02-10 09:18:19,876] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:19,877] {logging_mixin.py:103} INFO - [2021-02-10 09:18:19,877] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:18:19,889] {logging_mixin.py:103} INFO - [2021-02-10 09:18:19,889] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:18:19,890] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:18:19,891] {logging_mixin.py:103} INFO - False
[2021-02-10 09:18:19,894] {logging_mixin.py:103} INFO - [2021-02-10 09:18:19,894] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:18:20,096] {logging_mixin.py:103} INFO - [2021-02-10 09:18:20,095] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:20,096] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:18:20,096] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:18:20,097] {logging_mixin.py:103} INFO - [2021-02-10 09:18:20,097] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:18:20,320] {logging_mixin.py:103} INFO - [2021-02-10 09:18:20,320] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:20,321] {logging_mixin.py:103} INFO - [2021-02-10 09:18:20,320] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:18:20,322] {logging_mixin.py:103} INFO - [2021-02-10 09:18:20,322] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:18:20,520] {logging_mixin.py:103} INFO - [2021-02-10 09:18:20,520] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:20,521] {logging_mixin.py:103} INFO - [2021-02-10 09:18:20,521] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:18:20,660] {logging_mixin.py:103} INFO - [2021-02-10 09:18:20,660] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:20,662] {logging_mixin.py:103} INFO - [2021-02-10 09:18:20,662] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:18:20,861] {logging_mixin.py:103} INFO - [2021-02-10 09:18:20,861] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:20,862] {logging_mixin.py:103} INFO - [2021-02-10 09:18:20,862] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:18:21,008] {logging_mixin.py:103} INFO - [2021-02-10 09:18:21,008] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:21,008] {logging_mixin.py:103} INFO - [2021-02-10 09:18:21,008] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:18:21,011] {logging_mixin.py:103} INFO - [2021-02-10 09:18:21,011] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:18:21,311] {logging_mixin.py:103} INFO - [2021-02-10 09:18:21,310] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:21,313] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:18:21,313] {logging_mixin.py:103} INFO - False
[2021-02-10 09:18:21,315] {logging_mixin.py:103} INFO - [2021-02-10 09:18:21,315] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:18:21,521] {logging_mixin.py:103} INFO - [2021-02-10 09:18:21,521] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:21,522] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:18:21,522] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:18:21,523] {logging_mixin.py:103} INFO - [2021-02-10 09:18:21,523] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:18:21,784] {logging_mixin.py:103} INFO - [2021-02-10 09:18:21,784] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:21,784] {logging_mixin.py:103} INFO - [2021-02-10 09:18:21,784] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:18:21,785] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:18:21,785] {logging_mixin.py:103} INFO - False
[2021-02-10 09:18:21,787] {logging_mixin.py:103} INFO - [2021-02-10 09:18:21,787] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:18:21,993] {logging_mixin.py:103} INFO - [2021-02-10 09:18:21,993] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:21,994] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:18:21,994] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:18:21,995] {logging_mixin.py:103} INFO - [2021-02-10 09:18:21,995] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:18:22,140] {logging_mixin.py:103} INFO - [2021-02-10 09:18:22,140] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:22,140] {logging_mixin.py:103} INFO - [2021-02-10 09:18:22,140] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:18:22,141] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:18:22,141] {logging_mixin.py:103} INFO - False
[2021-02-10 09:18:22,143] {logging_mixin.py:103} INFO - [2021-02-10 09:18:22,143] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:18:23,026] {logging_mixin.py:103} INFO - [2021-02-10 09:18:23,026] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:23,027] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:18:23,027] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:18:23,028] {logging_mixin.py:103} INFO - [2021-02-10 09:18:23,028] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:18:23,194] {logging_mixin.py:103} INFO - [2021-02-10 09:18:23,194] {cursor.py:560} INFO - query execution done
[2021-02-10 09:18:23,195] {logging_mixin.py:103} INFO - [2021-02-10 09:18:23,195] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:18:34,856] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:19:20,152] {scheduler_job.py:181} INFO - Started process (PID=63985) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:19:20,153] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:19:20,154] {logging_mixin.py:103} INFO - [2021-02-10 09:19:20,154] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:19:25,288] {logging_mixin.py:103} INFO - [2021-02-10 09:19:25,287] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:19:26,288] {logging_mixin.py:103} INFO - [2021-02-10 09:19:26,288] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:19:27,150] {logging_mixin.py:103} INFO - [2021-02-10 09:19:27,150] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:19:27,150] {logging_mixin.py:103} INFO - [2021-02-10 09:19:27,150] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:19:27,150] {logging_mixin.py:103} INFO - [2021-02-10 09:19:27,150] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:19:28,462] {logging_mixin.py:103} INFO - [2021-02-10 09:19:28,462] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:19:28,607] {logging_mixin.py:103} INFO - [2021-02-10 09:19:28,607] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:28,609] {logging_mixin.py:103} INFO - [2021-02-10 09:19:28,608] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:19:28,796] {logging_mixin.py:103} INFO - [2021-02-10 09:19:28,796] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:28,797] {logging_mixin.py:103} INFO - [2021-02-10 09:19:28,797] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:19:28,936] {logging_mixin.py:103} INFO - [2021-02-10 09:19:28,936] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:28,938] {logging_mixin.py:103} INFO - [2021-02-10 09:19:28,938] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:19:29,070] {logging_mixin.py:103} INFO - [2021-02-10 09:19:29,069] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:29,434] {logging_mixin.py:103} INFO - [2021-02-10 09:19:29,433] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:19:29,605] {logging_mixin.py:103} INFO - [2021-02-10 09:19:29,605] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:29,655] {logging_mixin.py:103} INFO - [2021-02-10 09:19:29,654] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:19:29,655] {logging_mixin.py:103} INFO - [2021-02-10 09:19:29,655] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:19:31,842] {logging_mixin.py:103} INFO - [2021-02-10 09:19:31,842] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:31,844] {logging_mixin.py:103} INFO - [2021-02-10 09:19:31,844] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:19:31,854] {logging_mixin.py:103} INFO - [2021-02-10 09:19:31,854] {data_context.py:1281} INFO - Setting run_name to: 20210210T081931.854434Z
[2021-02-10 09:19:31,856] {logging_mixin.py:103} INFO - [2021-02-10 09:19:31,856] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:19:31,866] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:19:31,866] {logging_mixin.py:103} INFO - False
[2021-02-10 09:19:31,868] {logging_mixin.py:103} INFO - [2021-02-10 09:19:31,868] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:19:32,068] {logging_mixin.py:103} INFO - [2021-02-10 09:19:32,067] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:32,068] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:19:32,068] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:19:32,069] {logging_mixin.py:103} INFO - [2021-02-10 09:19:32,069] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:19:32,246] {logging_mixin.py:103} INFO - [2021-02-10 09:19:32,246] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:32,246] {logging_mixin.py:103} INFO - [2021-02-10 09:19:32,246] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:19:32,248] {logging_mixin.py:103} INFO - [2021-02-10 09:19:32,248] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:19:32,420] {logging_mixin.py:103} INFO - [2021-02-10 09:19:32,420] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:32,422] {logging_mixin.py:103} INFO - [2021-02-10 09:19:32,422] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:19:32,572] {logging_mixin.py:103} INFO - [2021-02-10 09:19:32,572] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:32,573] {logging_mixin.py:103} INFO - [2021-02-10 09:19:32,573] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:19:32,718] {logging_mixin.py:103} INFO - [2021-02-10 09:19:32,718] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:32,718] {logging_mixin.py:103} INFO - [2021-02-10 09:19:32,718] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:19:32,727] {logging_mixin.py:103} INFO - [2021-02-10 09:19:32,727] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:19:32,728] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:19:32,728] {logging_mixin.py:103} INFO - False
[2021-02-10 09:19:32,730] {logging_mixin.py:103} INFO - [2021-02-10 09:19:32,730] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:19:32,887] {logging_mixin.py:103} INFO - [2021-02-10 09:19:32,887] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:32,887] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:19:32,887] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:19:32,888] {logging_mixin.py:103} INFO - [2021-02-10 09:19:32,888] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:19:33,056] {logging_mixin.py:103} INFO - [2021-02-10 09:19:33,056] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:33,057] {logging_mixin.py:103} INFO - [2021-02-10 09:19:33,057] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:19:33,058] {logging_mixin.py:103} INFO - [2021-02-10 09:19:33,058] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:19:33,221] {logging_mixin.py:103} INFO - [2021-02-10 09:19:33,221] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:33,223] {logging_mixin.py:103} INFO - [2021-02-10 09:19:33,222] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:19:33,364] {logging_mixin.py:103} INFO - [2021-02-10 09:19:33,364] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:33,366] {logging_mixin.py:103} INFO - [2021-02-10 09:19:33,366] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:19:33,515] {logging_mixin.py:103} INFO - [2021-02-10 09:19:33,515] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:33,516] {logging_mixin.py:103} INFO - [2021-02-10 09:19:33,516] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:19:33,684] {logging_mixin.py:103} INFO - [2021-02-10 09:19:33,684] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:33,684] {logging_mixin.py:103} INFO - [2021-02-10 09:19:33,684] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:19:33,687] {logging_mixin.py:103} INFO - [2021-02-10 09:19:33,686] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:19:33,850] {logging_mixin.py:103} INFO - [2021-02-10 09:19:33,850] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:33,852] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:19:33,852] {logging_mixin.py:103} INFO - False
[2021-02-10 09:19:33,853] {logging_mixin.py:103} INFO - [2021-02-10 09:19:33,853] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:19:34,048] {logging_mixin.py:103} INFO - [2021-02-10 09:19:34,048] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:34,049] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:19:34,049] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:19:34,050] {logging_mixin.py:103} INFO - [2021-02-10 09:19:34,050] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:19:34,250] {logging_mixin.py:103} INFO - [2021-02-10 09:19:34,250] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:34,251] {logging_mixin.py:103} INFO - [2021-02-10 09:19:34,251] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:19:34,252] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:19:34,252] {logging_mixin.py:103} INFO - False
[2021-02-10 09:19:34,255] {logging_mixin.py:103} INFO - [2021-02-10 09:19:34,255] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:19:34,409] {logging_mixin.py:103} INFO - [2021-02-10 09:19:34,409] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:34,410] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:19:34,411] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:19:34,412] {logging_mixin.py:103} INFO - [2021-02-10 09:19:34,412] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:19:34,564] {logging_mixin.py:103} INFO - [2021-02-10 09:19:34,563] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:34,564] {logging_mixin.py:103} INFO - [2021-02-10 09:19:34,564] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:19:34,564] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:19:34,565] {logging_mixin.py:103} INFO - False
[2021-02-10 09:19:34,566] {logging_mixin.py:103} INFO - [2021-02-10 09:19:34,566] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:19:34,731] {logging_mixin.py:103} INFO - [2021-02-10 09:19:34,731] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:34,731] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:19:34,732] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:19:34,732] {logging_mixin.py:103} INFO - [2021-02-10 09:19:34,732] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:19:34,869] {logging_mixin.py:103} INFO - [2021-02-10 09:19:34,869] {cursor.py:560} INFO - query execution done
[2021-02-10 09:19:34,869] {logging_mixin.py:103} INFO - [2021-02-10 09:19:34,869] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:19:42,438] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:20:20,962] {scheduler_job.py:181} INFO - Started process (PID=64064) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:20:20,964] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:20:20,964] {logging_mixin.py:103} INFO - [2021-02-10 09:20:20,964] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:20:24,840] {logging_mixin.py:103} INFO - [2021-02-10 09:20:24,839] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:20:25,613] {logging_mixin.py:103} INFO - [2021-02-10 09:20:25,613] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:20:26,275] {logging_mixin.py:103} INFO - [2021-02-10 09:20:26,275] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:20:26,275] {logging_mixin.py:103} INFO - [2021-02-10 09:20:26,275] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:20:26,275] {logging_mixin.py:103} INFO - [2021-02-10 09:20:26,275] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:20:27,681] {logging_mixin.py:103} INFO - [2021-02-10 09:20:27,681] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:20:27,834] {logging_mixin.py:103} INFO - [2021-02-10 09:20:27,834] {cursor.py:560} INFO - query execution done
[2021-02-10 09:20:27,836] {logging_mixin.py:103} INFO - [2021-02-10 09:20:27,836] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:20:28,036] {logging_mixin.py:103} INFO - [2021-02-10 09:20:28,036] {cursor.py:560} INFO - query execution done
[2021-02-10 09:20:28,037] {logging_mixin.py:103} INFO - [2021-02-10 09:20:28,037] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:20:28,189] {logging_mixin.py:103} INFO - [2021-02-10 09:20:28,189] {cursor.py:560} INFO - query execution done
[2021-02-10 09:20:28,191] {logging_mixin.py:103} INFO - [2021-02-10 09:20:28,191] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:20:28,367] {logging_mixin.py:103} INFO - [2021-02-10 09:20:28,367] {cursor.py:560} INFO - query execution done
[2021-02-10 09:20:28,706] {logging_mixin.py:103} INFO - [2021-02-10 09:20:28,706] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:20:28,859] {logging_mixin.py:103} INFO - [2021-02-10 09:20:28,859] {cursor.py:560} INFO - query execution done
[2021-02-10 09:20:28,921] {logging_mixin.py:103} INFO - [2021-02-10 09:20:28,921] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:20:28,921] {logging_mixin.py:103} INFO - [2021-02-10 09:20:28,921] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:20:30,526] {logging_mixin.py:103} INFO - [2021-02-10 09:20:30,526] {cursor.py:560} INFO - query execution done
[2021-02-10 09:20:30,530] {logging_mixin.py:103} INFO - [2021-02-10 09:20:30,530] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:20:30,548] {logging_mixin.py:103} INFO - [2021-02-10 09:20:30,547] {data_context.py:1281} INFO - Setting run_name to: 20210210T082030.547903Z
[2021-02-10 09:20:30,550] {logging_mixin.py:103} INFO - [2021-02-10 09:20:30,549] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:20:30,566] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:20:30,566] {logging_mixin.py:103} INFO - False
[2021-02-10 09:20:30,566] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7ff6173118b0>
[2021-02-10 09:20:30,570] {logging_mixin.py:103} INFO - [2021-02-10 09:20:30,569] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:20:30,751] {logging_mixin.py:103} INFO - [2021-02-10 09:20:30,751] {cursor.py:560} INFO - query execution done
[2021-02-10 09:20:30,753] {logging_mixin.py:103} INFO - [2021-02-10 09:20:30,753] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:20:31,015] {logging_mixin.py:103} INFO - [2021-02-10 09:20:31,015] {cursor.py:560} INFO - query execution done
[2021-02-10 09:20:31,017] {logging_mixin.py:103} INFO - [2021-02-10 09:20:31,017] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:20:31,182] {logging_mixin.py:103} INFO - [2021-02-10 09:20:31,181] {cursor.py:560} INFO - query execution done
[2021-02-10 09:20:31,182] {logging_mixin.py:103} INFO - [2021-02-10 09:20:31,182] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:20:31,200] {logging_mixin.py:103} INFO - [2021-02-10 09:20:31,200] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:20:31,201] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:20:31,201] {logging_mixin.py:103} INFO - False
[2021-02-10 09:20:31,201] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7ff6173118b0>
[2021-02-10 09:20:31,204] {logging_mixin.py:103} INFO - [2021-02-10 09:20:31,203] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:20:31,364] {logging_mixin.py:103} INFO - [2021-02-10 09:20:31,364] {cursor.py:560} INFO - query execution done
[2021-02-10 09:20:31,384] {logging_mixin.py:103} INFO - [2021-02-10 09:20:31,383] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:20:31,565] {logging_mixin.py:103} INFO - [2021-02-10 09:20:31,565] {cursor.py:560} INFO - query execution done
[2021-02-10 09:20:31,568] {logging_mixin.py:103} INFO - [2021-02-10 09:20:31,568] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:20:31,737] {logging_mixin.py:103} INFO - [2021-02-10 09:20:31,737] {cursor.py:560} INFO - query execution done
[2021-02-10 09:20:31,739] {logging_mixin.py:103} INFO - [2021-02-10 09:20:31,739] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:20:31,899] {logging_mixin.py:103} INFO - [2021-02-10 09:20:31,899] {cursor.py:560} INFO - query execution done
[2021-02-10 09:20:31,900] {logging_mixin.py:103} INFO - [2021-02-10 09:20:31,899] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:20:31,904] {logging_mixin.py:103} INFO - [2021-02-10 09:20:31,903] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:20:32,073] {logging_mixin.py:103} INFO - [2021-02-10 09:20:32,072] {cursor.py:560} INFO - query execution done
[2021-02-10 09:20:32,076] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:20:32,077] {logging_mixin.py:103} INFO - False
[2021-02-10 09:20:32,077] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7ff6173118b0>
[2021-02-10 09:20:32,078] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:20:32,078] {logging_mixin.py:103} INFO - False
[2021-02-10 09:20:32,078] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7ff6173118b0>
[2021-02-10 09:20:32,079] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:20:32,079] {logging_mixin.py:103} INFO - False
[2021-02-10 09:20:32,079] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7ff6173118b0>
[2021-02-10 09:20:45,157] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:21:22,273] {scheduler_job.py:181} INFO - Started process (PID=64141) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:21:22,274] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:21:22,274] {logging_mixin.py:103} INFO - [2021-02-10 09:21:22,274] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:21:25,179] {logging_mixin.py:103} INFO - [2021-02-10 09:21:25,178] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:21:25,588] {logging_mixin.py:103} INFO - [2021-02-10 09:21:25,588] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:21:26,013] {logging_mixin.py:103} INFO - [2021-02-10 09:21:26,013] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:21:26,014] {logging_mixin.py:103} INFO - [2021-02-10 09:21:26,014] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:21:26,014] {logging_mixin.py:103} INFO - [2021-02-10 09:21:26,014] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:21:27,353] {logging_mixin.py:103} INFO - [2021-02-10 09:21:27,352] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:21:27,578] {logging_mixin.py:103} INFO - [2021-02-10 09:21:27,578] {cursor.py:560} INFO - query execution done
[2021-02-10 09:21:27,579] {logging_mixin.py:103} INFO - [2021-02-10 09:21:27,579] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:21:27,768] {logging_mixin.py:103} INFO - [2021-02-10 09:21:27,768] {cursor.py:560} INFO - query execution done
[2021-02-10 09:21:27,769] {logging_mixin.py:103} INFO - [2021-02-10 09:21:27,769] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:21:27,912] {logging_mixin.py:103} INFO - [2021-02-10 09:21:27,912] {cursor.py:560} INFO - query execution done
[2021-02-10 09:21:27,913] {logging_mixin.py:103} INFO - [2021-02-10 09:21:27,913] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:21:28,048] {logging_mixin.py:103} INFO - [2021-02-10 09:21:28,048] {cursor.py:560} INFO - query execution done
[2021-02-10 09:21:28,319] {logging_mixin.py:103} INFO - [2021-02-10 09:21:28,319] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:21:29,509] {logging_mixin.py:103} INFO - [2021-02-10 09:21:29,509] {cursor.py:560} INFO - query execution done
[2021-02-10 09:21:29,558] {logging_mixin.py:103} INFO - [2021-02-10 09:21:29,557] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:21:29,558] {logging_mixin.py:103} INFO - [2021-02-10 09:21:29,558] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:21:31,061] {logging_mixin.py:103} INFO - [2021-02-10 09:21:31,060] {cursor.py:560} INFO - query execution done
[2021-02-10 09:21:31,064] {logging_mixin.py:103} INFO - [2021-02-10 09:21:31,064] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:21:31,076] {logging_mixin.py:103} INFO - [2021-02-10 09:21:31,075] {data_context.py:1281} INFO - Setting run_name to: 20210210T082131.075809Z
[2021-02-10 09:21:31,077] {logging_mixin.py:103} INFO - [2021-02-10 09:21:31,077] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:21:31,089] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:21:31,089] {logging_mixin.py:103} INFO - False
[2021-02-10 09:21:31,089] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7fbab59fa580>
[2021-02-10 09:21:31,092] {logging_mixin.py:103} INFO - [2021-02-10 09:21:31,092] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:21:31,251] {logging_mixin.py:103} INFO - [2021-02-10 09:21:31,251] {cursor.py:560} INFO - query execution done
[2021-02-10 09:21:31,253] {logging_mixin.py:103} INFO - [2021-02-10 09:21:31,253] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:21:31,413] {logging_mixin.py:103} INFO - [2021-02-10 09:21:31,412] {cursor.py:560} INFO - query execution done
[2021-02-10 09:21:31,414] {logging_mixin.py:103} INFO - [2021-02-10 09:21:31,414] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:21:31,567] {logging_mixin.py:103} INFO - [2021-02-10 09:21:31,567] {cursor.py:560} INFO - query execution done
[2021-02-10 09:21:31,567] {logging_mixin.py:103} INFO - [2021-02-10 09:21:31,567] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:21:31,581] {logging_mixin.py:103} INFO - [2021-02-10 09:21:31,581] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:21:31,582] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:21:31,582] {logging_mixin.py:103} INFO - False
[2021-02-10 09:21:31,582] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7fbab59fa580>
[2021-02-10 09:21:31,584] {logging_mixin.py:103} INFO - [2021-02-10 09:21:31,584] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:21:31,752] {logging_mixin.py:103} INFO - [2021-02-10 09:21:31,752] {cursor.py:560} INFO - query execution done
[2021-02-10 09:21:31,754] {logging_mixin.py:103} INFO - [2021-02-10 09:21:31,753] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:21:31,913] {logging_mixin.py:103} INFO - [2021-02-10 09:21:31,913] {cursor.py:560} INFO - query execution done
[2021-02-10 09:21:31,914] {logging_mixin.py:103} INFO - [2021-02-10 09:21:31,914] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:21:32,078] {logging_mixin.py:103} INFO - [2021-02-10 09:21:32,077] {cursor.py:560} INFO - query execution done
[2021-02-10 09:21:32,079] {logging_mixin.py:103} INFO - [2021-02-10 09:21:32,079] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:21:32,232] {logging_mixin.py:103} INFO - [2021-02-10 09:21:32,232] {cursor.py:560} INFO - query execution done
[2021-02-10 09:21:32,233] {logging_mixin.py:103} INFO - [2021-02-10 09:21:32,232] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:21:32,235] {logging_mixin.py:103} INFO - [2021-02-10 09:21:32,235] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:21:32,393] {logging_mixin.py:103} INFO - [2021-02-10 09:21:32,393] {cursor.py:560} INFO - query execution done
[2021-02-10 09:21:32,396] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:21:32,396] {logging_mixin.py:103} INFO - False
[2021-02-10 09:21:32,396] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7fbab59fa580>
[2021-02-10 09:21:32,396] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:21:32,396] {logging_mixin.py:103} INFO - False
[2021-02-10 09:21:32,397] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7fbab59fa580>
[2021-02-10 09:21:32,397] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:21:32,397] {logging_mixin.py:103} INFO - False
[2021-02-10 09:21:32,397] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7fbab59fa580>
[2021-02-10 09:21:39,152] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:22:23,432] {scheduler_job.py:181} INFO - Started process (PID=64221) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:22:23,433] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:22:23,434] {logging_mixin.py:103} INFO - [2021-02-10 09:22:23,434] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:22:26,769] {logging_mixin.py:103} INFO - [2021-02-10 09:22:26,768] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:22:27,428] {logging_mixin.py:103} INFO - [2021-02-10 09:22:27,428] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:22:28,031] {logging_mixin.py:103} INFO - [2021-02-10 09:22:28,031] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:22:28,032] {logging_mixin.py:103} INFO - [2021-02-10 09:22:28,032] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:22:28,033] {logging_mixin.py:103} INFO - [2021-02-10 09:22:28,032] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:22:29,711] {logging_mixin.py:103} INFO - [2021-02-10 09:22:29,711] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:22:29,979] {logging_mixin.py:103} INFO - [2021-02-10 09:22:29,979] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:29,980] {logging_mixin.py:103} INFO - [2021-02-10 09:22:29,980] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:22:30,203] {logging_mixin.py:103} INFO - [2021-02-10 09:22:30,203] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:30,204] {logging_mixin.py:103} INFO - [2021-02-10 09:22:30,204] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:22:30,339] {logging_mixin.py:103} INFO - [2021-02-10 09:22:30,339] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:30,341] {logging_mixin.py:103} INFO - [2021-02-10 09:22:30,341] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:22:30,664] {logging_mixin.py:103} INFO - [2021-02-10 09:22:30,664] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:30,941] {logging_mixin.py:103} INFO - [2021-02-10 09:22:30,941] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:22:31,079] {logging_mixin.py:103} INFO - [2021-02-10 09:22:31,079] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:31,124] {logging_mixin.py:103} INFO - [2021-02-10 09:22:31,124] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:22:31,124] {logging_mixin.py:103} INFO - [2021-02-10 09:22:31,124] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:22:32,788] {logging_mixin.py:103} INFO - [2021-02-10 09:22:32,788] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:32,790] {logging_mixin.py:103} INFO - [2021-02-10 09:22:32,790] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:22:32,799] {logging_mixin.py:103} INFO - [2021-02-10 09:22:32,799] {data_context.py:1281} INFO - Setting run_name to: 20210210T082232.799332Z
[2021-02-10 09:22:32,801] {logging_mixin.py:103} INFO - [2021-02-10 09:22:32,801] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:22:32,811] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:22:32,812] {logging_mixin.py:103} INFO - False
[2021-02-10 09:22:32,812] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7ffbdba85340>
[2021-02-10 09:22:32,812] {logging_mixin.py:103} INFO - vendor_id
[2021-02-10 09:22:32,813] {logging_mixin.py:103} INFO - [2021-02-10 09:22:32,813] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:22:32,993] {logging_mixin.py:103} INFO - [2021-02-10 09:22:32,993] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:32,993] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:22:32,993] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:22:32,994] {logging_mixin.py:103} INFO - [2021-02-10 09:22:32,994] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:22:33,152] {logging_mixin.py:103} INFO - [2021-02-10 09:22:33,152] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:33,153] {logging_mixin.py:103} INFO - [2021-02-10 09:22:33,153] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:22:33,154] {logging_mixin.py:103} INFO - [2021-02-10 09:22:33,154] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:22:33,290] {logging_mixin.py:103} INFO - [2021-02-10 09:22:33,289] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:33,291] {logging_mixin.py:103} INFO - [2021-02-10 09:22:33,291] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:22:33,453] {logging_mixin.py:103} INFO - [2021-02-10 09:22:33,453] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:33,455] {logging_mixin.py:103} INFO - [2021-02-10 09:22:33,455] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:22:33,629] {logging_mixin.py:103} INFO - [2021-02-10 09:22:33,628] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:33,631] {logging_mixin.py:103} INFO - [2021-02-10 09:22:33,631] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:22:33,678] {logging_mixin.py:103} INFO - [2021-02-10 09:22:33,677] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:22:33,679] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:22:33,679] {logging_mixin.py:103} INFO - False
[2021-02-10 09:22:33,679] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7ffbdba85340>
[2021-02-10 09:22:33,680] {logging_mixin.py:103} INFO - trip_distance
[2021-02-10 09:22:33,682] {logging_mixin.py:103} INFO - [2021-02-10 09:22:33,682] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:22:33,834] {logging_mixin.py:103} INFO - [2021-02-10 09:22:33,834] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:33,835] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:22:33,835] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:22:33,836] {logging_mixin.py:103} INFO - [2021-02-10 09:22:33,836] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:22:33,969] {logging_mixin.py:103} INFO - [2021-02-10 09:22:33,969] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:33,970] {logging_mixin.py:103} INFO - [2021-02-10 09:22:33,970] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:22:33,972] {logging_mixin.py:103} INFO - [2021-02-10 09:22:33,971] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:22:34,121] {logging_mixin.py:103} INFO - [2021-02-10 09:22:34,121] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:34,122] {logging_mixin.py:103} INFO - [2021-02-10 09:22:34,122] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:22:34,271] {logging_mixin.py:103} INFO - [2021-02-10 09:22:34,271] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:34,273] {logging_mixin.py:103} INFO - [2021-02-10 09:22:34,273] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:22:34,450] {logging_mixin.py:103} INFO - [2021-02-10 09:22:34,450] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:34,451] {logging_mixin.py:103} INFO - [2021-02-10 09:22:34,451] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:22:34,716] {logging_mixin.py:103} INFO - [2021-02-10 09:22:34,716] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:34,717] {logging_mixin.py:103} INFO - [2021-02-10 09:22:34,717] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:22:34,720] {logging_mixin.py:103} INFO - [2021-02-10 09:22:34,720] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:22:34,868] {logging_mixin.py:103} INFO - [2021-02-10 09:22:34,868] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:34,872] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:22:34,872] {logging_mixin.py:103} INFO - False
[2021-02-10 09:22:34,872] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7ffbdba85340>
[2021-02-10 09:22:34,872] {logging_mixin.py:103} INFO - pickup_date
[2021-02-10 09:22:34,875] {logging_mixin.py:103} INFO - [2021-02-10 09:22:34,875] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:22:35,050] {logging_mixin.py:103} INFO - [2021-02-10 09:22:35,050] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:35,051] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:22:35,051] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:22:35,052] {logging_mixin.py:103} INFO - [2021-02-10 09:22:35,052] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:22:35,212] {logging_mixin.py:103} INFO - [2021-02-10 09:22:35,212] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:35,212] {logging_mixin.py:103} INFO - [2021-02-10 09:22:35,212] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:22:35,213] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:22:35,213] {logging_mixin.py:103} INFO - False
[2021-02-10 09:22:35,213] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7ffbdba85340>
[2021-02-10 09:22:35,213] {logging_mixin.py:103} INFO - pickup_date
[2021-02-10 09:22:35,215] {logging_mixin.py:103} INFO - [2021-02-10 09:22:35,215] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:22:35,369] {logging_mixin.py:103} INFO - [2021-02-10 09:22:35,369] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:35,370] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:22:35,370] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:22:35,371] {logging_mixin.py:103} INFO - [2021-02-10 09:22:35,371] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:22:35,517] {logging_mixin.py:103} INFO - [2021-02-10 09:22:35,516] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:35,517] {logging_mixin.py:103} INFO - [2021-02-10 09:22:35,517] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:22:35,518] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:22:35,518] {logging_mixin.py:103} INFO - False
[2021-02-10 09:22:35,518] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7ffbdba85340>
[2021-02-10 09:22:35,518] {logging_mixin.py:103} INFO - passenger_count
[2021-02-10 09:22:35,522] {logging_mixin.py:103} INFO - [2021-02-10 09:22:35,522] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:22:35,691] {logging_mixin.py:103} INFO - [2021-02-10 09:22:35,691] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:35,692] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:22:35,692] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:22:35,694] {logging_mixin.py:103} INFO - [2021-02-10 09:22:35,693] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:22:35,854] {logging_mixin.py:103} INFO - [2021-02-10 09:22:35,854] {cursor.py:560} INFO - query execution done
[2021-02-10 09:22:35,855] {logging_mixin.py:103} INFO - [2021-02-10 09:22:35,855] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:22:46,097] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:23:22,345] {scheduler_job.py:181} INFO - Started process (PID=64315) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:23:22,345] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:23:22,345] {logging_mixin.py:103} INFO - [2021-02-10 09:23:22,345] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:23:24,184] {logging_mixin.py:103} INFO - [2021-02-10 09:23:24,183] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:23:24,562] {logging_mixin.py:103} INFO - [2021-02-10 09:23:24,562] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:23:24,982] {logging_mixin.py:103} INFO - [2021-02-10 09:23:24,982] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:23:24,983] {logging_mixin.py:103} INFO - [2021-02-10 09:23:24,983] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:23:24,983] {logging_mixin.py:103} INFO - [2021-02-10 09:23:24,983] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:23:26,060] {logging_mixin.py:103} INFO - [2021-02-10 09:23:26,060] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:23:26,213] {logging_mixin.py:103} INFO - [2021-02-10 09:23:26,212] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:26,214] {logging_mixin.py:103} INFO - [2021-02-10 09:23:26,213] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:23:26,381] {logging_mixin.py:103} INFO - [2021-02-10 09:23:26,381] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:26,382] {logging_mixin.py:103} INFO - [2021-02-10 09:23:26,382] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:23:26,556] {logging_mixin.py:103} INFO - [2021-02-10 09:23:26,556] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:26,558] {logging_mixin.py:103} INFO - [2021-02-10 09:23:26,558] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:23:26,723] {logging_mixin.py:103} INFO - [2021-02-10 09:23:26,723] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:26,962] {logging_mixin.py:103} INFO - [2021-02-10 09:23:26,962] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:23:27,103] {logging_mixin.py:103} INFO - [2021-02-10 09:23:27,103] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:27,173] {logging_mixin.py:103} INFO - [2021-02-10 09:23:27,173] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:23:27,174] {logging_mixin.py:103} INFO - [2021-02-10 09:23:27,174] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:23:28,773] {logging_mixin.py:103} INFO - [2021-02-10 09:23:28,773] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:28,775] {logging_mixin.py:103} INFO - [2021-02-10 09:23:28,775] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:23:28,785] {logging_mixin.py:103} INFO - [2021-02-10 09:23:28,785] {data_context.py:1281} INFO - Setting run_name to: 20210210T082328.785594Z
[2021-02-10 09:23:28,787] {logging_mixin.py:103} INFO - [2021-02-10 09:23:28,787] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:23:28,796] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:23:28,796] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7fec5fc41b20>
[2021-02-10 09:23:28,796] {logging_mixin.py:103} INFO - vendor_id
[2021-02-10 09:23:28,798] {logging_mixin.py:103} INFO - [2021-02-10 09:23:28,798] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:23:28,949] {logging_mixin.py:103} INFO - [2021-02-10 09:23:28,949] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:28,949] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:23:28,949] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:23:28,950] {logging_mixin.py:103} INFO - [2021-02-10 09:23:28,950] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:23:29,084] {logging_mixin.py:103} INFO - [2021-02-10 09:23:29,084] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:29,085] {logging_mixin.py:103} INFO - [2021-02-10 09:23:29,085] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:23:29,096] {logging_mixin.py:103} INFO - [2021-02-10 09:23:29,096] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:23:29,301] {logging_mixin.py:103} INFO - [2021-02-10 09:23:29,301] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:29,304] {logging_mixin.py:103} INFO - [2021-02-10 09:23:29,304] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:23:29,469] {logging_mixin.py:103} INFO - [2021-02-10 09:23:29,468] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:29,471] {logging_mixin.py:103} INFO - [2021-02-10 09:23:29,471] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:23:29,636] {logging_mixin.py:103} INFO - [2021-02-10 09:23:29,635] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:29,636] {logging_mixin.py:103} INFO - [2021-02-10 09:23:29,636] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:23:29,645] {logging_mixin.py:103} INFO - [2021-02-10 09:23:29,645] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:23:29,646] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:23:29,647] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7fec5fc41b20>
[2021-02-10 09:23:29,648] {logging_mixin.py:103} INFO - trip_distance
[2021-02-10 09:23:29,651] {logging_mixin.py:103} INFO - [2021-02-10 09:23:29,651] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:23:29,848] {logging_mixin.py:103} INFO - [2021-02-10 09:23:29,848] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:29,849] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:23:29,849] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:23:29,850] {logging_mixin.py:103} INFO - [2021-02-10 09:23:29,850] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:23:29,985] {logging_mixin.py:103} INFO - [2021-02-10 09:23:29,985] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:29,986] {logging_mixin.py:103} INFO - [2021-02-10 09:23:29,986] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:23:29,988] {logging_mixin.py:103} INFO - [2021-02-10 09:23:29,988] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:23:30,133] {logging_mixin.py:103} INFO - [2021-02-10 09:23:30,133] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:30,135] {logging_mixin.py:103} INFO - [2021-02-10 09:23:30,135] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:23:30,347] {logging_mixin.py:103} INFO - [2021-02-10 09:23:30,347] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:30,349] {logging_mixin.py:103} INFO - [2021-02-10 09:23:30,349] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:23:30,498] {logging_mixin.py:103} INFO - [2021-02-10 09:23:30,498] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:30,500] {logging_mixin.py:103} INFO - [2021-02-10 09:23:30,500] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:23:30,662] {logging_mixin.py:103} INFO - [2021-02-10 09:23:30,662] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:30,662] {logging_mixin.py:103} INFO - [2021-02-10 09:23:30,662] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:23:30,665] {logging_mixin.py:103} INFO - [2021-02-10 09:23:30,665] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:23:30,853] {logging_mixin.py:103} INFO - [2021-02-10 09:23:30,853] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:30,859] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:23:30,859] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7fec5fc41b20>
[2021-02-10 09:23:30,859] {logging_mixin.py:103} INFO - pickup_date
[2021-02-10 09:23:30,861] {logging_mixin.py:103} INFO - [2021-02-10 09:23:30,861] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:23:31,038] {logging_mixin.py:103} INFO - [2021-02-10 09:23:31,038] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:31,039] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:23:31,039] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:23:31,040] {logging_mixin.py:103} INFO - [2021-02-10 09:23:31,040] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:23:31,205] {logging_mixin.py:103} INFO - [2021-02-10 09:23:31,205] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:31,205] {logging_mixin.py:103} INFO - [2021-02-10 09:23:31,205] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:23:31,205] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:23:31,206] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7fec5fc41b20>
[2021-02-10 09:23:31,206] {logging_mixin.py:103} INFO - pickup_date
[2021-02-10 09:23:31,207] {logging_mixin.py:103} INFO - [2021-02-10 09:23:31,207] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:23:31,387] {logging_mixin.py:103} INFO - [2021-02-10 09:23:31,387] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:31,391] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:23:31,391] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:23:31,392] {logging_mixin.py:103} INFO - [2021-02-10 09:23:31,392] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:23:31,559] {logging_mixin.py:103} INFO - [2021-02-10 09:23:31,559] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:31,560] {logging_mixin.py:103} INFO - [2021-02-10 09:23:31,560] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:23:31,560] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:23:31,560] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7fec5fc41b20>
[2021-02-10 09:23:31,560] {logging_mixin.py:103} INFO - passenger_count
[2021-02-10 09:23:31,562] {logging_mixin.py:103} INFO - [2021-02-10 09:23:31,562] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:23:31,738] {logging_mixin.py:103} INFO - [2021-02-10 09:23:31,737] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:31,738] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:23:31,738] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:23:31,739] {logging_mixin.py:103} INFO - [2021-02-10 09:23:31,739] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:23:31,909] {logging_mixin.py:103} INFO - [2021-02-10 09:23:31,909] {cursor.py:560} INFO - query execution done
[2021-02-10 09:23:31,910] {logging_mixin.py:103} INFO - [2021-02-10 09:23:31,909] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:23:39,655] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:24:07,675] {scheduler_job.py:181} INFO - Started process (PID=64384) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:24:07,675] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:24:07,676] {logging_mixin.py:103} INFO - [2021-02-10 09:24:07,675] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:24:10,168] {logging_mixin.py:103} INFO - [2021-02-10 09:24:10,168] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:24:10,626] {logging_mixin.py:103} INFO - [2021-02-10 09:24:10,626] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:24:11,290] {logging_mixin.py:103} INFO - [2021-02-10 09:24:11,290] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:24:11,291] {logging_mixin.py:103} INFO - [2021-02-10 09:24:11,291] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:24:11,292] {logging_mixin.py:103} INFO - [2021-02-10 09:24:11,292] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:24:12,259] {logging_mixin.py:103} INFO - [2021-02-10 09:24:12,259] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:24:12,532] {logging_mixin.py:103} INFO - [2021-02-10 09:24:12,532] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:12,535] {logging_mixin.py:103} INFO - [2021-02-10 09:24:12,535] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:24:12,796] {logging_mixin.py:103} INFO - [2021-02-10 09:24:12,796] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:12,797] {logging_mixin.py:103} INFO - [2021-02-10 09:24:12,797] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:24:13,249] {logging_mixin.py:103} INFO - [2021-02-10 09:24:13,248] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:13,250] {logging_mixin.py:103} INFO - [2021-02-10 09:24:13,250] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:24:13,386] {logging_mixin.py:103} INFO - [2021-02-10 09:24:13,386] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:13,623] {logging_mixin.py:103} INFO - [2021-02-10 09:24:13,623] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:24:13,770] {logging_mixin.py:103} INFO - [2021-02-10 09:24:13,770] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:13,817] {logging_mixin.py:103} INFO - [2021-02-10 09:24:13,817] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:24:13,817] {logging_mixin.py:103} INFO - [2021-02-10 09:24:13,817] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:24:15,403] {logging_mixin.py:103} INFO - [2021-02-10 09:24:15,403] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:15,407] {logging_mixin.py:103} INFO - [2021-02-10 09:24:15,406] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:24:15,417] {logging_mixin.py:103} INFO - [2021-02-10 09:24:15,417] {data_context.py:1281} INFO - Setting run_name to: 20210210T082415.417294Z
[2021-02-10 09:24:15,418] {logging_mixin.py:103} INFO - [2021-02-10 09:24:15,418] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:24:15,427] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:24:15,427] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7fb8e512b0d0>
[2021-02-10 09:24:15,427] {logging_mixin.py:103} INFO - vendor_id
[2021-02-10 09:24:15,429] {logging_mixin.py:103} INFO - [2021-02-10 09:24:15,429] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:24:15,585] {logging_mixin.py:103} INFO - [2021-02-10 09:24:15,585] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:15,586] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:24:15,586] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:24:15,588] {logging_mixin.py:103} INFO - [2021-02-10 09:24:15,588] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:24:15,755] {logging_mixin.py:103} INFO - [2021-02-10 09:24:15,755] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:15,756] {logging_mixin.py:103} INFO - [2021-02-10 09:24:15,756] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:24:15,758] {logging_mixin.py:103} INFO - [2021-02-10 09:24:15,758] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:24:15,940] {logging_mixin.py:103} INFO - [2021-02-10 09:24:15,940] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:15,943] {logging_mixin.py:103} INFO - [2021-02-10 09:24:15,943] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:24:16,099] {logging_mixin.py:103} INFO - [2021-02-10 09:24:16,099] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:16,102] {logging_mixin.py:103} INFO - [2021-02-10 09:24:16,102] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:24:16,257] {logging_mixin.py:103} INFO - [2021-02-10 09:24:16,257] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:16,258] {logging_mixin.py:103} INFO - [2021-02-10 09:24:16,257] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:24:16,266] {logging_mixin.py:103} INFO - [2021-02-10 09:24:16,266] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:24:16,267] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:24:16,267] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7fb8e512b0d0>
[2021-02-10 09:24:16,267] {logging_mixin.py:103} INFO - trip_distance
[2021-02-10 09:24:16,269] {logging_mixin.py:103} INFO - [2021-02-10 09:24:16,269] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:24:16,432] {logging_mixin.py:103} INFO - [2021-02-10 09:24:16,432] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:16,433] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:24:16,433] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:24:16,435] {logging_mixin.py:103} INFO - [2021-02-10 09:24:16,434] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:24:17,239] {logging_mixin.py:103} INFO - [2021-02-10 09:24:17,239] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:17,240] {logging_mixin.py:103} INFO - [2021-02-10 09:24:17,240] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:24:17,243] {logging_mixin.py:103} INFO - [2021-02-10 09:24:17,243] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:24:17,864] {logging_mixin.py:103} INFO - [2021-02-10 09:24:17,864] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:17,865] {logging_mixin.py:103} INFO - [2021-02-10 09:24:17,865] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:24:18,039] {logging_mixin.py:103} INFO - [2021-02-10 09:24:18,039] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:18,042] {logging_mixin.py:103} INFO - [2021-02-10 09:24:18,042] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:24:18,207] {logging_mixin.py:103} INFO - [2021-02-10 09:24:18,207] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:18,209] {logging_mixin.py:103} INFO - [2021-02-10 09:24:18,209] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:24:18,369] {logging_mixin.py:103} INFO - [2021-02-10 09:24:18,369] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:18,370] {logging_mixin.py:103} INFO - [2021-02-10 09:24:18,370] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:24:18,374] {logging_mixin.py:103} INFO - [2021-02-10 09:24:18,374] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:24:18,534] {logging_mixin.py:103} INFO - [2021-02-10 09:24:18,533] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:18,538] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:24:18,538] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7fb8e512b0d0>
[2021-02-10 09:24:18,538] {logging_mixin.py:103} INFO - pickup_date
[2021-02-10 09:24:18,540] {logging_mixin.py:103} INFO - [2021-02-10 09:24:18,540] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:24:18,715] {logging_mixin.py:103} INFO - [2021-02-10 09:24:18,715] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:18,717] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:24:18,717] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:24:18,719] {logging_mixin.py:103} INFO - [2021-02-10 09:24:18,719] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:24:18,944] {logging_mixin.py:103} INFO - [2021-02-10 09:24:18,944] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:18,945] {logging_mixin.py:103} INFO - [2021-02-10 09:24:18,945] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:24:18,946] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:24:18,946] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7fb8e512b0d0>
[2021-02-10 09:24:18,946] {logging_mixin.py:103} INFO - pickup_date
[2021-02-10 09:24:18,948] {logging_mixin.py:103} INFO - [2021-02-10 09:24:18,948] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:24:19,099] {logging_mixin.py:103} INFO - [2021-02-10 09:24:19,099] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:19,100] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:24:19,101] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:24:19,102] {logging_mixin.py:103} INFO - [2021-02-10 09:24:19,102] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:24:19,258] {logging_mixin.py:103} INFO - [2021-02-10 09:24:19,258] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:19,259] {logging_mixin.py:103} INFO - [2021-02-10 09:24:19,258] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:24:19,261] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:24:19,261] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7fb8e512b0d0>
[2021-02-10 09:24:19,262] {logging_mixin.py:103} INFO - passenger_count
[2021-02-10 09:24:19,264] {logging_mixin.py:103} INFO - [2021-02-10 09:24:19,264] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:24:19,462] {logging_mixin.py:103} INFO - [2021-02-10 09:24:19,461] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:19,463] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:24:19,463] {logging_mixin.py:103} INFO - SUMMARY
[2021-02-10 09:24:19,464] {logging_mixin.py:103} INFO - [2021-02-10 09:24:19,464] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:24:19,625] {logging_mixin.py:103} INFO - [2021-02-10 09:24:19,625] {cursor.py:560} INFO - query execution done
[2021-02-10 09:24:19,625] {logging_mixin.py:103} INFO - [2021-02-10 09:24:19,625] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:24:24,555] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:24:57,302] {scheduler_job.py:181} INFO - Started process (PID=64464) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:24:57,303] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:24:57,303] {logging_mixin.py:103} INFO - [2021-02-10 09:24:57,303] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:25:00,627] {logging_mixin.py:103} INFO - [2021-02-10 09:25:00,626] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:25:01,196] {logging_mixin.py:103} INFO - [2021-02-10 09:25:01,196] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:25:01,781] {logging_mixin.py:103} INFO - [2021-02-10 09:25:01,781] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:25:01,781] {logging_mixin.py:103} INFO - [2021-02-10 09:25:01,781] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:25:01,782] {logging_mixin.py:103} INFO - [2021-02-10 09:25:01,781] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:25:03,087] {logging_mixin.py:103} INFO - [2021-02-10 09:25:03,087] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:25:03,365] {logging_mixin.py:103} INFO - [2021-02-10 09:25:03,365] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:03,366] {logging_mixin.py:103} INFO - [2021-02-10 09:25:03,366] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:25:03,739] {logging_mixin.py:103} INFO - [2021-02-10 09:25:03,739] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:03,739] {logging_mixin.py:103} INFO - [2021-02-10 09:25:03,739] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:25:03,888] {logging_mixin.py:103} INFO - [2021-02-10 09:25:03,888] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:03,889] {logging_mixin.py:103} INFO - [2021-02-10 09:25:03,889] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:25:04,025] {logging_mixin.py:103} INFO - [2021-02-10 09:25:04,025] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:04,253] {logging_mixin.py:103} INFO - [2021-02-10 09:25:04,253] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:25:04,409] {logging_mixin.py:103} INFO - [2021-02-10 09:25:04,408] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:04,449] {logging_mixin.py:103} INFO - [2021-02-10 09:25:04,449] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:25:04,450] {logging_mixin.py:103} INFO - [2021-02-10 09:25:04,450] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:25:06,392] {logging_mixin.py:103} INFO - [2021-02-10 09:25:06,392] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:06,395] {logging_mixin.py:103} INFO - [2021-02-10 09:25:06,394] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:25:06,404] {logging_mixin.py:103} INFO - [2021-02-10 09:25:06,404] {data_context.py:1281} INFO - Setting run_name to: 20210210T082506.404513Z
[2021-02-10 09:25:06,405] {logging_mixin.py:103} INFO - [2021-02-10 09:25:06,405] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:25:06,415] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:25:06,415] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7fab8306f280>
[2021-02-10 09:25:06,415] {logging_mixin.py:103} INFO - vendor_id
[2021-02-10 09:25:06,416] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:25:06,418] {logging_mixin.py:103} INFO - [2021-02-10 09:25:06,418] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:25:06,604] {logging_mixin.py:103} INFO - [2021-02-10 09:25:06,603] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:06,604] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:25:06,606] {logging_mixin.py:103} INFO - [2021-02-10 09:25:06,606] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:25:06,811] {logging_mixin.py:103} INFO - [2021-02-10 09:25:06,811] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:06,812] {logging_mixin.py:103} INFO - [2021-02-10 09:25:06,812] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:25:06,813] {logging_mixin.py:103} INFO - [2021-02-10 09:25:06,813] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:25:07,316] {logging_mixin.py:103} INFO - [2021-02-10 09:25:07,316] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:07,320] {logging_mixin.py:103} INFO - [2021-02-10 09:25:07,320] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:25:07,559] {logging_mixin.py:103} INFO - [2021-02-10 09:25:07,558] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:07,562] {logging_mixin.py:103} INFO - [2021-02-10 09:25:07,562] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:25:07,848] {logging_mixin.py:103} INFO - [2021-02-10 09:25:07,847] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:07,849] {logging_mixin.py:103} INFO - [2021-02-10 09:25:07,848] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:25:07,868] {logging_mixin.py:103} INFO - [2021-02-10 09:25:07,867] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:25:07,870] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:25:07,870] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7fab8306f280>
[2021-02-10 09:25:07,870] {logging_mixin.py:103} INFO - trip_distance
[2021-02-10 09:25:07,870] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:25:07,873] {logging_mixin.py:103} INFO - [2021-02-10 09:25:07,873] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:25:08,740] {logging_mixin.py:103} INFO - [2021-02-10 09:25:08,740] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:08,741] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:25:08,743] {logging_mixin.py:103} INFO - [2021-02-10 09:25:08,742] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:25:09,270] {logging_mixin.py:103} INFO - [2021-02-10 09:25:09,270] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:09,270] {logging_mixin.py:103} INFO - [2021-02-10 09:25:09,270] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:25:09,272] {logging_mixin.py:103} INFO - [2021-02-10 09:25:09,272] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:25:09,520] {logging_mixin.py:103} INFO - [2021-02-10 09:25:09,520] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:09,522] {logging_mixin.py:103} INFO - [2021-02-10 09:25:09,522] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:25:09,688] {logging_mixin.py:103} INFO - [2021-02-10 09:25:09,688] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:09,692] {logging_mixin.py:103} INFO - [2021-02-10 09:25:09,692] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:25:09,840] {logging_mixin.py:103} INFO - [2021-02-10 09:25:09,840] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:09,842] {logging_mixin.py:103} INFO - [2021-02-10 09:25:09,841] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:25:10,261] {logging_mixin.py:103} INFO - [2021-02-10 09:25:10,261] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:10,262] {logging_mixin.py:103} INFO - [2021-02-10 09:25:10,262] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:25:10,267] {logging_mixin.py:103} INFO - [2021-02-10 09:25:10,267] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:25:10,438] {logging_mixin.py:103} INFO - [2021-02-10 09:25:10,438] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:10,446] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:25:10,446] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7fab8306f280>
[2021-02-10 09:25:10,446] {logging_mixin.py:103} INFO - pickup_date
[2021-02-10 09:25:10,446] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:25:10,448] {logging_mixin.py:103} INFO - [2021-02-10 09:25:10,448] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:25:11,002] {logging_mixin.py:103} INFO - [2021-02-10 09:25:11,001] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:11,003] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:25:11,004] {logging_mixin.py:103} INFO - [2021-02-10 09:25:11,004] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:25:11,244] {logging_mixin.py:103} INFO - [2021-02-10 09:25:11,244] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:11,245] {logging_mixin.py:103} INFO - [2021-02-10 09:25:11,245] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:25:11,246] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:25:11,246] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7fab8306f280>
[2021-02-10 09:25:11,246] {logging_mixin.py:103} INFO - pickup_date
[2021-02-10 09:25:11,248] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:25:11,250] {logging_mixin.py:103} INFO - [2021-02-10 09:25:11,250] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:25:11,427] {logging_mixin.py:103} INFO - [2021-02-10 09:25:11,427] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:11,428] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:25:11,429] {logging_mixin.py:103} INFO - [2021-02-10 09:25:11,429] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:25:11,635] {logging_mixin.py:103} INFO - [2021-02-10 09:25:11,634] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:11,635] {logging_mixin.py:103} INFO - [2021-02-10 09:25:11,635] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:25:11,636] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:25:11,636] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7fab8306f280>
[2021-02-10 09:25:11,637] {logging_mixin.py:103} INFO - passenger_count
[2021-02-10 09:25:11,638] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:25:11,640] {logging_mixin.py:103} INFO - [2021-02-10 09:25:11,640] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:25:11,800] {logging_mixin.py:103} INFO - [2021-02-10 09:25:11,800] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:11,801] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:25:11,802] {logging_mixin.py:103} INFO - [2021-02-10 09:25:11,802] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:25:11,968] {logging_mixin.py:103} INFO - [2021-02-10 09:25:11,968] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:11,969] {logging_mixin.py:103} INFO - [2021-02-10 09:25:11,968] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:25:16,386] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:25:48,904] {scheduler_job.py:181} INFO - Started process (PID=64527) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:25:48,905] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:25:48,905] {logging_mixin.py:103} INFO - [2021-02-10 09:25:48,905] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:25:50,939] {logging_mixin.py:103} INFO - [2021-02-10 09:25:50,939] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:25:51,272] {logging_mixin.py:103} INFO - [2021-02-10 09:25:51,272] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:25:51,639] {logging_mixin.py:103} INFO - [2021-02-10 09:25:51,638] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:25:51,639] {logging_mixin.py:103} INFO - [2021-02-10 09:25:51,639] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:25:51,639] {logging_mixin.py:103} INFO - [2021-02-10 09:25:51,639] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:25:52,490] {logging_mixin.py:103} INFO - [2021-02-10 09:25:52,490] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:25:52,708] {logging_mixin.py:103} INFO - [2021-02-10 09:25:52,708] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:52,710] {logging_mixin.py:103} INFO - [2021-02-10 09:25:52,709] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:25:52,845] {logging_mixin.py:103} INFO - [2021-02-10 09:25:52,845] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:52,846] {logging_mixin.py:103} INFO - [2021-02-10 09:25:52,846] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:25:52,998] {logging_mixin.py:103} INFO - [2021-02-10 09:25:52,998] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:52,999] {logging_mixin.py:103} INFO - [2021-02-10 09:25:52,999] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:25:53,136] {logging_mixin.py:103} INFO - [2021-02-10 09:25:53,136] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:53,359] {logging_mixin.py:103} INFO - [2021-02-10 09:25:53,359] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:25:53,503] {logging_mixin.py:103} INFO - [2021-02-10 09:25:53,503] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:53,545] {logging_mixin.py:103} INFO - [2021-02-10 09:25:53,545] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:25:53,545] {logging_mixin.py:103} INFO - [2021-02-10 09:25:53,545] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:25:54,742] {logging_mixin.py:103} INFO - [2021-02-10 09:25:54,742] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:54,746] {logging_mixin.py:103} INFO - [2021-02-10 09:25:54,746] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:25:54,757] {logging_mixin.py:103} INFO - [2021-02-10 09:25:54,757] {data_context.py:1281} INFO - Setting run_name to: 20210210T082554.757379Z
[2021-02-10 09:25:54,758] {logging_mixin.py:103} INFO - [2021-02-10 09:25:54,758] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:25:54,767] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:25:54,767] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7f9d092420d0>
[2021-02-10 09:25:54,767] {logging_mixin.py:103} INFO - vendor_id
[2021-02-10 09:25:54,768] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:25:54,769] {logging_mixin.py:103} INFO - [2021-02-10 09:25:54,769] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:25:54,925] {logging_mixin.py:103} INFO - [2021-02-10 09:25:54,925] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:54,927] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:25:54,928] {logging_mixin.py:103} INFO - [2021-02-10 09:25:54,928] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:25:55,547] {logging_mixin.py:103} INFO - [2021-02-10 09:25:55,547] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:55,548] {logging_mixin.py:103} INFO - [2021-02-10 09:25:55,548] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:25:55,550] {logging_mixin.py:103} INFO - [2021-02-10 09:25:55,550] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:25:55,709] {logging_mixin.py:103} INFO - [2021-02-10 09:25:55,709] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:55,712] {logging_mixin.py:103} INFO - [2021-02-10 09:25:55,711] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:25:55,935] {logging_mixin.py:103} INFO - [2021-02-10 09:25:55,935] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:55,939] {logging_mixin.py:103} INFO - [2021-02-10 09:25:55,939] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:25:56,098] {logging_mixin.py:103} INFO - [2021-02-10 09:25:56,098] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:56,099] {logging_mixin.py:103} INFO - [2021-02-10 09:25:56,099] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:25:56,111] {logging_mixin.py:103} INFO - [2021-02-10 09:25:56,111] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:25:56,112] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:25:56,112] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7f9d092420d0>
[2021-02-10 09:25:56,112] {logging_mixin.py:103} INFO - trip_distance
[2021-02-10 09:25:56,113] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:25:56,114] {logging_mixin.py:103} INFO - [2021-02-10 09:25:56,114] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:25:57,086] {logging_mixin.py:103} INFO - [2021-02-10 09:25:57,086] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:57,087] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:25:57,089] {logging_mixin.py:103} INFO - [2021-02-10 09:25:57,089] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:25:57,238] {logging_mixin.py:103} INFO - [2021-02-10 09:25:57,238] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:57,239] {logging_mixin.py:103} INFO - [2021-02-10 09:25:57,239] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:25:57,241] {logging_mixin.py:103} INFO - [2021-02-10 09:25:57,241] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:25:57,436] {logging_mixin.py:103} INFO - [2021-02-10 09:25:57,436] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:57,437] {logging_mixin.py:103} INFO - [2021-02-10 09:25:57,437] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:25:57,599] {logging_mixin.py:103} INFO - [2021-02-10 09:25:57,598] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:57,602] {logging_mixin.py:103} INFO - [2021-02-10 09:25:57,602] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:25:57,787] {logging_mixin.py:103} INFO - [2021-02-10 09:25:57,787] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:57,790] {logging_mixin.py:103} INFO - [2021-02-10 09:25:57,790] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:25:58,060] {logging_mixin.py:103} INFO - [2021-02-10 09:25:58,060] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:58,060] {logging_mixin.py:103} INFO - [2021-02-10 09:25:58,060] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:25:58,064] {logging_mixin.py:103} INFO - [2021-02-10 09:25:58,064] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:25:58,229] {logging_mixin.py:103} INFO - [2021-02-10 09:25:58,229] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:58,234] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:25:58,234] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7f9d092420d0>
[2021-02-10 09:25:58,234] {logging_mixin.py:103} INFO - pickup_date
[2021-02-10 09:25:58,234] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:25:58,236] {logging_mixin.py:103} INFO - [2021-02-10 09:25:58,236] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:25:58,388] {logging_mixin.py:103} INFO - [2021-02-10 09:25:58,388] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:58,389] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:25:58,390] {logging_mixin.py:103} INFO - [2021-02-10 09:25:58,390] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:25:58,573] {logging_mixin.py:103} INFO - [2021-02-10 09:25:58,573] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:58,574] {logging_mixin.py:103} INFO - [2021-02-10 09:25:58,574] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:25:58,575] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:25:58,575] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7f9d092420d0>
[2021-02-10 09:25:58,575] {logging_mixin.py:103} INFO - pickup_date
[2021-02-10 09:25:58,576] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:25:58,578] {logging_mixin.py:103} INFO - [2021-02-10 09:25:58,578] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:25:58,929] {logging_mixin.py:103} INFO - [2021-02-10 09:25:58,929] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:58,930] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:25:58,932] {logging_mixin.py:103} INFO - [2021-02-10 09:25:58,932] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:25:59,079] {logging_mixin.py:103} INFO - [2021-02-10 09:25:59,079] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:59,080] {logging_mixin.py:103} INFO - [2021-02-10 09:25:59,080] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:25:59,081] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:25:59,081] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7f9d092420d0>
[2021-02-10 09:25:59,081] {logging_mixin.py:103} INFO - passenger_count
[2021-02-10 09:25:59,082] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:25:59,085] {logging_mixin.py:103} INFO - [2021-02-10 09:25:59,085] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:25:59,240] {logging_mixin.py:103} INFO - [2021-02-10 09:25:59,239] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:59,241] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:25:59,242] {logging_mixin.py:103} INFO - [2021-02-10 09:25:59,242] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:25:59,503] {logging_mixin.py:103} INFO - [2021-02-10 09:25:59,502] {cursor.py:560} INFO - query execution done
[2021-02-10 09:25:59,503] {logging_mixin.py:103} INFO - [2021-02-10 09:25:59,503] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:26:03,772] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:26:32,155] {scheduler_job.py:181} INFO - Started process (PID=64585) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:26:32,155] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:26:32,155] {logging_mixin.py:103} INFO - [2021-02-10 09:26:32,155] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:26:34,146] {logging_mixin.py:103} INFO - [2021-02-10 09:26:34,146] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:26:34,494] {logging_mixin.py:103} INFO - [2021-02-10 09:26:34,494] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:26:35,129] {logging_mixin.py:103} INFO - [2021-02-10 09:26:35,129] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:26:35,130] {logging_mixin.py:103} INFO - [2021-02-10 09:26:35,130] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:26:35,130] {logging_mixin.py:103} INFO - [2021-02-10 09:26:35,130] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:26:36,287] {logging_mixin.py:103} INFO - [2021-02-10 09:26:36,287] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:26:36,485] {logging_mixin.py:103} INFO - [2021-02-10 09:26:36,485] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:36,487] {logging_mixin.py:103} INFO - [2021-02-10 09:26:36,487] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:26:36,663] {logging_mixin.py:103} INFO - [2021-02-10 09:26:36,663] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:36,664] {logging_mixin.py:103} INFO - [2021-02-10 09:26:36,664] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:26:36,822] {logging_mixin.py:103} INFO - [2021-02-10 09:26:36,822] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:36,825] {logging_mixin.py:103} INFO - [2021-02-10 09:26:36,825] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:26:37,099] {logging_mixin.py:103} INFO - [2021-02-10 09:26:37,099] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:37,305] {logging_mixin.py:103} INFO - [2021-02-10 09:26:37,305] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:26:37,459] {logging_mixin.py:103} INFO - [2021-02-10 09:26:37,459] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:37,494] {logging_mixin.py:103} INFO - [2021-02-10 09:26:37,494] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:26:37,495] {logging_mixin.py:103} INFO - [2021-02-10 09:26:37,494] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:26:38,735] {logging_mixin.py:103} INFO - [2021-02-10 09:26:38,735] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:38,737] {logging_mixin.py:103} INFO - [2021-02-10 09:26:38,737] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:26:38,744] {logging_mixin.py:103} INFO - [2021-02-10 09:26:38,744] {data_context.py:1281} INFO - Setting run_name to: 20210210T082638.744656Z
[2021-02-10 09:26:38,745] {logging_mixin.py:103} INFO - [2021-02-10 09:26:38,745] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:26:38,753] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:26:38,753] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7f810238b430>
[2021-02-10 09:26:38,754] {logging_mixin.py:103} INFO - vendor_id
[2021-02-10 09:26:38,754] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:26:38,755] {logging_mixin.py:103} INFO - [2021-02-10 09:26:38,755] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:26:38,931] {logging_mixin.py:103} INFO - [2021-02-10 09:26:38,930] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:38,931] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:26:38,932] {logging_mixin.py:103} INFO - [2021-02-10 09:26:38,932] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:26:39,174] {logging_mixin.py:103} INFO - [2021-02-10 09:26:39,174] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:39,174] {logging_mixin.py:103} INFO - [2021-02-10 09:26:39,174] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:26:39,175] {logging_mixin.py:103} INFO - [2021-02-10 09:26:39,175] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:26:39,431] {logging_mixin.py:103} INFO - [2021-02-10 09:26:39,431] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:39,432] {logging_mixin.py:103} INFO - [2021-02-10 09:26:39,432] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:26:39,624] {logging_mixin.py:103} INFO - [2021-02-10 09:26:39,624] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:39,625] {logging_mixin.py:103} INFO - [2021-02-10 09:26:39,625] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:26:39,819] {logging_mixin.py:103} INFO - [2021-02-10 09:26:39,819] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:39,819] {logging_mixin.py:103} INFO - [2021-02-10 09:26:39,819] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:26:39,827] {logging_mixin.py:103} INFO - [2021-02-10 09:26:39,827] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:26:39,828] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:26:39,828] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7f810238b430>
[2021-02-10 09:26:39,828] {logging_mixin.py:103} INFO - trip_distance
[2021-02-10 09:26:39,828] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:26:39,829] {logging_mixin.py:103} INFO - [2021-02-10 09:26:39,829] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:26:40,010] {logging_mixin.py:103} INFO - [2021-02-10 09:26:40,010] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:40,011] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:26:40,011] {logging_mixin.py:103} INFO - [2021-02-10 09:26:40,011] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:26:40,161] {logging_mixin.py:103} INFO - [2021-02-10 09:26:40,161] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:40,161] {logging_mixin.py:103} INFO - [2021-02-10 09:26:40,161] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:26:40,162] {logging_mixin.py:103} INFO - [2021-02-10 09:26:40,162] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:26:40,342] {logging_mixin.py:103} INFO - [2021-02-10 09:26:40,341] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:40,342] {logging_mixin.py:103} INFO - [2021-02-10 09:26:40,342] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:26:41,013] {logging_mixin.py:103} INFO - [2021-02-10 09:26:41,013] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:41,015] {logging_mixin.py:103} INFO - [2021-02-10 09:26:41,014] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:26:41,814] {logging_mixin.py:103} INFO - [2021-02-10 09:26:41,814] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:41,816] {logging_mixin.py:103} INFO - [2021-02-10 09:26:41,816] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:26:42,059] {logging_mixin.py:103} INFO - [2021-02-10 09:26:42,059] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:42,060] {logging_mixin.py:103} INFO - [2021-02-10 09:26:42,060] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:26:42,062] {logging_mixin.py:103} INFO - [2021-02-10 09:26:42,062] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:26:42,295] {logging_mixin.py:103} INFO - [2021-02-10 09:26:42,295] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:42,298] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:26:42,298] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7f810238b430>
[2021-02-10 09:26:42,298] {logging_mixin.py:103} INFO - pickup_date
[2021-02-10 09:26:42,299] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:26:42,303] {logging_mixin.py:103} INFO - [2021-02-10 09:26:42,303] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:26:42,465] {logging_mixin.py:103} INFO - [2021-02-10 09:26:42,465] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:42,465] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:26:42,466] {logging_mixin.py:103} INFO - [2021-02-10 09:26:42,466] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:26:42,610] {logging_mixin.py:103} INFO - [2021-02-10 09:26:42,610] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:42,610] {logging_mixin.py:103} INFO - [2021-02-10 09:26:42,610] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:26:42,611] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:26:42,611] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7f810238b430>
[2021-02-10 09:26:42,611] {logging_mixin.py:103} INFO - pickup_date
[2021-02-10 09:26:42,612] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:26:42,613] {logging_mixin.py:103} INFO - [2021-02-10 09:26:42,613] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:26:42,803] {logging_mixin.py:103} INFO - [2021-02-10 09:26:42,803] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:42,803] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:26:42,804] {logging_mixin.py:103} INFO - [2021-02-10 09:26:42,804] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:26:43,003] {logging_mixin.py:103} INFO - [2021-02-10 09:26:43,003] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:43,003] {logging_mixin.py:103} INFO - [2021-02-10 09:26:43,003] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:26:43,004] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:26:43,004] {logging_mixin.py:103} INFO - <great_expectations.dataset.sqlalchemy_dataset.SqlAlchemyDataset object at 0x7f810238b430>
[2021-02-10 09:26:43,004] {logging_mixin.py:103} INFO - passenger_count
[2021-02-10 09:26:43,005] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:26:43,006] {logging_mixin.py:103} INFO - [2021-02-10 09:26:43,006] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:26:43,191] {logging_mixin.py:103} INFO - [2021-02-10 09:26:43,191] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:43,192] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:26:43,192] {logging_mixin.py:103} INFO - [2021-02-10 09:26:43,192] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:26:43,367] {logging_mixin.py:103} INFO - [2021-02-10 09:26:43,367] {cursor.py:560} INFO - query execution done
[2021-02-10 09:26:43,367] {logging_mixin.py:103} INFO - [2021-02-10 09:26:43,367] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:26:50,965] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:27:27,819] {scheduler_job.py:181} INFO - Started process (PID=64677) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:27:27,820] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:27:27,820] {logging_mixin.py:103} INFO - [2021-02-10 09:27:27,820] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:27:30,356] {logging_mixin.py:103} INFO - [2021-02-10 09:27:30,356] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:27:30,771] {logging_mixin.py:103} INFO - [2021-02-10 09:27:30,771] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:27:31,257] {logging_mixin.py:103} INFO - [2021-02-10 09:27:31,257] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:27:31,257] {logging_mixin.py:103} INFO - [2021-02-10 09:27:31,257] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:27:31,258] {logging_mixin.py:103} INFO - [2021-02-10 09:27:31,258] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:27:32,623] {logging_mixin.py:103} INFO - [2021-02-10 09:27:32,623] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:27:32,806] {logging_mixin.py:103} INFO - [2021-02-10 09:27:32,806] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:32,807] {logging_mixin.py:103} INFO - [2021-02-10 09:27:32,807] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:27:32,985] {logging_mixin.py:103} INFO - [2021-02-10 09:27:32,985] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:32,985] {logging_mixin.py:103} INFO - [2021-02-10 09:27:32,985] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:27:33,226] {logging_mixin.py:103} INFO - [2021-02-10 09:27:33,226] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:33,230] {logging_mixin.py:103} INFO - [2021-02-10 09:27:33,229] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:27:33,361] {logging_mixin.py:103} INFO - [2021-02-10 09:27:33,361] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:33,634] {logging_mixin.py:103} INFO - [2021-02-10 09:27:33,633] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:27:33,791] {logging_mixin.py:103} INFO - [2021-02-10 09:27:33,791] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:33,840] {logging_mixin.py:103} INFO - [2021-02-10 09:27:33,840] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:27:33,841] {logging_mixin.py:103} INFO - [2021-02-10 09:27:33,841] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:27:35,390] {logging_mixin.py:103} INFO - [2021-02-10 09:27:35,390] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:35,391] {logging_mixin.py:103} INFO - [2021-02-10 09:27:35,391] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:27:35,401] {logging_mixin.py:103} INFO - [2021-02-10 09:27:35,401] {data_context.py:1281} INFO - Setting run_name to: 20210210T082735.401479Z
[2021-02-10 09:27:35,402] {logging_mixin.py:103} INFO - [2021-02-10 09:27:35,402] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:27:35,412] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:27:35,412] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fcd6e66b430>
[2021-02-10 09:27:35,412] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:27:35,414] {logging_mixin.py:103} INFO - [2021-02-10 09:27:35,414] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:27:35,603] {logging_mixin.py:103} INFO - [2021-02-10 09:27:35,603] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:35,604] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:27:35,605] {logging_mixin.py:103} INFO - [2021-02-10 09:27:35,605] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:27:35,774] {logging_mixin.py:103} INFO - [2021-02-10 09:27:35,774] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:35,774] {logging_mixin.py:103} INFO - [2021-02-10 09:27:35,774] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:27:35,775] {logging_mixin.py:103} INFO - [2021-02-10 09:27:35,775] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:27:35,942] {logging_mixin.py:103} INFO - [2021-02-10 09:27:35,942] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:35,943] {logging_mixin.py:103} INFO - [2021-02-10 09:27:35,943] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:27:36,132] {logging_mixin.py:103} INFO - [2021-02-10 09:27:36,132] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:36,133] {logging_mixin.py:103} INFO - [2021-02-10 09:27:36,133] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:27:36,287] {logging_mixin.py:103} INFO - [2021-02-10 09:27:36,287] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:36,288] {logging_mixin.py:103} INFO - [2021-02-10 09:27:36,288] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:27:36,297] {logging_mixin.py:103} INFO - [2021-02-10 09:27:36,297] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:27:36,297] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:27:36,298] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fcd6e66b430>
[2021-02-10 09:27:36,298] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:27:36,300] {logging_mixin.py:103} INFO - [2021-02-10 09:27:36,300] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:27:36,454] {logging_mixin.py:103} INFO - [2021-02-10 09:27:36,454] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:36,454] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:27:36,455] {logging_mixin.py:103} INFO - [2021-02-10 09:27:36,455] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:27:36,593] {logging_mixin.py:103} INFO - [2021-02-10 09:27:36,593] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:36,594] {logging_mixin.py:103} INFO - [2021-02-10 09:27:36,594] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:27:36,595] {logging_mixin.py:103} INFO - [2021-02-10 09:27:36,595] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:27:36,814] {logging_mixin.py:103} INFO - [2021-02-10 09:27:36,814] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:36,815] {logging_mixin.py:103} INFO - [2021-02-10 09:27:36,815] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:27:37,042] {logging_mixin.py:103} INFO - [2021-02-10 09:27:37,041] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:37,044] {logging_mixin.py:103} INFO - [2021-02-10 09:27:37,043] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:27:37,222] {logging_mixin.py:103} INFO - [2021-02-10 09:27:37,222] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:37,225] {logging_mixin.py:103} INFO - [2021-02-10 09:27:37,225] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:27:37,460] {logging_mixin.py:103} INFO - [2021-02-10 09:27:37,460] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:37,460] {logging_mixin.py:103} INFO - [2021-02-10 09:27:37,460] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:27:37,462] {logging_mixin.py:103} INFO - [2021-02-10 09:27:37,462] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:27:37,712] {logging_mixin.py:103} INFO - [2021-02-10 09:27:37,712] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:37,714] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:27:37,714] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fcd6e66b430>
[2021-02-10 09:27:37,715] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:27:37,717] {logging_mixin.py:103} INFO - [2021-02-10 09:27:37,716] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:27:38,461] {logging_mixin.py:103} INFO - [2021-02-10 09:27:38,461] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:38,461] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:27:38,462] {logging_mixin.py:103} INFO - [2021-02-10 09:27:38,462] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:27:38,631] {logging_mixin.py:103} INFO - [2021-02-10 09:27:38,631] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:38,631] {logging_mixin.py:103} INFO - [2021-02-10 09:27:38,631] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:27:38,632] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:27:38,632] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fcd6e66bc10>
[2021-02-10 09:27:38,633] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:27:38,635] {logging_mixin.py:103} INFO - [2021-02-10 09:27:38,635] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:27:38,816] {logging_mixin.py:103} INFO - [2021-02-10 09:27:38,816] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:38,817] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:27:38,818] {logging_mixin.py:103} INFO - [2021-02-10 09:27:38,818] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:27:38,968] {logging_mixin.py:103} INFO - [2021-02-10 09:27:38,967] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:38,968] {logging_mixin.py:103} INFO - [2021-02-10 09:27:38,968] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:27:38,968] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:27:38,968] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fcd6e66bc10>
[2021-02-10 09:27:38,969] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:27:38,970] {logging_mixin.py:103} INFO - [2021-02-10 09:27:38,970] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:27:39,149] {logging_mixin.py:103} INFO - [2021-02-10 09:27:39,149] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:39,149] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:27:39,150] {logging_mixin.py:103} INFO - [2021-02-10 09:27:39,150] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:27:39,382] {logging_mixin.py:103} INFO - [2021-02-10 09:27:39,382] {cursor.py:560} INFO - query execution done
[2021-02-10 09:27:39,382] {logging_mixin.py:103} INFO - [2021-02-10 09:27:39,382] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:27:45,011] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:28:10,966] {scheduler_job.py:181} INFO - Started process (PID=64739) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:28:10,967] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:28:10,967] {logging_mixin.py:103} INFO - [2021-02-10 09:28:10,967] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:28:12,625] {logging_mixin.py:103} INFO - [2021-02-10 09:28:12,625] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:28:12,993] {logging_mixin.py:103} INFO - [2021-02-10 09:28:12,993] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:28:13,332] {logging_mixin.py:103} INFO - [2021-02-10 09:28:13,332] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:28:13,332] {logging_mixin.py:103} INFO - [2021-02-10 09:28:13,332] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:28:13,332] {logging_mixin.py:103} INFO - [2021-02-10 09:28:13,332] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:28:14,403] {logging_mixin.py:103} INFO - [2021-02-10 09:28:14,403] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:28:14,571] {logging_mixin.py:103} INFO - [2021-02-10 09:28:14,571] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:14,573] {logging_mixin.py:103} INFO - [2021-02-10 09:28:14,573] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:28:14,719] {logging_mixin.py:103} INFO - [2021-02-10 09:28:14,719] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:14,719] {logging_mixin.py:103} INFO - [2021-02-10 09:28:14,719] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:28:14,866] {logging_mixin.py:103} INFO - [2021-02-10 09:28:14,866] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:14,867] {logging_mixin.py:103} INFO - [2021-02-10 09:28:14,867] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:28:15,022] {logging_mixin.py:103} INFO - [2021-02-10 09:28:15,021] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:15,242] {logging_mixin.py:103} INFO - [2021-02-10 09:28:15,242] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:28:15,402] {logging_mixin.py:103} INFO - [2021-02-10 09:28:15,402] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:15,442] {logging_mixin.py:103} INFO - [2021-02-10 09:28:15,442] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:28:15,442] {logging_mixin.py:103} INFO - [2021-02-10 09:28:15,442] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:28:17,172] {logging_mixin.py:103} INFO - [2021-02-10 09:28:17,172] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:17,176] {logging_mixin.py:103} INFO - [2021-02-10 09:28:17,176] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:28:17,186] {logging_mixin.py:103} INFO - [2021-02-10 09:28:17,186] {data_context.py:1281} INFO - Setting run_name to: 20210210T082817.186601Z
[2021-02-10 09:28:17,187] {logging_mixin.py:103} INFO - [2021-02-10 09:28:17,187] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:28:17,196] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:28:17,196] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fc35656b430>
[2021-02-10 09:28:17,196] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:28:17,198] {logging_mixin.py:103} INFO - [2021-02-10 09:28:17,198] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:28:17,368] {logging_mixin.py:103} INFO - [2021-02-10 09:28:17,367] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:17,369] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:28:17,370] {logging_mixin.py:103} INFO - [2021-02-10 09:28:17,370] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:28:17,571] {logging_mixin.py:103} INFO - [2021-02-10 09:28:17,571] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:17,572] {logging_mixin.py:103} INFO - [2021-02-10 09:28:17,572] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:28:17,574] {logging_mixin.py:103} INFO - [2021-02-10 09:28:17,574] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:28:17,746] {logging_mixin.py:103} INFO - [2021-02-10 09:28:17,746] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:17,749] {logging_mixin.py:103} INFO - [2021-02-10 09:28:17,749] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:28:17,902] {logging_mixin.py:103} INFO - [2021-02-10 09:28:17,902] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:17,905] {logging_mixin.py:103} INFO - [2021-02-10 09:28:17,905] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:28:18,135] {logging_mixin.py:103} INFO - [2021-02-10 09:28:18,135] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:18,136] {logging_mixin.py:103} INFO - [2021-02-10 09:28:18,136] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:28:18,144] {logging_mixin.py:103} INFO - [2021-02-10 09:28:18,144] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:28:18,145] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:28:18,145] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fc35656b430>
[2021-02-10 09:28:18,145] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:28:18,147] {logging_mixin.py:103} INFO - [2021-02-10 09:28:18,147] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:28:18,501] {logging_mixin.py:103} INFO - [2021-02-10 09:28:18,501] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:18,502] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:28:18,503] {logging_mixin.py:103} INFO - [2021-02-10 09:28:18,503] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:28:18,894] {logging_mixin.py:103} INFO - [2021-02-10 09:28:18,894] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:18,895] {logging_mixin.py:103} INFO - [2021-02-10 09:28:18,895] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:28:18,897] {logging_mixin.py:103} INFO - [2021-02-10 09:28:18,897] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:28:19,153] {logging_mixin.py:103} INFO - [2021-02-10 09:28:19,153] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:19,155] {logging_mixin.py:103} INFO - [2021-02-10 09:28:19,155] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:28:19,369] {logging_mixin.py:103} INFO - [2021-02-10 09:28:19,369] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:19,373] {logging_mixin.py:103} INFO - [2021-02-10 09:28:19,373] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:28:19,775] {logging_mixin.py:103} INFO - [2021-02-10 09:28:19,775] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:19,778] {logging_mixin.py:103} INFO - [2021-02-10 09:28:19,777] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:28:20,242] {logging_mixin.py:103} INFO - [2021-02-10 09:28:20,242] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:20,243] {logging_mixin.py:103} INFO - [2021-02-10 09:28:20,243] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:28:20,247] {logging_mixin.py:103} INFO - [2021-02-10 09:28:20,247] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:28:20,393] {logging_mixin.py:103} INFO - [2021-02-10 09:28:20,392] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:20,397] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:28:20,397] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fc35656b430>
[2021-02-10 09:28:20,398] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:28:20,400] {logging_mixin.py:103} INFO - [2021-02-10 09:28:20,400] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:28:20,569] {logging_mixin.py:103} INFO - [2021-02-10 09:28:20,569] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:20,570] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:28:20,572] {logging_mixin.py:103} INFO - [2021-02-10 09:28:20,572] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:28:20,743] {logging_mixin.py:103} INFO - [2021-02-10 09:28:20,742] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:20,743] {logging_mixin.py:103} INFO - [2021-02-10 09:28:20,743] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:28:20,744] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:28:20,744] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fc35656bc10>
[2021-02-10 09:28:20,746] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:28:20,748] {logging_mixin.py:103} INFO - [2021-02-10 09:28:20,748] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:28:20,973] {logging_mixin.py:103} INFO - [2021-02-10 09:28:20,972] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:20,973] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:28:20,974] {logging_mixin.py:103} INFO - [2021-02-10 09:28:20,974] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:28:21,151] {logging_mixin.py:103} INFO - [2021-02-10 09:28:21,151] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:21,152] {logging_mixin.py:103} INFO - [2021-02-10 09:28:21,152] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:28:21,153] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:28:21,153] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fc35656bc10>
[2021-02-10 09:28:21,154] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:28:21,156] {logging_mixin.py:103} INFO - [2021-02-10 09:28:21,156] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:28:21,394] {logging_mixin.py:103} INFO - [2021-02-10 09:28:21,393] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:21,395] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:28:21,396] {logging_mixin.py:103} INFO - [2021-02-10 09:28:21,396] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:28:21,611] {logging_mixin.py:103} INFO - [2021-02-10 09:28:21,610] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:21,611] {logging_mixin.py:103} INFO - [2021-02-10 09:28:21,611] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:28:25,986] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:28:51,059] {scheduler_job.py:181} INFO - Started process (PID=64799) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:28:51,060] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:28:51,060] {logging_mixin.py:103} INFO - [2021-02-10 09:28:51,060] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:28:52,677] {logging_mixin.py:103} INFO - [2021-02-10 09:28:52,677] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:28:52,963] {logging_mixin.py:103} INFO - [2021-02-10 09:28:52,963] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:28:53,289] {logging_mixin.py:103} INFO - [2021-02-10 09:28:53,289] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:28:53,290] {logging_mixin.py:103} INFO - [2021-02-10 09:28:53,290] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:28:53,290] {logging_mixin.py:103} INFO - [2021-02-10 09:28:53,290] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:28:54,335] {logging_mixin.py:103} INFO - [2021-02-10 09:28:54,335] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:28:54,468] {logging_mixin.py:103} INFO - [2021-02-10 09:28:54,468] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:54,470] {logging_mixin.py:103} INFO - [2021-02-10 09:28:54,470] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:28:54,618] {logging_mixin.py:103} INFO - [2021-02-10 09:28:54,618] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:54,619] {logging_mixin.py:103} INFO - [2021-02-10 09:28:54,619] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:28:54,748] {logging_mixin.py:103} INFO - [2021-02-10 09:28:54,747] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:54,751] {logging_mixin.py:103} INFO - [2021-02-10 09:28:54,751] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:28:54,932] {logging_mixin.py:103} INFO - [2021-02-10 09:28:54,932] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:55,149] {logging_mixin.py:103} INFO - [2021-02-10 09:28:55,149] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:28:55,314] {logging_mixin.py:103} INFO - [2021-02-10 09:28:55,314] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:55,356] {logging_mixin.py:103} INFO - [2021-02-10 09:28:55,355] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:28:55,356] {logging_mixin.py:103} INFO - [2021-02-10 09:28:55,356] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:28:56,809] {logging_mixin.py:103} INFO - [2021-02-10 09:28:56,809] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:56,812] {logging_mixin.py:103} INFO - [2021-02-10 09:28:56,812] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:28:56,822] {logging_mixin.py:103} INFO - [2021-02-10 09:28:56,822] {data_context.py:1281} INFO - Setting run_name to: 20210210T082856.822419Z
[2021-02-10 09:28:56,823] {logging_mixin.py:103} INFO - [2021-02-10 09:28:56,823] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:28:56,832] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:28:56,832] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f933c56b430>
[2021-02-10 09:28:56,832] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:28:56,834] {logging_mixin.py:103} INFO - [2021-02-10 09:28:56,834] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:28:56,999] {logging_mixin.py:103} INFO - [2021-02-10 09:28:56,999] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:57,000] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:28:57,001] {logging_mixin.py:103} INFO - [2021-02-10 09:28:57,001] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:28:57,169] {logging_mixin.py:103} INFO - [2021-02-10 09:28:57,169] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:57,169] {logging_mixin.py:103} INFO - [2021-02-10 09:28:57,169] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:28:57,171] {logging_mixin.py:103} INFO - [2021-02-10 09:28:57,171] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:28:57,326] {logging_mixin.py:103} INFO - [2021-02-10 09:28:57,326] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:57,328] {logging_mixin.py:103} INFO - [2021-02-10 09:28:57,328] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:28:57,473] {logging_mixin.py:103} INFO - [2021-02-10 09:28:57,473] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:57,475] {logging_mixin.py:103} INFO - [2021-02-10 09:28:57,475] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:28:57,636] {logging_mixin.py:103} INFO - [2021-02-10 09:28:57,636] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:57,636] {logging_mixin.py:103} INFO - [2021-02-10 09:28:57,636] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:28:57,647] {logging_mixin.py:103} INFO - [2021-02-10 09:28:57,647] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:28:57,648] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:28:57,648] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f933c56b430>
[2021-02-10 09:28:57,648] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:28:57,650] {logging_mixin.py:103} INFO - [2021-02-10 09:28:57,650] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:28:57,800] {logging_mixin.py:103} INFO - [2021-02-10 09:28:57,800] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:57,801] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:28:57,802] {logging_mixin.py:103} INFO - [2021-02-10 09:28:57,802] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:28:57,972] {logging_mixin.py:103} INFO - [2021-02-10 09:28:57,971] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:57,972] {logging_mixin.py:103} INFO - [2021-02-10 09:28:57,972] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:28:57,975] {logging_mixin.py:103} INFO - [2021-02-10 09:28:57,975] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:28:58,134] {logging_mixin.py:103} INFO - [2021-02-10 09:28:58,134] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:58,136] {logging_mixin.py:103} INFO - [2021-02-10 09:28:58,136] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:28:58,303] {logging_mixin.py:103} INFO - [2021-02-10 09:28:58,303] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:58,306] {logging_mixin.py:103} INFO - [2021-02-10 09:28:58,306] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:28:58,465] {logging_mixin.py:103} INFO - [2021-02-10 09:28:58,465] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:58,468] {logging_mixin.py:103} INFO - [2021-02-10 09:28:58,468] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:28:58,625] {logging_mixin.py:103} INFO - [2021-02-10 09:28:58,625] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:58,626] {logging_mixin.py:103} INFO - [2021-02-10 09:28:58,625] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:28:58,630] {logging_mixin.py:103} INFO - [2021-02-10 09:28:58,630] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:28:58,810] {logging_mixin.py:103} INFO - [2021-02-10 09:28:58,810] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:58,816] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:28:58,816] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f933c56b430>
[2021-02-10 09:28:58,817] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:28:58,819] {logging_mixin.py:103} INFO - [2021-02-10 09:28:58,819] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:28:59,028] {logging_mixin.py:103} INFO - [2021-02-10 09:28:59,028] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:59,029] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:28:59,030] {logging_mixin.py:103} INFO - [2021-02-10 09:28:59,030] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:28:59,203] {logging_mixin.py:103} INFO - [2021-02-10 09:28:59,203] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:59,204] {logging_mixin.py:103} INFO - [2021-02-10 09:28:59,204] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:28:59,205] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:28:59,205] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f933c56bc10>
[2021-02-10 09:28:59,207] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:28:59,208] {logging_mixin.py:103} INFO - [2021-02-10 09:28:59,208] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:28:59,359] {logging_mixin.py:103} INFO - [2021-02-10 09:28:59,359] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:59,361] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:28:59,362] {logging_mixin.py:103} INFO - [2021-02-10 09:28:59,362] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:28:59,531] {logging_mixin.py:103} INFO - [2021-02-10 09:28:59,531] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:59,532] {logging_mixin.py:103} INFO - [2021-02-10 09:28:59,532] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:28:59,533] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:28:59,533] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f933c56bc10>
[2021-02-10 09:28:59,534] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:28:59,536] {logging_mixin.py:103} INFO - [2021-02-10 09:28:59,536] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:28:59,696] {logging_mixin.py:103} INFO - [2021-02-10 09:28:59,695] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:59,697] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:28:59,698] {logging_mixin.py:103} INFO - [2021-02-10 09:28:59,698] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:28:59,871] {logging_mixin.py:103} INFO - [2021-02-10 09:28:59,871] {cursor.py:560} INFO - query execution done
[2021-02-10 09:28:59,872] {logging_mixin.py:103} INFO - [2021-02-10 09:28:59,871] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:29:04,075] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:29:29,577] {scheduler_job.py:181} INFO - Started process (PID=64853) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:29:29,577] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:29:29,578] {logging_mixin.py:103} INFO - [2021-02-10 09:29:29,578] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:29:31,160] {logging_mixin.py:103} INFO - [2021-02-10 09:29:31,160] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:29:31,449] {logging_mixin.py:103} INFO - [2021-02-10 09:29:31,449] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:29:31,770] {logging_mixin.py:103} INFO - [2021-02-10 09:29:31,770] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:29:31,770] {logging_mixin.py:103} INFO - [2021-02-10 09:29:31,770] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:29:31,770] {logging_mixin.py:103} INFO - [2021-02-10 09:29:31,770] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:29:33,378] {logging_mixin.py:103} INFO - [2021-02-10 09:29:33,378] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:29:33,520] {logging_mixin.py:103} INFO - [2021-02-10 09:29:33,520] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:33,522] {logging_mixin.py:103} INFO - [2021-02-10 09:29:33,522] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:29:33,789] {logging_mixin.py:103} INFO - [2021-02-10 09:29:33,789] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:33,790] {logging_mixin.py:103} INFO - [2021-02-10 09:29:33,790] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:29:33,936] {logging_mixin.py:103} INFO - [2021-02-10 09:29:33,935] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:33,938] {logging_mixin.py:103} INFO - [2021-02-10 09:29:33,938] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:29:34,113] {logging_mixin.py:103} INFO - [2021-02-10 09:29:34,112] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:34,328] {logging_mixin.py:103} INFO - [2021-02-10 09:29:34,328] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:29:34,479] {logging_mixin.py:103} INFO - [2021-02-10 09:29:34,479] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:34,521] {logging_mixin.py:103} INFO - [2021-02-10 09:29:34,521] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:29:34,522] {logging_mixin.py:103} INFO - [2021-02-10 09:29:34,522] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:29:36,430] {logging_mixin.py:103} INFO - [2021-02-10 09:29:36,430] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:36,434] {logging_mixin.py:103} INFO - [2021-02-10 09:29:36,434] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:29:36,444] {logging_mixin.py:103} INFO - [2021-02-10 09:29:36,444] {data_context.py:1281} INFO - Setting run_name to: 20210210T082936.444625Z
[2021-02-10 09:29:36,446] {logging_mixin.py:103} INFO - [2021-02-10 09:29:36,445] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:29:36,455] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:29:36,455] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f9135d6b430>
[2021-02-10 09:29:36,455] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:29:36,457] {logging_mixin.py:103} INFO - [2021-02-10 09:29:36,457] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:29:36,622] {logging_mixin.py:103} INFO - [2021-02-10 09:29:36,622] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:36,623] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:29:36,625] {logging_mixin.py:103} INFO - [2021-02-10 09:29:36,625] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:29:37,362] {logging_mixin.py:103} INFO - [2021-02-10 09:29:37,361] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:37,363] {logging_mixin.py:103} INFO - [2021-02-10 09:29:37,362] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:29:37,365] {logging_mixin.py:103} INFO - [2021-02-10 09:29:37,365] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:29:37,511] {logging_mixin.py:103} INFO - [2021-02-10 09:29:37,511] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:37,513] {logging_mixin.py:103} INFO - [2021-02-10 09:29:37,513] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:29:40,847] {logging_mixin.py:103} INFO - [2021-02-10 09:29:40,847] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:40,849] {logging_mixin.py:103} INFO - [2021-02-10 09:29:40,849] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:29:41,008] {logging_mixin.py:103} INFO - [2021-02-10 09:29:41,008] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:41,009] {logging_mixin.py:103} INFO - [2021-02-10 09:29:41,009] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:29:41,021] {logging_mixin.py:103} INFO - [2021-02-10 09:29:41,021] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:29:41,022] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:29:41,022] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f9135d6b430>
[2021-02-10 09:29:41,023] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:29:41,024] {logging_mixin.py:103} INFO - [2021-02-10 09:29:41,024] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:29:41,202] {logging_mixin.py:103} INFO - [2021-02-10 09:29:41,202] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:41,203] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:29:41,205] {logging_mixin.py:103} INFO - [2021-02-10 09:29:41,205] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:29:41,351] {logging_mixin.py:103} INFO - [2021-02-10 09:29:41,350] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:41,352] {logging_mixin.py:103} INFO - [2021-02-10 09:29:41,351] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:29:41,354] {logging_mixin.py:103} INFO - [2021-02-10 09:29:41,354] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:29:41,559] {logging_mixin.py:103} INFO - [2021-02-10 09:29:41,559] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:41,561] {logging_mixin.py:103} INFO - [2021-02-10 09:29:41,560] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:29:41,724] {logging_mixin.py:103} INFO - [2021-02-10 09:29:41,723] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:41,727] {logging_mixin.py:103} INFO - [2021-02-10 09:29:41,726] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:29:41,987] {logging_mixin.py:103} INFO - [2021-02-10 09:29:41,986] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:41,989] {logging_mixin.py:103} INFO - [2021-02-10 09:29:41,989] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:29:42,146] {logging_mixin.py:103} INFO - [2021-02-10 09:29:42,146] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:42,147] {logging_mixin.py:103} INFO - [2021-02-10 09:29:42,147] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:29:42,151] {logging_mixin.py:103} INFO - [2021-02-10 09:29:42,151] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:29:42,334] {logging_mixin.py:103} INFO - [2021-02-10 09:29:42,333] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:42,335] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:29:42,336] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f9135d6b430>
[2021-02-10 09:29:42,337] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:29:42,339] {logging_mixin.py:103} INFO - [2021-02-10 09:29:42,339] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:29:42,486] {logging_mixin.py:103} INFO - [2021-02-10 09:29:42,486] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:42,487] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:29:42,487] {logging_mixin.py:103} INFO - [2021-02-10 09:29:42,487] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:29:42,662] {logging_mixin.py:103} INFO - [2021-02-10 09:29:42,662] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:42,663] {logging_mixin.py:103} INFO - [2021-02-10 09:29:42,663] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:29:42,664] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:29:42,664] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f9135d6bc10>
[2021-02-10 09:29:42,666] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:29:42,668] {logging_mixin.py:103} INFO - [2021-02-10 09:29:42,668] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:29:42,849] {logging_mixin.py:103} INFO - [2021-02-10 09:29:42,849] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:42,850] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:29:42,851] {logging_mixin.py:103} INFO - [2021-02-10 09:29:42,851] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:29:43,035] {logging_mixin.py:103} INFO - [2021-02-10 09:29:43,035] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:43,036] {logging_mixin.py:103} INFO - [2021-02-10 09:29:43,035] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:29:43,037] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:29:43,037] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f9135d6bc10>
[2021-02-10 09:29:43,038] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:29:43,039] {logging_mixin.py:103} INFO - [2021-02-10 09:29:43,039] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:29:43,201] {logging_mixin.py:103} INFO - [2021-02-10 09:29:43,201] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:43,203] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:29:43,204] {logging_mixin.py:103} INFO - [2021-02-10 09:29:43,204] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:29:43,396] {logging_mixin.py:103} INFO - [2021-02-10 09:29:43,396] {cursor.py:560} INFO - query execution done
[2021-02-10 09:29:43,397] {logging_mixin.py:103} INFO - [2021-02-10 09:29:43,397] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:29:47,537] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:30:12,290] {scheduler_job.py:181} INFO - Started process (PID=64911) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:30:12,290] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:30:12,291] {logging_mixin.py:103} INFO - [2021-02-10 09:30:12,291] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:30:13,875] {logging_mixin.py:103} INFO - [2021-02-10 09:30:13,875] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:30:14,150] {logging_mixin.py:103} INFO - [2021-02-10 09:30:14,150] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:30:14,482] {logging_mixin.py:103} INFO - [2021-02-10 09:30:14,482] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:30:14,482] {logging_mixin.py:103} INFO - [2021-02-10 09:30:14,482] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:30:14,482] {logging_mixin.py:103} INFO - [2021-02-10 09:30:14,482] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:30:15,249] {logging_mixin.py:103} INFO - [2021-02-10 09:30:15,249] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:30:15,754] {logging_mixin.py:103} INFO - [2021-02-10 09:30:15,753] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:15,755] {logging_mixin.py:103} INFO - [2021-02-10 09:30:15,755] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:30:15,925] {logging_mixin.py:103} INFO - [2021-02-10 09:30:15,925] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:15,926] {logging_mixin.py:103} INFO - [2021-02-10 09:30:15,925] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:30:16,068] {logging_mixin.py:103} INFO - [2021-02-10 09:30:16,068] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:16,071] {logging_mixin.py:103} INFO - [2021-02-10 09:30:16,070] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:30:16,215] {logging_mixin.py:103} INFO - [2021-02-10 09:30:16,215] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:16,433] {logging_mixin.py:103} INFO - [2021-02-10 09:30:16,433] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:30:16,664] {logging_mixin.py:103} INFO - [2021-02-10 09:30:16,664] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:16,702] {logging_mixin.py:103} INFO - [2021-02-10 09:30:16,702] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:30:16,702] {logging_mixin.py:103} INFO - [2021-02-10 09:30:16,702] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:30:18,213] {logging_mixin.py:103} INFO - [2021-02-10 09:30:18,212] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:18,217] {logging_mixin.py:103} INFO - [2021-02-10 09:30:18,217] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:30:18,227] {logging_mixin.py:103} INFO - [2021-02-10 09:30:18,227] {data_context.py:1281} INFO - Setting run_name to: 20210210T083018.227115Z
[2021-02-10 09:30:18,228] {logging_mixin.py:103} INFO - [2021-02-10 09:30:18,228] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:30:18,236] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:30:18,236] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fcbe5d6b430>
[2021-02-10 09:30:18,237] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:30:18,238] {logging_mixin.py:103} INFO - [2021-02-10 09:30:18,238] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:30:18,474] {logging_mixin.py:103} INFO - [2021-02-10 09:30:18,474] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:18,475] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:30:18,476] {logging_mixin.py:103} INFO - [2021-02-10 09:30:18,476] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:30:18,713] {logging_mixin.py:103} INFO - [2021-02-10 09:30:18,713] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:18,713] {logging_mixin.py:103} INFO - [2021-02-10 09:30:18,713] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:30:18,715] {logging_mixin.py:103} INFO - [2021-02-10 09:30:18,715] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:30:18,914] {logging_mixin.py:103} INFO - [2021-02-10 09:30:18,914] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:18,917] {logging_mixin.py:103} INFO - [2021-02-10 09:30:18,917] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:30:19,106] {logging_mixin.py:103} INFO - [2021-02-10 09:30:19,106] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:19,108] {logging_mixin.py:103} INFO - [2021-02-10 09:30:19,108] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:30:19,254] {logging_mixin.py:103} INFO - [2021-02-10 09:30:19,254] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:19,255] {logging_mixin.py:103} INFO - [2021-02-10 09:30:19,255] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:30:19,266] {logging_mixin.py:103} INFO - [2021-02-10 09:30:19,266] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:30:19,267] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:30:19,267] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fcbe5d6b430>
[2021-02-10 09:30:19,267] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:30:19,269] {logging_mixin.py:103} INFO - [2021-02-10 09:30:19,269] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:30:19,435] {logging_mixin.py:103} INFO - [2021-02-10 09:30:19,435] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:19,436] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:30:19,437] {logging_mixin.py:103} INFO - [2021-02-10 09:30:19,437] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:30:19,603] {logging_mixin.py:103} INFO - [2021-02-10 09:30:19,602] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:19,603] {logging_mixin.py:103} INFO - [2021-02-10 09:30:19,603] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:30:19,605] {logging_mixin.py:103} INFO - [2021-02-10 09:30:19,605] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:30:20,366] {logging_mixin.py:103} INFO - [2021-02-10 09:30:20,366] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:20,368] {logging_mixin.py:103} INFO - [2021-02-10 09:30:20,368] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:30:20,524] {logging_mixin.py:103} INFO - [2021-02-10 09:30:20,524] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:20,527] {logging_mixin.py:103} INFO - [2021-02-10 09:30:20,527] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:30:20,692] {logging_mixin.py:103} INFO - [2021-02-10 09:30:20,691] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:20,694] {logging_mixin.py:103} INFO - [2021-02-10 09:30:20,694] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:30:20,855] {logging_mixin.py:103} INFO - [2021-02-10 09:30:20,855] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:20,856] {logging_mixin.py:103} INFO - [2021-02-10 09:30:20,855] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:30:20,860] {logging_mixin.py:103} INFO - [2021-02-10 09:30:20,859] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:30:21,068] {logging_mixin.py:103} INFO - [2021-02-10 09:30:21,068] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:21,072] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:30:21,073] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fcbe5d6b430>
[2021-02-10 09:30:21,074] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:30:21,076] {logging_mixin.py:103} INFO - [2021-02-10 09:30:21,075] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:30:21,229] {logging_mixin.py:103} INFO - [2021-02-10 09:30:21,229] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:21,230] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:30:21,232] {logging_mixin.py:103} INFO - [2021-02-10 09:30:21,231] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:30:21,421] {logging_mixin.py:103} INFO - [2021-02-10 09:30:21,421] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:21,422] {logging_mixin.py:103} INFO - [2021-02-10 09:30:21,421] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:30:21,423] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:30:21,423] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fcbe5d6bc10>
[2021-02-10 09:30:21,425] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:30:21,427] {logging_mixin.py:103} INFO - [2021-02-10 09:30:21,427] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:30:21,598] {logging_mixin.py:103} INFO - [2021-02-10 09:30:21,598] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:21,599] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:30:21,601] {logging_mixin.py:103} INFO - [2021-02-10 09:30:21,601] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:30:22,512] {logging_mixin.py:103} INFO - [2021-02-10 09:30:22,511] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:22,512] {logging_mixin.py:103} INFO - [2021-02-10 09:30:22,512] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:30:22,513] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:30:22,513] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fcbe5d6bc10>
[2021-02-10 09:30:22,514] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:30:22,516] {logging_mixin.py:103} INFO - [2021-02-10 09:30:22,516] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:30:22,682] {logging_mixin.py:103} INFO - [2021-02-10 09:30:22,682] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:22,684] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:30:22,685] {logging_mixin.py:103} INFO - [2021-02-10 09:30:22,685] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:30:22,886] {logging_mixin.py:103} INFO - [2021-02-10 09:30:22,886] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:22,886] {logging_mixin.py:103} INFO - [2021-02-10 09:30:22,886] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:30:27,136] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:30:52,080] {scheduler_job.py:181} INFO - Started process (PID=64975) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:30:52,081] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:30:52,081] {logging_mixin.py:103} INFO - [2021-02-10 09:30:52,081] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:30:53,712] {logging_mixin.py:103} INFO - [2021-02-10 09:30:53,712] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:30:53,991] {logging_mixin.py:103} INFO - [2021-02-10 09:30:53,991] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:30:54,312] {logging_mixin.py:103} INFO - [2021-02-10 09:30:54,312] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:30:54,312] {logging_mixin.py:103} INFO - [2021-02-10 09:30:54,312] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:30:54,312] {logging_mixin.py:103} INFO - [2021-02-10 09:30:54,312] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:30:55,388] {logging_mixin.py:103} INFO - [2021-02-10 09:30:55,387] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:30:55,527] {logging_mixin.py:103} INFO - [2021-02-10 09:30:55,526] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:55,528] {logging_mixin.py:103} INFO - [2021-02-10 09:30:55,528] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:30:55,659] {logging_mixin.py:103} INFO - [2021-02-10 09:30:55,659] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:55,660] {logging_mixin.py:103} INFO - [2021-02-10 09:30:55,660] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:30:55,808] {logging_mixin.py:103} INFO - [2021-02-10 09:30:55,807] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:55,810] {logging_mixin.py:103} INFO - [2021-02-10 09:30:55,810] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:30:55,938] {logging_mixin.py:103} INFO - [2021-02-10 09:30:55,938] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:56,154] {logging_mixin.py:103} INFO - [2021-02-10 09:30:56,154] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:30:56,446] {logging_mixin.py:103} INFO - [2021-02-10 09:30:56,446] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:56,493] {logging_mixin.py:103} INFO - [2021-02-10 09:30:56,492] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:30:56,493] {logging_mixin.py:103} INFO - [2021-02-10 09:30:56,493] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:30:57,842] {logging_mixin.py:103} INFO - [2021-02-10 09:30:57,842] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:57,846] {logging_mixin.py:103} INFO - [2021-02-10 09:30:57,846] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:30:57,859] {logging_mixin.py:103} INFO - [2021-02-10 09:30:57,859] {data_context.py:1281} INFO - Setting run_name to: 20210210T083057.859302Z
[2021-02-10 09:30:57,860] {logging_mixin.py:103} INFO - [2021-02-10 09:30:57,860] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:30:57,870] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:30:57,870] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7ff14bd6b430>
[2021-02-10 09:30:57,870] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:30:57,872] {logging_mixin.py:103} INFO - [2021-02-10 09:30:57,872] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:30:58,012] {logging_mixin.py:103} INFO - [2021-02-10 09:30:58,012] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:58,013] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:30:58,015] {logging_mixin.py:103} INFO - [2021-02-10 09:30:58,015] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:30:58,201] {logging_mixin.py:103} INFO - [2021-02-10 09:30:58,201] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:58,202] {logging_mixin.py:103} INFO - [2021-02-10 09:30:58,202] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:30:58,204] {logging_mixin.py:103} INFO - [2021-02-10 09:30:58,204] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:30:58,500] {logging_mixin.py:103} INFO - [2021-02-10 09:30:58,500] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:58,504] {logging_mixin.py:103} INFO - [2021-02-10 09:30:58,504] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:30:58,699] {logging_mixin.py:103} INFO - [2021-02-10 09:30:58,699] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:58,701] {logging_mixin.py:103} INFO - [2021-02-10 09:30:58,701] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:30:59,379] {logging_mixin.py:103} INFO - [2021-02-10 09:30:59,379] {cursor.py:560} INFO - query execution done
[2021-02-10 09:30:59,380] {logging_mixin.py:103} INFO - [2021-02-10 09:30:59,379] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:30:59,392] {logging_mixin.py:103} INFO - [2021-02-10 09:30:59,392] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:30:59,392] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:30:59,392] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7ff14bd6b430>
[2021-02-10 09:30:59,393] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:30:59,394] {logging_mixin.py:103} INFO - [2021-02-10 09:30:59,394] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:31:00,342] {logging_mixin.py:103} INFO - [2021-02-10 09:31:00,341] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:00,343] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:31:00,344] {logging_mixin.py:103} INFO - [2021-02-10 09:31:00,344] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:31:00,919] {logging_mixin.py:103} INFO - [2021-02-10 09:31:00,919] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:00,920] {logging_mixin.py:103} INFO - [2021-02-10 09:31:00,920] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:31:00,923] {logging_mixin.py:103} INFO - [2021-02-10 09:31:00,923] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:31:01,077] {logging_mixin.py:103} INFO - [2021-02-10 09:31:01,077] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:01,079] {logging_mixin.py:103} INFO - [2021-02-10 09:31:01,079] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:31:01,386] {logging_mixin.py:103} INFO - [2021-02-10 09:31:01,386] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:01,388] {logging_mixin.py:103} INFO - [2021-02-10 09:31:01,388] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:31:01,833] {logging_mixin.py:103} INFO - [2021-02-10 09:31:01,833] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:01,836] {logging_mixin.py:103} INFO - [2021-02-10 09:31:01,836] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:31:02,449] {logging_mixin.py:103} INFO - [2021-02-10 09:31:02,448] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:02,449] {logging_mixin.py:103} INFO - [2021-02-10 09:31:02,449] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:31:02,453] {logging_mixin.py:103} INFO - [2021-02-10 09:31:02,453] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:31:03,678] {logging_mixin.py:103} INFO - [2021-02-10 09:31:03,677] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:03,682] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:31:03,682] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7ff14bd6b430>
[2021-02-10 09:31:03,683] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:31:03,685] {logging_mixin.py:103} INFO - [2021-02-10 09:31:03,685] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:31:03,913] {logging_mixin.py:103} INFO - [2021-02-10 09:31:03,913] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:03,914] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:31:03,916] {logging_mixin.py:103} INFO - [2021-02-10 09:31:03,916] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:31:04,070] {logging_mixin.py:103} INFO - [2021-02-10 09:31:04,070] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:04,070] {logging_mixin.py:103} INFO - [2021-02-10 09:31:04,070] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:31:04,071] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:31:04,072] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7ff14bd6bc10>
[2021-02-10 09:31:04,074] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:31:04,075] {logging_mixin.py:103} INFO - [2021-02-10 09:31:04,075] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:31:04,236] {logging_mixin.py:103} INFO - [2021-02-10 09:31:04,236] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:04,237] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:31:04,238] {logging_mixin.py:103} INFO - [2021-02-10 09:31:04,238] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:31:04,405] {logging_mixin.py:103} INFO - [2021-02-10 09:31:04,405] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:04,406] {logging_mixin.py:103} INFO - [2021-02-10 09:31:04,406] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:31:04,407] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:31:04,407] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7ff14bd6bc10>
[2021-02-10 09:31:04,408] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:31:04,410] {logging_mixin.py:103} INFO - [2021-02-10 09:31:04,410] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:31:04,564] {logging_mixin.py:103} INFO - [2021-02-10 09:31:04,564] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:04,566] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:31:04,568] {logging_mixin.py:103} INFO - [2021-02-10 09:31:04,568] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:31:05,076] {logging_mixin.py:103} INFO - [2021-02-10 09:31:05,076] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:05,077] {logging_mixin.py:103} INFO - [2021-02-10 09:31:05,077] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:31:09,286] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:31:34,608] {scheduler_job.py:181} INFO - Started process (PID=65036) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:31:34,608] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:31:34,608] {logging_mixin.py:103} INFO - [2021-02-10 09:31:34,608] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:31:36,190] {logging_mixin.py:103} INFO - [2021-02-10 09:31:36,190] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:31:36,461] {logging_mixin.py:103} INFO - [2021-02-10 09:31:36,460] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:31:36,782] {logging_mixin.py:103} INFO - [2021-02-10 09:31:36,782] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:31:36,782] {logging_mixin.py:103} INFO - [2021-02-10 09:31:36,782] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:31:36,782] {logging_mixin.py:103} INFO - [2021-02-10 09:31:36,782] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:31:38,085] {logging_mixin.py:103} INFO - [2021-02-10 09:31:38,085] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:31:38,227] {logging_mixin.py:103} INFO - [2021-02-10 09:31:38,227] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:38,228] {logging_mixin.py:103} INFO - [2021-02-10 09:31:38,228] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:31:38,699] {logging_mixin.py:103} INFO - [2021-02-10 09:31:38,699] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:38,699] {logging_mixin.py:103} INFO - [2021-02-10 09:31:38,699] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:31:38,879] {logging_mixin.py:103} INFO - [2021-02-10 09:31:38,879] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:38,882] {logging_mixin.py:103} INFO - [2021-02-10 09:31:38,882] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:31:39,136] {logging_mixin.py:103} INFO - [2021-02-10 09:31:39,136] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:39,350] {logging_mixin.py:103} INFO - [2021-02-10 09:31:39,350] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:31:39,657] {logging_mixin.py:103} INFO - [2021-02-10 09:31:39,657] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:39,700] {logging_mixin.py:103} INFO - [2021-02-10 09:31:39,700] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:31:39,700] {logging_mixin.py:103} INFO - [2021-02-10 09:31:39,700] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:31:41,157] {logging_mixin.py:103} INFO - [2021-02-10 09:31:41,156] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:41,161] {logging_mixin.py:103} INFO - [2021-02-10 09:31:41,160] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:31:41,171] {logging_mixin.py:103} INFO - [2021-02-10 09:31:41,171] {data_context.py:1281} INFO - Setting run_name to: 20210210T083141.171598Z
[2021-02-10 09:31:41,172] {logging_mixin.py:103} INFO - [2021-02-10 09:31:41,172] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:31:41,181] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:31:41,181] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fc0a756b430>
[2021-02-10 09:31:41,182] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:31:41,183] {logging_mixin.py:103} INFO - [2021-02-10 09:31:41,183] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:31:41,455] {logging_mixin.py:103} INFO - [2021-02-10 09:31:41,454] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:41,456] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:31:41,457] {logging_mixin.py:103} INFO - [2021-02-10 09:31:41,457] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:31:41,612] {logging_mixin.py:103} INFO - [2021-02-10 09:31:41,612] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:41,613] {logging_mixin.py:103} INFO - [2021-02-10 09:31:41,613] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:31:41,615] {logging_mixin.py:103} INFO - [2021-02-10 09:31:41,615] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:31:41,770] {logging_mixin.py:103} INFO - [2021-02-10 09:31:41,770] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:41,773] {logging_mixin.py:103} INFO - [2021-02-10 09:31:41,773] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:31:41,960] {logging_mixin.py:103} INFO - [2021-02-10 09:31:41,959] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:41,962] {logging_mixin.py:103} INFO - [2021-02-10 09:31:41,962] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:31:42,105] {logging_mixin.py:103} INFO - [2021-02-10 09:31:42,105] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:42,106] {logging_mixin.py:103} INFO - [2021-02-10 09:31:42,106] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:31:42,117] {logging_mixin.py:103} INFO - [2021-02-10 09:31:42,117] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:31:42,118] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:31:42,118] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fc0a756b430>
[2021-02-10 09:31:42,118] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:31:42,120] {logging_mixin.py:103} INFO - [2021-02-10 09:31:42,120] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:31:42,315] {logging_mixin.py:103} INFO - [2021-02-10 09:31:42,315] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:42,316] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:31:42,318] {logging_mixin.py:103} INFO - [2021-02-10 09:31:42,318] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:31:42,614] {logging_mixin.py:103} INFO - [2021-02-10 09:31:42,613] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:42,614] {logging_mixin.py:103} INFO - [2021-02-10 09:31:42,614] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:31:42,617] {logging_mixin.py:103} INFO - [2021-02-10 09:31:42,617] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:31:42,770] {logging_mixin.py:103} INFO - [2021-02-10 09:31:42,770] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:42,772] {logging_mixin.py:103} INFO - [2021-02-10 09:31:42,772] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:31:42,936] {logging_mixin.py:103} INFO - [2021-02-10 09:31:42,935] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:42,939] {logging_mixin.py:103} INFO - [2021-02-10 09:31:42,938] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:31:43,127] {logging_mixin.py:103} INFO - [2021-02-10 09:31:43,127] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:43,130] {logging_mixin.py:103} INFO - [2021-02-10 09:31:43,130] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:31:43,311] {logging_mixin.py:103} INFO - [2021-02-10 09:31:43,311] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:43,312] {logging_mixin.py:103} INFO - [2021-02-10 09:31:43,312] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:31:43,316] {logging_mixin.py:103} INFO - [2021-02-10 09:31:43,316] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:31:43,480] {logging_mixin.py:103} INFO - [2021-02-10 09:31:43,480] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:43,485] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:31:43,485] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fc0a756b430>
[2021-02-10 09:31:43,486] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:31:43,488] {logging_mixin.py:103} INFO - [2021-02-10 09:31:43,487] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:31:43,734] {logging_mixin.py:103} INFO - [2021-02-10 09:31:43,734] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:43,735] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:31:43,737] {logging_mixin.py:103} INFO - [2021-02-10 09:31:43,737] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:31:43,906] {logging_mixin.py:103} INFO - [2021-02-10 09:31:43,905] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:43,906] {logging_mixin.py:103} INFO - [2021-02-10 09:31:43,906] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:31:43,907] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:31:43,907] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fc0a756bc10>
[2021-02-10 09:31:43,909] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:31:43,911] {logging_mixin.py:103} INFO - [2021-02-10 09:31:43,911] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:31:44,057] {logging_mixin.py:103} INFO - [2021-02-10 09:31:44,056] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:44,058] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:31:44,059] {logging_mixin.py:103} INFO - [2021-02-10 09:31:44,059] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:31:44,205] {logging_mixin.py:103} INFO - [2021-02-10 09:31:44,205] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:44,206] {logging_mixin.py:103} INFO - [2021-02-10 09:31:44,205] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:31:44,207] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:31:44,207] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fc0a756bc10>
[2021-02-10 09:31:44,208] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:31:44,210] {logging_mixin.py:103} INFO - [2021-02-10 09:31:44,210] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:31:44,352] {logging_mixin.py:103} INFO - [2021-02-10 09:31:44,351] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:44,353] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:31:44,355] {logging_mixin.py:103} INFO - [2021-02-10 09:31:44,355] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:31:44,521] {logging_mixin.py:103} INFO - [2021-02-10 09:31:44,521] {cursor.py:560} INFO - query execution done
[2021-02-10 09:31:44,521] {logging_mixin.py:103} INFO - [2021-02-10 09:31:44,521] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:31:48,765] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:32:16,344] {scheduler_job.py:181} INFO - Started process (PID=65093) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:32:16,345] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:32:16,345] {logging_mixin.py:103} INFO - [2021-02-10 09:32:16,345] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:32:18,021] {logging_mixin.py:103} INFO - [2021-02-10 09:32:18,021] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:32:18,296] {logging_mixin.py:103} INFO - [2021-02-10 09:32:18,296] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:32:18,637] {logging_mixin.py:103} INFO - [2021-02-10 09:32:18,636] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:32:18,637] {logging_mixin.py:103} INFO - [2021-02-10 09:32:18,637] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:32:18,637] {logging_mixin.py:103} INFO - [2021-02-10 09:32:18,637] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:32:19,620] {logging_mixin.py:103} INFO - [2021-02-10 09:32:19,619] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:32:19,755] {logging_mixin.py:103} INFO - [2021-02-10 09:32:19,755] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:19,757] {logging_mixin.py:103} INFO - [2021-02-10 09:32:19,757] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:32:19,895] {logging_mixin.py:103} INFO - [2021-02-10 09:32:19,895] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:19,896] {logging_mixin.py:103} INFO - [2021-02-10 09:32:19,896] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:32:20,034] {logging_mixin.py:103} INFO - [2021-02-10 09:32:20,034] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:20,037] {logging_mixin.py:103} INFO - [2021-02-10 09:32:20,037] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:32:20,179] {logging_mixin.py:103} INFO - [2021-02-10 09:32:20,179] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:20,399] {logging_mixin.py:103} INFO - [2021-02-10 09:32:20,399] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:32:20,594] {logging_mixin.py:103} INFO - [2021-02-10 09:32:20,594] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:20,636] {logging_mixin.py:103} INFO - [2021-02-10 09:32:20,636] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:32:20,636] {logging_mixin.py:103} INFO - [2021-02-10 09:32:20,636] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:32:21,871] {logging_mixin.py:103} INFO - [2021-02-10 09:32:21,871] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:21,876] {logging_mixin.py:103} INFO - [2021-02-10 09:32:21,876] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:32:21,887] {logging_mixin.py:103} INFO - [2021-02-10 09:32:21,887] {data_context.py:1281} INFO - Setting run_name to: 20210210T083221.887409Z
[2021-02-10 09:32:21,888] {logging_mixin.py:103} INFO - [2021-02-10 09:32:21,888] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:32:21,897] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:32:21,897] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd1706aa430>
[2021-02-10 09:32:21,898] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:32:21,899] {logging_mixin.py:103} INFO - [2021-02-10 09:32:21,899] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:32:22,060] {logging_mixin.py:103} INFO - [2021-02-10 09:32:22,060] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:22,061] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:32:22,063] {logging_mixin.py:103} INFO - [2021-02-10 09:32:22,063] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:32:22,247] {logging_mixin.py:103} INFO - [2021-02-10 09:32:22,247] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:22,248] {logging_mixin.py:103} INFO - [2021-02-10 09:32:22,248] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:32:22,250] {logging_mixin.py:103} INFO - [2021-02-10 09:32:22,250] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:32:22,412] {logging_mixin.py:103} INFO - [2021-02-10 09:32:22,412] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:22,415] {logging_mixin.py:103} INFO - [2021-02-10 09:32:22,415] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:32:22,576] {logging_mixin.py:103} INFO - [2021-02-10 09:32:22,576] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:22,578] {logging_mixin.py:103} INFO - [2021-02-10 09:32:22,578] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:32:22,765] {logging_mixin.py:103} INFO - [2021-02-10 09:32:22,765] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:22,765] {logging_mixin.py:103} INFO - [2021-02-10 09:32:22,765] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:32:22,782] {logging_mixin.py:103} INFO - [2021-02-10 09:32:22,782] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:32:22,783] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:32:22,783] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd1706aa430>
[2021-02-10 09:32:22,784] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:32:22,785] {logging_mixin.py:103} INFO - [2021-02-10 09:32:22,785] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:32:22,934] {logging_mixin.py:103} INFO - [2021-02-10 09:32:22,934] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:22,935] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:32:22,936] {logging_mixin.py:103} INFO - [2021-02-10 09:32:22,936] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:32:23,103] {logging_mixin.py:103} INFO - [2021-02-10 09:32:23,103] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:23,103] {logging_mixin.py:103} INFO - [2021-02-10 09:32:23,103] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:32:23,106] {logging_mixin.py:103} INFO - [2021-02-10 09:32:23,106] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:32:23,253] {logging_mixin.py:103} INFO - [2021-02-10 09:32:23,253] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:23,255] {logging_mixin.py:103} INFO - [2021-02-10 09:32:23,254] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:32:23,418] {logging_mixin.py:103} INFO - [2021-02-10 09:32:23,418] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:23,421] {logging_mixin.py:103} INFO - [2021-02-10 09:32:23,421] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:32:23,574] {logging_mixin.py:103} INFO - [2021-02-10 09:32:23,574] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:23,577] {logging_mixin.py:103} INFO - [2021-02-10 09:32:23,577] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:32:23,744] {logging_mixin.py:103} INFO - [2021-02-10 09:32:23,744] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:23,745] {logging_mixin.py:103} INFO - [2021-02-10 09:32:23,745] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:32:23,749] {logging_mixin.py:103} INFO - [2021-02-10 09:32:23,749] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:32:23,917] {logging_mixin.py:103} INFO - [2021-02-10 09:32:23,917] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:23,922] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:32:23,922] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd1706aa430>
[2021-02-10 09:32:23,923] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:32:23,925] {logging_mixin.py:103} INFO - [2021-02-10 09:32:23,925] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:32:24,097] {logging_mixin.py:103} INFO - [2021-02-10 09:32:24,097] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:24,098] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:32:24,099] {logging_mixin.py:103} INFO - [2021-02-10 09:32:24,099] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:32:24,251] {logging_mixin.py:103} INFO - [2021-02-10 09:32:24,251] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:24,252] {logging_mixin.py:103} INFO - [2021-02-10 09:32:24,252] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:32:24,253] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:32:24,253] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fd1706aac10>
[2021-02-10 09:32:24,255] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:32:24,257] {logging_mixin.py:103} INFO - [2021-02-10 09:32:24,257] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:32:24,467] {logging_mixin.py:103} INFO - [2021-02-10 09:32:24,466] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:24,468] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:32:24,469] {logging_mixin.py:103} INFO - [2021-02-10 09:32:24,469] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:32:24,648] {logging_mixin.py:103} INFO - [2021-02-10 09:32:24,647] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:24,648] {logging_mixin.py:103} INFO - [2021-02-10 09:32:24,648] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:32:24,649] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:32:24,649] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fd1706aac10>
[2021-02-10 09:32:24,650] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:32:24,652] {logging_mixin.py:103} INFO - [2021-02-10 09:32:24,652] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:32:24,811] {logging_mixin.py:103} INFO - [2021-02-10 09:32:24,811] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:24,812] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:32:24,814] {logging_mixin.py:103} INFO - [2021-02-10 09:32:24,814] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:32:25,257] {logging_mixin.py:103} INFO - [2021-02-10 09:32:25,257] {cursor.py:560} INFO - query execution done
[2021-02-10 09:32:25,258] {logging_mixin.py:103} INFO - [2021-02-10 09:32:25,257] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:32:29,531] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:33:01,191] {scheduler_job.py:181} INFO - Started process (PID=65163) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:33:01,192] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:33:01,192] {logging_mixin.py:103} INFO - [2021-02-10 09:33:01,192] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:33:03,437] {logging_mixin.py:103} INFO - [2021-02-10 09:33:03,437] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:33:03,819] {logging_mixin.py:103} INFO - [2021-02-10 09:33:03,819] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:33:04,266] {logging_mixin.py:103} INFO - [2021-02-10 09:33:04,266] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:33:04,267] {logging_mixin.py:103} INFO - [2021-02-10 09:33:04,267] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:33:04,267] {logging_mixin.py:103} INFO - [2021-02-10 09:33:04,267] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:33:05,186] {logging_mixin.py:103} INFO - [2021-02-10 09:33:05,186] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:33:05,375] {logging_mixin.py:103} INFO - [2021-02-10 09:33:05,375] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:05,376] {logging_mixin.py:103} INFO - [2021-02-10 09:33:05,376] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:33:05,507] {logging_mixin.py:103} INFO - [2021-02-10 09:33:05,507] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:05,508] {logging_mixin.py:103} INFO - [2021-02-10 09:33:05,508] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:33:05,856] {logging_mixin.py:103} INFO - [2021-02-10 09:33:05,856] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:05,857] {logging_mixin.py:103} INFO - [2021-02-10 09:33:05,857] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:33:06,012] {logging_mixin.py:103} INFO - [2021-02-10 09:33:06,012] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:06,191] {logging_mixin.py:103} INFO - [2021-02-10 09:33:06,191] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:33:06,760] {logging_mixin.py:103} INFO - [2021-02-10 09:33:06,760] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:06,798] {logging_mixin.py:103} INFO - [2021-02-10 09:33:06,798] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:33:06,799] {logging_mixin.py:103} INFO - [2021-02-10 09:33:06,798] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:33:07,615] {logging_mixin.py:103} INFO - [2021-02-10 09:33:07,614] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:07,617] {logging_mixin.py:103} INFO - [2021-02-10 09:33:07,617] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:33:07,630] {logging_mixin.py:103} INFO - [2021-02-10 09:33:07,630] {data_context.py:1281} INFO - Setting run_name to: 20210210T083307.630280Z
[2021-02-10 09:33:07,632] {logging_mixin.py:103} INFO - [2021-02-10 09:33:07,632] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:33:07,643] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:33:07,643] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fb74cd6b430>
[2021-02-10 09:33:07,643] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:33:07,644] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:33:07,646] {logging_mixin.py:103} INFO - [2021-02-10 09:33:07,646] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:33:07,799] {logging_mixin.py:103} INFO - [2021-02-10 09:33:07,799] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:07,800] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:33:07,801] {logging_mixin.py:103} INFO - [2021-02-10 09:33:07,801] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:33:07,957] {logging_mixin.py:103} INFO - [2021-02-10 09:33:07,957] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:07,957] {logging_mixin.py:103} INFO - [2021-02-10 09:33:07,957] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:33:07,958] {logging_mixin.py:103} INFO - [2021-02-10 09:33:07,958] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:33:08,098] {logging_mixin.py:103} INFO - [2021-02-10 09:33:08,097] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:08,100] {logging_mixin.py:103} INFO - [2021-02-10 09:33:08,100] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:33:08,282] {logging_mixin.py:103} INFO - [2021-02-10 09:33:08,282] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:08,284] {logging_mixin.py:103} INFO - [2021-02-10 09:33:08,284] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:33:08,672] {logging_mixin.py:103} INFO - [2021-02-10 09:33:08,672] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:08,672] {logging_mixin.py:103} INFO - [2021-02-10 09:33:08,672] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:33:08,685] {logging_mixin.py:103} INFO - [2021-02-10 09:33:08,685] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:33:08,686] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:33:08,686] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fb74cd6b430>
[2021-02-10 09:33:08,687] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:33:08,687] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:33:08,689] {logging_mixin.py:103} INFO - [2021-02-10 09:33:08,689] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:33:08,854] {logging_mixin.py:103} INFO - [2021-02-10 09:33:08,853] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:08,854] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:33:08,856] {logging_mixin.py:103} INFO - [2021-02-10 09:33:08,855] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:33:09,068] {logging_mixin.py:103} INFO - [2021-02-10 09:33:09,068] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:09,093] {logging_mixin.py:103} INFO - [2021-02-10 09:33:09,093] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:33:09,098] {logging_mixin.py:103} INFO - [2021-02-10 09:33:09,098] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:33:09,295] {logging_mixin.py:103} INFO - [2021-02-10 09:33:09,295] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:09,297] {logging_mixin.py:103} INFO - [2021-02-10 09:33:09,297] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:33:09,487] {logging_mixin.py:103} INFO - [2021-02-10 09:33:09,486] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:09,489] {logging_mixin.py:103} INFO - [2021-02-10 09:33:09,489] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:33:09,659] {logging_mixin.py:103} INFO - [2021-02-10 09:33:09,659] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:09,661] {logging_mixin.py:103} INFO - [2021-02-10 09:33:09,661] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:33:09,801] {logging_mixin.py:103} INFO - [2021-02-10 09:33:09,801] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:09,801] {logging_mixin.py:103} INFO - [2021-02-10 09:33:09,801] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:33:09,805] {logging_mixin.py:103} INFO - [2021-02-10 09:33:09,805] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:33:09,972] {logging_mixin.py:103} INFO - [2021-02-10 09:33:09,972] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:09,976] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:33:09,976] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fb74cd6b430>
[2021-02-10 09:33:09,976] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:33:09,977] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:33:09,979] {logging_mixin.py:103} INFO - [2021-02-10 09:33:09,979] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:33:10,156] {logging_mixin.py:103} INFO - [2021-02-10 09:33:10,156] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:10,156] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:33:10,157] {logging_mixin.py:103} INFO - [2021-02-10 09:33:10,157] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:33:10,417] {logging_mixin.py:103} INFO - [2021-02-10 09:33:10,416] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:10,417] {logging_mixin.py:103} INFO - [2021-02-10 09:33:10,417] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:33:10,418] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:33:10,418] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fb74cd6bc10>
[2021-02-10 09:33:10,418] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:33:10,420] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:33:10,422] {logging_mixin.py:103} INFO - [2021-02-10 09:33:10,422] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:33:10,678] {logging_mixin.py:103} INFO - [2021-02-10 09:33:10,678] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:10,679] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:33:10,680] {logging_mixin.py:103} INFO - [2021-02-10 09:33:10,680] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:33:10,842] {logging_mixin.py:103} INFO - [2021-02-10 09:33:10,842] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:10,842] {logging_mixin.py:103} INFO - [2021-02-10 09:33:10,842] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:33:10,844] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:33:10,844] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fb74cd6bc10>
[2021-02-10 09:33:10,844] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:33:10,846] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:33:10,852] {logging_mixin.py:103} INFO - [2021-02-10 09:33:10,852] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:33:11,056] {logging_mixin.py:103} INFO - [2021-02-10 09:33:11,056] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:11,057] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:33:11,058] {logging_mixin.py:103} INFO - [2021-02-10 09:33:11,058] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:33:11,295] {logging_mixin.py:103} INFO - [2021-02-10 09:33:11,295] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:11,296] {logging_mixin.py:103} INFO - [2021-02-10 09:33:11,295] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:33:19,135] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:33:54,435] {scheduler_job.py:181} INFO - Started process (PID=65250) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:33:54,436] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:33:54,436] {logging_mixin.py:103} INFO - [2021-02-10 09:33:54,436] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:33:56,315] {logging_mixin.py:103} INFO - [2021-02-10 09:33:56,315] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:33:56,644] {logging_mixin.py:103} INFO - [2021-02-10 09:33:56,643] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:33:57,049] {logging_mixin.py:103} INFO - [2021-02-10 09:33:57,048] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:33:57,049] {logging_mixin.py:103} INFO - [2021-02-10 09:33:57,049] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:33:57,049] {logging_mixin.py:103} INFO - [2021-02-10 09:33:57,049] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:33:58,174] {logging_mixin.py:103} INFO - [2021-02-10 09:33:58,174] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:33:58,421] {logging_mixin.py:103} INFO - [2021-02-10 09:33:58,421] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:58,424] {logging_mixin.py:103} INFO - [2021-02-10 09:33:58,423] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:33:58,563] {logging_mixin.py:103} INFO - [2021-02-10 09:33:58,563] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:58,564] {logging_mixin.py:103} INFO - [2021-02-10 09:33:58,564] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:33:58,720] {logging_mixin.py:103} INFO - [2021-02-10 09:33:58,720] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:58,855] {logging_mixin.py:103} INFO - [2021-02-10 09:33:58,855] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:33:58,990] {logging_mixin.py:103} INFO - [2021-02-10 09:33:58,990] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:59,109] {logging_mixin.py:103} INFO - [2021-02-10 09:33:59,109] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:33:59,292] {logging_mixin.py:103} INFO - [2021-02-10 09:33:59,291] {cursor.py:560} INFO - query execution done
[2021-02-10 09:33:59,339] {logging_mixin.py:103} INFO - [2021-02-10 09:33:59,339] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:33:59,339] {logging_mixin.py:103} INFO - [2021-02-10 09:33:59,339] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:34:01,248] {logging_mixin.py:103} INFO - [2021-02-10 09:34:01,247] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:01,250] {logging_mixin.py:103} INFO - [2021-02-10 09:34:01,250] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:34:01,262] {logging_mixin.py:103} INFO - [2021-02-10 09:34:01,262] {data_context.py:1281} INFO - Setting run_name to: 20210210T083401.262816Z
[2021-02-10 09:34:01,264] {logging_mixin.py:103} INFO - [2021-02-10 09:34:01,264] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:34:01,273] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:34:01,274] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fa328c6b430>
[2021-02-10 09:34:01,274] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:34:01,274] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:34:01,276] {logging_mixin.py:103} INFO - [2021-02-10 09:34:01,276] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:34:01,424] {logging_mixin.py:103} INFO - [2021-02-10 09:34:01,424] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:01,425] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:34:01,426] {logging_mixin.py:103} INFO - [2021-02-10 09:34:01,426] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:34:01,618] {logging_mixin.py:103} INFO - [2021-02-10 09:34:01,618] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:01,618] {logging_mixin.py:103} INFO - [2021-02-10 09:34:01,618] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:34:01,621] {logging_mixin.py:103} INFO - [2021-02-10 09:34:01,621] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:34:01,783] {logging_mixin.py:103} INFO - [2021-02-10 09:34:01,783] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:01,786] {logging_mixin.py:103} INFO - [2021-02-10 09:34:01,785] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:34:01,960] {logging_mixin.py:103} INFO - [2021-02-10 09:34:01,960] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:01,963] {logging_mixin.py:103} INFO - [2021-02-10 09:34:01,963] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:34:02,105] {logging_mixin.py:103} INFO - [2021-02-10 09:34:02,105] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:02,105] {logging_mixin.py:103} INFO - [2021-02-10 09:34:02,105] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:34:02,117] {logging_mixin.py:103} INFO - [2021-02-10 09:34:02,117] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:34:02,118] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:34:02,118] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fa328c6b430>
[2021-02-10 09:34:02,118] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:34:02,118] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:34:02,120] {logging_mixin.py:103} INFO - [2021-02-10 09:34:02,120] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:34:02,324] {logging_mixin.py:103} INFO - [2021-02-10 09:34:02,324] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:02,325] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:34:02,327] {logging_mixin.py:103} INFO - [2021-02-10 09:34:02,327] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:34:02,553] {logging_mixin.py:103} INFO - [2021-02-10 09:34:02,553] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:02,554] {logging_mixin.py:103} INFO - [2021-02-10 09:34:02,554] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:34:02,557] {logging_mixin.py:103} INFO - [2021-02-10 09:34:02,557] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:34:02,740] {logging_mixin.py:103} INFO - [2021-02-10 09:34:02,740] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:02,742] {logging_mixin.py:103} INFO - [2021-02-10 09:34:02,742] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:34:03,078] {logging_mixin.py:103} INFO - [2021-02-10 09:34:03,078] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:03,082] {logging_mixin.py:103} INFO - [2021-02-10 09:34:03,081] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:34:03,281] {logging_mixin.py:103} INFO - [2021-02-10 09:34:03,281] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:03,284] {logging_mixin.py:103} INFO - [2021-02-10 09:34:03,284] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:34:03,448] {logging_mixin.py:103} INFO - [2021-02-10 09:34:03,447] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:03,448] {logging_mixin.py:103} INFO - [2021-02-10 09:34:03,448] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:34:03,452] {logging_mixin.py:103} INFO - [2021-02-10 09:34:03,452] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:34:03,668] {logging_mixin.py:103} INFO - [2021-02-10 09:34:03,668] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:03,673] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:34:03,673] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fa328c6b430>
[2021-02-10 09:34:03,673] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:34:03,673] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:34:03,675] {logging_mixin.py:103} INFO - [2021-02-10 09:34:03,675] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:34:03,889] {logging_mixin.py:103} INFO - [2021-02-10 09:34:03,889] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:03,889] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:34:03,890] {logging_mixin.py:103} INFO - [2021-02-10 09:34:03,890] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:34:04,032] {logging_mixin.py:103} INFO - [2021-02-10 09:34:04,032] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:04,033] {logging_mixin.py:103} INFO - [2021-02-10 09:34:04,033] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:34:04,034] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:34:04,034] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fa328c6bc10>
[2021-02-10 09:34:04,034] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:34:04,036] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:34:04,038] {logging_mixin.py:103} INFO - [2021-02-10 09:34:04,038] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:34:04,203] {logging_mixin.py:103} INFO - [2021-02-10 09:34:04,203] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:04,204] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:34:04,206] {logging_mixin.py:103} INFO - [2021-02-10 09:34:04,206] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:34:04,351] {logging_mixin.py:103} INFO - [2021-02-10 09:34:04,351] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:04,352] {logging_mixin.py:103} INFO - [2021-02-10 09:34:04,352] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:34:04,353] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:34:04,353] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fa328c6bc10>
[2021-02-10 09:34:04,353] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:34:04,354] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:34:04,357] {logging_mixin.py:103} INFO - [2021-02-10 09:34:04,357] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:34:04,538] {logging_mixin.py:103} INFO - [2021-02-10 09:34:04,538] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:04,539] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:34:04,541] {logging_mixin.py:103} INFO - [2021-02-10 09:34:04,541] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:34:04,695] {logging_mixin.py:103} INFO - [2021-02-10 09:34:04,694] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:04,695] {logging_mixin.py:103} INFO - [2021-02-10 09:34:04,695] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:34:09,569] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:34:46,036] {scheduler_job.py:181} INFO - Started process (PID=65332) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:34:46,037] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:34:46,038] {logging_mixin.py:103} INFO - [2021-02-10 09:34:46,037] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:34:48,667] {logging_mixin.py:103} INFO - [2021-02-10 09:34:48,667] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:34:48,692] {logging_mixin.py:103} INFO - <class 'great_expectations.dataset.sqlalchemy_dataset.MetaSqlAlchemyDataset'>
[2021-02-10 09:34:48,692] {logging_mixin.py:103} INFO - <class 'great_expectations.dataset.sqlalchemy_dataset.MetaSqlAlchemyDataset'>
[2021-02-10 09:34:48,693] {logging_mixin.py:103} INFO - <class 'great_expectations.dataset.sqlalchemy_dataset.MetaSqlAlchemyDataset'>
[2021-02-10 09:34:48,693] {logging_mixin.py:103} INFO - <class 'great_expectations.dataset.sqlalchemy_dataset.MetaSqlAlchemyDataset'>
[2021-02-10 09:34:48,693] {logging_mixin.py:103} INFO - <class 'great_expectations.dataset.sqlalchemy_dataset.MetaSqlAlchemyDataset'>
[2021-02-10 09:34:48,693] {logging_mixin.py:103} INFO - <class 'great_expectations.dataset.sqlalchemy_dataset.MetaSqlAlchemyDataset'>
[2021-02-10 09:34:48,693] {logging_mixin.py:103} INFO - <class 'great_expectations.dataset.sqlalchemy_dataset.MetaSqlAlchemyDataset'>
[2021-02-10 09:34:48,693] {logging_mixin.py:103} INFO - <class 'great_expectations.dataset.sqlalchemy_dataset.MetaSqlAlchemyDataset'>
[2021-02-10 09:34:48,694] {logging_mixin.py:103} INFO - <class 'great_expectations.dataset.sqlalchemy_dataset.MetaSqlAlchemyDataset'>
[2021-02-10 09:34:48,694] {logging_mixin.py:103} INFO - <class 'great_expectations.dataset.sqlalchemy_dataset.MetaSqlAlchemyDataset'>
[2021-02-10 09:34:48,694] {logging_mixin.py:103} INFO - <class 'great_expectations.dataset.sqlalchemy_dataset.MetaSqlAlchemyDataset'>
[2021-02-10 09:34:48,694] {logging_mixin.py:103} INFO - <class 'great_expectations.dataset.sqlalchemy_dataset.MetaSqlAlchemyDataset'>
[2021-02-10 09:34:48,694] {logging_mixin.py:103} INFO - <class 'great_expectations.dataset.sqlalchemy_dataset.MetaSqlAlchemyDataset'>
[2021-02-10 09:34:48,694] {logging_mixin.py:103} INFO - <class 'great_expectations.dataset.sqlalchemy_dataset.MetaSqlAlchemyDataset'>
[2021-02-10 09:34:48,695] {logging_mixin.py:103} INFO - <class 'great_expectations.dataset.sqlalchemy_dataset.MetaSqlAlchemyDataset'>
[2021-02-10 09:34:48,695] {logging_mixin.py:103} INFO - <class 'great_expectations.dataset.sqlalchemy_dataset.MetaSqlAlchemyDataset'>
[2021-02-10 09:34:49,050] {logging_mixin.py:103} INFO - [2021-02-10 09:34:49,050] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:34:49,441] {logging_mixin.py:103} INFO - [2021-02-10 09:34:49,441] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:34:49,441] {logging_mixin.py:103} INFO - [2021-02-10 09:34:49,441] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:34:49,442] {logging_mixin.py:103} INFO - [2021-02-10 09:34:49,442] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:34:51,029] {logging_mixin.py:103} INFO - [2021-02-10 09:34:51,029] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:34:51,236] {logging_mixin.py:103} INFO - [2021-02-10 09:34:51,236] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:51,237] {logging_mixin.py:103} INFO - [2021-02-10 09:34:51,237] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:34:51,399] {logging_mixin.py:103} INFO - [2021-02-10 09:34:51,399] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:51,400] {logging_mixin.py:103} INFO - [2021-02-10 09:34:51,400] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:34:51,545] {logging_mixin.py:103} INFO - [2021-02-10 09:34:51,545] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:51,652] {logging_mixin.py:103} INFO - [2021-02-10 09:34:51,652] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:34:51,807] {logging_mixin.py:103} INFO - [2021-02-10 09:34:51,807] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:52,009] {logging_mixin.py:103} INFO - [2021-02-10 09:34:52,009] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:34:52,182] {logging_mixin.py:103} INFO - [2021-02-10 09:34:52,182] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:52,250] {logging_mixin.py:103} INFO - [2021-02-10 09:34:52,250] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:34:52,251] {logging_mixin.py:103} INFO - [2021-02-10 09:34:52,251] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:34:53,468] {logging_mixin.py:103} INFO - [2021-02-10 09:34:53,468] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:53,470] {logging_mixin.py:103} INFO - [2021-02-10 09:34:53,470] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:34:53,480] {logging_mixin.py:103} INFO - [2021-02-10 09:34:53,480] {data_context.py:1281} INFO - Setting run_name to: 20210210T083453.480315Z
[2021-02-10 09:34:53,481] {logging_mixin.py:103} INFO - [2021-02-10 09:34:53,481] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:34:53,491] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:34:53,491] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fc0ee46b430>
[2021-02-10 09:34:53,491] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:34:53,491] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:34:53,493] {logging_mixin.py:103} INFO - [2021-02-10 09:34:53,493] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:34:53,696] {logging_mixin.py:103} INFO - [2021-02-10 09:34:53,695] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:53,697] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:34:53,698] {logging_mixin.py:103} INFO - [2021-02-10 09:34:53,698] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:34:53,902] {logging_mixin.py:103} INFO - [2021-02-10 09:34:53,902] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:53,903] {logging_mixin.py:103} INFO - [2021-02-10 09:34:53,903] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:34:53,904] {logging_mixin.py:103} INFO - [2021-02-10 09:34:53,904] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:34:54,060] {logging_mixin.py:103} INFO - [2021-02-10 09:34:54,060] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:54,062] {logging_mixin.py:103} INFO - [2021-02-10 09:34:54,061] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:34:54,239] {logging_mixin.py:103} INFO - [2021-02-10 09:34:54,239] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:54,243] {logging_mixin.py:103} INFO - [2021-02-10 09:34:54,243] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:34:54,396] {logging_mixin.py:103} INFO - [2021-02-10 09:34:54,396] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:54,396] {logging_mixin.py:103} INFO - [2021-02-10 09:34:54,396] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:34:54,419] {logging_mixin.py:103} INFO - [2021-02-10 09:34:54,419] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:34:54,421] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:34:54,421] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fc0ee46b430>
[2021-02-10 09:34:54,421] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:34:54,421] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:34:54,425] {logging_mixin.py:103} INFO - [2021-02-10 09:34:54,425] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:34:54,584] {logging_mixin.py:103} INFO - [2021-02-10 09:34:54,584] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:54,585] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:34:54,586] {logging_mixin.py:103} INFO - [2021-02-10 09:34:54,586] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:34:54,754] {logging_mixin.py:103} INFO - [2021-02-10 09:34:54,754] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:54,754] {logging_mixin.py:103} INFO - [2021-02-10 09:34:54,754] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:34:54,789] {logging_mixin.py:103} INFO - [2021-02-10 09:34:54,789] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:34:54,943] {logging_mixin.py:103} INFO - [2021-02-10 09:34:54,943] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:54,952] {logging_mixin.py:103} INFO - [2021-02-10 09:34:54,952] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:34:55,171] {logging_mixin.py:103} INFO - [2021-02-10 09:34:55,171] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:55,174] {logging_mixin.py:103} INFO - [2021-02-10 09:34:55,174] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:34:55,327] {logging_mixin.py:103} INFO - [2021-02-10 09:34:55,327] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:55,330] {logging_mixin.py:103} INFO - [2021-02-10 09:34:55,329] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:34:55,487] {logging_mixin.py:103} INFO - [2021-02-10 09:34:55,487] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:55,487] {logging_mixin.py:103} INFO - [2021-02-10 09:34:55,487] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:34:55,495] {logging_mixin.py:103} INFO - [2021-02-10 09:34:55,494] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:34:55,714] {logging_mixin.py:103} INFO - [2021-02-10 09:34:55,714] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:55,718] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:34:55,718] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fc0ee46b430>
[2021-02-10 09:34:55,718] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:34:55,718] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:34:55,722] {logging_mixin.py:103} INFO - [2021-02-10 09:34:55,722] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:34:55,921] {logging_mixin.py:103} INFO - [2021-02-10 09:34:55,921] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:55,923] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:34:55,924] {logging_mixin.py:103} INFO - [2021-02-10 09:34:55,924] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:34:56,127] {logging_mixin.py:103} INFO - [2021-02-10 09:34:56,126] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:56,128] {logging_mixin.py:103} INFO - [2021-02-10 09:34:56,128] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:34:56,129] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:34:56,129] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fc0ee46bc10>
[2021-02-10 09:34:56,130] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:34:56,132] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:34:56,137] {logging_mixin.py:103} INFO - [2021-02-10 09:34:56,137] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:34:56,289] {logging_mixin.py:103} INFO - [2021-02-10 09:34:56,289] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:56,290] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:34:56,292] {logging_mixin.py:103} INFO - [2021-02-10 09:34:56,292] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:34:56,482] {logging_mixin.py:103} INFO - [2021-02-10 09:34:56,482] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:56,483] {logging_mixin.py:103} INFO - [2021-02-10 09:34:56,483] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:34:56,484] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:34:56,484] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fc0ee46bc10>
[2021-02-10 09:34:56,484] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:34:56,485] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:34:56,487] {logging_mixin.py:103} INFO - [2021-02-10 09:34:56,487] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:34:56,632] {logging_mixin.py:103} INFO - [2021-02-10 09:34:56,632] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:56,633] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:34:56,634] {logging_mixin.py:103} INFO - [2021-02-10 09:34:56,634] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:34:56,886] {logging_mixin.py:103} INFO - [2021-02-10 09:34:56,886] {cursor.py:560} INFO - query execution done
[2021-02-10 09:34:56,886] {logging_mixin.py:103} INFO - [2021-02-10 09:34:56,886] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:35:03,902] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:35:42,637] {scheduler_job.py:181} INFO - Started process (PID=65413) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:35:42,637] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:35:42,647] {logging_mixin.py:103} INFO - [2021-02-10 09:35:42,647] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:35:47,073] {logging_mixin.py:103} INFO - [2021-02-10 09:35:47,073] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:35:47,699] {logging_mixin.py:103} INFO - [2021-02-10 09:35:47,699] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:35:48,273] {logging_mixin.py:103} INFO - [2021-02-10 09:35:48,273] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:35:48,274] {logging_mixin.py:103} INFO - [2021-02-10 09:35:48,274] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:35:48,274] {logging_mixin.py:103} INFO - [2021-02-10 09:35:48,274] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:35:49,619] {logging_mixin.py:103} INFO - [2021-02-10 09:35:49,619] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:35:49,751] {logging_mixin.py:103} INFO - [2021-02-10 09:35:49,750] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:49,752] {logging_mixin.py:103} INFO - [2021-02-10 09:35:49,752] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:35:49,883] {logging_mixin.py:103} INFO - [2021-02-10 09:35:49,883] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:49,883] {logging_mixin.py:103} INFO - [2021-02-10 09:35:49,883] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:35:50,016] {logging_mixin.py:103} INFO - [2021-02-10 09:35:50,016] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:50,122] {logging_mixin.py:103} INFO - [2021-02-10 09:35:50,122] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:35:50,258] {logging_mixin.py:103} INFO - [2021-02-10 09:35:50,257] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:50,536] {logging_mixin.py:103} INFO - [2021-02-10 09:35:50,536] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:35:50,700] {logging_mixin.py:103} INFO - [2021-02-10 09:35:50,700] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:50,800] {logging_mixin.py:103} INFO - [2021-02-10 09:35:50,800] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:35:50,801] {logging_mixin.py:103} INFO - [2021-02-10 09:35:50,801] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:35:52,454] {logging_mixin.py:103} INFO - [2021-02-10 09:35:52,453] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:52,457] {logging_mixin.py:103} INFO - [2021-02-10 09:35:52,456] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:35:52,468] {logging_mixin.py:103} INFO - [2021-02-10 09:35:52,467] {data_context.py:1281} INFO - Setting run_name to: 20210210T083552.467855Z
[2021-02-10 09:35:52,469] {logging_mixin.py:103} INFO - [2021-02-10 09:35:52,469] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:35:52,481] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:35:52,482] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7faae8eaa430>
[2021-02-10 09:35:52,482] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:35:52,482] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:35:52,484] {logging_mixin.py:103} INFO - [2021-02-10 09:35:52,483] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:35:52,633] {logging_mixin.py:103} INFO - [2021-02-10 09:35:52,633] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:52,634] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:35:52,635] {logging_mixin.py:103} INFO - [2021-02-10 09:35:52,635] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:35:52,787] {logging_mixin.py:103} INFO - [2021-02-10 09:35:52,787] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:52,787] {logging_mixin.py:103} INFO - [2021-02-10 09:35:52,787] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:35:52,788] {logging_mixin.py:103} INFO - [2021-02-10 09:35:52,788] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:35:52,943] {logging_mixin.py:103} INFO - [2021-02-10 09:35:52,943] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:52,945] {logging_mixin.py:103} INFO - [2021-02-10 09:35:52,945] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:35:53,087] {logging_mixin.py:103} INFO - [2021-02-10 09:35:53,087] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:53,089] {logging_mixin.py:103} INFO - [2021-02-10 09:35:53,088] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:35:53,274] {logging_mixin.py:103} INFO - [2021-02-10 09:35:53,274] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:53,275] {logging_mixin.py:103} INFO - [2021-02-10 09:35:53,275] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:35:53,284] {logging_mixin.py:103} INFO - [2021-02-10 09:35:53,284] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:35:53,285] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:35:53,285] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7faae8eaa430>
[2021-02-10 09:35:53,285] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:35:53,285] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:35:53,287] {logging_mixin.py:103} INFO - [2021-02-10 09:35:53,286] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:35:53,448] {logging_mixin.py:103} INFO - [2021-02-10 09:35:53,448] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:53,449] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:35:53,450] {logging_mixin.py:103} INFO - [2021-02-10 09:35:53,450] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:35:53,602] {logging_mixin.py:103} INFO - [2021-02-10 09:35:53,602] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:53,602] {logging_mixin.py:103} INFO - [2021-02-10 09:35:53,602] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:35:53,604] {logging_mixin.py:103} INFO - [2021-02-10 09:35:53,604] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:35:53,839] {logging_mixin.py:103} INFO - [2021-02-10 09:35:53,839] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:53,840] {logging_mixin.py:103} INFO - [2021-02-10 09:35:53,840] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:35:53,982] {logging_mixin.py:103} INFO - [2021-02-10 09:35:53,982] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:53,984] {logging_mixin.py:103} INFO - [2021-02-10 09:35:53,983] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:35:54,148] {logging_mixin.py:103} INFO - [2021-02-10 09:35:54,148] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:54,150] {logging_mixin.py:103} INFO - [2021-02-10 09:35:54,150] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:35:54,310] {logging_mixin.py:103} INFO - [2021-02-10 09:35:54,310] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:54,311] {logging_mixin.py:103} INFO - [2021-02-10 09:35:54,311] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:35:54,314] {logging_mixin.py:103} INFO - [2021-02-10 09:35:54,313] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:35:54,497] {logging_mixin.py:103} INFO - [2021-02-10 09:35:54,496] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:54,501] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:35:54,501] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7faae8eaa430>
[2021-02-10 09:35:54,501] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:35:54,502] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:35:54,504] {logging_mixin.py:103} INFO - [2021-02-10 09:35:54,504] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:35:54,649] {logging_mixin.py:103} INFO - [2021-02-10 09:35:54,649] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:54,649] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:35:54,650] {logging_mixin.py:103} INFO - [2021-02-10 09:35:54,650] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:35:54,797] {logging_mixin.py:103} INFO - [2021-02-10 09:35:54,796] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:54,797] {logging_mixin.py:103} INFO - [2021-02-10 09:35:54,797] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:35:54,797] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:35:54,797] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7faae8eaac10>
[2021-02-10 09:35:54,798] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:35:54,799] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:35:54,800] {logging_mixin.py:103} INFO - [2021-02-10 09:35:54,800] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:35:54,954] {logging_mixin.py:103} INFO - [2021-02-10 09:35:54,954] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:54,955] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:35:54,956] {logging_mixin.py:103} INFO - [2021-02-10 09:35:54,956] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:35:55,124] {logging_mixin.py:103} INFO - [2021-02-10 09:35:55,124] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:55,125] {logging_mixin.py:103} INFO - [2021-02-10 09:35:55,125] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:35:55,125] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:35:55,125] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7faae8eaac10>
[2021-02-10 09:35:55,125] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:35:55,126] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:35:55,128] {logging_mixin.py:103} INFO - [2021-02-10 09:35:55,128] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:35:55,296] {logging_mixin.py:103} INFO - [2021-02-10 09:35:55,296] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:55,297] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:35:55,298] {logging_mixin.py:103} INFO - [2021-02-10 09:35:55,298] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:35:55,434] {logging_mixin.py:103} INFO - [2021-02-10 09:35:55,434] {cursor.py:560} INFO - query execution done
[2021-02-10 09:35:55,434] {logging_mixin.py:103} INFO - [2021-02-10 09:35:55,434] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:36:01,275] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:36:29,376] {scheduler_job.py:181} INFO - Started process (PID=65474) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:36:29,377] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:36:29,377] {logging_mixin.py:103} INFO - [2021-02-10 09:36:29,377] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:36:31,031] {logging_mixin.py:103} INFO - [2021-02-10 09:36:31,030] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:36:31,326] {logging_mixin.py:103} INFO - [2021-02-10 09:36:31,326] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:36:31,666] {logging_mixin.py:103} INFO - [2021-02-10 09:36:31,666] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:36:31,667] {logging_mixin.py:103} INFO - [2021-02-10 09:36:31,667] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:36:31,667] {logging_mixin.py:103} INFO - [2021-02-10 09:36:31,667] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:36:32,893] {logging_mixin.py:103} INFO - [2021-02-10 09:36:32,893] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:36:33,083] {logging_mixin.py:103} INFO - [2021-02-10 09:36:33,083] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:33,085] {logging_mixin.py:103} INFO - [2021-02-10 09:36:33,085] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:36:33,236] {logging_mixin.py:103} INFO - [2021-02-10 09:36:33,235] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:33,236] {logging_mixin.py:103} INFO - [2021-02-10 09:36:33,236] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:36:33,375] {logging_mixin.py:103} INFO - [2021-02-10 09:36:33,375] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:33,465] {logging_mixin.py:103} INFO - [2021-02-10 09:36:33,465] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:36:33,609] {logging_mixin.py:103} INFO - [2021-02-10 09:36:33,609] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:33,727] {logging_mixin.py:103} INFO - [2021-02-10 09:36:33,727] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:36:33,910] {logging_mixin.py:103} INFO - [2021-02-10 09:36:33,910] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:33,952] {logging_mixin.py:103} INFO - [2021-02-10 09:36:33,952] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:36:33,952] {logging_mixin.py:103} INFO - [2021-02-10 09:36:33,952] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:36:35,736] {logging_mixin.py:103} INFO - [2021-02-10 09:36:35,736] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:35,740] {logging_mixin.py:103} INFO - [2021-02-10 09:36:35,739] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:36:35,751] {logging_mixin.py:103} INFO - [2021-02-10 09:36:35,750] {data_context.py:1281} INFO - Setting run_name to: 20210210T083635.750902Z
[2021-02-10 09:36:35,752] {logging_mixin.py:103} INFO - [2021-02-10 09:36:35,752] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:36:35,760] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:36:35,760] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f90976aa430>
[2021-02-10 09:36:35,761] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:36:35,761] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:36:35,763] {logging_mixin.py:103} INFO - [2021-02-10 09:36:35,763] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:36:35,974] {logging_mixin.py:103} INFO - [2021-02-10 09:36:35,974] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:35,975] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:36:35,976] {logging_mixin.py:103} INFO - [2021-02-10 09:36:35,976] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:36:36,161] {logging_mixin.py:103} INFO - [2021-02-10 09:36:36,161] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:36,162] {logging_mixin.py:103} INFO - [2021-02-10 09:36:36,162] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:36:36,164] {logging_mixin.py:103} INFO - [2021-02-10 09:36:36,164] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:36:36,334] {logging_mixin.py:103} INFO - [2021-02-10 09:36:36,334] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:36,336] {logging_mixin.py:103} INFO - [2021-02-10 09:36:36,336] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:36:36,511] {logging_mixin.py:103} INFO - [2021-02-10 09:36:36,511] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:36,514] {logging_mixin.py:103} INFO - [2021-02-10 09:36:36,514] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:36:36,673] {logging_mixin.py:103} INFO - [2021-02-10 09:36:36,673] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:36,673] {logging_mixin.py:103} INFO - [2021-02-10 09:36:36,673] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:36:36,685] {logging_mixin.py:103} INFO - [2021-02-10 09:36:36,685] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:36:36,686] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:36:36,686] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f90976aa430>
[2021-02-10 09:36:36,686] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:36:36,686] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:36:36,688] {logging_mixin.py:103} INFO - [2021-02-10 09:36:36,688] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:36:36,866] {logging_mixin.py:103} INFO - [2021-02-10 09:36:36,866] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:36,867] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:36:36,868] {logging_mixin.py:103} INFO - [2021-02-10 09:36:36,868] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:36:37,062] {logging_mixin.py:103} INFO - [2021-02-10 09:36:37,062] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:37,062] {logging_mixin.py:103} INFO - [2021-02-10 09:36:37,062] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:36:37,065] {logging_mixin.py:103} INFO - [2021-02-10 09:36:37,065] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:36:37,213] {logging_mixin.py:103} INFO - [2021-02-10 09:36:37,213] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:37,215] {logging_mixin.py:103} INFO - [2021-02-10 09:36:37,215] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:36:37,376] {logging_mixin.py:103} INFO - [2021-02-10 09:36:37,375] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:37,379] {logging_mixin.py:103} INFO - [2021-02-10 09:36:37,379] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:36:37,652] {logging_mixin.py:103} INFO - [2021-02-10 09:36:37,652] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:37,654] {logging_mixin.py:103} INFO - [2021-02-10 09:36:37,654] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:36:37,856] {logging_mixin.py:103} INFO - [2021-02-10 09:36:37,856] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:37,856] {logging_mixin.py:103} INFO - [2021-02-10 09:36:37,856] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:36:37,861] {logging_mixin.py:103} INFO - [2021-02-10 09:36:37,861] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:36:38,102] {logging_mixin.py:103} INFO - [2021-02-10 09:36:38,102] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:38,107] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:36:38,107] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f90976aa430>
[2021-02-10 09:36:38,107] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:36:38,108] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:36:38,109] {logging_mixin.py:103} INFO - [2021-02-10 09:36:38,109] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:36:38,281] {logging_mixin.py:103} INFO - [2021-02-10 09:36:38,281] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:38,282] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:36:38,283] {logging_mixin.py:103} INFO - [2021-02-10 09:36:38,283] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:36:38,443] {logging_mixin.py:103} INFO - [2021-02-10 09:36:38,443] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:38,443] {logging_mixin.py:103} INFO - [2021-02-10 09:36:38,443] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:36:38,444] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:36:38,445] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f90976aac10>
[2021-02-10 09:36:38,445] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:36:38,447] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:36:38,449] {logging_mixin.py:103} INFO - [2021-02-10 09:36:38,449] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:36:38,607] {logging_mixin.py:103} INFO - [2021-02-10 09:36:38,607] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:38,608] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:36:38,610] {logging_mixin.py:103} INFO - [2021-02-10 09:36:38,610] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:36:38,769] {logging_mixin.py:103} INFO - [2021-02-10 09:36:38,769] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:38,770] {logging_mixin.py:103} INFO - [2021-02-10 09:36:38,770] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:36:38,771] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:36:38,771] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f90976aac10>
[2021-02-10 09:36:38,771] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:36:38,772] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:36:38,775] {logging_mixin.py:103} INFO - [2021-02-10 09:36:38,775] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:36:38,924] {logging_mixin.py:103} INFO - [2021-02-10 09:36:38,924] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:38,925] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:36:38,927] {logging_mixin.py:103} INFO - [2021-02-10 09:36:38,927] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:36:39,109] {logging_mixin.py:103} INFO - [2021-02-10 09:36:39,109] {cursor.py:560} INFO - query execution done
[2021-02-10 09:36:39,109] {logging_mixin.py:103} INFO - [2021-02-10 09:36:39,109] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:36:43,612] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:37:10,744] {scheduler_job.py:181} INFO - Started process (PID=65534) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:37:10,745] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:37:10,745] {logging_mixin.py:103} INFO - [2021-02-10 09:37:10,745] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:37:12,340] {logging_mixin.py:103} INFO - [2021-02-10 09:37:12,339] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:37:12,617] {logging_mixin.py:103} INFO - [2021-02-10 09:37:12,617] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:37:12,937] {logging_mixin.py:103} INFO - [2021-02-10 09:37:12,937] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:37:12,937] {logging_mixin.py:103} INFO - [2021-02-10 09:37:12,937] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:37:12,937] {logging_mixin.py:103} INFO - [2021-02-10 09:37:12,937] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:37:14,173] {logging_mixin.py:103} INFO - [2021-02-10 09:37:14,173] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:37:14,302] {logging_mixin.py:103} INFO - [2021-02-10 09:37:14,302] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:14,304] {logging_mixin.py:103} INFO - [2021-02-10 09:37:14,304] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:37:14,452] {logging_mixin.py:103} INFO - [2021-02-10 09:37:14,452] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:14,453] {logging_mixin.py:103} INFO - [2021-02-10 09:37:14,453] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:37:14,686] {logging_mixin.py:103} INFO - [2021-02-10 09:37:14,685] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:14,784] {logging_mixin.py:103} INFO - [2021-02-10 09:37:14,784] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:37:14,927] {logging_mixin.py:103} INFO - [2021-02-10 09:37:14,927] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:15,044] {logging_mixin.py:103} INFO - [2021-02-10 09:37:15,044] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:37:15,223] {logging_mixin.py:103} INFO - [2021-02-10 09:37:15,223] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:15,265] {logging_mixin.py:103} INFO - [2021-02-10 09:37:15,265] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:37:15,265] {logging_mixin.py:103} INFO - [2021-02-10 09:37:15,265] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:37:17,244] {logging_mixin.py:103} INFO - [2021-02-10 09:37:17,244] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:17,247] {logging_mixin.py:103} INFO - [2021-02-10 09:37:17,247] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:37:17,258] {logging_mixin.py:103} INFO - [2021-02-10 09:37:17,258] {data_context.py:1281} INFO - Setting run_name to: 20210210T083717.258084Z
[2021-02-10 09:37:17,259] {logging_mixin.py:103} INFO - [2021-02-10 09:37:17,259] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:37:17,268] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:37:17,268] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7ff7416aa430>
[2021-02-10 09:37:17,268] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:37:17,268] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:37:17,270] {logging_mixin.py:103} INFO - [2021-02-10 09:37:17,270] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:37:17,474] {logging_mixin.py:103} INFO - [2021-02-10 09:37:17,474] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:17,475] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:37:17,476] {logging_mixin.py:103} INFO - [2021-02-10 09:37:17,476] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:37:17,662] {logging_mixin.py:103} INFO - [2021-02-10 09:37:17,662] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:17,663] {logging_mixin.py:103} INFO - [2021-02-10 09:37:17,662] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:37:17,665] {logging_mixin.py:103} INFO - [2021-02-10 09:37:17,665] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:37:18,479] {logging_mixin.py:103} INFO - [2021-02-10 09:37:18,479] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:18,481] {logging_mixin.py:103} INFO - [2021-02-10 09:37:18,481] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:37:18,663] {logging_mixin.py:103} INFO - [2021-02-10 09:37:18,662] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:18,665] {logging_mixin.py:103} INFO - [2021-02-10 09:37:18,665] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:37:18,828] {logging_mixin.py:103} INFO - [2021-02-10 09:37:18,828] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:18,828] {logging_mixin.py:103} INFO - [2021-02-10 09:37:18,828] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:37:18,840] {logging_mixin.py:103} INFO - [2021-02-10 09:37:18,840] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:37:18,841] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:37:18,841] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7ff7416aa430>
[2021-02-10 09:37:18,841] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:37:18,841] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:37:18,843] {logging_mixin.py:103} INFO - [2021-02-10 09:37:18,843] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:37:19,236] {logging_mixin.py:103} INFO - [2021-02-10 09:37:19,236] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:19,237] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:37:19,239] {logging_mixin.py:103} INFO - [2021-02-10 09:37:19,239] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:37:19,418] {logging_mixin.py:103} INFO - [2021-02-10 09:37:19,418] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:19,418] {logging_mixin.py:103} INFO - [2021-02-10 09:37:19,418] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:37:19,421] {logging_mixin.py:103} INFO - [2021-02-10 09:37:19,421] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:37:19,584] {logging_mixin.py:103} INFO - [2021-02-10 09:37:19,584] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:19,585] {logging_mixin.py:103} INFO - [2021-02-10 09:37:19,585] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:37:19,779] {logging_mixin.py:103} INFO - [2021-02-10 09:37:19,779] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:19,782] {logging_mixin.py:103} INFO - [2021-02-10 09:37:19,782] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:37:19,943] {logging_mixin.py:103} INFO - [2021-02-10 09:37:19,943] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:19,946] {logging_mixin.py:103} INFO - [2021-02-10 09:37:19,946] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:37:20,143] {logging_mixin.py:103} INFO - [2021-02-10 09:37:20,143] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:20,144] {logging_mixin.py:103} INFO - [2021-02-10 09:37:20,144] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:37:20,147] {logging_mixin.py:103} INFO - [2021-02-10 09:37:20,147] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:37:20,309] {logging_mixin.py:103} INFO - [2021-02-10 09:37:20,309] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:20,314] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:37:20,314] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7ff7416aa430>
[2021-02-10 09:37:20,314] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:37:20,315] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:37:20,316] {logging_mixin.py:103} INFO - [2021-02-10 09:37:20,316] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:37:20,484] {logging_mixin.py:103} INFO - [2021-02-10 09:37:20,484] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:20,485] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:37:20,486] {logging_mixin.py:103} INFO - [2021-02-10 09:37:20,486] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:37:20,695] {logging_mixin.py:103} INFO - [2021-02-10 09:37:20,695] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:20,696] {logging_mixin.py:103} INFO - [2021-02-10 09:37:20,696] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:37:20,697] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:37:20,697] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7ff7416aac10>
[2021-02-10 09:37:20,697] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:37:20,699] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:37:20,701] {logging_mixin.py:103} INFO - [2021-02-10 09:37:20,701] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:37:20,869] {logging_mixin.py:103} INFO - [2021-02-10 09:37:20,869] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:20,870] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:37:20,872] {logging_mixin.py:103} INFO - [2021-02-10 09:37:20,871] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:37:21,036] {logging_mixin.py:103} INFO - [2021-02-10 09:37:21,036] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:21,037] {logging_mixin.py:103} INFO - [2021-02-10 09:37:21,037] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:37:21,038] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:37:21,038] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7ff7416aac10>
[2021-02-10 09:37:21,038] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:37:21,039] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:37:21,042] {logging_mixin.py:103} INFO - [2021-02-10 09:37:21,042] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:37:21,218] {logging_mixin.py:103} INFO - [2021-02-10 09:37:21,217] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:21,219] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:37:21,220] {logging_mixin.py:103} INFO - [2021-02-10 09:37:21,220] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:37:21,361] {logging_mixin.py:103} INFO - [2021-02-10 09:37:21,361] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:21,361] {logging_mixin.py:103} INFO - [2021-02-10 09:37:21,361] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:37:26,055] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:37:51,612] {scheduler_job.py:181} INFO - Started process (PID=65595) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:37:51,612] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:37:51,612] {logging_mixin.py:103} INFO - [2021-02-10 09:37:51,612] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:37:53,250] {logging_mixin.py:103} INFO - [2021-02-10 09:37:53,250] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:37:53,531] {logging_mixin.py:103} INFO - [2021-02-10 09:37:53,531] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:37:53,873] {logging_mixin.py:103} INFO - [2021-02-10 09:37:53,873] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:37:53,873] {logging_mixin.py:103} INFO - [2021-02-10 09:37:53,873] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:37:53,873] {logging_mixin.py:103} INFO - [2021-02-10 09:37:53,873] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:37:54,907] {logging_mixin.py:103} INFO - [2021-02-10 09:37:54,907] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:37:55,081] {logging_mixin.py:103} INFO - [2021-02-10 09:37:55,081] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:55,083] {logging_mixin.py:103} INFO - [2021-02-10 09:37:55,083] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:37:55,237] {logging_mixin.py:103} INFO - [2021-02-10 09:37:55,237] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:55,238] {logging_mixin.py:103} INFO - [2021-02-10 09:37:55,238] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:37:55,361] {logging_mixin.py:103} INFO - [2021-02-10 09:37:55,361] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:55,451] {logging_mixin.py:103} INFO - [2021-02-10 09:37:55,451] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:37:55,600] {logging_mixin.py:103} INFO - [2021-02-10 09:37:55,600] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:55,726] {logging_mixin.py:103} INFO - [2021-02-10 09:37:55,725] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:37:55,893] {logging_mixin.py:103} INFO - [2021-02-10 09:37:55,893] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:55,935] {logging_mixin.py:103} INFO - [2021-02-10 09:37:55,935] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:37:55,936] {logging_mixin.py:103} INFO - [2021-02-10 09:37:55,936] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:37:57,558] {logging_mixin.py:103} INFO - [2021-02-10 09:37:57,558] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:57,562] {logging_mixin.py:103} INFO - [2021-02-10 09:37:57,562] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:37:57,572] {logging_mixin.py:103} INFO - [2021-02-10 09:37:57,572] {data_context.py:1281} INFO - Setting run_name to: 20210210T083757.572799Z
[2021-02-10 09:37:57,574] {logging_mixin.py:103} INFO - [2021-02-10 09:37:57,573] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:37:57,582] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:37:57,582] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f9374d6b430>
[2021-02-10 09:37:57,582] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:37:57,583] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:37:57,584] {logging_mixin.py:103} INFO - [2021-02-10 09:37:57,584] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:37:57,728] {logging_mixin.py:103} INFO - [2021-02-10 09:37:57,728] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:57,729] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:37:57,731] {logging_mixin.py:103} INFO - [2021-02-10 09:37:57,731] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:37:57,873] {logging_mixin.py:103} INFO - [2021-02-10 09:37:57,873] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:57,873] {logging_mixin.py:103} INFO - [2021-02-10 09:37:57,873] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:37:57,875] {logging_mixin.py:103} INFO - [2021-02-10 09:37:57,875] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:37:58,046] {logging_mixin.py:103} INFO - [2021-02-10 09:37:58,045] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:58,048] {logging_mixin.py:103} INFO - [2021-02-10 09:37:58,048] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:37:58,197] {logging_mixin.py:103} INFO - [2021-02-10 09:37:58,197] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:58,200] {logging_mixin.py:103} INFO - [2021-02-10 09:37:58,200] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:37:58,351] {logging_mixin.py:103} INFO - [2021-02-10 09:37:58,351] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:58,351] {logging_mixin.py:103} INFO - [2021-02-10 09:37:58,351] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:37:58,364] {logging_mixin.py:103} INFO - [2021-02-10 09:37:58,364] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:37:58,365] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:37:58,365] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f9374d6b430>
[2021-02-10 09:37:58,365] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:37:58,365] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:37:58,367] {logging_mixin.py:103} INFO - [2021-02-10 09:37:58,367] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:37:58,519] {logging_mixin.py:103} INFO - [2021-02-10 09:37:58,519] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:58,520] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:37:58,521] {logging_mixin.py:103} INFO - [2021-02-10 09:37:58,521] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:37:58,772] {logging_mixin.py:103} INFO - [2021-02-10 09:37:58,772] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:58,772] {logging_mixin.py:103} INFO - [2021-02-10 09:37:58,772] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:37:58,775] {logging_mixin.py:103} INFO - [2021-02-10 09:37:58,775] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:37:58,933] {logging_mixin.py:103} INFO - [2021-02-10 09:37:58,932] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:58,934] {logging_mixin.py:103} INFO - [2021-02-10 09:37:58,934] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:37:59,083] {logging_mixin.py:103} INFO - [2021-02-10 09:37:59,083] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:59,086] {logging_mixin.py:103} INFO - [2021-02-10 09:37:59,086] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:37:59,257] {logging_mixin.py:103} INFO - [2021-02-10 09:37:59,256] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:59,259] {logging_mixin.py:103} INFO - [2021-02-10 09:37:59,259] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:37:59,414] {logging_mixin.py:103} INFO - [2021-02-10 09:37:59,414] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:59,414] {logging_mixin.py:103} INFO - [2021-02-10 09:37:59,414] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:37:59,418] {logging_mixin.py:103} INFO - [2021-02-10 09:37:59,418] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:37:59,605] {logging_mixin.py:103} INFO - [2021-02-10 09:37:59,605] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:59,610] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:37:59,610] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f9374d6b430>
[2021-02-10 09:37:59,610] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:37:59,611] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:37:59,613] {logging_mixin.py:103} INFO - [2021-02-10 09:37:59,613] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:37:59,771] {logging_mixin.py:103} INFO - [2021-02-10 09:37:59,771] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:59,772] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:37:59,773] {logging_mixin.py:103} INFO - [2021-02-10 09:37:59,773] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:37:59,921] {logging_mixin.py:103} INFO - [2021-02-10 09:37:59,921] {cursor.py:560} INFO - query execution done
[2021-02-10 09:37:59,921] {logging_mixin.py:103} INFO - [2021-02-10 09:37:59,921] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:37:59,922] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:37:59,923] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f9374d6bc10>
[2021-02-10 09:37:59,923] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:37:59,925] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:37:59,927] {logging_mixin.py:103} INFO - [2021-02-10 09:37:59,927] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:38:00,078] {logging_mixin.py:103} INFO - [2021-02-10 09:38:00,078] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:00,079] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:38:00,081] {logging_mixin.py:103} INFO - [2021-02-10 09:38:00,081] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:38:00,230] {logging_mixin.py:103} INFO - [2021-02-10 09:38:00,230] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:00,230] {logging_mixin.py:103} INFO - [2021-02-10 09:38:00,230] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:38:00,231] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:38:00,231] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f9374d6bc10>
[2021-02-10 09:38:00,232] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:38:00,233] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:38:00,235] {logging_mixin.py:103} INFO - [2021-02-10 09:38:00,235] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:38:00,402] {logging_mixin.py:103} INFO - [2021-02-10 09:38:00,401] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:00,403] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:38:00,404] {logging_mixin.py:103} INFO - [2021-02-10 09:38:00,404] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:38:00,552] {logging_mixin.py:103} INFO - [2021-02-10 09:38:00,552] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:00,552] {logging_mixin.py:103} INFO - [2021-02-10 09:38:00,552] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:38:05,153] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:38:31,199] {scheduler_job.py:181} INFO - Started process (PID=65665) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:38:31,200] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:38:31,200] {logging_mixin.py:103} INFO - [2021-02-10 09:38:31,200] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:38:32,983] {logging_mixin.py:103} INFO - [2021-02-10 09:38:32,983] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:38:33,260] {logging_mixin.py:103} INFO - [2021-02-10 09:38:33,260] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:38:33,583] {logging_mixin.py:103} INFO - [2021-02-10 09:38:33,583] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:38:33,583] {logging_mixin.py:103} INFO - [2021-02-10 09:38:33,583] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:38:33,584] {logging_mixin.py:103} INFO - [2021-02-10 09:38:33,584] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:38:34,664] {logging_mixin.py:103} INFO - [2021-02-10 09:38:34,663] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:38:34,831] {logging_mixin.py:103} INFO - [2021-02-10 09:38:34,830] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:34,832] {logging_mixin.py:103} INFO - [2021-02-10 09:38:34,832] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:38:34,974] {logging_mixin.py:103} INFO - [2021-02-10 09:38:34,973] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:34,974] {logging_mixin.py:103} INFO - [2021-02-10 09:38:34,974] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:38:35,356] {logging_mixin.py:103} INFO - [2021-02-10 09:38:35,356] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:35,357] {logging_mixin.py:103} INFO - [2021-02-10 09:38:35,357] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:38:35,508] {logging_mixin.py:103} INFO - [2021-02-10 09:38:35,508] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:35,624] {logging_mixin.py:103} INFO - [2021-02-10 09:38:35,624] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:38:35,793] {logging_mixin.py:103} INFO - [2021-02-10 09:38:35,793] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:35,834] {logging_mixin.py:103} INFO - [2021-02-10 09:38:35,834] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:38:35,835] {logging_mixin.py:103} INFO - [2021-02-10 09:38:35,835] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:38:37,425] {logging_mixin.py:103} INFO - [2021-02-10 09:38:37,425] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:37,429] {logging_mixin.py:103} INFO - [2021-02-10 09:38:37,429] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:38:37,439] {logging_mixin.py:103} INFO - [2021-02-10 09:38:37,439] {data_context.py:1281} INFO - Setting run_name to: 20210210T083837.439822Z
[2021-02-10 09:38:37,441] {logging_mixin.py:103} INFO - [2021-02-10 09:38:37,440] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:38:37,449] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:38:37,450] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f9ddad6b430>
[2021-02-10 09:38:37,450] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:38:37,450] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:38:37,452] {logging_mixin.py:103} INFO - [2021-02-10 09:38:37,452] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:38:37,609] {logging_mixin.py:103} INFO - [2021-02-10 09:38:37,609] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:37,610] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:38:37,611] {logging_mixin.py:103} INFO - [2021-02-10 09:38:37,611] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:38:37,780] {logging_mixin.py:103} INFO - [2021-02-10 09:38:37,780] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:37,780] {logging_mixin.py:103} INFO - [2021-02-10 09:38:37,780] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:38:37,782] {logging_mixin.py:103} INFO - [2021-02-10 09:38:37,782] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:38:37,944] {logging_mixin.py:103} INFO - [2021-02-10 09:38:37,944] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:37,946] {logging_mixin.py:103} INFO - [2021-02-10 09:38:37,946] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:38:38,213] {logging_mixin.py:103} INFO - [2021-02-10 09:38:38,212] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:38,215] {logging_mixin.py:103} INFO - [2021-02-10 09:38:38,215] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:38:38,360] {logging_mixin.py:103} INFO - [2021-02-10 09:38:38,360] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:38,360] {logging_mixin.py:103} INFO - [2021-02-10 09:38:38,360] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:38:38,372] {logging_mixin.py:103} INFO - [2021-02-10 09:38:38,372] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:38:38,373] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:38:38,373] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f9ddad6b430>
[2021-02-10 09:38:38,373] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:38:38,373] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:38:38,374] {logging_mixin.py:103} INFO - [2021-02-10 09:38:38,374] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:38:38,559] {logging_mixin.py:103} INFO - [2021-02-10 09:38:38,559] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:38,560] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:38:38,562] {logging_mixin.py:103} INFO - [2021-02-10 09:38:38,562] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:38:38,714] {logging_mixin.py:103} INFO - [2021-02-10 09:38:38,714] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:38,714] {logging_mixin.py:103} INFO - [2021-02-10 09:38:38,714] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:38:38,717] {logging_mixin.py:103} INFO - [2021-02-10 09:38:38,717] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:38:38,873] {logging_mixin.py:103} INFO - [2021-02-10 09:38:38,873] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:38,875] {logging_mixin.py:103} INFO - [2021-02-10 09:38:38,874] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:38:39,030] {logging_mixin.py:103} INFO - [2021-02-10 09:38:39,029] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:39,034] {logging_mixin.py:103} INFO - [2021-02-10 09:38:39,034] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:38:39,204] {logging_mixin.py:103} INFO - [2021-02-10 09:38:39,203] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:39,206] {logging_mixin.py:103} INFO - [2021-02-10 09:38:39,206] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:38:39,404] {logging_mixin.py:103} INFO - [2021-02-10 09:38:39,404] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:39,405] {logging_mixin.py:103} INFO - [2021-02-10 09:38:39,405] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:38:39,409] {logging_mixin.py:103} INFO - [2021-02-10 09:38:39,409] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:38:39,575] {logging_mixin.py:103} INFO - [2021-02-10 09:38:39,575] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:39,580] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:38:39,580] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f9ddad6b430>
[2021-02-10 09:38:39,580] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:38:39,581] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:38:39,583] {logging_mixin.py:103} INFO - [2021-02-10 09:38:39,583] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:38:39,755] {logging_mixin.py:103} INFO - [2021-02-10 09:38:39,754] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:39,755] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:38:39,757] {logging_mixin.py:103} INFO - [2021-02-10 09:38:39,757] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:38:39,913] {logging_mixin.py:103} INFO - [2021-02-10 09:38:39,913] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:39,914] {logging_mixin.py:103} INFO - [2021-02-10 09:38:39,913] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:38:39,914] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:38:39,914] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f9ddad6bc10>
[2021-02-10 09:38:39,915] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:38:39,916] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:38:39,918] {logging_mixin.py:103} INFO - [2021-02-10 09:38:39,918] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:38:40,074] {logging_mixin.py:103} INFO - [2021-02-10 09:38:40,074] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:40,076] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:38:40,077] {logging_mixin.py:103} INFO - [2021-02-10 09:38:40,077] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:38:40,264] {logging_mixin.py:103} INFO - [2021-02-10 09:38:40,264] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:40,264] {logging_mixin.py:103} INFO - [2021-02-10 09:38:40,264] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:38:40,265] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:38:40,266] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f9ddad6bc10>
[2021-02-10 09:38:40,266] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:38:40,266] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:38:40,268] {logging_mixin.py:103} INFO - [2021-02-10 09:38:40,268] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:38:40,409] {logging_mixin.py:103} INFO - [2021-02-10 09:38:40,409] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:40,410] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:38:40,412] {logging_mixin.py:103} INFO - [2021-02-10 09:38:40,412] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:38:40,584] {logging_mixin.py:103} INFO - [2021-02-10 09:38:40,583] {cursor.py:560} INFO - query execution done
[2021-02-10 09:38:40,584] {logging_mixin.py:103} INFO - [2021-02-10 09:38:40,584] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:38:45,486] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:39:12,392] {scheduler_job.py:181} INFO - Started process (PID=65732) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:39:12,393] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:39:12,393] {logging_mixin.py:103} INFO - [2021-02-10 09:39:12,393] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:39:13,986] {logging_mixin.py:103} INFO - [2021-02-10 09:39:13,986] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:39:14,269] {logging_mixin.py:103} INFO - [2021-02-10 09:39:14,269] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:39:14,590] {logging_mixin.py:103} INFO - [2021-02-10 09:39:14,590] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:39:14,590] {logging_mixin.py:103} INFO - [2021-02-10 09:39:14,590] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:39:14,590] {logging_mixin.py:103} INFO - [2021-02-10 09:39:14,590] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:39:15,827] {logging_mixin.py:103} INFO - [2021-02-10 09:39:15,827] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:39:15,972] {logging_mixin.py:103} INFO - [2021-02-10 09:39:15,972] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:15,974] {logging_mixin.py:103} INFO - [2021-02-10 09:39:15,974] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:39:16,165] {logging_mixin.py:103} INFO - [2021-02-10 09:39:16,164] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:16,165] {logging_mixin.py:103} INFO - [2021-02-10 09:39:16,165] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:39:16,317] {logging_mixin.py:103} INFO - [2021-02-10 09:39:16,317] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:16,406] {logging_mixin.py:103} INFO - [2021-02-10 09:39:16,406] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:39:16,574] {logging_mixin.py:103} INFO - [2021-02-10 09:39:16,574] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:16,694] {logging_mixin.py:103} INFO - [2021-02-10 09:39:16,694] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:39:16,845] {logging_mixin.py:103} INFO - [2021-02-10 09:39:16,845] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:16,886] {logging_mixin.py:103} INFO - [2021-02-10 09:39:16,886] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:39:16,886] {logging_mixin.py:103} INFO - [2021-02-10 09:39:16,886] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:39:20,128] {logging_mixin.py:103} INFO - [2021-02-10 09:39:20,128] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:20,131] {logging_mixin.py:103} INFO - [2021-02-10 09:39:20,131] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:39:20,142] {logging_mixin.py:103} INFO - [2021-02-10 09:39:20,142] {data_context.py:1281} INFO - Setting run_name to: 20210210T083920.142150Z
[2021-02-10 09:39:20,143] {logging_mixin.py:103} INFO - [2021-02-10 09:39:20,143] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:39:20,154] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:39:20,154] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fc4dbeaa430>
[2021-02-10 09:39:20,154] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:39:20,154] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:39:20,157] {logging_mixin.py:103} INFO - [2021-02-10 09:39:20,156] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:39:20,331] {logging_mixin.py:103} INFO - [2021-02-10 09:39:20,331] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:20,332] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:39:20,333] {logging_mixin.py:103} INFO - [2021-02-10 09:39:20,333] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:39:20,562] {logging_mixin.py:103} INFO - [2021-02-10 09:39:20,561] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:20,562] {logging_mixin.py:103} INFO - [2021-02-10 09:39:20,562] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:39:20,564] {logging_mixin.py:103} INFO - [2021-02-10 09:39:20,564] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:39:20,751] {logging_mixin.py:103} INFO - [2021-02-10 09:39:20,751] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:20,753] {logging_mixin.py:103} INFO - [2021-02-10 09:39:20,753] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:39:20,912] {logging_mixin.py:103} INFO - [2021-02-10 09:39:20,912] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:20,915] {logging_mixin.py:103} INFO - [2021-02-10 09:39:20,915] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:39:21,098] {logging_mixin.py:103} INFO - [2021-02-10 09:39:21,098] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:21,099] {logging_mixin.py:103} INFO - [2021-02-10 09:39:21,099] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:39:21,110] {logging_mixin.py:103} INFO - [2021-02-10 09:39:21,110] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:39:21,111] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:39:21,111] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fc4dbeaa430>
[2021-02-10 09:39:21,111] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:39:21,112] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:39:21,113] {logging_mixin.py:103} INFO - [2021-02-10 09:39:21,113] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:39:21,277] {logging_mixin.py:103} INFO - [2021-02-10 09:39:21,277] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:21,278] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:39:21,279] {logging_mixin.py:103} INFO - [2021-02-10 09:39:21,279] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:39:21,453] {logging_mixin.py:103} INFO - [2021-02-10 09:39:21,453] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:21,454] {logging_mixin.py:103} INFO - [2021-02-10 09:39:21,454] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:39:21,457] {logging_mixin.py:103} INFO - [2021-02-10 09:39:21,457] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:39:21,641] {logging_mixin.py:103} INFO - [2021-02-10 09:39:21,640] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:21,642] {logging_mixin.py:103} INFO - [2021-02-10 09:39:21,642] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:39:21,818] {logging_mixin.py:103} INFO - [2021-02-10 09:39:21,818] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:21,821] {logging_mixin.py:103} INFO - [2021-02-10 09:39:21,821] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:39:21,991] {logging_mixin.py:103} INFO - [2021-02-10 09:39:21,990] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:21,993] {logging_mixin.py:103} INFO - [2021-02-10 09:39:21,993] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:39:22,155] {logging_mixin.py:103} INFO - [2021-02-10 09:39:22,155] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:22,156] {logging_mixin.py:103} INFO - [2021-02-10 09:39:22,155] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:39:22,159] {logging_mixin.py:103} INFO - [2021-02-10 09:39:22,159] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:39:22,324] {logging_mixin.py:103} INFO - [2021-02-10 09:39:22,323] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:22,328] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:39:22,328] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fc4dbeaa430>
[2021-02-10 09:39:22,328] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:39:22,329] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:39:22,331] {logging_mixin.py:103} INFO - [2021-02-10 09:39:22,330] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:39:22,492] {logging_mixin.py:103} INFO - [2021-02-10 09:39:22,492] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:22,493] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:39:22,494] {logging_mixin.py:103} INFO - [2021-02-10 09:39:22,494] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:39:22,648] {logging_mixin.py:103} INFO - [2021-02-10 09:39:22,648] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:22,649] {logging_mixin.py:103} INFO - [2021-02-10 09:39:22,649] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:39:22,649] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:39:22,650] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fc4dbeaac10>
[2021-02-10 09:39:22,650] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:39:22,652] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:39:22,654] {logging_mixin.py:103} INFO - [2021-02-10 09:39:22,654] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:39:22,816] {logging_mixin.py:103} INFO - [2021-02-10 09:39:22,816] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:22,817] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:39:22,818] {logging_mixin.py:103} INFO - [2021-02-10 09:39:22,818] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:39:22,974] {logging_mixin.py:103} INFO - [2021-02-10 09:39:22,974] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:22,974] {logging_mixin.py:103} INFO - [2021-02-10 09:39:22,974] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:39:22,975] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:39:22,975] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fc4dbeaac10>
[2021-02-10 09:39:22,976] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:39:22,977] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:39:22,979] {logging_mixin.py:103} INFO - [2021-02-10 09:39:22,979] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:39:23,151] {logging_mixin.py:103} INFO - [2021-02-10 09:39:23,151] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:23,152] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:39:23,153] {logging_mixin.py:103} INFO - [2021-02-10 09:39:23,152] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:39:23,318] {logging_mixin.py:103} INFO - [2021-02-10 09:39:23,317] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:23,319] {logging_mixin.py:103} INFO - [2021-02-10 09:39:23,318] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:39:27,689] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:39:54,144] {scheduler_job.py:181} INFO - Started process (PID=65792) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:39:54,144] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:39:54,145] {logging_mixin.py:103} INFO - [2021-02-10 09:39:54,145] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:39:55,724] {logging_mixin.py:103} INFO - [2021-02-10 09:39:55,724] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:39:55,999] {logging_mixin.py:103} INFO - [2021-02-10 09:39:55,999] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:39:56,321] {logging_mixin.py:103} INFO - [2021-02-10 09:39:56,321] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:39:56,321] {logging_mixin.py:103} INFO - [2021-02-10 09:39:56,321] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:39:56,321] {logging_mixin.py:103} INFO - [2021-02-10 09:39:56,321] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:39:57,921] {logging_mixin.py:103} INFO - [2021-02-10 09:39:57,921] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:39:58,080] {logging_mixin.py:103} INFO - [2021-02-10 09:39:58,080] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:58,082] {logging_mixin.py:103} INFO - [2021-02-10 09:39:58,082] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:39:58,266] {logging_mixin.py:103} INFO - [2021-02-10 09:39:58,266] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:58,267] {logging_mixin.py:103} INFO - [2021-02-10 09:39:58,267] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:39:58,426] {logging_mixin.py:103} INFO - [2021-02-10 09:39:58,426] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:58,516] {logging_mixin.py:103} INFO - [2021-02-10 09:39:58,515] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:39:58,667] {logging_mixin.py:103} INFO - [2021-02-10 09:39:58,667] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:58,782] {logging_mixin.py:103} INFO - [2021-02-10 09:39:58,781] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:39:58,952] {logging_mixin.py:103} INFO - [2021-02-10 09:39:58,952] {cursor.py:560} INFO - query execution done
[2021-02-10 09:39:58,993] {logging_mixin.py:103} INFO - [2021-02-10 09:39:58,993] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:39:58,993] {logging_mixin.py:103} INFO - [2021-02-10 09:39:58,993] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:40:01,293] {logging_mixin.py:103} INFO - [2021-02-10 09:40:01,292] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:01,294] {logging_mixin.py:103} INFO - [2021-02-10 09:40:01,294] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:40:01,303] {logging_mixin.py:103} INFO - [2021-02-10 09:40:01,303] {data_context.py:1281} INFO - Setting run_name to: 20210210T084001.303612Z
[2021-02-10 09:40:01,304] {logging_mixin.py:103} INFO - [2021-02-10 09:40:01,304] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:40:01,312] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:40:01,313] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7ff1ccd6b430>
[2021-02-10 09:40:01,313] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:40:01,313] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:40:01,315] {logging_mixin.py:103} INFO - [2021-02-10 09:40:01,315] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:40:01,514] {logging_mixin.py:103} INFO - [2021-02-10 09:40:01,513] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:01,514] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:40:01,515] {logging_mixin.py:103} INFO - [2021-02-10 09:40:01,515] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:40:01,690] {logging_mixin.py:103} INFO - [2021-02-10 09:40:01,690] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:01,691] {logging_mixin.py:103} INFO - [2021-02-10 09:40:01,691] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:40:01,693] {logging_mixin.py:103} INFO - [2021-02-10 09:40:01,693] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:40:01,861] {logging_mixin.py:103} INFO - [2021-02-10 09:40:01,861] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:01,864] {logging_mixin.py:103} INFO - [2021-02-10 09:40:01,864] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:40:02,025] {logging_mixin.py:103} INFO - [2021-02-10 09:40:02,024] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:02,026] {logging_mixin.py:103} INFO - [2021-02-10 09:40:02,026] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:40:02,254] {logging_mixin.py:103} INFO - [2021-02-10 09:40:02,254] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:02,255] {logging_mixin.py:103} INFO - [2021-02-10 09:40:02,255] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:40:02,267] {logging_mixin.py:103} INFO - [2021-02-10 09:40:02,267] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:40:02,268] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:40:02,268] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7ff1ccd6b430>
[2021-02-10 09:40:02,268] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:40:02,269] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:40:02,270] {logging_mixin.py:103} INFO - [2021-02-10 09:40:02,270] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:40:02,431] {logging_mixin.py:103} INFO - [2021-02-10 09:40:02,430] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:02,431] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:40:02,433] {logging_mixin.py:103} INFO - [2021-02-10 09:40:02,433] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:40:02,624] {logging_mixin.py:103} INFO - [2021-02-10 09:40:02,624] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:02,624] {logging_mixin.py:103} INFO - [2021-02-10 09:40:02,624] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:40:02,627] {logging_mixin.py:103} INFO - [2021-02-10 09:40:02,627] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:40:02,771] {logging_mixin.py:103} INFO - [2021-02-10 09:40:02,771] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:02,773] {logging_mixin.py:103} INFO - [2021-02-10 09:40:02,772] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:40:02,933] {logging_mixin.py:103} INFO - [2021-02-10 09:40:02,933] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:02,936] {logging_mixin.py:103} INFO - [2021-02-10 09:40:02,936] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:40:03,127] {logging_mixin.py:103} INFO - [2021-02-10 09:40:03,127] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:03,130] {logging_mixin.py:103} INFO - [2021-02-10 09:40:03,130] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:40:03,375] {logging_mixin.py:103} INFO - [2021-02-10 09:40:03,375] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:03,376] {logging_mixin.py:103} INFO - [2021-02-10 09:40:03,376] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:40:03,380] {logging_mixin.py:103} INFO - [2021-02-10 09:40:03,380] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:40:03,555] {logging_mixin.py:103} INFO - [2021-02-10 09:40:03,555] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:03,560] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:40:03,560] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7ff1ccd6b430>
[2021-02-10 09:40:03,561] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:40:03,561] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:40:03,563] {logging_mixin.py:103} INFO - [2021-02-10 09:40:03,563] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:40:03,846] {logging_mixin.py:103} INFO - [2021-02-10 09:40:03,846] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:03,847] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:40:03,848] {logging_mixin.py:103} INFO - [2021-02-10 09:40:03,848] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:40:04,162] {logging_mixin.py:103} INFO - [2021-02-10 09:40:04,161] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:04,162] {logging_mixin.py:103} INFO - [2021-02-10 09:40:04,162] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:40:04,163] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:40:04,163] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7ff1ccd6bc10>
[2021-02-10 09:40:04,163] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:40:04,165] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:40:04,168] {logging_mixin.py:103} INFO - [2021-02-10 09:40:04,168] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:40:04,337] {logging_mixin.py:103} INFO - [2021-02-10 09:40:04,337] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:04,338] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:40:04,339] {logging_mixin.py:103} INFO - [2021-02-10 09:40:04,339] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:40:04,497] {logging_mixin.py:103} INFO - [2021-02-10 09:40:04,497] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:04,498] {logging_mixin.py:103} INFO - [2021-02-10 09:40:04,497] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:40:04,499] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:40:04,499] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7ff1ccd6bc10>
[2021-02-10 09:40:04,499] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:40:04,500] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:40:04,503] {logging_mixin.py:103} INFO - [2021-02-10 09:40:04,503] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:40:04,755] {logging_mixin.py:103} INFO - [2021-02-10 09:40:04,755] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:04,756] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:40:04,758] {logging_mixin.py:103} INFO - [2021-02-10 09:40:04,757] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:40:04,947] {logging_mixin.py:103} INFO - [2021-02-10 09:40:04,947] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:04,948] {logging_mixin.py:103} INFO - [2021-02-10 09:40:04,948] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:40:09,701] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:40:36,366] {scheduler_job.py:181} INFO - Started process (PID=65862) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:40:36,366] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:40:36,367] {logging_mixin.py:103} INFO - [2021-02-10 09:40:36,367] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:40:37,955] {logging_mixin.py:103} INFO - [2021-02-10 09:40:37,955] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:40:38,234] {logging_mixin.py:103} INFO - [2021-02-10 09:40:38,234] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:40:38,563] {logging_mixin.py:103} INFO - [2021-02-10 09:40:38,563] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:40:38,564] {logging_mixin.py:103} INFO - [2021-02-10 09:40:38,564] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:40:38,564] {logging_mixin.py:103} INFO - [2021-02-10 09:40:38,564] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:40:39,627] {logging_mixin.py:103} INFO - [2021-02-10 09:40:39,626] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:40:39,768] {logging_mixin.py:103} INFO - [2021-02-10 09:40:39,768] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:39,770] {logging_mixin.py:103} INFO - [2021-02-10 09:40:39,770] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:40:39,912] {logging_mixin.py:103} INFO - [2021-02-10 09:40:39,912] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:39,912] {logging_mixin.py:103} INFO - [2021-02-10 09:40:39,912] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:40:40,064] {logging_mixin.py:103} INFO - [2021-02-10 09:40:40,064] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:40,155] {logging_mixin.py:103} INFO - [2021-02-10 09:40:40,155] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:40:40,329] {logging_mixin.py:103} INFO - [2021-02-10 09:40:40,329] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:40,444] {logging_mixin.py:103} INFO - [2021-02-10 09:40:40,444] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:40:40,592] {logging_mixin.py:103} INFO - [2021-02-10 09:40:40,592] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:40,634] {logging_mixin.py:103} INFO - [2021-02-10 09:40:40,634] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:40:40,634] {logging_mixin.py:103} INFO - [2021-02-10 09:40:40,634] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:40:43,690] {logging_mixin.py:103} INFO - [2021-02-10 09:40:43,690] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:43,692] {logging_mixin.py:103} INFO - [2021-02-10 09:40:43,692] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:40:43,702] {logging_mixin.py:103} INFO - [2021-02-10 09:40:43,702] {data_context.py:1281} INFO - Setting run_name to: 20210210T084043.702676Z
[2021-02-10 09:40:43,703] {logging_mixin.py:103} INFO - [2021-02-10 09:40:43,703] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:40:43,712] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:40:43,712] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd0e5d6b430>
[2021-02-10 09:40:43,712] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:40:43,712] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:40:43,714] {logging_mixin.py:103} INFO - [2021-02-10 09:40:43,714] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:40:43,899] {logging_mixin.py:103} INFO - [2021-02-10 09:40:43,899] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:43,900] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:40:43,902] {logging_mixin.py:103} INFO - [2021-02-10 09:40:43,902] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:40:44,074] {logging_mixin.py:103} INFO - [2021-02-10 09:40:44,073] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:44,074] {logging_mixin.py:103} INFO - [2021-02-10 09:40:44,074] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:40:44,076] {logging_mixin.py:103} INFO - [2021-02-10 09:40:44,076] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:40:44,227] {logging_mixin.py:103} INFO - [2021-02-10 09:40:44,227] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:44,228] {logging_mixin.py:103} INFO - [2021-02-10 09:40:44,228] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:40:44,407] {logging_mixin.py:103} INFO - [2021-02-10 09:40:44,407] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:44,410] {logging_mixin.py:103} INFO - [2021-02-10 09:40:44,409] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:40:44,620] {logging_mixin.py:103} INFO - [2021-02-10 09:40:44,620] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:44,620] {logging_mixin.py:103} INFO - [2021-02-10 09:40:44,620] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:40:44,631] {logging_mixin.py:103} INFO - [2021-02-10 09:40:44,631] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:40:44,632] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:40:44,632] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd0e5d6b430>
[2021-02-10 09:40:44,632] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:40:44,633] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:40:44,634] {logging_mixin.py:103} INFO - [2021-02-10 09:40:44,634] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:40:44,923] {logging_mixin.py:103} INFO - [2021-02-10 09:40:44,923] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:44,924] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:40:44,925] {logging_mixin.py:103} INFO - [2021-02-10 09:40:44,925] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:40:45,087] {logging_mixin.py:103} INFO - [2021-02-10 09:40:45,086] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:45,087] {logging_mixin.py:103} INFO - [2021-02-10 09:40:45,087] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:40:45,090] {logging_mixin.py:103} INFO - [2021-02-10 09:40:45,090] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:40:45,234] {logging_mixin.py:103} INFO - [2021-02-10 09:40:45,233] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:45,235] {logging_mixin.py:103} INFO - [2021-02-10 09:40:45,235] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:40:45,455] {logging_mixin.py:103} INFO - [2021-02-10 09:40:45,454] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:45,458] {logging_mixin.py:103} INFO - [2021-02-10 09:40:45,457] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:40:45,628] {logging_mixin.py:103} INFO - [2021-02-10 09:40:45,628] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:45,630] {logging_mixin.py:103} INFO - [2021-02-10 09:40:45,630] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:40:45,822] {logging_mixin.py:103} INFO - [2021-02-10 09:40:45,822] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:45,823] {logging_mixin.py:103} INFO - [2021-02-10 09:40:45,823] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:40:45,827] {logging_mixin.py:103} INFO - [2021-02-10 09:40:45,827] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:40:46,010] {logging_mixin.py:103} INFO - [2021-02-10 09:40:46,009] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:46,014] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:40:46,014] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd0e5d6b430>
[2021-02-10 09:40:46,015] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:40:46,015] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:40:46,017] {logging_mixin.py:103} INFO - [2021-02-10 09:40:46,017] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:40:46,253] {logging_mixin.py:103} INFO - [2021-02-10 09:40:46,253] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:46,254] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:40:46,255] {logging_mixin.py:103} INFO - [2021-02-10 09:40:46,255] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:40:46,435] {logging_mixin.py:103} INFO - [2021-02-10 09:40:46,435] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:46,436] {logging_mixin.py:103} INFO - [2021-02-10 09:40:46,435] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:40:46,437] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:40:46,437] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fd0e5d6bc10>
[2021-02-10 09:40:46,437] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:40:46,439] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:40:46,441] {logging_mixin.py:103} INFO - [2021-02-10 09:40:46,441] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:40:46,589] {logging_mixin.py:103} INFO - [2021-02-10 09:40:46,589] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:46,590] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:40:46,592] {logging_mixin.py:103} INFO - [2021-02-10 09:40:46,592] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:40:46,772] {logging_mixin.py:103} INFO - [2021-02-10 09:40:46,772] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:46,773] {logging_mixin.py:103} INFO - [2021-02-10 09:40:46,773] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:40:46,774] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:40:46,774] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fd0e5d6bc10>
[2021-02-10 09:40:46,774] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:40:46,775] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:40:46,778] {logging_mixin.py:103} INFO - [2021-02-10 09:40:46,778] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:40:46,927] {logging_mixin.py:103} INFO - [2021-02-10 09:40:46,927] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:46,928] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:40:46,930] {logging_mixin.py:103} INFO - [2021-02-10 09:40:46,930] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:40:47,092] {logging_mixin.py:103} INFO - [2021-02-10 09:40:47,092] {cursor.py:560} INFO - query execution done
[2021-02-10 09:40:47,093] {logging_mixin.py:103} INFO - [2021-02-10 09:40:47,093] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:40:51,582] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:41:17,864] {scheduler_job.py:181} INFO - Started process (PID=65925) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:41:17,864] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:41:17,865] {logging_mixin.py:103} INFO - [2021-02-10 09:41:17,865] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:41:19,452] {logging_mixin.py:103} INFO - [2021-02-10 09:41:19,452] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:41:19,740] {logging_mixin.py:103} INFO - [2021-02-10 09:41:19,740] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:41:20,054] {logging_mixin.py:103} INFO - [2021-02-10 09:41:20,054] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:41:20,054] {logging_mixin.py:103} INFO - [2021-02-10 09:41:20,054] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:41:20,055] {logging_mixin.py:103} INFO - [2021-02-10 09:41:20,054] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:41:21,482] {logging_mixin.py:103} INFO - [2021-02-10 09:41:21,482] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:41:21,744] {logging_mixin.py:103} INFO - [2021-02-10 09:41:21,744] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:21,746] {logging_mixin.py:103} INFO - [2021-02-10 09:41:21,746] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:41:22,930] {logging_mixin.py:103} INFO - [2021-02-10 09:41:22,930] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:22,931] {logging_mixin.py:103} INFO - [2021-02-10 09:41:22,931] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:41:23,082] {logging_mixin.py:103} INFO - [2021-02-10 09:41:23,082] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:23,173] {logging_mixin.py:103} INFO - [2021-02-10 09:41:23,173] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:41:23,465] {logging_mixin.py:103} INFO - [2021-02-10 09:41:23,465] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:23,600] {logging_mixin.py:103} INFO - [2021-02-10 09:41:23,600] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:41:23,761] {logging_mixin.py:103} INFO - [2021-02-10 09:41:23,761] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:23,803] {logging_mixin.py:103} INFO - [2021-02-10 09:41:23,803] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:41:23,803] {logging_mixin.py:103} INFO - [2021-02-10 09:41:23,803] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:41:27,629] {logging_mixin.py:103} INFO - [2021-02-10 09:41:27,629] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:27,633] {logging_mixin.py:103} INFO - [2021-02-10 09:41:27,633] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:41:27,643] {logging_mixin.py:103} INFO - [2021-02-10 09:41:27,643] {data_context.py:1281} INFO - Setting run_name to: 20210210T084127.643585Z
[2021-02-10 09:41:27,644] {logging_mixin.py:103} INFO - [2021-02-10 09:41:27,644] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:41:27,653] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:41:27,653] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fc2f156b430>
[2021-02-10 09:41:27,654] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:41:27,654] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:41:27,655] {logging_mixin.py:103} INFO - [2021-02-10 09:41:27,655] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:41:28,170] {logging_mixin.py:103} INFO - [2021-02-10 09:41:28,169] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:28,171] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:41:28,173] {logging_mixin.py:103} INFO - [2021-02-10 09:41:28,173] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:41:28,371] {logging_mixin.py:103} INFO - [2021-02-10 09:41:28,371] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:28,372] {logging_mixin.py:103} INFO - [2021-02-10 09:41:28,372] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:41:28,374] {logging_mixin.py:103} INFO - [2021-02-10 09:41:28,374] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:41:28,665] {logging_mixin.py:103} INFO - [2021-02-10 09:41:28,665] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:28,667] {logging_mixin.py:103} INFO - [2021-02-10 09:41:28,667] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:41:28,924] {logging_mixin.py:103} INFO - [2021-02-10 09:41:28,924] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:28,927] {logging_mixin.py:103} INFO - [2021-02-10 09:41:28,927] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:41:29,203] {logging_mixin.py:103} INFO - [2021-02-10 09:41:29,203] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:29,204] {logging_mixin.py:103} INFO - [2021-02-10 09:41:29,204] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:41:29,215] {logging_mixin.py:103} INFO - [2021-02-10 09:41:29,215] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:41:29,216] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:41:29,216] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fc2f156b430>
[2021-02-10 09:41:29,216] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:41:29,216] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:41:29,218] {logging_mixin.py:103} INFO - [2021-02-10 09:41:29,218] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:41:29,666] {logging_mixin.py:103} INFO - [2021-02-10 09:41:29,665] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:29,667] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:41:29,669] {logging_mixin.py:103} INFO - [2021-02-10 09:41:29,668] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:41:29,849] {logging_mixin.py:103} INFO - [2021-02-10 09:41:29,849] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:29,849] {logging_mixin.py:103} INFO - [2021-02-10 09:41:29,849] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:41:29,852] {logging_mixin.py:103} INFO - [2021-02-10 09:41:29,852] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:41:30,244] {logging_mixin.py:103} INFO - [2021-02-10 09:41:30,243] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:30,245] {logging_mixin.py:103} INFO - [2021-02-10 09:41:30,245] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:41:30,435] {logging_mixin.py:103} INFO - [2021-02-10 09:41:30,435] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:30,439] {logging_mixin.py:103} INFO - [2021-02-10 09:41:30,438] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:41:30,656] {logging_mixin.py:103} INFO - [2021-02-10 09:41:30,656] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:30,658] {logging_mixin.py:103} INFO - [2021-02-10 09:41:30,658] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:41:30,875] {logging_mixin.py:103} INFO - [2021-02-10 09:41:30,875] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:30,875] {logging_mixin.py:103} INFO - [2021-02-10 09:41:30,875] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:41:30,880] {logging_mixin.py:103} INFO - [2021-02-10 09:41:30,880] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:41:31,088] {logging_mixin.py:103} INFO - [2021-02-10 09:41:31,088] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:31,093] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:41:31,093] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fc2f156b430>
[2021-02-10 09:41:31,094] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:41:31,094] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:41:31,096] {logging_mixin.py:103} INFO - [2021-02-10 09:41:31,096] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:41:31,484] {logging_mixin.py:103} INFO - [2021-02-10 09:41:31,484] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:31,486] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:41:31,489] {logging_mixin.py:103} INFO - [2021-02-10 09:41:31,488] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:41:31,771] {logging_mixin.py:103} INFO - [2021-02-10 09:41:31,770] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:31,771] {logging_mixin.py:103} INFO - [2021-02-10 09:41:31,771] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:41:31,772] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:41:31,772] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fc2f156bc10>
[2021-02-10 09:41:31,773] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:41:31,775] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:41:31,777] {logging_mixin.py:103} INFO - [2021-02-10 09:41:31,777] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:41:31,999] {logging_mixin.py:103} INFO - [2021-02-10 09:41:31,999] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:32,000] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:41:32,001] {logging_mixin.py:103} INFO - [2021-02-10 09:41:32,001] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:41:32,231] {logging_mixin.py:103} INFO - [2021-02-10 09:41:32,231] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:32,231] {logging_mixin.py:103} INFO - [2021-02-10 09:41:32,231] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:41:32,232] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:41:32,232] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fc2f156bc10>
[2021-02-10 09:41:32,232] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:41:32,233] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:41:32,235] {logging_mixin.py:103} INFO - [2021-02-10 09:41:32,235] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:41:32,392] {logging_mixin.py:103} INFO - [2021-02-10 09:41:32,392] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:32,393] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:41:32,395] {logging_mixin.py:103} INFO - [2021-02-10 09:41:32,394] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:41:32,604] {logging_mixin.py:103} INFO - [2021-02-10 09:41:32,604] {cursor.py:560} INFO - query execution done
[2021-02-10 09:41:32,605] {logging_mixin.py:103} INFO - [2021-02-10 09:41:32,605] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:41:37,106] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:42:05,149] {scheduler_job.py:181} INFO - Started process (PID=65985) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:42:05,150] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:42:05,150] {logging_mixin.py:103} INFO - [2021-02-10 09:42:05,150] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:42:06,794] {logging_mixin.py:103} INFO - [2021-02-10 09:42:06,794] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:42:07,070] {logging_mixin.py:103} INFO - [2021-02-10 09:42:07,070] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:42:07,399] {logging_mixin.py:103} INFO - [2021-02-10 09:42:07,399] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:42:07,399] {logging_mixin.py:103} INFO - [2021-02-10 09:42:07,399] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:42:07,399] {logging_mixin.py:103} INFO - [2021-02-10 09:42:07,399] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:42:08,769] {logging_mixin.py:103} INFO - [2021-02-10 09:42:08,769] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:42:08,919] {logging_mixin.py:103} INFO - [2021-02-10 09:42:08,919] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:08,920] {logging_mixin.py:103} INFO - [2021-02-10 09:42:08,920] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:42:09,127] {logging_mixin.py:103} INFO - [2021-02-10 09:42:09,126] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:09,127] {logging_mixin.py:103} INFO - [2021-02-10 09:42:09,127] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:42:09,389] {logging_mixin.py:103} INFO - [2021-02-10 09:42:09,389] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:09,389] {logging_mixin.py:103} INFO - [2021-02-10 09:42:09,389] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:42:09,555] {logging_mixin.py:103} INFO - [2021-02-10 09:42:09,555] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:09,676] {logging_mixin.py:103} INFO - [2021-02-10 09:42:09,676] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:42:09,898] {logging_mixin.py:103} INFO - [2021-02-10 09:42:09,898] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:09,940] {logging_mixin.py:103} INFO - [2021-02-10 09:42:09,940] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:42:09,940] {logging_mixin.py:103} INFO - [2021-02-10 09:42:09,940] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:42:12,165] {logging_mixin.py:103} INFO - [2021-02-10 09:42:12,165] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:12,168] {logging_mixin.py:103} INFO - [2021-02-10 09:42:12,168] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:42:12,178] {logging_mixin.py:103} INFO - [2021-02-10 09:42:12,178] {data_context.py:1281} INFO - Setting run_name to: 20210210T084212.178119Z
[2021-02-10 09:42:12,179] {logging_mixin.py:103} INFO - [2021-02-10 09:42:12,179] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:42:12,188] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:42:12,188] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fe03156b430>
[2021-02-10 09:42:12,188] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:42:12,189] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:42:12,190] {logging_mixin.py:103} INFO - [2021-02-10 09:42:12,190] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:42:12,654] {logging_mixin.py:103} INFO - [2021-02-10 09:42:12,654] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:12,655] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:42:12,657] {logging_mixin.py:103} INFO - [2021-02-10 09:42:12,657] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:42:12,859] {logging_mixin.py:103} INFO - [2021-02-10 09:42:12,859] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:12,859] {logging_mixin.py:103} INFO - [2021-02-10 09:42:12,859] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:42:12,861] {logging_mixin.py:103} INFO - [2021-02-10 09:42:12,861] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:42:13,107] {logging_mixin.py:103} INFO - [2021-02-10 09:42:13,107] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:13,110] {logging_mixin.py:103} INFO - [2021-02-10 09:42:13,109] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:42:13,424] {logging_mixin.py:103} INFO - [2021-02-10 09:42:13,423] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:13,426] {logging_mixin.py:103} INFO - [2021-02-10 09:42:13,426] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:42:13,672] {logging_mixin.py:103} INFO - [2021-02-10 09:42:13,672] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:13,672] {logging_mixin.py:103} INFO - [2021-02-10 09:42:13,672] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:42:13,686] {logging_mixin.py:103} INFO - [2021-02-10 09:42:13,685] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:42:13,686] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:42:13,686] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fe03156b430>
[2021-02-10 09:42:13,687] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:42:13,687] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:42:13,689] {logging_mixin.py:103} INFO - [2021-02-10 09:42:13,689] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:42:13,866] {logging_mixin.py:103} INFO - [2021-02-10 09:42:13,866] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:13,867] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:42:13,868] {logging_mixin.py:103} INFO - [2021-02-10 09:42:13,868] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:42:14,077] {logging_mixin.py:103} INFO - [2021-02-10 09:42:14,077] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:14,077] {logging_mixin.py:103} INFO - [2021-02-10 09:42:14,077] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:42:14,080] {logging_mixin.py:103} INFO - [2021-02-10 09:42:14,080] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:42:14,928] {logging_mixin.py:103} INFO - [2021-02-10 09:42:14,928] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:14,930] {logging_mixin.py:103} INFO - [2021-02-10 09:42:14,930] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:42:15,121] {logging_mixin.py:103} INFO - [2021-02-10 09:42:15,121] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:15,124] {logging_mixin.py:103} INFO - [2021-02-10 09:42:15,124] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:42:15,365] {logging_mixin.py:103} INFO - [2021-02-10 09:42:15,365] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:15,368] {logging_mixin.py:103} INFO - [2021-02-10 09:42:15,368] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:42:15,577] {logging_mixin.py:103} INFO - [2021-02-10 09:42:15,577] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:15,577] {logging_mixin.py:103} INFO - [2021-02-10 09:42:15,577] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:42:15,581] {logging_mixin.py:103} INFO - [2021-02-10 09:42:15,581] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:42:15,795] {logging_mixin.py:103} INFO - [2021-02-10 09:42:15,794] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:15,799] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:42:15,799] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fe03156b430>
[2021-02-10 09:42:15,799] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:42:15,800] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:42:15,801] {logging_mixin.py:103} INFO - [2021-02-10 09:42:15,801] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:42:15,991] {logging_mixin.py:103} INFO - [2021-02-10 09:42:15,991] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:15,992] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:42:15,993] {logging_mixin.py:103} INFO - [2021-02-10 09:42:15,993] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:42:16,202] {logging_mixin.py:103} INFO - [2021-02-10 09:42:16,202] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:16,202] {logging_mixin.py:103} INFO - [2021-02-10 09:42:16,202] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:42:16,203] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:42:16,204] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fe03156bc10>
[2021-02-10 09:42:16,204] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:42:16,206] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:42:16,208] {logging_mixin.py:103} INFO - [2021-02-10 09:42:16,207] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:42:16,540] {logging_mixin.py:103} INFO - [2021-02-10 09:42:16,540] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:16,541] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:42:16,543] {logging_mixin.py:103} INFO - [2021-02-10 09:42:16,543] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:42:16,784] {logging_mixin.py:103} INFO - [2021-02-10 09:42:16,784] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:16,784] {logging_mixin.py:103} INFO - [2021-02-10 09:42:16,784] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:42:16,786] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:42:16,786] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fe03156bc10>
[2021-02-10 09:42:16,786] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:42:16,788] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:42:16,793] {logging_mixin.py:103} INFO - [2021-02-10 09:42:16,793] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:42:17,002] {logging_mixin.py:103} INFO - [2021-02-10 09:42:17,001] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:17,003] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:42:17,004] {logging_mixin.py:103} INFO - [2021-02-10 09:42:17,004] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:42:17,169] {logging_mixin.py:103} INFO - [2021-02-10 09:42:17,169] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:17,170] {logging_mixin.py:103} INFO - [2021-02-10 09:42:17,170] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:42:21,708] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:42:49,907] {scheduler_job.py:181} INFO - Started process (PID=66048) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:42:49,907] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:42:49,908] {logging_mixin.py:103} INFO - [2021-02-10 09:42:49,908] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:42:51,837] {logging_mixin.py:103} INFO - [2021-02-10 09:42:51,837] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:42:52,108] {logging_mixin.py:103} INFO - [2021-02-10 09:42:52,108] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:42:52,485] {logging_mixin.py:103} INFO - [2021-02-10 09:42:52,485] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:42:52,485] {logging_mixin.py:103} INFO - [2021-02-10 09:42:52,485] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:42:52,485] {logging_mixin.py:103} INFO - [2021-02-10 09:42:52,485] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:42:53,646] {logging_mixin.py:103} INFO - [2021-02-10 09:42:53,645] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:42:53,799] {logging_mixin.py:103} INFO - [2021-02-10 09:42:53,799] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:53,801] {logging_mixin.py:103} INFO - [2021-02-10 09:42:53,800] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:42:53,949] {logging_mixin.py:103} INFO - [2021-02-10 09:42:53,948] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:53,949] {logging_mixin.py:103} INFO - [2021-02-10 09:42:53,949] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:42:54,105] {logging_mixin.py:103} INFO - [2021-02-10 09:42:54,104] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:54,198] {logging_mixin.py:103} INFO - [2021-02-10 09:42:54,197] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:42:54,329] {logging_mixin.py:103} INFO - [2021-02-10 09:42:54,329] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:54,444] {logging_mixin.py:103} INFO - [2021-02-10 09:42:54,444] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:42:54,623] {logging_mixin.py:103} INFO - [2021-02-10 09:42:54,623] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:54,666] {logging_mixin.py:103} INFO - [2021-02-10 09:42:54,666] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:42:54,666] {logging_mixin.py:103} INFO - [2021-02-10 09:42:54,666] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:42:56,097] {logging_mixin.py:103} INFO - [2021-02-10 09:42:56,097] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:56,101] {logging_mixin.py:103} INFO - [2021-02-10 09:42:56,101] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:42:56,111] {logging_mixin.py:103} INFO - [2021-02-10 09:42:56,111] {data_context.py:1281} INFO - Setting run_name to: 20210210T084256.111550Z
[2021-02-10 09:42:56,112] {logging_mixin.py:103} INFO - [2021-02-10 09:42:56,112] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:42:56,120] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:42:56,121] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f8d6156b430>
[2021-02-10 09:42:56,121] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:42:56,121] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:42:56,122] {logging_mixin.py:103} INFO - [2021-02-10 09:42:56,122] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:42:56,293] {logging_mixin.py:103} INFO - [2021-02-10 09:42:56,293] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:56,294] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:42:56,295] {logging_mixin.py:103} INFO - [2021-02-10 09:42:56,295] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:42:56,456] {logging_mixin.py:103} INFO - [2021-02-10 09:42:56,456] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:56,457] {logging_mixin.py:103} INFO - [2021-02-10 09:42:56,457] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:42:56,459] {logging_mixin.py:103} INFO - [2021-02-10 09:42:56,459] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:42:56,638] {logging_mixin.py:103} INFO - [2021-02-10 09:42:56,638] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:56,640] {logging_mixin.py:103} INFO - [2021-02-10 09:42:56,640] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:42:56,808] {logging_mixin.py:103} INFO - [2021-02-10 09:42:56,808] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:56,811] {logging_mixin.py:103} INFO - [2021-02-10 09:42:56,810] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:42:56,967] {logging_mixin.py:103} INFO - [2021-02-10 09:42:56,967] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:56,967] {logging_mixin.py:103} INFO - [2021-02-10 09:42:56,967] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:42:56,980] {logging_mixin.py:103} INFO - [2021-02-10 09:42:56,980] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:42:56,981] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:42:56,981] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f8d6156b430>
[2021-02-10 09:42:56,981] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:42:56,982] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:42:56,983] {logging_mixin.py:103} INFO - [2021-02-10 09:42:56,983] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:42:57,146] {logging_mixin.py:103} INFO - [2021-02-10 09:42:57,146] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:57,147] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:42:57,148] {logging_mixin.py:103} INFO - [2021-02-10 09:42:57,148] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:42:57,306] {logging_mixin.py:103} INFO - [2021-02-10 09:42:57,306] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:57,306] {logging_mixin.py:103} INFO - [2021-02-10 09:42:57,306] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:42:57,309] {logging_mixin.py:103} INFO - [2021-02-10 09:42:57,309] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:42:57,504] {logging_mixin.py:103} INFO - [2021-02-10 09:42:57,504] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:57,506] {logging_mixin.py:103} INFO - [2021-02-10 09:42:57,506] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:42:57,669] {logging_mixin.py:103} INFO - [2021-02-10 09:42:57,669] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:57,672] {logging_mixin.py:103} INFO - [2021-02-10 09:42:57,672] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:42:57,875] {logging_mixin.py:103} INFO - [2021-02-10 09:42:57,875] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:57,878] {logging_mixin.py:103} INFO - [2021-02-10 09:42:57,878] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:42:58,027] {logging_mixin.py:103} INFO - [2021-02-10 09:42:58,027] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:58,027] {logging_mixin.py:103} INFO - [2021-02-10 09:42:58,027] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:42:58,030] {logging_mixin.py:103} INFO - [2021-02-10 09:42:58,030] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:42:58,186] {logging_mixin.py:103} INFO - [2021-02-10 09:42:58,186] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:58,192] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:42:58,192] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f8d6156b430>
[2021-02-10 09:42:58,192] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:42:58,193] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:42:58,194] {logging_mixin.py:103} INFO - [2021-02-10 09:42:58,194] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:42:58,342] {logging_mixin.py:103} INFO - [2021-02-10 09:42:58,342] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:58,343] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:42:58,345] {logging_mixin.py:103} INFO - [2021-02-10 09:42:58,344] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:42:58,481] {logging_mixin.py:103} INFO - [2021-02-10 09:42:58,481] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:58,482] {logging_mixin.py:103} INFO - [2021-02-10 09:42:58,481] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:42:58,483] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:42:58,483] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f8d6156bc10>
[2021-02-10 09:42:58,483] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:42:58,485] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:42:58,487] {logging_mixin.py:103} INFO - [2021-02-10 09:42:58,487] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:42:58,732] {logging_mixin.py:103} INFO - [2021-02-10 09:42:58,732] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:58,733] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:42:58,735] {logging_mixin.py:103} INFO - [2021-02-10 09:42:58,735] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:42:58,887] {logging_mixin.py:103} INFO - [2021-02-10 09:42:58,887] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:58,888] {logging_mixin.py:103} INFO - [2021-02-10 09:42:58,888] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:42:58,889] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:42:58,889] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f8d6156bc10>
[2021-02-10 09:42:58,889] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:42:58,890] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:42:58,893] {logging_mixin.py:103} INFO - [2021-02-10 09:42:58,893] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:42:59,111] {logging_mixin.py:103} INFO - [2021-02-10 09:42:59,110] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:59,112] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:42:59,113] {logging_mixin.py:103} INFO - [2021-02-10 09:42:59,113] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:42:59,261] {logging_mixin.py:103} INFO - [2021-02-10 09:42:59,260] {cursor.py:560} INFO - query execution done
[2021-02-10 09:42:59,261] {logging_mixin.py:103} INFO - [2021-02-10 09:42:59,261] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:43:04,117] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:43:29,418] {scheduler_job.py:181} INFO - Started process (PID=66111) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:43:29,418] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:43:29,419] {logging_mixin.py:103} INFO - [2021-02-10 09:43:29,419] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:43:31,017] {logging_mixin.py:103} INFO - [2021-02-10 09:43:31,017] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:43:31,314] {logging_mixin.py:103} INFO - [2021-02-10 09:43:31,314] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:43:31,655] {logging_mixin.py:103} INFO - [2021-02-10 09:43:31,655] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:43:31,655] {logging_mixin.py:103} INFO - [2021-02-10 09:43:31,655] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:43:31,655] {logging_mixin.py:103} INFO - [2021-02-10 09:43:31,655] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:43:32,968] {logging_mixin.py:103} INFO - [2021-02-10 09:43:32,968] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:43:33,110] {logging_mixin.py:103} INFO - [2021-02-10 09:43:33,110] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:33,112] {logging_mixin.py:103} INFO - [2021-02-10 09:43:33,112] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:43:33,293] {logging_mixin.py:103} INFO - [2021-02-10 09:43:33,293] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:33,294] {logging_mixin.py:103} INFO - [2021-02-10 09:43:33,294] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:43:33,435] {logging_mixin.py:103} INFO - [2021-02-10 09:43:33,435] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:33,524] {logging_mixin.py:103} INFO - [2021-02-10 09:43:33,524] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:43:33,684] {logging_mixin.py:103} INFO - [2021-02-10 09:43:33,684] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:33,800] {logging_mixin.py:103} INFO - [2021-02-10 09:43:33,800] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:43:33,960] {logging_mixin.py:103} INFO - [2021-02-10 09:43:33,960] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:34,000] {logging_mixin.py:103} INFO - [2021-02-10 09:43:34,000] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:43:34,000] {logging_mixin.py:103} INFO - [2021-02-10 09:43:34,000] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:43:35,726] {logging_mixin.py:103} INFO - [2021-02-10 09:43:35,725] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:35,729] {logging_mixin.py:103} INFO - [2021-02-10 09:43:35,729] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:43:35,740] {logging_mixin.py:103} INFO - [2021-02-10 09:43:35,740] {data_context.py:1281} INFO - Setting run_name to: 20210210T084335.740228Z
[2021-02-10 09:43:35,741] {logging_mixin.py:103} INFO - [2021-02-10 09:43:35,741] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:43:35,749] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:43:35,750] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7ff42cd6b430>
[2021-02-10 09:43:35,750] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:43:35,750] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:43:35,752] {logging_mixin.py:103} INFO - [2021-02-10 09:43:35,752] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:43:35,936] {logging_mixin.py:103} INFO - [2021-02-10 09:43:35,936] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:35,937] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:43:35,938] {logging_mixin.py:103} INFO - [2021-02-10 09:43:35,938] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:43:36,105] {logging_mixin.py:103} INFO - [2021-02-10 09:43:36,105] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:36,106] {logging_mixin.py:103} INFO - [2021-02-10 09:43:36,106] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:43:36,108] {logging_mixin.py:103} INFO - [2021-02-10 09:43:36,108] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:43:36,281] {logging_mixin.py:103} INFO - [2021-02-10 09:43:36,281] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:36,283] {logging_mixin.py:103} INFO - [2021-02-10 09:43:36,283] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:43:36,463] {logging_mixin.py:103} INFO - [2021-02-10 09:43:36,463] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:36,466] {logging_mixin.py:103} INFO - [2021-02-10 09:43:36,466] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:43:36,623] {logging_mixin.py:103} INFO - [2021-02-10 09:43:36,623] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:36,624] {logging_mixin.py:103} INFO - [2021-02-10 09:43:36,624] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:43:36,635] {logging_mixin.py:103} INFO - [2021-02-10 09:43:36,635] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:43:36,636] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:43:36,636] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7ff42cd6b430>
[2021-02-10 09:43:36,636] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:43:36,637] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:43:36,639] {logging_mixin.py:103} INFO - [2021-02-10 09:43:36,639] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:43:36,868] {logging_mixin.py:103} INFO - [2021-02-10 09:43:36,868] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:36,869] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:43:36,870] {logging_mixin.py:103} INFO - [2021-02-10 09:43:36,870] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:43:37,035] {logging_mixin.py:103} INFO - [2021-02-10 09:43:37,035] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:37,035] {logging_mixin.py:103} INFO - [2021-02-10 09:43:37,035] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:43:37,038] {logging_mixin.py:103} INFO - [2021-02-10 09:43:37,038] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:43:37,186] {logging_mixin.py:103} INFO - [2021-02-10 09:43:37,186] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:37,188] {logging_mixin.py:103} INFO - [2021-02-10 09:43:37,188] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:43:37,490] {logging_mixin.py:103} INFO - [2021-02-10 09:43:37,490] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:37,493] {logging_mixin.py:103} INFO - [2021-02-10 09:43:37,493] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:43:37,710] {logging_mixin.py:103} INFO - [2021-02-10 09:43:37,710] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:37,712] {logging_mixin.py:103} INFO - [2021-02-10 09:43:37,712] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:43:37,864] {logging_mixin.py:103} INFO - [2021-02-10 09:43:37,864] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:37,865] {logging_mixin.py:103} INFO - [2021-02-10 09:43:37,864] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:43:37,869] {logging_mixin.py:103} INFO - [2021-02-10 09:43:37,868] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:43:38,070] {logging_mixin.py:103} INFO - [2021-02-10 09:43:38,070] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:38,075] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:43:38,075] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7ff42cd6b430>
[2021-02-10 09:43:38,075] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:43:38,076] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:43:38,078] {logging_mixin.py:103} INFO - [2021-02-10 09:43:38,078] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:43:38,231] {logging_mixin.py:103} INFO - [2021-02-10 09:43:38,231] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:38,232] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:43:38,233] {logging_mixin.py:103} INFO - [2021-02-10 09:43:38,233] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:43:38,386] {logging_mixin.py:103} INFO - [2021-02-10 09:43:38,386] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:38,387] {logging_mixin.py:103} INFO - [2021-02-10 09:43:38,387] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:43:38,388] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:43:38,388] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7ff42cd6bc10>
[2021-02-10 09:43:38,388] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:43:38,390] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:43:38,393] {logging_mixin.py:103} INFO - [2021-02-10 09:43:38,392] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:43:38,563] {logging_mixin.py:103} INFO - [2021-02-10 09:43:38,563] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:38,564] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:43:38,565] {logging_mixin.py:103} INFO - [2021-02-10 09:43:38,565] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:43:38,720] {logging_mixin.py:103} INFO - [2021-02-10 09:43:38,720] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:38,721] {logging_mixin.py:103} INFO - [2021-02-10 09:43:38,721] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:43:38,722] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:43:38,722] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7ff42cd6bc10>
[2021-02-10 09:43:38,722] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:43:38,723] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:43:38,727] {logging_mixin.py:103} INFO - [2021-02-10 09:43:38,726] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:43:38,916] {logging_mixin.py:103} INFO - [2021-02-10 09:43:38,915] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:38,917] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:43:38,918] {logging_mixin.py:103} INFO - [2021-02-10 09:43:38,918] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:43:39,070] {logging_mixin.py:103} INFO - [2021-02-10 09:43:39,070] {cursor.py:560} INFO - query execution done
[2021-02-10 09:43:39,082] {logging_mixin.py:103} INFO - [2021-02-10 09:43:39,082] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:43:43,661] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:44:09,793] {scheduler_job.py:181} INFO - Started process (PID=66170) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:44:09,793] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:44:09,794] {logging_mixin.py:103} INFO - [2021-02-10 09:44:09,793] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:44:11,402] {logging_mixin.py:103} INFO - [2021-02-10 09:44:11,402] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:44:11,694] {logging_mixin.py:103} INFO - [2021-02-10 09:44:11,694] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:44:12,014] {logging_mixin.py:103} INFO - [2021-02-10 09:44:12,014] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:44:12,014] {logging_mixin.py:103} INFO - [2021-02-10 09:44:12,014] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:44:12,014] {logging_mixin.py:103} INFO - [2021-02-10 09:44:12,014] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:44:13,206] {logging_mixin.py:103} INFO - [2021-02-10 09:44:13,206] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:44:13,335] {logging_mixin.py:103} INFO - [2021-02-10 09:44:13,335] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:13,337] {logging_mixin.py:103} INFO - [2021-02-10 09:44:13,337] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:44:13,579] {logging_mixin.py:103} INFO - [2021-02-10 09:44:13,579] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:13,580] {logging_mixin.py:103} INFO - [2021-02-10 09:44:13,580] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:44:13,726] {logging_mixin.py:103} INFO - [2021-02-10 09:44:13,726] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:13,819] {logging_mixin.py:103} INFO - [2021-02-10 09:44:13,819] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:44:13,973] {logging_mixin.py:103} INFO - [2021-02-10 09:44:13,973] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:14,087] {logging_mixin.py:103} INFO - [2021-02-10 09:44:14,087] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:44:14,256] {logging_mixin.py:103} INFO - [2021-02-10 09:44:14,255] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:14,294] {logging_mixin.py:103} INFO - [2021-02-10 09:44:14,294] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:44:14,295] {logging_mixin.py:103} INFO - [2021-02-10 09:44:14,295] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:44:15,977] {logging_mixin.py:103} INFO - [2021-02-10 09:44:15,977] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:15,980] {logging_mixin.py:103} INFO - [2021-02-10 09:44:15,980] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:44:15,990] {logging_mixin.py:103} INFO - [2021-02-10 09:44:15,990] {data_context.py:1281} INFO - Setting run_name to: 20210210T084415.990650Z
[2021-02-10 09:44:15,991] {logging_mixin.py:103} INFO - [2021-02-10 09:44:15,991] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:44:16,000] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:44:16,000] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fbf5856b430>
[2021-02-10 09:44:16,000] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:44:16,000] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:44:16,002] {logging_mixin.py:103} INFO - [2021-02-10 09:44:16,002] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:44:16,157] {logging_mixin.py:103} INFO - [2021-02-10 09:44:16,157] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:16,158] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:44:16,160] {logging_mixin.py:103} INFO - [2021-02-10 09:44:16,160] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:44:16,306] {logging_mixin.py:103} INFO - [2021-02-10 09:44:16,306] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:16,307] {logging_mixin.py:103} INFO - [2021-02-10 09:44:16,307] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:44:16,308] {logging_mixin.py:103} INFO - [2021-02-10 09:44:16,308] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:44:16,523] {logging_mixin.py:103} INFO - [2021-02-10 09:44:16,523] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:16,526] {logging_mixin.py:103} INFO - [2021-02-10 09:44:16,526] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:44:16,673] {logging_mixin.py:103} INFO - [2021-02-10 09:44:16,673] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:16,676] {logging_mixin.py:103} INFO - [2021-02-10 09:44:16,675] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:44:16,887] {logging_mixin.py:103} INFO - [2021-02-10 09:44:16,887] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:16,887] {logging_mixin.py:103} INFO - [2021-02-10 09:44:16,887] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:44:16,899] {logging_mixin.py:103} INFO - [2021-02-10 09:44:16,899] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:44:16,900] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:44:16,900] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fbf5856b430>
[2021-02-10 09:44:16,900] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:44:16,900] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:44:16,902] {logging_mixin.py:103} INFO - [2021-02-10 09:44:16,902] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:44:17,062] {logging_mixin.py:103} INFO - [2021-02-10 09:44:17,061] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:17,062] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:44:17,064] {logging_mixin.py:103} INFO - [2021-02-10 09:44:17,064] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:44:17,245] {logging_mixin.py:103} INFO - [2021-02-10 09:44:17,245] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:17,246] {logging_mixin.py:103} INFO - [2021-02-10 09:44:17,246] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:44:17,248] {logging_mixin.py:103} INFO - [2021-02-10 09:44:17,248] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:44:17,397] {logging_mixin.py:103} INFO - [2021-02-10 09:44:17,397] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:17,399] {logging_mixin.py:103} INFO - [2021-02-10 09:44:17,399] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:44:17,559] {logging_mixin.py:103} INFO - [2021-02-10 09:44:17,559] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:17,562] {logging_mixin.py:103} INFO - [2021-02-10 09:44:17,562] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:44:17,732] {logging_mixin.py:103} INFO - [2021-02-10 09:44:17,732] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:17,734] {logging_mixin.py:103} INFO - [2021-02-10 09:44:17,734] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:44:17,914] {logging_mixin.py:103} INFO - [2021-02-10 09:44:17,914] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:17,914] {logging_mixin.py:103} INFO - [2021-02-10 09:44:17,914] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:44:17,919] {logging_mixin.py:103} INFO - [2021-02-10 09:44:17,918] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:44:18,077] {logging_mixin.py:103} INFO - [2021-02-10 09:44:18,076] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:18,081] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:44:18,081] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fbf5856b430>
[2021-02-10 09:44:18,081] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:44:18,084] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:44:18,086] {logging_mixin.py:103} INFO - [2021-02-10 09:44:18,085] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:44:18,235] {logging_mixin.py:103} INFO - [2021-02-10 09:44:18,235] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:18,236] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:44:18,237] {logging_mixin.py:103} INFO - [2021-02-10 09:44:18,237] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:44:18,376] {logging_mixin.py:103} INFO - [2021-02-10 09:44:18,376] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:18,377] {logging_mixin.py:103} INFO - [2021-02-10 09:44:18,377] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:44:18,378] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:44:18,378] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fbf5856bc10>
[2021-02-10 09:44:18,378] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:44:18,380] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:44:18,382] {logging_mixin.py:103} INFO - [2021-02-10 09:44:18,382] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:44:18,605] {logging_mixin.py:103} INFO - [2021-02-10 09:44:18,605] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:18,606] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:44:18,608] {logging_mixin.py:103} INFO - [2021-02-10 09:44:18,608] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:44:18,758] {logging_mixin.py:103} INFO - [2021-02-10 09:44:18,757] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:18,758] {logging_mixin.py:103} INFO - [2021-02-10 09:44:18,758] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:44:18,759] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:44:18,759] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fbf5856bc10>
[2021-02-10 09:44:18,759] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:44:18,761] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:44:18,764] {logging_mixin.py:103} INFO - [2021-02-10 09:44:18,764] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:44:18,922] {logging_mixin.py:103} INFO - [2021-02-10 09:44:18,922] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:18,923] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:44:18,925] {logging_mixin.py:103} INFO - [2021-02-10 09:44:18,925] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:44:19,072] {logging_mixin.py:103} INFO - [2021-02-10 09:44:19,072] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:19,073] {logging_mixin.py:103} INFO - [2021-02-10 09:44:19,073] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:44:23,506] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:44:49,374] {scheduler_job.py:181} INFO - Started process (PID=66228) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:44:49,375] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:44:49,375] {logging_mixin.py:103} INFO - [2021-02-10 09:44:49,375] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:44:51,386] {logging_mixin.py:103} INFO - [2021-02-10 09:44:51,385] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:44:51,708] {logging_mixin.py:103} INFO - [2021-02-10 09:44:51,708] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:44:52,041] {logging_mixin.py:103} INFO - [2021-02-10 09:44:52,041] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:44:52,041] {logging_mixin.py:103} INFO - [2021-02-10 09:44:52,041] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:44:52,041] {logging_mixin.py:103} INFO - [2021-02-10 09:44:52,041] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:44:53,758] {logging_mixin.py:103} INFO - [2021-02-10 09:44:53,758] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:44:53,942] {logging_mixin.py:103} INFO - [2021-02-10 09:44:53,942] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:53,944] {logging_mixin.py:103} INFO - [2021-02-10 09:44:53,944] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:44:54,136] {logging_mixin.py:103} INFO - [2021-02-10 09:44:54,136] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:54,137] {logging_mixin.py:103} INFO - [2021-02-10 09:44:54,137] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:44:54,373] {logging_mixin.py:103} INFO - [2021-02-10 09:44:54,373] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:54,374] {logging_mixin.py:103} INFO - [2021-02-10 09:44:54,373] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:44:54,520] {logging_mixin.py:103} INFO - [2021-02-10 09:44:54,519] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:54,632] {logging_mixin.py:103} INFO - [2021-02-10 09:44:54,632] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:44:54,809] {logging_mixin.py:103} INFO - [2021-02-10 09:44:54,809] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:54,852] {logging_mixin.py:103} INFO - [2021-02-10 09:44:54,852] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:44:54,852] {logging_mixin.py:103} INFO - [2021-02-10 09:44:54,852] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:44:56,214] {logging_mixin.py:103} INFO - [2021-02-10 09:44:56,214] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:56,218] {logging_mixin.py:103} INFO - [2021-02-10 09:44:56,218] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:44:56,229] {logging_mixin.py:103} INFO - [2021-02-10 09:44:56,229] {data_context.py:1281} INFO - Setting run_name to: 20210210T084456.229082Z
[2021-02-10 09:44:56,230] {logging_mixin.py:103} INFO - [2021-02-10 09:44:56,230] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:44:56,239] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:44:56,239] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fc4d656b430>
[2021-02-10 09:44:56,239] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:44:56,239] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:44:56,241] {logging_mixin.py:103} INFO - [2021-02-10 09:44:56,241] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:44:56,390] {logging_mixin.py:103} INFO - [2021-02-10 09:44:56,390] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:56,392] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:44:56,395] {logging_mixin.py:103} INFO - [2021-02-10 09:44:56,395] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:44:56,645] {logging_mixin.py:103} INFO - [2021-02-10 09:44:56,645] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:56,646] {logging_mixin.py:103} INFO - [2021-02-10 09:44:56,646] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:44:56,648] {logging_mixin.py:103} INFO - [2021-02-10 09:44:56,648] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:44:56,800] {logging_mixin.py:103} INFO - [2021-02-10 09:44:56,799] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:56,802] {logging_mixin.py:103} INFO - [2021-02-10 09:44:56,802] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:44:56,997] {logging_mixin.py:103} INFO - [2021-02-10 09:44:56,997] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:56,999] {logging_mixin.py:103} INFO - [2021-02-10 09:44:56,999] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:44:57,151] {logging_mixin.py:103} INFO - [2021-02-10 09:44:57,151] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:57,152] {logging_mixin.py:103} INFO - [2021-02-10 09:44:57,152] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:44:57,165] {logging_mixin.py:103} INFO - [2021-02-10 09:44:57,165] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:44:57,166] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:44:57,166] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fc4d656b430>
[2021-02-10 09:44:57,166] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:44:57,166] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:44:57,168] {logging_mixin.py:103} INFO - [2021-02-10 09:44:57,168] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:44:57,338] {logging_mixin.py:103} INFO - [2021-02-10 09:44:57,337] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:57,338] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:44:57,340] {logging_mixin.py:103} INFO - [2021-02-10 09:44:57,340] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:44:57,491] {logging_mixin.py:103} INFO - [2021-02-10 09:44:57,490] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:57,491] {logging_mixin.py:103} INFO - [2021-02-10 09:44:57,491] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:44:57,494] {logging_mixin.py:103} INFO - [2021-02-10 09:44:57,494] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:44:57,680] {logging_mixin.py:103} INFO - [2021-02-10 09:44:57,680] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:57,682] {logging_mixin.py:103} INFO - [2021-02-10 09:44:57,682] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:44:57,848] {logging_mixin.py:103} INFO - [2021-02-10 09:44:57,848] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:57,851] {logging_mixin.py:103} INFO - [2021-02-10 09:44:57,851] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:44:58,002] {logging_mixin.py:103} INFO - [2021-02-10 09:44:58,002] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:58,004] {logging_mixin.py:103} INFO - [2021-02-10 09:44:58,004] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:44:58,163] {logging_mixin.py:103} INFO - [2021-02-10 09:44:58,163] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:58,163] {logging_mixin.py:103} INFO - [2021-02-10 09:44:58,163] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:44:58,167] {logging_mixin.py:103} INFO - [2021-02-10 09:44:58,166] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:44:58,323] {logging_mixin.py:103} INFO - [2021-02-10 09:44:58,323] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:58,328] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:44:58,329] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fc4d656b430>
[2021-02-10 09:44:58,329] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:44:58,330] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:44:58,331] {logging_mixin.py:103} INFO - [2021-02-10 09:44:58,331] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:44:58,495] {logging_mixin.py:103} INFO - [2021-02-10 09:44:58,495] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:58,496] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:44:58,497] {logging_mixin.py:103} INFO - [2021-02-10 09:44:58,497] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:44:58,660] {logging_mixin.py:103} INFO - [2021-02-10 09:44:58,660] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:58,661] {logging_mixin.py:103} INFO - [2021-02-10 09:44:58,661] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:44:58,662] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:44:58,662] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fc4d656bc10>
[2021-02-10 09:44:58,662] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:44:58,664] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:44:58,667] {logging_mixin.py:103} INFO - [2021-02-10 09:44:58,667] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:44:58,854] {logging_mixin.py:103} INFO - [2021-02-10 09:44:58,853] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:58,855] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:44:58,856] {logging_mixin.py:103} INFO - [2021-02-10 09:44:58,856] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:44:59,021] {logging_mixin.py:103} INFO - [2021-02-10 09:44:59,021] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:59,021] {logging_mixin.py:103} INFO - [2021-02-10 09:44:59,021] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:44:59,022] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:44:59,022] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fc4d656bc10>
[2021-02-10 09:44:59,023] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:44:59,023] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:44:59,025] {logging_mixin.py:103} INFO - [2021-02-10 09:44:59,025] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:44:59,190] {logging_mixin.py:103} INFO - [2021-02-10 09:44:59,189] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:59,191] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:44:59,192] {logging_mixin.py:103} INFO - [2021-02-10 09:44:59,192] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:44:59,337] {logging_mixin.py:103} INFO - [2021-02-10 09:44:59,337] {cursor.py:560} INFO - query execution done
[2021-02-10 09:44:59,338] {logging_mixin.py:103} INFO - [2021-02-10 09:44:59,337] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:45:04,071] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:45:31,760] {scheduler_job.py:181} INFO - Started process (PID=66286) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:45:31,761] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:45:31,762] {logging_mixin.py:103} INFO - [2021-02-10 09:45:31,762] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:45:33,888] {logging_mixin.py:103} INFO - [2021-02-10 09:45:33,888] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:45:34,191] {logging_mixin.py:103} INFO - [2021-02-10 09:45:34,191] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:45:34,528] {logging_mixin.py:103} INFO - [2021-02-10 09:45:34,528] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:45:34,529] {logging_mixin.py:103} INFO - [2021-02-10 09:45:34,529] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:45:34,529] {logging_mixin.py:103} INFO - [2021-02-10 09:45:34,529] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:45:35,862] {logging_mixin.py:103} INFO - [2021-02-10 09:45:35,862] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:45:35,998] {logging_mixin.py:103} INFO - [2021-02-10 09:45:35,998] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:36,000] {logging_mixin.py:103} INFO - [2021-02-10 09:45:36,000] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:45:36,164] {logging_mixin.py:103} INFO - [2021-02-10 09:45:36,164] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:36,164] {logging_mixin.py:103} INFO - [2021-02-10 09:45:36,164] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:45:36,310] {logging_mixin.py:103} INFO - [2021-02-10 09:45:36,309] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:36,400] {logging_mixin.py:103} INFO - [2021-02-10 09:45:36,400] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:45:36,605] {logging_mixin.py:103} INFO - [2021-02-10 09:45:36,605] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:36,725] {logging_mixin.py:103} INFO - [2021-02-10 09:45:36,725] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:45:36,911] {logging_mixin.py:103} INFO - [2021-02-10 09:45:36,911] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:36,954] {logging_mixin.py:103} INFO - [2021-02-10 09:45:36,954] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:45:36,955] {logging_mixin.py:103} INFO - [2021-02-10 09:45:36,955] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:45:39,227] {logging_mixin.py:103} INFO - [2021-02-10 09:45:39,227] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:39,231] {logging_mixin.py:103} INFO - [2021-02-10 09:45:39,231] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:45:39,241] {logging_mixin.py:103} INFO - [2021-02-10 09:45:39,241] {data_context.py:1281} INFO - Setting run_name to: 20210210T084539.241657Z
[2021-02-10 09:45:39,242] {logging_mixin.py:103} INFO - [2021-02-10 09:45:39,242] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:45:39,251] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:45:39,251] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f9faa46b430>
[2021-02-10 09:45:39,251] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:45:39,251] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:45:39,253] {logging_mixin.py:103} INFO - [2021-02-10 09:45:39,253] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:45:39,474] {logging_mixin.py:103} INFO - [2021-02-10 09:45:39,473] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:39,475] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:45:39,476] {logging_mixin.py:103} INFO - [2021-02-10 09:45:39,476] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:45:39,660] {logging_mixin.py:103} INFO - [2021-02-10 09:45:39,659] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:39,661] {logging_mixin.py:103} INFO - [2021-02-10 09:45:39,660] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:45:39,663] {logging_mixin.py:103} INFO - [2021-02-10 09:45:39,662] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:45:39,827] {logging_mixin.py:103} INFO - [2021-02-10 09:45:39,827] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:39,829] {logging_mixin.py:103} INFO - [2021-02-10 09:45:39,829] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:45:40,041] {logging_mixin.py:103} INFO - [2021-02-10 09:45:40,041] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:40,044] {logging_mixin.py:103} INFO - [2021-02-10 09:45:40,043] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:45:40,211] {logging_mixin.py:103} INFO - [2021-02-10 09:45:40,211] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:40,212] {logging_mixin.py:103} INFO - [2021-02-10 09:45:40,212] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:45:40,233] {logging_mixin.py:103} INFO - [2021-02-10 09:45:40,233] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:45:40,233] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:45:40,234] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f9faa46b430>
[2021-02-10 09:45:40,234] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:45:40,234] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:45:40,236] {logging_mixin.py:103} INFO - [2021-02-10 09:45:40,236] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:45:40,519] {logging_mixin.py:103} INFO - [2021-02-10 09:45:40,519] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:40,520] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:45:40,521] {logging_mixin.py:103} INFO - [2021-02-10 09:45:40,521] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:45:40,703] {logging_mixin.py:103} INFO - [2021-02-10 09:45:40,703] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:40,703] {logging_mixin.py:103} INFO - [2021-02-10 09:45:40,703] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:45:40,706] {logging_mixin.py:103} INFO - [2021-02-10 09:45:40,706] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:45:40,930] {logging_mixin.py:103} INFO - [2021-02-10 09:45:40,930] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:40,932] {logging_mixin.py:103} INFO - [2021-02-10 09:45:40,932] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:45:41,084] {logging_mixin.py:103} INFO - [2021-02-10 09:45:41,084] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:41,088] {logging_mixin.py:103} INFO - [2021-02-10 09:45:41,088] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:45:41,283] {logging_mixin.py:103} INFO - [2021-02-10 09:45:41,283] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:41,286] {logging_mixin.py:103} INFO - [2021-02-10 09:45:41,285] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:45:41,469] {logging_mixin.py:103} INFO - [2021-02-10 09:45:41,469] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:41,470] {logging_mixin.py:103} INFO - [2021-02-10 09:45:41,469] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:45:41,474] {logging_mixin.py:103} INFO - [2021-02-10 09:45:41,474] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:45:41,695] {logging_mixin.py:103} INFO - [2021-02-10 09:45:41,694] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:41,707] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:45:41,707] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f9faa46b430>
[2021-02-10 09:45:41,707] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:45:41,708] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:45:41,711] {logging_mixin.py:103} INFO - [2021-02-10 09:45:41,711] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:45:42,307] {logging_mixin.py:103} INFO - [2021-02-10 09:45:42,307] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:42,308] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:45:42,309] {logging_mixin.py:103} INFO - [2021-02-10 09:45:42,309] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:45:42,546] {logging_mixin.py:103} INFO - [2021-02-10 09:45:42,546] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:42,547] {logging_mixin.py:103} INFO - [2021-02-10 09:45:42,547] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:45:42,548] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:45:42,548] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f9faa46bc10>
[2021-02-10 09:45:42,548] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:45:42,551] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:45:42,552] {logging_mixin.py:103} INFO - [2021-02-10 09:45:42,552] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:45:42,847] {logging_mixin.py:103} INFO - [2021-02-10 09:45:42,847] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:42,849] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:45:42,850] {logging_mixin.py:103} INFO - [2021-02-10 09:45:42,850] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:45:43,118] {logging_mixin.py:103} INFO - [2021-02-10 09:45:43,118] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:43,119] {logging_mixin.py:103} INFO - [2021-02-10 09:45:43,118] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:45:43,120] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:45:43,120] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f9faa46bc10>
[2021-02-10 09:45:43,120] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:45:43,121] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:45:43,124] {logging_mixin.py:103} INFO - [2021-02-10 09:45:43,124] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:45:43,360] {logging_mixin.py:103} INFO - [2021-02-10 09:45:43,360] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:43,361] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:45:43,363] {logging_mixin.py:103} INFO - [2021-02-10 09:45:43,363] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:45:43,597] {logging_mixin.py:103} INFO - [2021-02-10 09:45:43,597] {cursor.py:560} INFO - query execution done
[2021-02-10 09:45:43,598] {logging_mixin.py:103} INFO - [2021-02-10 09:45:43,598] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:45:49,466] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:46:17,597] {scheduler_job.py:181} INFO - Started process (PID=66351) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:46:17,599] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:46:17,600] {logging_mixin.py:103} INFO - [2021-02-10 09:46:17,599] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:46:19,345] {logging_mixin.py:103} INFO - [2021-02-10 09:46:19,345] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:46:19,632] {logging_mixin.py:103} INFO - [2021-02-10 09:46:19,632] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:46:19,974] {logging_mixin.py:103} INFO - [2021-02-10 09:46:19,974] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:46:19,974] {logging_mixin.py:103} INFO - [2021-02-10 09:46:19,974] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:46:19,974] {logging_mixin.py:103} INFO - [2021-02-10 09:46:19,974] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:46:21,318] {logging_mixin.py:103} INFO - [2021-02-10 09:46:21,318] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:46:21,469] {logging_mixin.py:103} INFO - [2021-02-10 09:46:21,468] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:21,470] {logging_mixin.py:103} INFO - [2021-02-10 09:46:21,470] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:46:21,710] {logging_mixin.py:103} INFO - [2021-02-10 09:46:21,710] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:21,711] {logging_mixin.py:103} INFO - [2021-02-10 09:46:21,711] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:46:22,124] {logging_mixin.py:103} INFO - [2021-02-10 09:46:22,123] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:22,215] {logging_mixin.py:103} INFO - [2021-02-10 09:46:22,215] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:46:22,360] {logging_mixin.py:103} INFO - [2021-02-10 09:46:22,360] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:22,475] {logging_mixin.py:103} INFO - [2021-02-10 09:46:22,475] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:46:22,651] {logging_mixin.py:103} INFO - [2021-02-10 09:46:22,651] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:22,699] {logging_mixin.py:103} INFO - [2021-02-10 09:46:22,699] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:46:22,700] {logging_mixin.py:103} INFO - [2021-02-10 09:46:22,700] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:46:24,077] {logging_mixin.py:103} INFO - [2021-02-10 09:46:24,076] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:24,080] {logging_mixin.py:103} INFO - [2021-02-10 09:46:24,080] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:46:24,091] {logging_mixin.py:103} INFO - [2021-02-10 09:46:24,091] {data_context.py:1281} INFO - Setting run_name to: 20210210T084624.091136Z
[2021-02-10 09:46:24,092] {logging_mixin.py:103} INFO - [2021-02-10 09:46:24,092] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:46:24,100] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:46:24,101] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fb9cc56b430>
[2021-02-10 09:46:24,101] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:46:24,101] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:46:24,103] {logging_mixin.py:103} INFO - [2021-02-10 09:46:24,103] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:46:24,284] {logging_mixin.py:103} INFO - [2021-02-10 09:46:24,284] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:24,285] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:46:24,287] {logging_mixin.py:103} INFO - [2021-02-10 09:46:24,286] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:46:24,454] {logging_mixin.py:103} INFO - [2021-02-10 09:46:24,454] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:24,454] {logging_mixin.py:103} INFO - [2021-02-10 09:46:24,454] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:46:24,457] {logging_mixin.py:103} INFO - [2021-02-10 09:46:24,456] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:46:24,620] {logging_mixin.py:103} INFO - [2021-02-10 09:46:24,620] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:24,623] {logging_mixin.py:103} INFO - [2021-02-10 09:46:24,622] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:46:24,812] {logging_mixin.py:103} INFO - [2021-02-10 09:46:24,812] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:24,815] {logging_mixin.py:103} INFO - [2021-02-10 09:46:24,815] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:46:25,020] {logging_mixin.py:103} INFO - [2021-02-10 09:46:25,019] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:25,020] {logging_mixin.py:103} INFO - [2021-02-10 09:46:25,020] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:46:25,039] {logging_mixin.py:103} INFO - [2021-02-10 09:46:25,039] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:46:25,040] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:46:25,040] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fb9cc56b430>
[2021-02-10 09:46:25,040] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:46:25,041] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:46:25,042] {logging_mixin.py:103} INFO - [2021-02-10 09:46:25,042] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:46:25,224] {logging_mixin.py:103} INFO - [2021-02-10 09:46:25,224] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:25,225] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:46:25,227] {logging_mixin.py:103} INFO - [2021-02-10 09:46:25,227] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:46:25,382] {logging_mixin.py:103} INFO - [2021-02-10 09:46:25,382] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:25,383] {logging_mixin.py:103} INFO - [2021-02-10 09:46:25,383] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:46:25,384] {logging_mixin.py:103} INFO - [2021-02-10 09:46:25,384] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:46:25,546] {logging_mixin.py:103} INFO - [2021-02-10 09:46:25,546] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:25,547] {logging_mixin.py:103} INFO - [2021-02-10 09:46:25,547] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:46:25,761] {logging_mixin.py:103} INFO - [2021-02-10 09:46:25,761] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:25,764] {logging_mixin.py:103} INFO - [2021-02-10 09:46:25,764] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:46:25,955] {logging_mixin.py:103} INFO - [2021-02-10 09:46:25,954] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:25,957] {logging_mixin.py:103} INFO - [2021-02-10 09:46:25,957] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:46:26,128] {logging_mixin.py:103} INFO - [2021-02-10 09:46:26,128] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:26,128] {logging_mixin.py:103} INFO - [2021-02-10 09:46:26,128] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:46:26,132] {logging_mixin.py:103} INFO - [2021-02-10 09:46:26,132] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:46:26,301] {logging_mixin.py:103} INFO - [2021-02-10 09:46:26,301] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:26,312] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:46:26,313] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fb9cc56b430>
[2021-02-10 09:46:26,313] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:46:26,313] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:46:26,315] {logging_mixin.py:103} INFO - [2021-02-10 09:46:26,315] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:46:26,531] {logging_mixin.py:103} INFO - [2021-02-10 09:46:26,531] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:26,532] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:46:26,533] {logging_mixin.py:103} INFO - [2021-02-10 09:46:26,533] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:46:26,709] {logging_mixin.py:103} INFO - [2021-02-10 09:46:26,709] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:26,709] {logging_mixin.py:103} INFO - [2021-02-10 09:46:26,709] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:46:26,710] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:46:26,710] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fb9cc56bc10>
[2021-02-10 09:46:26,710] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:46:26,711] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:46:26,712] {logging_mixin.py:103} INFO - [2021-02-10 09:46:26,712] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:46:26,891] {logging_mixin.py:103} INFO - [2021-02-10 09:46:26,891] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:26,892] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:46:26,894] {logging_mixin.py:103} INFO - [2021-02-10 09:46:26,894] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:46:27,077] {logging_mixin.py:103} INFO - [2021-02-10 09:46:27,077] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:27,078] {logging_mixin.py:103} INFO - [2021-02-10 09:46:27,077] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:46:27,079] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:46:27,079] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fb9cc56bc10>
[2021-02-10 09:46:27,079] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:46:27,080] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:46:27,082] {logging_mixin.py:103} INFO - [2021-02-10 09:46:27,082] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:46:27,257] {logging_mixin.py:103} INFO - [2021-02-10 09:46:27,257] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:27,258] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:46:27,260] {logging_mixin.py:103} INFO - [2021-02-10 09:46:27,260] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:46:27,549] {logging_mixin.py:103} INFO - [2021-02-10 09:46:27,548] {cursor.py:560} INFO - query execution done
[2021-02-10 09:46:27,549] {logging_mixin.py:103} INFO - [2021-02-10 09:46:27,549] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:46:33,486] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:47:03,271] {scheduler_job.py:181} INFO - Started process (PID=66410) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:47:03,273] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:47:03,273] {logging_mixin.py:103} INFO - [2021-02-10 09:47:03,273] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:47:05,077] {logging_mixin.py:103} INFO - [2021-02-10 09:47:05,077] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:47:05,364] {logging_mixin.py:103} INFO - [2021-02-10 09:47:05,364] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:47:05,699] {logging_mixin.py:103} INFO - [2021-02-10 09:47:05,698] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:47:05,699] {logging_mixin.py:103} INFO - [2021-02-10 09:47:05,699] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:47:05,699] {logging_mixin.py:103} INFO - [2021-02-10 09:47:05,699] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:47:07,092] {logging_mixin.py:103} INFO - [2021-02-10 09:47:07,092] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:47:07,246] {logging_mixin.py:103} INFO - [2021-02-10 09:47:07,246] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:07,248] {logging_mixin.py:103} INFO - [2021-02-10 09:47:07,248] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 09:47:07,394] {logging_mixin.py:103} INFO - [2021-02-10 09:47:07,393] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:07,394] {logging_mixin.py:103} INFO - [2021-02-10 09:47:07,394] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:47:07,597] {logging_mixin.py:103} INFO - [2021-02-10 09:47:07,597] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:07,685] {logging_mixin.py:103} INFO - [2021-02-10 09:47:07,685] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 09:47:07,890] {logging_mixin.py:103} INFO - [2021-02-10 09:47:07,890] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:08,008] {logging_mixin.py:103} INFO - [2021-02-10 09:47:08,008] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 09:47:08,212] {logging_mixin.py:103} INFO - [2021-02-10 09:47:08,212] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:08,254] {logging_mixin.py:103} INFO - [2021-02-10 09:47:08,254] {json_result.py:116} INFO - fetching data done
[2021-02-10 09:47:08,254] {logging_mixin.py:103} INFO - [2021-02-10 09:47:08,254] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 09:47:09,769] {logging_mixin.py:103} INFO - [2021-02-10 09:47:09,769] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:09,772] {logging_mixin.py:103} INFO - [2021-02-10 09:47:09,772] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:47:09,783] {logging_mixin.py:103} INFO - [2021-02-10 09:47:09,783] {data_context.py:1281} INFO - Setting run_name to: 20210210T084709.783463Z
[2021-02-10 09:47:09,784] {logging_mixin.py:103} INFO - [2021-02-10 09:47:09,784] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 09:47:09,792] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:47:09,793] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f8db9d6b430>
[2021-02-10 09:47:09,793] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:47:09,793] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:47:09,794] {logging_mixin.py:103} INFO - [2021-02-10 09:47:09,794] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:47:09,986] {logging_mixin.py:103} INFO - [2021-02-10 09:47:09,986] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:09,987] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 09:47:09,989] {logging_mixin.py:103} INFO - [2021-02-10 09:47:09,989] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 09:47:10,249] {logging_mixin.py:103} INFO - [2021-02-10 09:47:10,248] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:10,249] {logging_mixin.py:103} INFO - [2021-02-10 09:47:10,249] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:47:10,251] {logging_mixin.py:103} INFO - [2021-02-10 09:47:10,251] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:47:10,413] {logging_mixin.py:103} INFO - [2021-02-10 09:47:10,412] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:10,415] {logging_mixin.py:103} INFO - [2021-02-10 09:47:10,415] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 09:47:10,620] {logging_mixin.py:103} INFO - [2021-02-10 09:47:10,620] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:10,623] {logging_mixin.py:103} INFO - [2021-02-10 09:47:10,623] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 09:47:10,781] {logging_mixin.py:103} INFO - [2021-02-10 09:47:10,781] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:10,781] {logging_mixin.py:103} INFO - [2021-02-10 09:47:10,781] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:47:10,804] {logging_mixin.py:103} INFO - [2021-02-10 09:47:10,804] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 09:47:10,806] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:47:10,806] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f8db9d6b430>
[2021-02-10 09:47:10,806] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:47:10,806] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:47:10,808] {logging_mixin.py:103} INFO - [2021-02-10 09:47:10,808] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:47:10,947] {logging_mixin.py:103} INFO - [2021-02-10 09:47:10,947] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:10,948] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 09:47:10,949] {logging_mixin.py:103} INFO - [2021-02-10 09:47:10,949] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 09:47:11,225] {logging_mixin.py:103} INFO - [2021-02-10 09:47:11,225] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:11,226] {logging_mixin.py:103} INFO - [2021-02-10 09:47:11,226] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:47:11,229] {logging_mixin.py:103} INFO - [2021-02-10 09:47:11,228] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 09:47:11,405] {logging_mixin.py:103} INFO - [2021-02-10 09:47:11,405] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:11,407] {logging_mixin.py:103} INFO - [2021-02-10 09:47:11,407] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:47:11,573] {logging_mixin.py:103} INFO - [2021-02-10 09:47:11,572] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:11,576] {logging_mixin.py:103} INFO - [2021-02-10 09:47:11,576] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 09:47:11,766] {logging_mixin.py:103} INFO - [2021-02-10 09:47:11,766] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:11,769] {logging_mixin.py:103} INFO - [2021-02-10 09:47:11,769] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 09:47:12,036] {logging_mixin.py:103} INFO - [2021-02-10 09:47:12,036] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:12,037] {logging_mixin.py:103} INFO - [2021-02-10 09:47:12,037] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:47:12,041] {logging_mixin.py:103} INFO - [2021-02-10 09:47:12,041] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 09:47:12,245] {logging_mixin.py:103} INFO - [2021-02-10 09:47:12,244] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:12,257] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:47:12,257] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f8db9d6b430>
[2021-02-10 09:47:12,257] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:47:12,257] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:47:12,259] {logging_mixin.py:103} INFO - [2021-02-10 09:47:12,259] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 09:47:12,545] {logging_mixin.py:103} INFO - [2021-02-10 09:47:12,545] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:12,546] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 09:47:12,547] {logging_mixin.py:103} INFO - [2021-02-10 09:47:12,547] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 09:47:12,764] {logging_mixin.py:103} INFO - [2021-02-10 09:47:12,764] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:12,764] {logging_mixin.py:103} INFO - [2021-02-10 09:47:12,764] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:47:12,765] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:47:12,765] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f8db9d6bc10>
[2021-02-10 09:47:12,766] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:47:12,768] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:47:12,769] {logging_mixin.py:103} INFO - [2021-02-10 09:47:12,769] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 09:47:12,946] {logging_mixin.py:103} INFO - [2021-02-10 09:47:12,946] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:12,947] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 09:47:12,948] {logging_mixin.py:103} INFO - [2021-02-10 09:47:12,948] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 09:47:13,205] {logging_mixin.py:103} INFO - [2021-02-10 09:47:13,205] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:13,207] {logging_mixin.py:103} INFO - [2021-02-10 09:47:13,207] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:47:13,208] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 09:47:13,208] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f8db9d6bc10>
[2021-02-10 09:47:13,208] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 09:47:13,209] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:47:13,212] {logging_mixin.py:103} INFO - [2021-02-10 09:47:13,211] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 09:47:13,044] {logging_mixin.py:103} INFO - [2021-02-10 09:47:13,044] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:13,044] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 09:47:13,045] {logging_mixin.py:103} INFO - [2021-02-10 09:47:13,045] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 09:47:13,239] {logging_mixin.py:103} INFO - [2021-02-10 09:47:13,239] {cursor.py:560} INFO - query execution done
[2021-02-10 09:47:13,240] {logging_mixin.py:103} INFO - [2021-02-10 09:47:13,239] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 09:47:20,139] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 09:59:11,377] {scheduler_job.py:181} INFO - Started process (PID=66501) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:59:11,379] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 09:59:11,380] {logging_mixin.py:103} INFO - [2021-02-10 09:59:11,380] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 09:59:20,247] {logging_mixin.py:103} INFO - [2021-02-10 09:59:20,247] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 09:59:21,661] {logging_mixin.py:103} INFO - [2021-02-10 09:59:21,661] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 09:59:22,760] {logging_mixin.py:103} INFO - [2021-02-10 09:59:22,760] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 09:59:22,761] {logging_mixin.py:103} INFO - [2021-02-10 09:59:22,761] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 09:59:22,762] {logging_mixin.py:103} INFO - [2021-02-10 09:59:22,762] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 09:59:22,802] {logging_mixin.py:103} INFO - [2021-02-10 09:59:22,801] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7f8198110ca0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=7f17f9ee-273d-408c-b8ad-53959908806d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=429f32d9-1157-4e17-a9e3-8aa74f5d7f5c
[2021-02-10 09:59:23,822] {logging_mixin.py:103} INFO - [2021-02-10 09:59:23,822] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7f819812a040>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=7f17f9ee-273d-408c-b8ad-53959908806d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=c451615e-2356-412d-8a56-ca51be420856
[2021-02-10 09:59:25,843] {logging_mixin.py:103} INFO - [2021-02-10 09:59:25,843] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7f819812a5b0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=7f17f9ee-273d-408c-b8ad-53959908806d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=3a0d3e22-ad04-4c09-91a4-ea9f671b92bb
[2021-02-10 09:59:26,865] {logging_mixin.py:103} INFO - [2021-02-10 09:59:26,865] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7f819812aaf0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=7f17f9ee-273d-408c-b8ad-53959908806d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=6710d283-8514-4bf5-8d63-3ae52cc5342d
[2021-02-10 09:59:29,879] {logging_mixin.py:103} INFO - [2021-02-10 09:59:29,878] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7f8198134040>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=7f17f9ee-273d-408c-b8ad-53959908806d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=d9d34fcc-bf99-4d85-8898-589b6ddcf393
[2021-02-10 09:59:34,897] {logging_mixin.py:103} INFO - [2021-02-10 09:59:34,896] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7f819812aca0>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=7f17f9ee-273d-408c-b8ad-53959908806d&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=cba89778-dcb6-4286-b21d-8a816784fb65
[2021-02-10 10:13:51,437] {logging_mixin.py:103} INFO - [2021-02-10 10:13:51,437] {timeout.py:36} ERROR - Process timed out, PID: 66501
[2021-02-10 10:13:51,655] {logging_mixin.py:103} INFO - [2021-02-10 10:13:51,655] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:13:51,656] {logging_mixin.py:103} INFO - [2021-02-10 10:13:51,656] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:13:51,662] {logging_mixin.py:103} INFO - [2021-02-10 10:13:51,661] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7f8198161580>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=a2effe3d-a985-4ef6-97fe-7c2f7e8a89ce&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=12986647-e396-4aeb-a573-a125070ff90f
[2021-02-10 10:13:54,670] {logging_mixin.py:103} INFO - [2021-02-10 10:13:54,670] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7f8198161910>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=a2effe3d-a985-4ef6-97fe-7c2f7e8a89ce&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=a66ce2bc-ea71-41fb-840e-dfb09a9aea47
[2021-02-10 10:14:02,702] {logging_mixin.py:103} INFO - [2021-02-10 10:14:02,701] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7f8198161e50>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=a2effe3d-a985-4ef6-97fe-7c2f7e8a89ce&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=8098231d-e98b-42fb-b8b3-eb205dfdf50a
[2021-02-10 10:14:17,726] {logging_mixin.py:103} INFO - [2021-02-10 10:14:17,726] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7f8198161b50>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=a2effe3d-a985-4ef6-97fe-7c2f7e8a89ce&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=43470c6e-d1cb-468e-8b80-728e8d13e5b1
[2021-02-10 10:14:33,743] {logging_mixin.py:103} INFO - [2021-02-10 10:14:33,743] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7f8198153e80>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=a2effe3d-a985-4ef6-97fe-7c2f7e8a89ce&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=be9dc29b-c626-42d4-b2af-261335acd85c
[2021-02-10 10:22:15,696] {logging_mixin.py:103} INFO - [2021-02-10 10:22:15,695] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7f819814c850>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=a2effe3d-a985-4ef6-97fe-7c2f7e8a89ce&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=7216cb93-9cfa-45ac-8bea-d743279b4835
[2021-02-10 10:22:31,712] {logging_mixin.py:103} INFO - [2021-02-10 10:22:31,712] {connectionpool.py:751} WARNING - Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<snowflake.connector.vendored.urllib3.connection.HTTPSConnection object at 0x7f8198168190>: Failed to establish a new connection: [Errno 8] nodename nor servname provided, or not known')': /session/v1/login-request?request_id=a2effe3d-a985-4ef6-97fe-7c2f7e8a89ce&databaseName=QUARANTINE_DF&schemaName=PUBLIC&warehouse=COMPUTE_WH&request_guid=9d271bee-fe15-483b-85f6-3a995e9b6271
[2021-02-10 10:22:43,272] {logging_mixin.py:103} INFO - [2021-02-10 10:22:43,272] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:22:43,448] {logging_mixin.py:103} INFO - [2021-02-10 10:22:43,448] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:43,451] {logging_mixin.py:103} INFO - [2021-02-10 10:22:43,450] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:22:43,679] {logging_mixin.py:103} INFO - [2021-02-10 10:22:43,679] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:43,680] {logging_mixin.py:103} INFO - [2021-02-10 10:22:43,680] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:22:43,822] {logging_mixin.py:103} INFO - [2021-02-10 10:22:43,822] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:43,823] {logging_mixin.py:103} INFO - [2021-02-10 10:22:43,823] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:22:43,970] {logging_mixin.py:103} INFO - [2021-02-10 10:22:43,970] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:43,992] {logging_mixin.py:103} INFO - [2021-02-10 10:22:43,992] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:22:44,195] {logging_mixin.py:103} INFO - [2021-02-10 10:22:44,195] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:44,294] {logging_mixin.py:103} INFO - [2021-02-10 10:22:44,294] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:22:44,295] {logging_mixin.py:103} INFO - [2021-02-10 10:22:44,294] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:22:45,695] {logging_mixin.py:103} INFO - [2021-02-10 10:22:45,695] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:45,700] {logging_mixin.py:103} INFO - [2021-02-10 10:22:45,699] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:22:45,716] {logging_mixin.py:103} INFO - [2021-02-10 10:22:45,715] {data_context.py:1281} INFO - Setting run_name to: 20210210T092245.715888Z
[2021-02-10 10:22:45,718] {logging_mixin.py:103} INFO - [2021-02-10 10:22:45,718] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:22:45,728] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:22:45,728] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f819756b430>
[2021-02-10 10:22:45,728] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:22:45,729] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:22:45,732] {logging_mixin.py:103} INFO - [2021-02-10 10:22:45,732] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:22:45,960] {logging_mixin.py:103} INFO - [2021-02-10 10:22:45,959] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:45,960] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:22:45,962] {logging_mixin.py:103} INFO - [2021-02-10 10:22:45,962] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:22:46,163] {logging_mixin.py:103} INFO - [2021-02-10 10:22:46,163] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:46,163] {logging_mixin.py:103} INFO - [2021-02-10 10:22:46,163] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:22:46,168] {logging_mixin.py:103} INFO - [2021-02-10 10:22:46,167] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:22:46,343] {logging_mixin.py:103} INFO - [2021-02-10 10:22:46,343] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:46,345] {logging_mixin.py:103} INFO - [2021-02-10 10:22:46,345] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:22:46,523] {logging_mixin.py:103} INFO - [2021-02-10 10:22:46,522] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:46,525] {logging_mixin.py:103} INFO - [2021-02-10 10:22:46,525] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:22:46,805] {logging_mixin.py:103} INFO - [2021-02-10 10:22:46,804] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:46,805] {logging_mixin.py:103} INFO - [2021-02-10 10:22:46,805] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:22:47,143] {logging_mixin.py:103} INFO - [2021-02-10 10:22:47,143] {connection.py:438} INFO - closed
[2021-02-10 10:22:47,151] {logging_mixin.py:103} INFO - [2021-02-10 10:22:47,151] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:22:47,154] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:22:47,154] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f819756b430>
[2021-02-10 10:22:47,154] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:22:47,154] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:22:47,155] {logging_mixin.py:103} INFO - [2021-02-10 10:22:47,155] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:22:47,393] {logging_mixin.py:103} INFO - [2021-02-10 10:22:47,393] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:47,394] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:22:47,395] {logging_mixin.py:103} INFO - [2021-02-10 10:22:47,395] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:22:47,589] {logging_mixin.py:103} INFO - [2021-02-10 10:22:47,589] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:47,590] {logging_mixin.py:103} INFO - [2021-02-10 10:22:47,590] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:22:47,594] {logging_mixin.py:103} INFO - [2021-02-10 10:22:47,594] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:22:48,464] {logging_mixin.py:103} INFO - [2021-02-10 10:22:48,464] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:48,467] {logging_mixin.py:103} INFO - [2021-02-10 10:22:48,467] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:22:48,972] {logging_mixin.py:103} INFO - [2021-02-10 10:22:48,972] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:48,976] {logging_mixin.py:103} INFO - [2021-02-10 10:22:48,975] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:22:49,309] {logging_mixin.py:103} INFO - [2021-02-10 10:22:49,309] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:49,312] {logging_mixin.py:103} INFO - [2021-02-10 10:22:49,311] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:22:49,504] {logging_mixin.py:103} INFO - [2021-02-10 10:22:49,503] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:49,504] {logging_mixin.py:103} INFO - [2021-02-10 10:22:49,504] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:22:49,508] {logging_mixin.py:103} INFO - [2021-02-10 10:22:49,508] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:22:49,829] {logging_mixin.py:103} INFO - [2021-02-10 10:22:49,829] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:49,841] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:22:49,841] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f819756b430>
[2021-02-10 10:22:49,841] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:22:49,842] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:22:49,844] {logging_mixin.py:103} INFO - [2021-02-10 10:22:49,844] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:22:50,034] {logging_mixin.py:103} INFO - [2021-02-10 10:22:50,034] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:50,035] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:22:50,037] {logging_mixin.py:103} INFO - [2021-02-10 10:22:50,037] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:22:50,387] {logging_mixin.py:103} INFO - [2021-02-10 10:22:50,387] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:50,388] {logging_mixin.py:103} INFO - [2021-02-10 10:22:50,388] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:22:50,389] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:22:50,389] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f819756bc10>
[2021-02-10 10:22:50,389] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:22:50,390] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:22:50,393] {logging_mixin.py:103} INFO - [2021-02-10 10:22:50,392] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:22:50,594] {logging_mixin.py:103} INFO - [2021-02-10 10:22:50,594] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:50,595] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:22:50,598] {logging_mixin.py:103} INFO - [2021-02-10 10:22:50,598] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:22:50,973] {logging_mixin.py:103} INFO - [2021-02-10 10:22:50,973] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:50,973] {logging_mixin.py:103} INFO - [2021-02-10 10:22:50,973] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:22:50,974] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:22:50,974] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f819756bc10>
[2021-02-10 10:22:50,974] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:22:50,976] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:22:50,978] {logging_mixin.py:103} INFO - [2021-02-10 10:22:50,977] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:22:51,415] {logging_mixin.py:103} INFO - [2021-02-10 10:22:51,414] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:51,415] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:22:51,416] {logging_mixin.py:103} INFO - [2021-02-10 10:22:51,416] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:22:51,620] {logging_mixin.py:103} INFO - [2021-02-10 10:22:51,620] {cursor.py:560} INFO - query execution done
[2021-02-10 10:22:51,621] {logging_mixin.py:103} INFO - [2021-02-10 10:22:51,621] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:22:58,417] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:23:32,323] {scheduler_job.py:181} INFO - Started process (PID=66642) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:23:32,324] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:23:32,325] {logging_mixin.py:103} INFO - [2021-02-10 10:23:32,324] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:23:34,000] {logging_mixin.py:103} INFO - [2021-02-10 10:23:34,000] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:23:34,287] {logging_mixin.py:103} INFO - [2021-02-10 10:23:34,287] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:23:34,626] {logging_mixin.py:103} INFO - [2021-02-10 10:23:34,625] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:23:34,626] {logging_mixin.py:103} INFO - [2021-02-10 10:23:34,626] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:23:34,626] {logging_mixin.py:103} INFO - [2021-02-10 10:23:34,626] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:23:35,652] {logging_mixin.py:103} INFO - [2021-02-10 10:23:35,652] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:23:35,809] {logging_mixin.py:103} INFO - [2021-02-10 10:23:35,808] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:35,810] {logging_mixin.py:103} INFO - [2021-02-10 10:23:35,810] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:23:36,110] {logging_mixin.py:103} INFO - [2021-02-10 10:23:36,110] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:36,111] {logging_mixin.py:103} INFO - [2021-02-10 10:23:36,111] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:23:36,316] {logging_mixin.py:103} INFO - [2021-02-10 10:23:36,316] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:36,408] {logging_mixin.py:103} INFO - [2021-02-10 10:23:36,408] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:23:36,562] {logging_mixin.py:103} INFO - [2021-02-10 10:23:36,562] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:36,691] {logging_mixin.py:103} INFO - [2021-02-10 10:23:36,691] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:23:36,974] {logging_mixin.py:103} INFO - [2021-02-10 10:23:36,974] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:37,022] {logging_mixin.py:103} INFO - [2021-02-10 10:23:37,022] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:23:37,022] {logging_mixin.py:103} INFO - [2021-02-10 10:23:37,022] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:23:39,028] {logging_mixin.py:103} INFO - [2021-02-10 10:23:39,028] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:39,031] {logging_mixin.py:103} INFO - [2021-02-10 10:23:39,031] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:23:39,041] {logging_mixin.py:103} INFO - [2021-02-10 10:23:39,041] {data_context.py:1281} INFO - Setting run_name to: 20210210T092339.041510Z
[2021-02-10 10:23:39,043] {logging_mixin.py:103} INFO - [2021-02-10 10:23:39,043] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:23:39,051] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:23:39,051] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f8365c6b430>
[2021-02-10 10:23:39,051] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:23:39,052] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:23:39,053] {logging_mixin.py:103} INFO - [2021-02-10 10:23:39,053] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:23:39,234] {logging_mixin.py:103} INFO - [2021-02-10 10:23:39,234] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:39,235] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:23:39,236] {logging_mixin.py:103} INFO - [2021-02-10 10:23:39,236] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:23:39,414] {logging_mixin.py:103} INFO - [2021-02-10 10:23:39,413] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:39,414] {logging_mixin.py:103} INFO - [2021-02-10 10:23:39,414] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:23:39,416] {logging_mixin.py:103} INFO - [2021-02-10 10:23:39,416] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:23:39,593] {logging_mixin.py:103} INFO - [2021-02-10 10:23:39,593] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:39,596] {logging_mixin.py:103} INFO - [2021-02-10 10:23:39,595] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:23:39,765] {logging_mixin.py:103} INFO - [2021-02-10 10:23:39,765] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:39,768] {logging_mixin.py:103} INFO - [2021-02-10 10:23:39,768] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:23:39,947] {logging_mixin.py:103} INFO - [2021-02-10 10:23:39,947] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:39,947] {logging_mixin.py:103} INFO - [2021-02-10 10:23:39,947] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:23:39,967] {logging_mixin.py:103} INFO - [2021-02-10 10:23:39,967] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:23:39,968] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:23:39,968] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f8365c6b430>
[2021-02-10 10:23:39,968] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:23:39,968] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:23:39,970] {logging_mixin.py:103} INFO - [2021-02-10 10:23:39,970] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:23:40,144] {logging_mixin.py:103} INFO - [2021-02-10 10:23:40,144] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:40,145] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:23:40,146] {logging_mixin.py:103} INFO - [2021-02-10 10:23:40,146] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:23:40,320] {logging_mixin.py:103} INFO - [2021-02-10 10:23:40,319] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:40,320] {logging_mixin.py:103} INFO - [2021-02-10 10:23:40,320] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:23:40,323] {logging_mixin.py:103} INFO - [2021-02-10 10:23:40,322] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:23:40,482] {logging_mixin.py:103} INFO - [2021-02-10 10:23:40,482] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:40,484] {logging_mixin.py:103} INFO - [2021-02-10 10:23:40,483] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:23:40,667] {logging_mixin.py:103} INFO - [2021-02-10 10:23:40,667] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:40,670] {logging_mixin.py:103} INFO - [2021-02-10 10:23:40,670] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:23:40,836] {logging_mixin.py:103} INFO - [2021-02-10 10:23:40,835] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:40,838] {logging_mixin.py:103} INFO - [2021-02-10 10:23:40,838] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:23:41,018] {logging_mixin.py:103} INFO - [2021-02-10 10:23:41,018] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:41,018] {logging_mixin.py:103} INFO - [2021-02-10 10:23:41,018] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:23:41,020] {logging_mixin.py:103} INFO - [2021-02-10 10:23:41,020] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:23:41,210] {logging_mixin.py:103} INFO - [2021-02-10 10:23:41,210] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:41,215] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:23:41,216] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f8365c6b430>
[2021-02-10 10:23:41,216] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:23:41,216] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:23:41,217] {logging_mixin.py:103} INFO - [2021-02-10 10:23:41,217] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:23:41,410] {logging_mixin.py:103} INFO - [2021-02-10 10:23:41,410] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:41,411] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:23:41,412] {logging_mixin.py:103} INFO - [2021-02-10 10:23:41,412] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:23:41,589] {logging_mixin.py:103} INFO - [2021-02-10 10:23:41,589] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:41,590] {logging_mixin.py:103} INFO - [2021-02-10 10:23:41,590] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:23:41,591] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:23:41,591] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f8365c6bc10>
[2021-02-10 10:23:41,591] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:23:41,593] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:23:41,595] {logging_mixin.py:103} INFO - [2021-02-10 10:23:41,595] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:23:41,843] {logging_mixin.py:103} INFO - [2021-02-10 10:23:41,843] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:41,844] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:23:41,845] {logging_mixin.py:103} INFO - [2021-02-10 10:23:41,845] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:23:42,020] {logging_mixin.py:103} INFO - [2021-02-10 10:23:42,020] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:42,021] {logging_mixin.py:103} INFO - [2021-02-10 10:23:42,021] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:23:42,022] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:23:42,022] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f8365c6bc10>
[2021-02-10 10:23:42,022] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:23:42,023] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:23:42,026] {logging_mixin.py:103} INFO - [2021-02-10 10:23:42,026] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:23:42,192] {logging_mixin.py:103} INFO - [2021-02-10 10:23:42,192] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:42,193] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:23:42,194] {logging_mixin.py:103} INFO - [2021-02-10 10:23:42,194] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:23:42,341] {logging_mixin.py:103} INFO - [2021-02-10 10:23:42,341] {cursor.py:560} INFO - query execution done
[2021-02-10 10:23:42,341] {logging_mixin.py:103} INFO - [2021-02-10 10:23:42,341] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:23:48,192] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:24:16,258] {scheduler_job.py:181} INFO - Started process (PID=66700) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:24:16,259] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:24:16,260] {logging_mixin.py:103} INFO - [2021-02-10 10:24:16,259] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:24:18,247] {logging_mixin.py:103} INFO - [2021-02-10 10:24:18,247] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:24:18,538] {logging_mixin.py:103} INFO - [2021-02-10 10:24:18,538] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:24:18,880] {logging_mixin.py:103} INFO - [2021-02-10 10:24:18,880] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:24:18,881] {logging_mixin.py:103} INFO - [2021-02-10 10:24:18,880] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:24:18,881] {logging_mixin.py:103} INFO - [2021-02-10 10:24:18,881] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:24:20,039] {logging_mixin.py:103} INFO - [2021-02-10 10:24:20,039] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:24:20,388] {logging_mixin.py:103} INFO - [2021-02-10 10:24:20,388] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:20,390] {logging_mixin.py:103} INFO - [2021-02-10 10:24:20,389] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:24:20,525] {logging_mixin.py:103} INFO - [2021-02-10 10:24:20,525] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:20,525] {logging_mixin.py:103} INFO - [2021-02-10 10:24:20,525] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:24:20,804] {logging_mixin.py:103} INFO - [2021-02-10 10:24:20,804] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:20,896] {logging_mixin.py:103} INFO - [2021-02-10 10:24:20,896] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:24:21,054] {logging_mixin.py:103} INFO - [2021-02-10 10:24:21,054] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:21,177] {logging_mixin.py:103} INFO - [2021-02-10 10:24:21,177] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:24:21,351] {logging_mixin.py:103} INFO - [2021-02-10 10:24:21,351] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:21,393] {logging_mixin.py:103} INFO - [2021-02-10 10:24:21,393] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:24:21,394] {logging_mixin.py:103} INFO - [2021-02-10 10:24:21,394] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:24:22,650] {logging_mixin.py:103} INFO - [2021-02-10 10:24:22,650] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:22,654] {logging_mixin.py:103} INFO - [2021-02-10 10:24:22,654] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:24:22,665] {logging_mixin.py:103} INFO - [2021-02-10 10:24:22,665] {data_context.py:1281} INFO - Setting run_name to: 20210210T092422.665569Z
[2021-02-10 10:24:22,666] {logging_mixin.py:103} INFO - [2021-02-10 10:24:22,666] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:24:22,676] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:24:22,676] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f856c66b430>
[2021-02-10 10:24:22,676] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:24:22,677] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:24:22,678] {logging_mixin.py:103} INFO - [2021-02-10 10:24:22,678] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:24:22,844] {logging_mixin.py:103} INFO - [2021-02-10 10:24:22,844] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:22,845] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:24:22,846] {logging_mixin.py:103} INFO - [2021-02-10 10:24:22,846] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:24:22,996] {logging_mixin.py:103} INFO - [2021-02-10 10:24:22,995] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:22,996] {logging_mixin.py:103} INFO - [2021-02-10 10:24:22,996] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:24:22,999] {logging_mixin.py:103} INFO - [2021-02-10 10:24:22,998] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:24:23,147] {logging_mixin.py:103} INFO - [2021-02-10 10:24:23,146] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:23,149] {logging_mixin.py:103} INFO - [2021-02-10 10:24:23,149] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:24:23,304] {logging_mixin.py:103} INFO - [2021-02-10 10:24:23,304] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:23,307] {logging_mixin.py:103} INFO - [2021-02-10 10:24:23,307] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:24:23,486] {logging_mixin.py:103} INFO - [2021-02-10 10:24:23,486] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:23,487] {logging_mixin.py:103} INFO - [2021-02-10 10:24:23,487] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:24:23,507] {logging_mixin.py:103} INFO - [2021-02-10 10:24:23,507] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:24:23,508] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:24:23,508] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f856c66b430>
[2021-02-10 10:24:23,508] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:24:23,508] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:24:23,510] {logging_mixin.py:103} INFO - [2021-02-10 10:24:23,510] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:24:23,744] {logging_mixin.py:103} INFO - [2021-02-10 10:24:23,744] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:23,745] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:24:23,746] {logging_mixin.py:103} INFO - [2021-02-10 10:24:23,746] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:24:23,901] {logging_mixin.py:103} INFO - [2021-02-10 10:24:23,901] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:23,902] {logging_mixin.py:103} INFO - [2021-02-10 10:24:23,902] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:24:23,904] {logging_mixin.py:103} INFO - [2021-02-10 10:24:23,904] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:24:24,146] {logging_mixin.py:103} INFO - [2021-02-10 10:24:24,145] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:24,147] {logging_mixin.py:103} INFO - [2021-02-10 10:24:24,147] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:24:24,335] {logging_mixin.py:103} INFO - [2021-02-10 10:24:24,335] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:24,338] {logging_mixin.py:103} INFO - [2021-02-10 10:24:24,338] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:24:24,553] {logging_mixin.py:103} INFO - [2021-02-10 10:24:24,553] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:24,556] {logging_mixin.py:103} INFO - [2021-02-10 10:24:24,556] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:24:24,713] {logging_mixin.py:103} INFO - [2021-02-10 10:24:24,713] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:24,714] {logging_mixin.py:103} INFO - [2021-02-10 10:24:24,714] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:24:24,718] {logging_mixin.py:103} INFO - [2021-02-10 10:24:24,718] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:24:24,903] {logging_mixin.py:103} INFO - [2021-02-10 10:24:24,903] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:24,915] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:24:24,915] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f856c66b430>
[2021-02-10 10:24:24,915] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:24:24,916] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:24:24,917] {logging_mixin.py:103} INFO - [2021-02-10 10:24:24,917] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:24:25,158] {logging_mixin.py:103} INFO - [2021-02-10 10:24:25,158] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:25,159] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:24:25,160] {logging_mixin.py:103} INFO - [2021-02-10 10:24:25,160] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:24:25,409] {logging_mixin.py:103} INFO - [2021-02-10 10:24:25,409] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:25,410] {logging_mixin.py:103} INFO - [2021-02-10 10:24:25,410] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:24:25,411] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:24:25,411] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f856c66bc10>
[2021-02-10 10:24:25,411] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:24:25,413] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:24:25,415] {logging_mixin.py:103} INFO - [2021-02-10 10:24:25,415] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:24:25,685] {logging_mixin.py:103} INFO - [2021-02-10 10:24:25,685] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:25,686] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:24:25,687] {logging_mixin.py:103} INFO - [2021-02-10 10:24:25,687] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:24:26,011] {logging_mixin.py:103} INFO - [2021-02-10 10:24:26,011] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:26,011] {logging_mixin.py:103} INFO - [2021-02-10 10:24:26,011] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:24:26,012] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:24:26,013] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f856c66bc10>
[2021-02-10 10:24:26,013] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:24:26,014] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:24:26,016] {logging_mixin.py:103} INFO - [2021-02-10 10:24:26,016] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:24:26,319] {logging_mixin.py:103} INFO - [2021-02-10 10:24:26,319] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:26,320] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:24:26,322] {logging_mixin.py:103} INFO - [2021-02-10 10:24:26,322] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:24:26,586] {logging_mixin.py:103} INFO - [2021-02-10 10:24:26,586] {cursor.py:560} INFO - query execution done
[2021-02-10 10:24:26,587] {logging_mixin.py:103} INFO - [2021-02-10 10:24:26,586] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:24:32,007] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:24:59,643] {scheduler_job.py:181} INFO - Started process (PID=66757) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:24:59,643] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:24:59,644] {logging_mixin.py:103} INFO - [2021-02-10 10:24:59,644] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:25:01,634] {logging_mixin.py:103} INFO - [2021-02-10 10:25:01,634] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:25:01,982] {logging_mixin.py:103} INFO - [2021-02-10 10:25:01,982] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:25:02,324] {logging_mixin.py:103} INFO - [2021-02-10 10:25:02,324] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:25:02,324] {logging_mixin.py:103} INFO - [2021-02-10 10:25:02,324] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:25:02,324] {logging_mixin.py:103} INFO - [2021-02-10 10:25:02,324] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:25:03,456] {logging_mixin.py:103} INFO - [2021-02-10 10:25:03,455] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:25:03,614] {logging_mixin.py:103} INFO - [2021-02-10 10:25:03,614] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:03,615] {logging_mixin.py:103} INFO - [2021-02-10 10:25:03,615] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:25:03,823] {logging_mixin.py:103} INFO - [2021-02-10 10:25:03,823] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:03,824] {logging_mixin.py:103} INFO - [2021-02-10 10:25:03,823] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:25:04,019] {logging_mixin.py:103} INFO - [2021-02-10 10:25:04,019] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:04,110] {logging_mixin.py:103} INFO - [2021-02-10 10:25:04,109] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:25:04,252] {logging_mixin.py:103} INFO - [2021-02-10 10:25:04,252] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:04,379] {logging_mixin.py:103} INFO - [2021-02-10 10:25:04,379] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:25:04,514] {logging_mixin.py:103} INFO - [2021-02-10 10:25:04,514] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:04,557] {logging_mixin.py:103} INFO - [2021-02-10 10:25:04,557] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:25:04,557] {logging_mixin.py:103} INFO - [2021-02-10 10:25:04,557] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:25:06,743] {logging_mixin.py:103} INFO - [2021-02-10 10:25:06,743] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:06,747] {logging_mixin.py:103} INFO - [2021-02-10 10:25:06,747] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:25:06,758] {logging_mixin.py:103} INFO - [2021-02-10 10:25:06,758] {data_context.py:1281} INFO - Setting run_name to: 20210210T092506.758057Z
[2021-02-10 10:25:06,759] {logging_mixin.py:103} INFO - [2021-02-10 10:25:06,759] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:25:06,767] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:25:06,768] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f8575d6b430>
[2021-02-10 10:25:06,768] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:25:06,768] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:25:06,771] {logging_mixin.py:103} INFO - [2021-02-10 10:25:06,771] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:25:06,967] {logging_mixin.py:103} INFO - [2021-02-10 10:25:06,967] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:06,968] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:25:06,969] {logging_mixin.py:103} INFO - [2021-02-10 10:25:06,969] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:25:07,147] {logging_mixin.py:103} INFO - [2021-02-10 10:25:07,147] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:07,147] {logging_mixin.py:103} INFO - [2021-02-10 10:25:07,147] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:25:07,148] {logging_mixin.py:103} INFO - [2021-02-10 10:25:07,148] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:25:07,301] {logging_mixin.py:103} INFO - [2021-02-10 10:25:07,301] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:07,303] {logging_mixin.py:103} INFO - [2021-02-10 10:25:07,303] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:25:07,580] {logging_mixin.py:103} INFO - [2021-02-10 10:25:07,580] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:07,583] {logging_mixin.py:103} INFO - [2021-02-10 10:25:07,582] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:25:07,742] {logging_mixin.py:103} INFO - [2021-02-10 10:25:07,742] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:07,742] {logging_mixin.py:103} INFO - [2021-02-10 10:25:07,742] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:25:07,761] {logging_mixin.py:103} INFO - [2021-02-10 10:25:07,761] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:25:07,762] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:25:07,762] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f8575d6b430>
[2021-02-10 10:25:07,763] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:25:07,763] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:25:07,765] {logging_mixin.py:103} INFO - [2021-02-10 10:25:07,765] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:25:07,929] {logging_mixin.py:103} INFO - [2021-02-10 10:25:07,929] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:07,930] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:25:07,932] {logging_mixin.py:103} INFO - [2021-02-10 10:25:07,931] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:25:08,127] {logging_mixin.py:103} INFO - [2021-02-10 10:25:08,126] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:08,127] {logging_mixin.py:103} INFO - [2021-02-10 10:25:08,127] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:25:08,130] {logging_mixin.py:103} INFO - [2021-02-10 10:25:08,130] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:25:08,291] {logging_mixin.py:103} INFO - [2021-02-10 10:25:08,291] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:08,293] {logging_mixin.py:103} INFO - [2021-02-10 10:25:08,293] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:25:08,441] {logging_mixin.py:103} INFO - [2021-02-10 10:25:08,441] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:08,446] {logging_mixin.py:103} INFO - [2021-02-10 10:25:08,446] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:25:08,657] {logging_mixin.py:103} INFO - [2021-02-10 10:25:08,657] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:08,659] {logging_mixin.py:103} INFO - [2021-02-10 10:25:08,659] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:25:08,812] {logging_mixin.py:103} INFO - [2021-02-10 10:25:08,812] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:08,813] {logging_mixin.py:103} INFO - [2021-02-10 10:25:08,812] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:25:08,816] {logging_mixin.py:103} INFO - [2021-02-10 10:25:08,816] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:25:08,987] {logging_mixin.py:103} INFO - [2021-02-10 10:25:08,987] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:08,998] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:25:08,998] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f8575d6b430>
[2021-02-10 10:25:08,998] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:25:08,999] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:25:09,000] {logging_mixin.py:103} INFO - [2021-02-10 10:25:09,000] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:25:09,238] {logging_mixin.py:103} INFO - [2021-02-10 10:25:09,238] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:09,239] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:25:09,240] {logging_mixin.py:103} INFO - [2021-02-10 10:25:09,240] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:25:09,402] {logging_mixin.py:103} INFO - [2021-02-10 10:25:09,401] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:09,402] {logging_mixin.py:103} INFO - [2021-02-10 10:25:09,402] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:25:09,403] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:25:09,403] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f8575d6bc10>
[2021-02-10 10:25:09,403] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:25:09,406] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:25:09,407] {logging_mixin.py:103} INFO - [2021-02-10 10:25:09,407] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:25:09,569] {logging_mixin.py:103} INFO - [2021-02-10 10:25:09,568] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:09,570] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:25:09,572] {logging_mixin.py:103} INFO - [2021-02-10 10:25:09,572] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:25:09,730] {logging_mixin.py:103} INFO - [2021-02-10 10:25:09,730] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:09,730] {logging_mixin.py:103} INFO - [2021-02-10 10:25:09,730] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:25:09,731] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:25:09,731] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f8575d6bc10>
[2021-02-10 10:25:09,732] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:25:09,733] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:25:09,736] {logging_mixin.py:103} INFO - [2021-02-10 10:25:09,735] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:25:09,902] {logging_mixin.py:103} INFO - [2021-02-10 10:25:09,902] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:09,903] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:25:09,904] {logging_mixin.py:103} INFO - [2021-02-10 10:25:09,904] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:25:10,127] {logging_mixin.py:103} INFO - [2021-02-10 10:25:10,127] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:10,128] {logging_mixin.py:103} INFO - [2021-02-10 10:25:10,128] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:25:15,919] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:25:42,816] {scheduler_job.py:181} INFO - Started process (PID=66817) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:25:42,817] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:25:42,817] {logging_mixin.py:103} INFO - [2021-02-10 10:25:42,817] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:25:44,645] {logging_mixin.py:103} INFO - [2021-02-10 10:25:44,644] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:25:44,932] {logging_mixin.py:103} INFO - [2021-02-10 10:25:44,932] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:25:45,255] {logging_mixin.py:103} INFO - [2021-02-10 10:25:45,255] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:25:45,255] {logging_mixin.py:103} INFO - [2021-02-10 10:25:45,255] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:25:45,255] {logging_mixin.py:103} INFO - [2021-02-10 10:25:45,255] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:25:46,487] {logging_mixin.py:103} INFO - [2021-02-10 10:25:46,486] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:25:46,678] {logging_mixin.py:103} INFO - [2021-02-10 10:25:46,678] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:46,680] {logging_mixin.py:103} INFO - [2021-02-10 10:25:46,679] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:25:46,827] {logging_mixin.py:103} INFO - [2021-02-10 10:25:46,827] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:46,828] {logging_mixin.py:103} INFO - [2021-02-10 10:25:46,827] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:25:47,020] {logging_mixin.py:103} INFO - [2021-02-10 10:25:47,020] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:47,108] {logging_mixin.py:103} INFO - [2021-02-10 10:25:47,108] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:25:47,338] {logging_mixin.py:103} INFO - [2021-02-10 10:25:47,337] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:47,452] {logging_mixin.py:103} INFO - [2021-02-10 10:25:47,452] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:25:47,797] {logging_mixin.py:103} INFO - [2021-02-10 10:25:47,797] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:47,845] {logging_mixin.py:103} INFO - [2021-02-10 10:25:47,845] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:25:47,846] {logging_mixin.py:103} INFO - [2021-02-10 10:25:47,846] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:25:51,404] {logging_mixin.py:103} INFO - [2021-02-10 10:25:51,404] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:51,407] {logging_mixin.py:103} INFO - [2021-02-10 10:25:51,407] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:25:51,417] {logging_mixin.py:103} INFO - [2021-02-10 10:25:51,417] {data_context.py:1281} INFO - Setting run_name to: 20210210T092551.417794Z
[2021-02-10 10:25:51,418] {logging_mixin.py:103} INFO - [2021-02-10 10:25:51,418] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:25:51,426] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:25:51,426] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f9f126aa430>
[2021-02-10 10:25:51,426] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:25:51,426] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:25:51,428] {logging_mixin.py:103} INFO - [2021-02-10 10:25:51,428] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:25:51,710] {logging_mixin.py:103} INFO - [2021-02-10 10:25:51,710] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:51,711] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:25:51,713] {logging_mixin.py:103} INFO - [2021-02-10 10:25:51,713] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:25:52,043] {logging_mixin.py:103} INFO - [2021-02-10 10:25:52,043] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:52,044] {logging_mixin.py:103} INFO - [2021-02-10 10:25:52,044] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:25:52,046] {logging_mixin.py:103} INFO - [2021-02-10 10:25:52,046] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:25:52,216] {logging_mixin.py:103} INFO - [2021-02-10 10:25:52,216] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:52,218] {logging_mixin.py:103} INFO - [2021-02-10 10:25:52,218] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:25:52,526] {logging_mixin.py:103} INFO - [2021-02-10 10:25:52,526] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:52,529] {logging_mixin.py:103} INFO - [2021-02-10 10:25:52,529] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:25:52,687] {logging_mixin.py:103} INFO - [2021-02-10 10:25:52,686] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:52,687] {logging_mixin.py:103} INFO - [2021-02-10 10:25:52,687] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:25:52,703] {logging_mixin.py:103} INFO - [2021-02-10 10:25:52,703] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:25:52,704] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:25:52,704] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f9f126aa430>
[2021-02-10 10:25:52,704] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:25:52,704] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:25:52,706] {logging_mixin.py:103} INFO - [2021-02-10 10:25:52,706] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:25:52,873] {logging_mixin.py:103} INFO - [2021-02-10 10:25:52,873] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:52,874] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:25:52,876] {logging_mixin.py:103} INFO - [2021-02-10 10:25:52,875] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:25:53,029] {logging_mixin.py:103} INFO - [2021-02-10 10:25:53,028] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:53,029] {logging_mixin.py:103} INFO - [2021-02-10 10:25:53,029] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:25:53,032] {logging_mixin.py:103} INFO - [2021-02-10 10:25:53,032] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:25:53,200] {logging_mixin.py:103} INFO - [2021-02-10 10:25:53,200] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:53,202] {logging_mixin.py:103} INFO - [2021-02-10 10:25:53,202] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:25:53,380] {logging_mixin.py:103} INFO - [2021-02-10 10:25:53,380] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:53,383] {logging_mixin.py:103} INFO - [2021-02-10 10:25:53,383] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:25:53,594] {logging_mixin.py:103} INFO - [2021-02-10 10:25:53,594] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:53,598] {logging_mixin.py:103} INFO - [2021-02-10 10:25:53,598] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:25:53,847] {logging_mixin.py:103} INFO - [2021-02-10 10:25:53,847] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:53,848] {logging_mixin.py:103} INFO - [2021-02-10 10:25:53,848] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:25:53,852] {logging_mixin.py:103} INFO - [2021-02-10 10:25:53,852] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:25:53,999] {logging_mixin.py:103} INFO - [2021-02-10 10:25:53,999] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:54,009] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:25:54,009] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f9f126aa430>
[2021-02-10 10:25:54,009] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:25:54,010] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:25:54,012] {logging_mixin.py:103} INFO - [2021-02-10 10:25:54,011] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:25:54,172] {logging_mixin.py:103} INFO - [2021-02-10 10:25:54,171] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:54,172] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:25:54,174] {logging_mixin.py:103} INFO - [2021-02-10 10:25:54,174] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:25:54,353] {logging_mixin.py:103} INFO - [2021-02-10 10:25:54,353] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:54,354] {logging_mixin.py:103} INFO - [2021-02-10 10:25:54,354] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:25:54,355] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:25:54,355] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f9f126aac10>
[2021-02-10 10:25:54,355] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:25:54,357] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:25:54,359] {logging_mixin.py:103} INFO - [2021-02-10 10:25:54,359] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:25:54,570] {logging_mixin.py:103} INFO - [2021-02-10 10:25:54,570] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:54,571] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:25:54,573] {logging_mixin.py:103} INFO - [2021-02-10 10:25:54,573] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:25:54,733] {logging_mixin.py:103} INFO - [2021-02-10 10:25:54,733] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:54,733] {logging_mixin.py:103} INFO - [2021-02-10 10:25:54,733] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:25:54,734] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:25:54,735] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f9f126aac10>
[2021-02-10 10:25:54,735] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:25:54,736] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:25:54,739] {logging_mixin.py:103} INFO - [2021-02-10 10:25:54,738] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:25:54,893] {logging_mixin.py:103} INFO - [2021-02-10 10:25:54,893] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:54,895] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:25:54,896] {logging_mixin.py:103} INFO - [2021-02-10 10:25:54,896] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:25:55,066] {logging_mixin.py:103} INFO - [2021-02-10 10:25:55,066] {cursor.py:560} INFO - query execution done
[2021-02-10 10:25:55,066] {logging_mixin.py:103} INFO - [2021-02-10 10:25:55,066] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:26:00,705] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:26:26,796] {scheduler_job.py:181} INFO - Started process (PID=66877) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:26:26,796] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:26:26,797] {logging_mixin.py:103} INFO - [2021-02-10 10:26:26,797] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:26:28,620] {logging_mixin.py:103} INFO - [2021-02-10 10:26:28,620] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:26:28,908] {logging_mixin.py:103} INFO - [2021-02-10 10:26:28,908] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:26:29,237] {logging_mixin.py:103} INFO - [2021-02-10 10:26:29,237] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:26:29,238] {logging_mixin.py:103} INFO - [2021-02-10 10:26:29,237] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:26:29,238] {logging_mixin.py:103} INFO - [2021-02-10 10:26:29,238] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:26:30,743] {logging_mixin.py:103} INFO - [2021-02-10 10:26:30,743] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:26:30,902] {logging_mixin.py:103} INFO - [2021-02-10 10:26:30,902] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:30,904] {logging_mixin.py:103} INFO - [2021-02-10 10:26:30,904] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:26:31,081] {logging_mixin.py:103} INFO - [2021-02-10 10:26:31,081] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:31,082] {logging_mixin.py:103} INFO - [2021-02-10 10:26:31,081] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:26:31,273] {logging_mixin.py:103} INFO - [2021-02-10 10:26:31,273] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:31,348] {logging_mixin.py:103} INFO - [2021-02-10 10:26:31,348] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:26:31,498] {logging_mixin.py:103} INFO - [2021-02-10 10:26:31,497] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:31,615] {logging_mixin.py:103} INFO - [2021-02-10 10:26:31,614] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:26:31,805] {logging_mixin.py:103} INFO - [2021-02-10 10:26:31,805] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:31,849] {logging_mixin.py:103} INFO - [2021-02-10 10:26:31,849] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:26:31,851] {logging_mixin.py:103} INFO - [2021-02-10 10:26:31,851] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:26:33,184] {logging_mixin.py:103} INFO - [2021-02-10 10:26:33,184] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:33,187] {logging_mixin.py:103} INFO - [2021-02-10 10:26:33,187] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:26:33,197] {logging_mixin.py:103} INFO - [2021-02-10 10:26:33,197] {data_context.py:1281} INFO - Setting run_name to: 20210210T092633.197804Z
[2021-02-10 10:26:33,199] {logging_mixin.py:103} INFO - [2021-02-10 10:26:33,199] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:26:33,209] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:26:33,209] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fead5d6b430>
[2021-02-10 10:26:33,209] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:26:33,209] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:26:33,211] {logging_mixin.py:103} INFO - [2021-02-10 10:26:33,211] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:26:33,392] {logging_mixin.py:103} INFO - [2021-02-10 10:26:33,391] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:33,393] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:26:33,394] {logging_mixin.py:103} INFO - [2021-02-10 10:26:33,394] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:26:33,602] {logging_mixin.py:103} INFO - [2021-02-10 10:26:33,601] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:33,602] {logging_mixin.py:103} INFO - [2021-02-10 10:26:33,602] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:26:33,604] {logging_mixin.py:103} INFO - [2021-02-10 10:26:33,604] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:26:33,765] {logging_mixin.py:103} INFO - [2021-02-10 10:26:33,765] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:33,767] {logging_mixin.py:103} INFO - [2021-02-10 10:26:33,767] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:26:33,917] {logging_mixin.py:103} INFO - [2021-02-10 10:26:33,917] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:33,919] {logging_mixin.py:103} INFO - [2021-02-10 10:26:33,919] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:26:34,095] {logging_mixin.py:103} INFO - [2021-02-10 10:26:34,095] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:34,095] {logging_mixin.py:103} INFO - [2021-02-10 10:26:34,095] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:26:34,117] {logging_mixin.py:103} INFO - [2021-02-10 10:26:34,117] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:26:34,118] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:26:34,118] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fead5d6b430>
[2021-02-10 10:26:34,118] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:26:34,118] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:26:34,120] {logging_mixin.py:103} INFO - [2021-02-10 10:26:34,120] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:26:34,340] {logging_mixin.py:103} INFO - [2021-02-10 10:26:34,340] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:34,341] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:26:34,343] {logging_mixin.py:103} INFO - [2021-02-10 10:26:34,343] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:26:34,523] {logging_mixin.py:103} INFO - [2021-02-10 10:26:34,523] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:34,523] {logging_mixin.py:103} INFO - [2021-02-10 10:26:34,523] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:26:34,526] {logging_mixin.py:103} INFO - [2021-02-10 10:26:34,526] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:26:34,675] {logging_mixin.py:103} INFO - [2021-02-10 10:26:34,675] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:34,676] {logging_mixin.py:103} INFO - [2021-02-10 10:26:34,676] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:26:34,907] {logging_mixin.py:103} INFO - [2021-02-10 10:26:34,907] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:34,910] {logging_mixin.py:103} INFO - [2021-02-10 10:26:34,910] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:26:35,112] {logging_mixin.py:103} INFO - [2021-02-10 10:26:35,112] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:35,115] {logging_mixin.py:103} INFO - [2021-02-10 10:26:35,114] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:26:35,303] {logging_mixin.py:103} INFO - [2021-02-10 10:26:35,303] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:35,303] {logging_mixin.py:103} INFO - [2021-02-10 10:26:35,303] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:26:35,308] {logging_mixin.py:103} INFO - [2021-02-10 10:26:35,307] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:26:36,064] {logging_mixin.py:103} INFO - [2021-02-10 10:26:36,064] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:36,074] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:26:36,074] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fead5d6b430>
[2021-02-10 10:26:36,074] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:26:36,074] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:26:36,077] {logging_mixin.py:103} INFO - [2021-02-10 10:26:36,077] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:26:36,224] {logging_mixin.py:103} INFO - [2021-02-10 10:26:36,223] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:36,225] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:26:36,226] {logging_mixin.py:103} INFO - [2021-02-10 10:26:36,226] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:26:36,429] {logging_mixin.py:103} INFO - [2021-02-10 10:26:36,429] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:36,430] {logging_mixin.py:103} INFO - [2021-02-10 10:26:36,429] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:26:36,431] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:26:36,431] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fead5d6bc10>
[2021-02-10 10:26:36,431] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:26:36,433] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:26:36,435] {logging_mixin.py:103} INFO - [2021-02-10 10:26:36,434] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:26:36,677] {logging_mixin.py:103} INFO - [2021-02-10 10:26:36,677] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:36,678] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:26:36,680] {logging_mixin.py:103} INFO - [2021-02-10 10:26:36,680] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:26:36,886] {logging_mixin.py:103} INFO - [2021-02-10 10:26:36,886] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:36,887] {logging_mixin.py:103} INFO - [2021-02-10 10:26:36,887] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:26:36,887] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:26:36,887] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fead5d6bc10>
[2021-02-10 10:26:36,887] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:26:36,888] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:26:36,890] {logging_mixin.py:103} INFO - [2021-02-10 10:26:36,890] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:26:37,068] {logging_mixin.py:103} INFO - [2021-02-10 10:26:37,067] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:37,069] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:26:37,070] {logging_mixin.py:103} INFO - [2021-02-10 10:26:37,070] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:26:37,240] {logging_mixin.py:103} INFO - [2021-02-10 10:26:37,240] {cursor.py:560} INFO - query execution done
[2021-02-10 10:26:37,241] {logging_mixin.py:103} INFO - [2021-02-10 10:26:37,241] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:26:43,004] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:27:10,536] {scheduler_job.py:181} INFO - Started process (PID=66934) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:27:10,538] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:27:10,539] {logging_mixin.py:103} INFO - [2021-02-10 10:27:10,538] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:27:12,091] {logging_mixin.py:103} INFO - [2021-02-10 10:27:12,091] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:27:12,363] {logging_mixin.py:103} INFO - [2021-02-10 10:27:12,363] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:27:12,690] {logging_mixin.py:103} INFO - [2021-02-10 10:27:12,690] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:27:12,690] {logging_mixin.py:103} INFO - [2021-02-10 10:27:12,690] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:27:12,690] {logging_mixin.py:103} INFO - [2021-02-10 10:27:12,690] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:27:14,273] {logging_mixin.py:103} INFO - [2021-02-10 10:27:14,273] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:27:14,466] {logging_mixin.py:103} INFO - [2021-02-10 10:27:14,466] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:14,468] {logging_mixin.py:103} INFO - [2021-02-10 10:27:14,468] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:27:14,653] {logging_mixin.py:103} INFO - [2021-02-10 10:27:14,653] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:14,654] {logging_mixin.py:103} INFO - [2021-02-10 10:27:14,654] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:27:14,807] {logging_mixin.py:103} INFO - [2021-02-10 10:27:14,806] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:14,895] {logging_mixin.py:103} INFO - [2021-02-10 10:27:14,895] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:27:15,039] {logging_mixin.py:103} INFO - [2021-02-10 10:27:15,039] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:15,158] {logging_mixin.py:103} INFO - [2021-02-10 10:27:15,158] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:27:15,334] {logging_mixin.py:103} INFO - [2021-02-10 10:27:15,334] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:15,377] {logging_mixin.py:103} INFO - [2021-02-10 10:27:15,377] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:27:15,377] {logging_mixin.py:103} INFO - [2021-02-10 10:27:15,377] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:27:16,815] {logging_mixin.py:103} INFO - [2021-02-10 10:27:16,815] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:16,819] {logging_mixin.py:103} INFO - [2021-02-10 10:27:16,819] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:27:16,829] {logging_mixin.py:103} INFO - [2021-02-10 10:27:16,829] {data_context.py:1281} INFO - Setting run_name to: 20210210T092716.829585Z
[2021-02-10 10:27:16,830] {logging_mixin.py:103} INFO - [2021-02-10 10:27:16,830] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:27:16,838] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:27:16,838] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd49de6b430>
[2021-02-10 10:27:16,838] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:27:16,839] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:27:16,840] {logging_mixin.py:103} INFO - [2021-02-10 10:27:16,840] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:27:17,044] {logging_mixin.py:103} INFO - [2021-02-10 10:27:17,043] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:17,045] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:27:17,046] {logging_mixin.py:103} INFO - [2021-02-10 10:27:17,046] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:27:17,225] {logging_mixin.py:103} INFO - [2021-02-10 10:27:17,225] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:17,226] {logging_mixin.py:103} INFO - [2021-02-10 10:27:17,226] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:27:17,228] {logging_mixin.py:103} INFO - [2021-02-10 10:27:17,228] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:27:17,408] {logging_mixin.py:103} INFO - [2021-02-10 10:27:17,408] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:17,411] {logging_mixin.py:103} INFO - [2021-02-10 10:27:17,411] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:27:17,588] {logging_mixin.py:103} INFO - [2021-02-10 10:27:17,588] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:17,591] {logging_mixin.py:103} INFO - [2021-02-10 10:27:17,591] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:27:17,898] {logging_mixin.py:103} INFO - [2021-02-10 10:27:17,898] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:17,899] {logging_mixin.py:103} INFO - [2021-02-10 10:27:17,899] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:27:17,919] {logging_mixin.py:103} INFO - [2021-02-10 10:27:17,919] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:27:17,921] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:27:17,921] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd49de6b430>
[2021-02-10 10:27:17,921] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:27:17,922] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:27:17,924] {logging_mixin.py:103} INFO - [2021-02-10 10:27:17,924] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:27:18,276] {logging_mixin.py:103} INFO - [2021-02-10 10:27:18,276] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:18,277] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:27:18,278] {logging_mixin.py:103} INFO - [2021-02-10 10:27:18,278] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:27:18,485] {logging_mixin.py:103} INFO - [2021-02-10 10:27:18,484] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:18,485] {logging_mixin.py:103} INFO - [2021-02-10 10:27:18,485] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:27:18,488] {logging_mixin.py:103} INFO - [2021-02-10 10:27:18,488] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:27:18,774] {logging_mixin.py:103} INFO - [2021-02-10 10:27:18,774] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:18,777] {logging_mixin.py:103} INFO - [2021-02-10 10:27:18,776] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:27:18,966] {logging_mixin.py:103} INFO - [2021-02-10 10:27:18,966] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:18,969] {logging_mixin.py:103} INFO - [2021-02-10 10:27:18,969] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:27:19,146] {logging_mixin.py:103} INFO - [2021-02-10 10:27:19,145] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:19,148] {logging_mixin.py:103} INFO - [2021-02-10 10:27:19,148] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:27:19,332] {logging_mixin.py:103} INFO - [2021-02-10 10:27:19,331] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:19,332] {logging_mixin.py:103} INFO - [2021-02-10 10:27:19,332] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:27:19,336] {logging_mixin.py:103} INFO - [2021-02-10 10:27:19,336] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:27:19,482] {logging_mixin.py:103} INFO - [2021-02-10 10:27:19,482] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:19,494] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:27:19,494] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd49de6b430>
[2021-02-10 10:27:19,494] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:27:19,494] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:27:19,496] {logging_mixin.py:103} INFO - [2021-02-10 10:27:19,496] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:27:19,695] {logging_mixin.py:103} INFO - [2021-02-10 10:27:19,695] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:19,696] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:27:19,697] {logging_mixin.py:103} INFO - [2021-02-10 10:27:19,697] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:27:19,890] {logging_mixin.py:103} INFO - [2021-02-10 10:27:19,890] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:19,891] {logging_mixin.py:103} INFO - [2021-02-10 10:27:19,891] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:27:19,892] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:27:19,892] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fd49de6bc10>
[2021-02-10 10:27:19,892] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:27:19,894] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:27:19,896] {logging_mixin.py:103} INFO - [2021-02-10 10:27:19,896] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:27:20,154] {logging_mixin.py:103} INFO - [2021-02-10 10:27:20,154] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:20,155] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:27:20,157] {logging_mixin.py:103} INFO - [2021-02-10 10:27:20,157] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:27:20,361] {logging_mixin.py:103} INFO - [2021-02-10 10:27:20,360] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:20,361] {logging_mixin.py:103} INFO - [2021-02-10 10:27:20,361] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:27:20,362] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:27:20,362] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fd49de6bc10>
[2021-02-10 10:27:20,363] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:27:20,364] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:27:20,366] {logging_mixin.py:103} INFO - [2021-02-10 10:27:20,366] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:27:20,537] {logging_mixin.py:103} INFO - [2021-02-10 10:27:20,537] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:20,538] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:27:20,540] {logging_mixin.py:103} INFO - [2021-02-10 10:27:20,539] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:27:20,710] {logging_mixin.py:103} INFO - [2021-02-10 10:27:20,710] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:20,710] {logging_mixin.py:103} INFO - [2021-02-10 10:27:20,710] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:27:26,358] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:27:54,584] {scheduler_job.py:181} INFO - Started process (PID=66996) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:27:54,584] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:27:54,584] {logging_mixin.py:103} INFO - [2021-02-10 10:27:54,584] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:27:56,176] {logging_mixin.py:103} INFO - [2021-02-10 10:27:56,176] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:27:56,448] {logging_mixin.py:103} INFO - [2021-02-10 10:27:56,448] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:27:56,785] {logging_mixin.py:103} INFO - [2021-02-10 10:27:56,785] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:27:56,785] {logging_mixin.py:103} INFO - [2021-02-10 10:27:56,785] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:27:56,785] {logging_mixin.py:103} INFO - [2021-02-10 10:27:56,785] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:27:57,595] {logging_mixin.py:103} INFO - [2021-02-10 10:27:57,594] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:27:57,801] {logging_mixin.py:103} INFO - [2021-02-10 10:27:57,801] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:57,803] {logging_mixin.py:103} INFO - [2021-02-10 10:27:57,803] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:27:57,959] {logging_mixin.py:103} INFO - [2021-02-10 10:27:57,958] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:57,959] {logging_mixin.py:103} INFO - [2021-02-10 10:27:57,959] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:27:58,229] {logging_mixin.py:103} INFO - [2021-02-10 10:27:58,229] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:58,318] {logging_mixin.py:103} INFO - [2021-02-10 10:27:58,318] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:27:58,505] {logging_mixin.py:103} INFO - [2021-02-10 10:27:58,505] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:58,627] {logging_mixin.py:103} INFO - [2021-02-10 10:27:58,627] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:27:58,791] {logging_mixin.py:103} INFO - [2021-02-10 10:27:58,790] {cursor.py:560} INFO - query execution done
[2021-02-10 10:27:58,833] {logging_mixin.py:103} INFO - [2021-02-10 10:27:58,833] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:27:58,833] {logging_mixin.py:103} INFO - [2021-02-10 10:27:58,833] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:28:00,859] {logging_mixin.py:103} INFO - [2021-02-10 10:28:00,858] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:00,862] {logging_mixin.py:103} INFO - [2021-02-10 10:28:00,862] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:28:00,873] {logging_mixin.py:103} INFO - [2021-02-10 10:28:00,873] {data_context.py:1281} INFO - Setting run_name to: 20210210T092800.873027Z
[2021-02-10 10:28:00,874] {logging_mixin.py:103} INFO - [2021-02-10 10:28:00,874] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:28:00,882] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:28:00,882] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7feedfeaa430>
[2021-02-10 10:28:00,883] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:28:00,883] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:28:00,885] {logging_mixin.py:103} INFO - [2021-02-10 10:28:00,884] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:28:01,964] {logging_mixin.py:103} INFO - [2021-02-10 10:28:01,964] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:01,965] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:28:01,967] {logging_mixin.py:103} INFO - [2021-02-10 10:28:01,966] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:28:02,601] {logging_mixin.py:103} INFO - [2021-02-10 10:28:02,601] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:02,602] {logging_mixin.py:103} INFO - [2021-02-10 10:28:02,602] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:28:02,604] {logging_mixin.py:103} INFO - [2021-02-10 10:28:02,604] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:28:03,193] {logging_mixin.py:103} INFO - [2021-02-10 10:28:03,193] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:03,196] {logging_mixin.py:103} INFO - [2021-02-10 10:28:03,196] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:28:03,364] {logging_mixin.py:103} INFO - [2021-02-10 10:28:03,364] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:03,367] {logging_mixin.py:103} INFO - [2021-02-10 10:28:03,367] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:28:03,535] {logging_mixin.py:103} INFO - [2021-02-10 10:28:03,535] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:03,536] {logging_mixin.py:103} INFO - [2021-02-10 10:28:03,535] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:28:03,555] {logging_mixin.py:103} INFO - [2021-02-10 10:28:03,555] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:28:03,556] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:28:03,556] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7feedfeaa430>
[2021-02-10 10:28:03,556] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:28:03,557] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:28:03,558] {logging_mixin.py:103} INFO - [2021-02-10 10:28:03,558] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:28:03,717] {logging_mixin.py:103} INFO - [2021-02-10 10:28:03,716] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:03,717] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:28:03,719] {logging_mixin.py:103} INFO - [2021-02-10 10:28:03,719] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:28:04,421] {logging_mixin.py:103} INFO - [2021-02-10 10:28:04,421] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:04,422] {logging_mixin.py:103} INFO - [2021-02-10 10:28:04,422] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:28:04,425] {logging_mixin.py:103} INFO - [2021-02-10 10:28:04,425] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:28:04,669] {logging_mixin.py:103} INFO - [2021-02-10 10:28:04,669] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:04,670] {logging_mixin.py:103} INFO - [2021-02-10 10:28:04,670] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:28:04,837] {logging_mixin.py:103} INFO - [2021-02-10 10:28:04,837] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:04,839] {logging_mixin.py:103} INFO - [2021-02-10 10:28:04,839] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:28:04,995] {logging_mixin.py:103} INFO - [2021-02-10 10:28:04,995] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:04,998] {logging_mixin.py:103} INFO - [2021-02-10 10:28:04,998] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:28:05,150] {logging_mixin.py:103} INFO - [2021-02-10 10:28:05,150] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:05,151] {logging_mixin.py:103} INFO - [2021-02-10 10:28:05,151] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:28:05,155] {logging_mixin.py:103} INFO - [2021-02-10 10:28:05,155] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:28:05,321] {logging_mixin.py:103} INFO - [2021-02-10 10:28:05,320] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:05,332] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:28:05,333] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7feedfeaa430>
[2021-02-10 10:28:05,333] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:28:05,333] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:28:05,336] {logging_mixin.py:103} INFO - [2021-02-10 10:28:05,336] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:28:05,519] {logging_mixin.py:103} INFO - [2021-02-10 10:28:05,519] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:05,520] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:28:05,521] {logging_mixin.py:103} INFO - [2021-02-10 10:28:05,521] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:28:05,731] {logging_mixin.py:103} INFO - [2021-02-10 10:28:05,731] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:05,732] {logging_mixin.py:103} INFO - [2021-02-10 10:28:05,732] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:28:05,732] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:28:05,732] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7feedfeaac10>
[2021-02-10 10:28:05,733] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:28:05,734] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:28:05,736] {logging_mixin.py:103} INFO - [2021-02-10 10:28:05,736] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:28:05,946] {logging_mixin.py:103} INFO - [2021-02-10 10:28:05,946] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:05,947] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:28:05,948] {logging_mixin.py:103} INFO - [2021-02-10 10:28:05,948] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:28:06,164] {logging_mixin.py:103} INFO - [2021-02-10 10:28:06,164] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:06,165] {logging_mixin.py:103} INFO - [2021-02-10 10:28:06,165] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:28:06,166] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:28:06,166] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7feedfeaac10>
[2021-02-10 10:28:06,166] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:28:06,167] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:28:06,170] {logging_mixin.py:103} INFO - [2021-02-10 10:28:06,170] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:28:06,344] {logging_mixin.py:103} INFO - [2021-02-10 10:28:06,344] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:06,345] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:28:06,347] {logging_mixin.py:103} INFO - [2021-02-10 10:28:06,347] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:28:06,516] {logging_mixin.py:103} INFO - [2021-02-10 10:28:06,516] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:06,517] {logging_mixin.py:103} INFO - [2021-02-10 10:28:06,517] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:28:12,431] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:28:45,182] {scheduler_job.py:181} INFO - Started process (PID=67063) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:28:45,183] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:28:45,184] {logging_mixin.py:103} INFO - [2021-02-10 10:28:45,184] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:28:47,055] {logging_mixin.py:103} INFO - [2021-02-10 10:28:47,054] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:28:47,343] {logging_mixin.py:103} INFO - [2021-02-10 10:28:47,343] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:28:47,686] {logging_mixin.py:103} INFO - [2021-02-10 10:28:47,686] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:28:47,686] {logging_mixin.py:103} INFO - [2021-02-10 10:28:47,686] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:28:47,686] {logging_mixin.py:103} INFO - [2021-02-10 10:28:47,686] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:28:48,716] {logging_mixin.py:103} INFO - [2021-02-10 10:28:48,716] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:28:48,931] {logging_mixin.py:103} INFO - [2021-02-10 10:28:48,931] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:48,934] {logging_mixin.py:103} INFO - [2021-02-10 10:28:48,934] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:28:49,096] {logging_mixin.py:103} INFO - [2021-02-10 10:28:49,096] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:49,097] {logging_mixin.py:103} INFO - [2021-02-10 10:28:49,097] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:28:49,303] {logging_mixin.py:103} INFO - [2021-02-10 10:28:49,303] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:49,394] {logging_mixin.py:103} INFO - [2021-02-10 10:28:49,394] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:28:49,539] {logging_mixin.py:103} INFO - [2021-02-10 10:28:49,539] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:49,662] {logging_mixin.py:103} INFO - [2021-02-10 10:28:49,661] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:28:49,832] {logging_mixin.py:103} INFO - [2021-02-10 10:28:49,832] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:49,880] {logging_mixin.py:103} INFO - [2021-02-10 10:28:49,880] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:28:49,880] {logging_mixin.py:103} INFO - [2021-02-10 10:28:49,880] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:28:51,435] {logging_mixin.py:103} INFO - [2021-02-10 10:28:51,434] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:51,438] {logging_mixin.py:103} INFO - [2021-02-10 10:28:51,438] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:28:51,450] {logging_mixin.py:103} INFO - [2021-02-10 10:28:51,450] {data_context.py:1281} INFO - Setting run_name to: 20210210T092851.450765Z
[2021-02-10 10:28:51,452] {logging_mixin.py:103} INFO - [2021-02-10 10:28:51,451] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:28:51,460] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:28:51,460] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd681d6b430>
[2021-02-10 10:28:51,460] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:28:51,461] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:28:51,462] {logging_mixin.py:103} INFO - [2021-02-10 10:28:51,462] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:28:52,991] {logging_mixin.py:103} INFO - [2021-02-10 10:28:52,990] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:52,998] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:28:52,999] {logging_mixin.py:103} INFO - [2021-02-10 10:28:52,999] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:28:53,209] {logging_mixin.py:103} INFO - [2021-02-10 10:28:53,209] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:53,210] {logging_mixin.py:103} INFO - [2021-02-10 10:28:53,210] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:28:53,211] {logging_mixin.py:103} INFO - [2021-02-10 10:28:53,211] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:28:53,398] {logging_mixin.py:103} INFO - [2021-02-10 10:28:53,398] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:53,400] {logging_mixin.py:103} INFO - [2021-02-10 10:28:53,399] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:28:53,577] {logging_mixin.py:103} INFO - [2021-02-10 10:28:53,577] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:53,581] {logging_mixin.py:103} INFO - [2021-02-10 10:28:53,581] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:28:53,768] {logging_mixin.py:103} INFO - [2021-02-10 10:28:53,768] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:53,768] {logging_mixin.py:103} INFO - [2021-02-10 10:28:53,768] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:28:53,787] {logging_mixin.py:103} INFO - [2021-02-10 10:28:53,787] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:28:53,788] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:28:53,788] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd681d6b430>
[2021-02-10 10:28:53,789] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:28:53,789] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:28:53,792] {logging_mixin.py:103} INFO - [2021-02-10 10:28:53,792] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:28:53,975] {logging_mixin.py:103} INFO - [2021-02-10 10:28:53,975] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:53,976] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:28:53,977] {logging_mixin.py:103} INFO - [2021-02-10 10:28:53,977] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:28:54,139] {logging_mixin.py:103} INFO - [2021-02-10 10:28:54,139] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:54,140] {logging_mixin.py:103} INFO - [2021-02-10 10:28:54,140] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:28:54,142] {logging_mixin.py:103} INFO - [2021-02-10 10:28:54,142] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:28:54,421] {logging_mixin.py:103} INFO - [2021-02-10 10:28:54,421] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:54,425] {logging_mixin.py:103} INFO - [2021-02-10 10:28:54,425] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:28:54,661] {logging_mixin.py:103} INFO - [2021-02-10 10:28:54,661] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:54,663] {logging_mixin.py:103} INFO - [2021-02-10 10:28:54,663] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:28:54,904] {logging_mixin.py:103} INFO - [2021-02-10 10:28:54,904] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:54,907] {logging_mixin.py:103} INFO - [2021-02-10 10:28:54,907] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:28:55,088] {logging_mixin.py:103} INFO - [2021-02-10 10:28:55,088] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:55,088] {logging_mixin.py:103} INFO - [2021-02-10 10:28:55,088] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:28:55,091] {logging_mixin.py:103} INFO - [2021-02-10 10:28:55,091] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:28:55,284] {logging_mixin.py:103} INFO - [2021-02-10 10:28:55,284] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:55,290] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:28:55,290] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd681d6b430>
[2021-02-10 10:28:55,290] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:28:55,290] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:28:55,293] {logging_mixin.py:103} INFO - [2021-02-10 10:28:55,293] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:28:55,490] {logging_mixin.py:103} INFO - [2021-02-10 10:28:55,489] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:55,491] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:28:55,492] {logging_mixin.py:103} INFO - [2021-02-10 10:28:55,492] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:28:55,659] {logging_mixin.py:103} INFO - [2021-02-10 10:28:55,659] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:55,659] {logging_mixin.py:103} INFO - [2021-02-10 10:28:55,659] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:28:55,660] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:28:55,661] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fd681d6bc10>
[2021-02-10 10:28:55,661] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:28:55,663] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:28:55,665] {logging_mixin.py:103} INFO - [2021-02-10 10:28:55,665] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:28:55,838] {logging_mixin.py:103} INFO - [2021-02-10 10:28:55,838] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:55,839] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:28:55,841] {logging_mixin.py:103} INFO - [2021-02-10 10:28:55,841] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:28:56,112] {logging_mixin.py:103} INFO - [2021-02-10 10:28:56,112] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:56,113] {logging_mixin.py:103} INFO - [2021-02-10 10:28:56,113] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:28:56,114] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:28:56,114] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fd681d6bc10>
[2021-02-10 10:28:56,114] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:28:56,115] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:28:56,119] {logging_mixin.py:103} INFO - [2021-02-10 10:28:56,119] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:28:56,302] {logging_mixin.py:103} INFO - [2021-02-10 10:28:56,302] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:56,304] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:28:56,305] {logging_mixin.py:103} INFO - [2021-02-10 10:28:56,305] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:28:56,545] {logging_mixin.py:103} INFO - [2021-02-10 10:28:56,544] {cursor.py:560} INFO - query execution done
[2021-02-10 10:28:56,545] {logging_mixin.py:103} INFO - [2021-02-10 10:28:56,545] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:29:03,952] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:29:34,797] {scheduler_job.py:181} INFO - Started process (PID=67123) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:29:34,798] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:29:34,799] {logging_mixin.py:103} INFO - [2021-02-10 10:29:34,799] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:29:36,937] {logging_mixin.py:103} INFO - [2021-02-10 10:29:36,937] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:29:37,469] {logging_mixin.py:103} INFO - [2021-02-10 10:29:37,469] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:29:37,827] {logging_mixin.py:103} INFO - [2021-02-10 10:29:37,827] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:29:37,827] {logging_mixin.py:103} INFO - [2021-02-10 10:29:37,827] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:29:37,827] {logging_mixin.py:103} INFO - [2021-02-10 10:29:37,827] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:29:38,758] {logging_mixin.py:103} INFO - [2021-02-10 10:29:38,758] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:29:38,924] {logging_mixin.py:103} INFO - [2021-02-10 10:29:38,924] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:38,926] {logging_mixin.py:103} INFO - [2021-02-10 10:29:38,926] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:29:39,077] {logging_mixin.py:103} INFO - [2021-02-10 10:29:39,077] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:39,078] {logging_mixin.py:103} INFO - [2021-02-10 10:29:39,078] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:29:39,251] {logging_mixin.py:103} INFO - [2021-02-10 10:29:39,250] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:39,341] {logging_mixin.py:103} INFO - [2021-02-10 10:29:39,341] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:29:39,514] {logging_mixin.py:103} INFO - [2021-02-10 10:29:39,514] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:39,643] {logging_mixin.py:103} INFO - [2021-02-10 10:29:39,643] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:29:39,825] {logging_mixin.py:103} INFO - [2021-02-10 10:29:39,825] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:39,870] {logging_mixin.py:103} INFO - [2021-02-10 10:29:39,870] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:29:39,870] {logging_mixin.py:103} INFO - [2021-02-10 10:29:39,870] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:29:41,823] {logging_mixin.py:103} INFO - [2021-02-10 10:29:41,823] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:41,828] {logging_mixin.py:103} INFO - [2021-02-10 10:29:41,828] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:29:41,839] {logging_mixin.py:103} INFO - [2021-02-10 10:29:41,839] {data_context.py:1281} INFO - Setting run_name to: 20210210T092941.839798Z
[2021-02-10 10:29:41,841] {logging_mixin.py:103} INFO - [2021-02-10 10:29:41,841] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:29:41,852] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:29:41,852] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd7c856b430>
[2021-02-10 10:29:41,853] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:29:41,853] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:29:41,855] {logging_mixin.py:103} INFO - [2021-02-10 10:29:41,855] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:29:42,076] {logging_mixin.py:103} INFO - [2021-02-10 10:29:42,076] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:42,077] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:29:42,078] {logging_mixin.py:103} INFO - [2021-02-10 10:29:42,078] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:29:42,299] {logging_mixin.py:103} INFO - [2021-02-10 10:29:42,299] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:42,299] {logging_mixin.py:103} INFO - [2021-02-10 10:29:42,299] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:29:42,301] {logging_mixin.py:103} INFO - [2021-02-10 10:29:42,301] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:29:42,611] {logging_mixin.py:103} INFO - [2021-02-10 10:29:42,611] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:42,616] {logging_mixin.py:103} INFO - [2021-02-10 10:29:42,616] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:29:42,778] {logging_mixin.py:103} INFO - [2021-02-10 10:29:42,778] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:42,799] {logging_mixin.py:103} INFO - [2021-02-10 10:29:42,799] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:29:42,981] {logging_mixin.py:103} INFO - [2021-02-10 10:29:42,981] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:42,982] {logging_mixin.py:103} INFO - [2021-02-10 10:29:42,981] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:29:42,996] {logging_mixin.py:103} INFO - [2021-02-10 10:29:42,996] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:29:42,996] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:29:42,997] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd7c856b430>
[2021-02-10 10:29:42,997] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:29:42,997] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:29:42,999] {logging_mixin.py:103} INFO - [2021-02-10 10:29:42,999] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:29:43,321] {logging_mixin.py:103} INFO - [2021-02-10 10:29:43,321] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:43,322] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:29:43,323] {logging_mixin.py:103} INFO - [2021-02-10 10:29:43,323] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:29:43,492] {logging_mixin.py:103} INFO - [2021-02-10 10:29:43,492] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:43,492] {logging_mixin.py:103} INFO - [2021-02-10 10:29:43,492] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:29:43,493] {logging_mixin.py:103} INFO - [2021-02-10 10:29:43,493] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:29:43,753] {logging_mixin.py:103} INFO - [2021-02-10 10:29:43,753] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:43,754] {logging_mixin.py:103} INFO - [2021-02-10 10:29:43,754] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:29:43,915] {logging_mixin.py:103} INFO - [2021-02-10 10:29:43,915] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:43,917] {logging_mixin.py:103} INFO - [2021-02-10 10:29:43,917] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:29:44,072] {logging_mixin.py:103} INFO - [2021-02-10 10:29:44,072] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:44,073] {logging_mixin.py:103} INFO - [2021-02-10 10:29:44,073] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:29:44,257] {logging_mixin.py:103} INFO - [2021-02-10 10:29:44,257] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:44,258] {logging_mixin.py:103} INFO - [2021-02-10 10:29:44,258] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:29:44,264] {logging_mixin.py:103} INFO - [2021-02-10 10:29:44,264] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:29:44,447] {logging_mixin.py:103} INFO - [2021-02-10 10:29:44,447] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:44,450] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:29:44,450] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd7c856b430>
[2021-02-10 10:29:44,450] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:29:44,451] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:29:44,452] {logging_mixin.py:103} INFO - [2021-02-10 10:29:44,452] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:29:44,638] {logging_mixin.py:103} INFO - [2021-02-10 10:29:44,637] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:44,638] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:29:44,640] {logging_mixin.py:103} INFO - [2021-02-10 10:29:44,639] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:29:44,816] {logging_mixin.py:103} INFO - [2021-02-10 10:29:44,815] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:44,816] {logging_mixin.py:103} INFO - [2021-02-10 10:29:44,816] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:29:44,817] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:29:44,817] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fd7c856bc10>
[2021-02-10 10:29:44,817] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:29:44,819] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:29:44,820] {logging_mixin.py:103} INFO - [2021-02-10 10:29:44,820] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:29:44,988] {logging_mixin.py:103} INFO - [2021-02-10 10:29:44,988] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:44,989] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:29:44,990] {logging_mixin.py:103} INFO - [2021-02-10 10:29:44,990] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:29:45,186] {logging_mixin.py:103} INFO - [2021-02-10 10:29:45,186] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:45,186] {logging_mixin.py:103} INFO - [2021-02-10 10:29:45,186] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:29:45,187] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:29:45,187] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fd7c856bc10>
[2021-02-10 10:29:45,187] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:29:45,188] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:29:45,190] {logging_mixin.py:103} INFO - [2021-02-10 10:29:45,190] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:29:45,349] {logging_mixin.py:103} INFO - [2021-02-10 10:29:45,349] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:45,349] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:29:45,351] {logging_mixin.py:103} INFO - [2021-02-10 10:29:45,350] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:29:45,571] {logging_mixin.py:103} INFO - [2021-02-10 10:29:45,571] {cursor.py:560} INFO - query execution done
[2021-02-10 10:29:45,571] {logging_mixin.py:103} INFO - [2021-02-10 10:29:45,571] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:29:52,727] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:30:34,110] {scheduler_job.py:181} INFO - Started process (PID=67192) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:30:34,112] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:30:34,112] {logging_mixin.py:103} INFO - [2021-02-10 10:30:34,112] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:30:35,747] {logging_mixin.py:103} INFO - [2021-02-10 10:30:35,747] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:30:36,036] {logging_mixin.py:103} INFO - [2021-02-10 10:30:36,036] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:30:36,379] {logging_mixin.py:103} INFO - [2021-02-10 10:30:36,379] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:30:36,380] {logging_mixin.py:103} INFO - [2021-02-10 10:30:36,380] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:30:36,380] {logging_mixin.py:103} INFO - [2021-02-10 10:30:36,380] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:30:37,404] {logging_mixin.py:103} INFO - [2021-02-10 10:30:37,404] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:30:37,621] {logging_mixin.py:103} INFO - [2021-02-10 10:30:37,621] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:37,624] {logging_mixin.py:103} INFO - [2021-02-10 10:30:37,623] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:30:37,782] {logging_mixin.py:103} INFO - [2021-02-10 10:30:37,781] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:37,782] {logging_mixin.py:103} INFO - [2021-02-10 10:30:37,782] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:30:37,994] {logging_mixin.py:103} INFO - [2021-02-10 10:30:37,993] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:38,082] {logging_mixin.py:103} INFO - [2021-02-10 10:30:38,082] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:30:38,294] {logging_mixin.py:103} INFO - [2021-02-10 10:30:38,294] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:38,429] {logging_mixin.py:103} INFO - [2021-02-10 10:30:38,429] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:30:38,665] {logging_mixin.py:103} INFO - [2021-02-10 10:30:38,664] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:38,707] {logging_mixin.py:103} INFO - [2021-02-10 10:30:38,706] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:30:38,707] {logging_mixin.py:103} INFO - [2021-02-10 10:30:38,707] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:30:40,299] {logging_mixin.py:103} INFO - [2021-02-10 10:30:40,299] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:40,302] {logging_mixin.py:103} INFO - [2021-02-10 10:30:40,302] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:30:40,313] {logging_mixin.py:103} INFO - [2021-02-10 10:30:40,313] {data_context.py:1281} INFO - Setting run_name to: 20210210T093040.313296Z
[2021-02-10 10:30:40,314] {logging_mixin.py:103} INFO - [2021-02-10 10:30:40,314] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:30:40,321] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:30:40,321] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7ffe1356b430>
[2021-02-10 10:30:40,322] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:30:40,322] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:30:40,324] {logging_mixin.py:103} INFO - [2021-02-10 10:30:40,324] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:30:40,817] {logging_mixin.py:103} INFO - [2021-02-10 10:30:40,816] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:40,817] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:30:40,819] {logging_mixin.py:103} INFO - [2021-02-10 10:30:40,819] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:30:41,056] {logging_mixin.py:103} INFO - [2021-02-10 10:30:41,056] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:41,057] {logging_mixin.py:103} INFO - [2021-02-10 10:30:41,057] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:30:41,059] {logging_mixin.py:103} INFO - [2021-02-10 10:30:41,059] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:30:41,225] {logging_mixin.py:103} INFO - [2021-02-10 10:30:41,225] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:41,228] {logging_mixin.py:103} INFO - [2021-02-10 10:30:41,227] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:30:41,440] {logging_mixin.py:103} INFO - [2021-02-10 10:30:41,440] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:41,443] {logging_mixin.py:103} INFO - [2021-02-10 10:30:41,443] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:30:41,648] {logging_mixin.py:103} INFO - [2021-02-10 10:30:41,648] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:41,649] {logging_mixin.py:103} INFO - [2021-02-10 10:30:41,648] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:30:41,667] {logging_mixin.py:103} INFO - [2021-02-10 10:30:41,666] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:30:41,669] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:30:41,669] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7ffe1356b430>
[2021-02-10 10:30:41,670] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:30:41,670] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:30:41,672] {logging_mixin.py:103} INFO - [2021-02-10 10:30:41,672] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:30:41,906] {logging_mixin.py:103} INFO - [2021-02-10 10:30:41,906] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:41,907] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:30:41,909] {logging_mixin.py:103} INFO - [2021-02-10 10:30:41,909] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:30:42,330] {logging_mixin.py:103} INFO - [2021-02-10 10:30:42,329] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:42,330] {logging_mixin.py:103} INFO - [2021-02-10 10:30:42,330] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:30:42,333] {logging_mixin.py:103} INFO - [2021-02-10 10:30:42,333] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:30:42,507] {logging_mixin.py:103} INFO - [2021-02-10 10:30:42,507] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:42,509] {logging_mixin.py:103} INFO - [2021-02-10 10:30:42,509] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:30:42,728] {logging_mixin.py:103} INFO - [2021-02-10 10:30:42,728] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:42,731] {logging_mixin.py:103} INFO - [2021-02-10 10:30:42,731] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:30:42,961] {logging_mixin.py:103} INFO - [2021-02-10 10:30:42,961] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:42,966] {logging_mixin.py:103} INFO - [2021-02-10 10:30:42,965] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:30:43,156] {logging_mixin.py:103} INFO - [2021-02-10 10:30:43,156] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:43,157] {logging_mixin.py:103} INFO - [2021-02-10 10:30:43,157] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:30:43,163] {logging_mixin.py:103} INFO - [2021-02-10 10:30:43,162] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:30:43,510] {logging_mixin.py:103} INFO - [2021-02-10 10:30:43,509] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:43,519] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:30:43,520] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7ffe1356b430>
[2021-02-10 10:30:43,520] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:30:43,520] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:30:43,523] {logging_mixin.py:103} INFO - [2021-02-10 10:30:43,523] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:30:43,734] {logging_mixin.py:103} INFO - [2021-02-10 10:30:43,734] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:43,735] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:30:43,737] {logging_mixin.py:103} INFO - [2021-02-10 10:30:43,736] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:30:43,961] {logging_mixin.py:103} INFO - [2021-02-10 10:30:43,961] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:43,962] {logging_mixin.py:103} INFO - [2021-02-10 10:30:43,962] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:30:43,963] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:30:43,963] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7ffe1356bc10>
[2021-02-10 10:30:43,963] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:30:43,964] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:30:43,966] {logging_mixin.py:103} INFO - [2021-02-10 10:30:43,965] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:30:44,163] {logging_mixin.py:103} INFO - [2021-02-10 10:30:44,163] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:44,164] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:30:44,165] {logging_mixin.py:103} INFO - [2021-02-10 10:30:44,165] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:30:44,352] {logging_mixin.py:103} INFO - [2021-02-10 10:30:44,352] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:44,352] {logging_mixin.py:103} INFO - [2021-02-10 10:30:44,352] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:30:44,353] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:30:44,354] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7ffe1356bc10>
[2021-02-10 10:30:44,354] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:30:44,355] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:30:44,358] {logging_mixin.py:103} INFO - [2021-02-10 10:30:44,358] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:30:44,560] {logging_mixin.py:103} INFO - [2021-02-10 10:30:44,560] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:44,561] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:30:44,562] {logging_mixin.py:103} INFO - [2021-02-10 10:30:44,562] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:30:45,403] {logging_mixin.py:103} INFO - [2021-02-10 10:30:45,402] {cursor.py:560} INFO - query execution done
[2021-02-10 10:30:45,403] {logging_mixin.py:103} INFO - [2021-02-10 10:30:45,403] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:30:55,680] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:31:32,897] {scheduler_job.py:181} INFO - Started process (PID=67260) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:31:32,898] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:31:32,898] {logging_mixin.py:103} INFO - [2021-02-10 10:31:32,898] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:31:35,572] {logging_mixin.py:103} INFO - [2021-02-10 10:31:35,572] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:31:35,911] {logging_mixin.py:103} INFO - [2021-02-10 10:31:35,911] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:31:36,274] {logging_mixin.py:103} INFO - [2021-02-10 10:31:36,274] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:31:36,274] {logging_mixin.py:103} INFO - [2021-02-10 10:31:36,274] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:31:36,274] {logging_mixin.py:103} INFO - [2021-02-10 10:31:36,274] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:31:38,246] {logging_mixin.py:103} INFO - [2021-02-10 10:31:38,246] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:31:38,858] {logging_mixin.py:103} INFO - [2021-02-10 10:31:38,858] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:38,859] {logging_mixin.py:103} INFO - [2021-02-10 10:31:38,859] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:31:39,154] {logging_mixin.py:103} INFO - [2021-02-10 10:31:39,154] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:39,155] {logging_mixin.py:103} INFO - [2021-02-10 10:31:39,154] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:31:39,353] {logging_mixin.py:103} INFO - [2021-02-10 10:31:39,353] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:39,446] {logging_mixin.py:103} INFO - [2021-02-10 10:31:39,446] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:31:39,604] {logging_mixin.py:103} INFO - [2021-02-10 10:31:39,604] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:39,731] {logging_mixin.py:103} INFO - [2021-02-10 10:31:39,731] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:31:39,956] {logging_mixin.py:103} INFO - [2021-02-10 10:31:39,956] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:40,004] {logging_mixin.py:103} INFO - [2021-02-10 10:31:40,004] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:31:40,004] {logging_mixin.py:103} INFO - [2021-02-10 10:31:40,004] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:31:41,328] {logging_mixin.py:103} INFO - [2021-02-10 10:31:41,327] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:41,331] {logging_mixin.py:103} INFO - [2021-02-10 10:31:41,330] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:31:41,342] {logging_mixin.py:103} INFO - [2021-02-10 10:31:41,342] {data_context.py:1281} INFO - Setting run_name to: 20210210T093141.342003Z
[2021-02-10 10:31:41,343] {logging_mixin.py:103} INFO - [2021-02-10 10:31:41,343] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:31:41,352] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:31:41,352] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f983676a430>
[2021-02-10 10:31:41,353] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:31:41,353] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:31:41,355] {logging_mixin.py:103} INFO - [2021-02-10 10:31:41,355] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:31:42,241] {logging_mixin.py:103} INFO - [2021-02-10 10:31:42,240] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:42,241] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:31:42,243] {logging_mixin.py:103} INFO - [2021-02-10 10:31:42,243] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:31:42,409] {logging_mixin.py:103} INFO - [2021-02-10 10:31:42,409] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:42,410] {logging_mixin.py:103} INFO - [2021-02-10 10:31:42,409] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:31:42,412] {logging_mixin.py:103} INFO - [2021-02-10 10:31:42,412] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:31:42,616] {logging_mixin.py:103} INFO - [2021-02-10 10:31:42,615] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:42,619] {logging_mixin.py:103} INFO - [2021-02-10 10:31:42,619] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:31:42,826] {logging_mixin.py:103} INFO - [2021-02-10 10:31:42,826] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:42,829] {logging_mixin.py:103} INFO - [2021-02-10 10:31:42,828] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:31:42,987] {logging_mixin.py:103} INFO - [2021-02-10 10:31:42,986] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:42,987] {logging_mixin.py:103} INFO - [2021-02-10 10:31:42,987] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:31:43,008] {logging_mixin.py:103} INFO - [2021-02-10 10:31:43,008] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:31:43,009] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:31:43,009] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f983676a430>
[2021-02-10 10:31:43,010] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:31:43,010] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:31:43,012] {logging_mixin.py:103} INFO - [2021-02-10 10:31:43,012] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:31:43,202] {logging_mixin.py:103} INFO - [2021-02-10 10:31:43,202] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:43,203] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:31:43,204] {logging_mixin.py:103} INFO - [2021-02-10 10:31:43,204] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:31:43,418] {logging_mixin.py:103} INFO - [2021-02-10 10:31:43,418] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:43,418] {logging_mixin.py:103} INFO - [2021-02-10 10:31:43,418] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:31:43,423] {logging_mixin.py:103} INFO - [2021-02-10 10:31:43,423] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:31:43,600] {logging_mixin.py:103} INFO - [2021-02-10 10:31:43,600] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:43,601] {logging_mixin.py:103} INFO - [2021-02-10 10:31:43,601] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:31:43,762] {logging_mixin.py:103} INFO - [2021-02-10 10:31:43,762] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:43,765] {logging_mixin.py:103} INFO - [2021-02-10 10:31:43,765] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:31:44,698] {logging_mixin.py:103} INFO - [2021-02-10 10:31:44,698] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:44,701] {logging_mixin.py:103} INFO - [2021-02-10 10:31:44,701] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:31:44,885] {logging_mixin.py:103} INFO - [2021-02-10 10:31:44,885] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:44,886] {logging_mixin.py:103} INFO - [2021-02-10 10:31:44,885] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:31:44,889] {logging_mixin.py:103} INFO - [2021-02-10 10:31:44,889] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:31:45,614] {logging_mixin.py:103} INFO - [2021-02-10 10:31:45,614] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:45,619] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:31:45,619] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f983676a430>
[2021-02-10 10:31:45,619] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:31:45,619] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:31:45,621] {logging_mixin.py:103} INFO - [2021-02-10 10:31:45,621] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:31:45,826] {logging_mixin.py:103} INFO - [2021-02-10 10:31:45,826] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:45,827] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:31:45,828] {logging_mixin.py:103} INFO - [2021-02-10 10:31:45,828] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:31:45,974] {logging_mixin.py:103} INFO - [2021-02-10 10:31:45,974] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:45,975] {logging_mixin.py:103} INFO - [2021-02-10 10:31:45,975] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:31:45,976] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:31:45,976] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f983676ac10>
[2021-02-10 10:31:45,976] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:31:45,977] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:31:45,980] {logging_mixin.py:103} INFO - [2021-02-10 10:31:45,979] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:31:46,173] {logging_mixin.py:103} INFO - [2021-02-10 10:31:46,173] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:46,175] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:31:46,176] {logging_mixin.py:103} INFO - [2021-02-10 10:31:46,176] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:31:46,851] {logging_mixin.py:103} INFO - [2021-02-10 10:31:46,850] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:46,851] {logging_mixin.py:103} INFO - [2021-02-10 10:31:46,851] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:31:46,852] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:31:46,852] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f983676ac10>
[2021-02-10 10:31:46,852] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:31:46,853] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:31:46,857] {logging_mixin.py:103} INFO - [2021-02-10 10:31:46,856] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:31:47,009] {logging_mixin.py:103} INFO - [2021-02-10 10:31:47,009] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:47,010] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:31:47,012] {logging_mixin.py:103} INFO - [2021-02-10 10:31:47,012] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:31:47,186] {logging_mixin.py:103} INFO - [2021-02-10 10:31:47,186] {cursor.py:560} INFO - query execution done
[2021-02-10 10:31:47,187] {logging_mixin.py:103} INFO - [2021-02-10 10:31:47,187] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:31:54,659] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:32:29,942] {scheduler_job.py:181} INFO - Started process (PID=67333) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:32:29,943] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:32:29,944] {logging_mixin.py:103} INFO - [2021-02-10 10:32:29,944] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:32:31,886] {logging_mixin.py:103} INFO - [2021-02-10 10:32:31,886] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:32:32,335] {logging_mixin.py:103} INFO - [2021-02-10 10:32:32,335] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:32:32,729] {logging_mixin.py:103} INFO - [2021-02-10 10:32:32,729] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:32:32,730] {logging_mixin.py:103} INFO - [2021-02-10 10:32:32,730] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:32:32,730] {logging_mixin.py:103} INFO - [2021-02-10 10:32:32,730] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:32:34,465] {logging_mixin.py:103} INFO - [2021-02-10 10:32:34,465] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:32:35,324] {logging_mixin.py:103} INFO - [2021-02-10 10:32:35,324] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:35,326] {logging_mixin.py:103} INFO - [2021-02-10 10:32:35,325] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:32:35,514] {logging_mixin.py:103} INFO - [2021-02-10 10:32:35,514] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:35,515] {logging_mixin.py:103} INFO - [2021-02-10 10:32:35,515] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:32:35,695] {logging_mixin.py:103} INFO - [2021-02-10 10:32:35,695] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:35,787] {logging_mixin.py:103} INFO - [2021-02-10 10:32:35,787] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:32:35,943] {logging_mixin.py:103} INFO - [2021-02-10 10:32:35,943] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:36,059] {logging_mixin.py:103} INFO - [2021-02-10 10:32:36,059] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:32:36,250] {logging_mixin.py:103} INFO - [2021-02-10 10:32:36,250] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:36,293] {logging_mixin.py:103} INFO - [2021-02-10 10:32:36,293] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:32:36,293] {logging_mixin.py:103} INFO - [2021-02-10 10:32:36,293] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:32:37,908] {logging_mixin.py:103} INFO - [2021-02-10 10:32:37,907] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:37,912] {logging_mixin.py:103} INFO - [2021-02-10 10:32:37,912] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:32:37,924] {logging_mixin.py:103} INFO - [2021-02-10 10:32:37,924] {data_context.py:1281} INFO - Setting run_name to: 20210210T093237.924623Z
[2021-02-10 10:32:37,925] {logging_mixin.py:103} INFO - [2021-02-10 10:32:37,925] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:32:37,934] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:32:37,934] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd94556b430>
[2021-02-10 10:32:37,934] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:32:37,934] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:32:37,936] {logging_mixin.py:103} INFO - [2021-02-10 10:32:37,936] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:32:38,128] {logging_mixin.py:103} INFO - [2021-02-10 10:32:38,128] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:38,129] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:32:38,130] {logging_mixin.py:103} INFO - [2021-02-10 10:32:38,130] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:32:38,316] {logging_mixin.py:103} INFO - [2021-02-10 10:32:38,316] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:38,316] {logging_mixin.py:103} INFO - [2021-02-10 10:32:38,316] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:32:38,319] {logging_mixin.py:103} INFO - [2021-02-10 10:32:38,318] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:32:38,523] {logging_mixin.py:103} INFO - [2021-02-10 10:32:38,523] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:38,526] {logging_mixin.py:103} INFO - [2021-02-10 10:32:38,526] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:32:38,704] {logging_mixin.py:103} INFO - [2021-02-10 10:32:38,704] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:38,708] {logging_mixin.py:103} INFO - [2021-02-10 10:32:38,708] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:32:38,982] {logging_mixin.py:103} INFO - [2021-02-10 10:32:38,982] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:38,983] {logging_mixin.py:103} INFO - [2021-02-10 10:32:38,983] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:32:39,014] {logging_mixin.py:103} INFO - [2021-02-10 10:32:39,014] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:32:39,016] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:32:39,016] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd94556b430>
[2021-02-10 10:32:39,017] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:32:39,018] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:32:39,022] {logging_mixin.py:103} INFO - [2021-02-10 10:32:39,022] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:32:39,293] {logging_mixin.py:103} INFO - [2021-02-10 10:32:39,293] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:39,294] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:32:39,296] {logging_mixin.py:103} INFO - [2021-02-10 10:32:39,296] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:32:39,504] {logging_mixin.py:103} INFO - [2021-02-10 10:32:39,504] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:39,505] {logging_mixin.py:103} INFO - [2021-02-10 10:32:39,504] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:32:39,507] {logging_mixin.py:103} INFO - [2021-02-10 10:32:39,507] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:32:39,791] {logging_mixin.py:103} INFO - [2021-02-10 10:32:39,791] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:39,793] {logging_mixin.py:103} INFO - [2021-02-10 10:32:39,793] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:32:40,014] {logging_mixin.py:103} INFO - [2021-02-10 10:32:40,014] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:40,017] {logging_mixin.py:103} INFO - [2021-02-10 10:32:40,017] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:32:40,270] {logging_mixin.py:103} INFO - [2021-02-10 10:32:40,270] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:40,273] {logging_mixin.py:103} INFO - [2021-02-10 10:32:40,273] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:32:40,479] {logging_mixin.py:103} INFO - [2021-02-10 10:32:40,479] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:40,480] {logging_mixin.py:103} INFO - [2021-02-10 10:32:40,480] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:32:40,484] {logging_mixin.py:103} INFO - [2021-02-10 10:32:40,484] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:32:40,719] {logging_mixin.py:103} INFO - [2021-02-10 10:32:40,718] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:40,723] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:32:40,724] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd94556b430>
[2021-02-10 10:32:40,724] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:32:40,724] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:32:40,726] {logging_mixin.py:103} INFO - [2021-02-10 10:32:40,726] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:32:41,044] {logging_mixin.py:103} INFO - [2021-02-10 10:32:41,044] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:41,045] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:32:41,046] {logging_mixin.py:103} INFO - [2021-02-10 10:32:41,046] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:32:41,302] {logging_mixin.py:103} INFO - [2021-02-10 10:32:41,302] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:41,302] {logging_mixin.py:103} INFO - [2021-02-10 10:32:41,302] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:32:41,303] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:32:41,303] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fd94556bc10>
[2021-02-10 10:32:41,304] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:32:41,306] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:32:41,308] {logging_mixin.py:103} INFO - [2021-02-10 10:32:41,308] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:32:41,607] {logging_mixin.py:103} INFO - [2021-02-10 10:32:41,607] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:41,608] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:32:41,609] {logging_mixin.py:103} INFO - [2021-02-10 10:32:41,609] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:32:41,891] {logging_mixin.py:103} INFO - [2021-02-10 10:32:41,891] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:41,892] {logging_mixin.py:103} INFO - [2021-02-10 10:32:41,892] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:32:41,893] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:32:41,893] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fd94556bc10>
[2021-02-10 10:32:41,893] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:32:41,894] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:32:41,897] {logging_mixin.py:103} INFO - [2021-02-10 10:32:41,897] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:32:42,154] {logging_mixin.py:103} INFO - [2021-02-10 10:32:42,153] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:42,155] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:32:42,156] {logging_mixin.py:103} INFO - [2021-02-10 10:32:42,156] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:32:42,392] {logging_mixin.py:103} INFO - [2021-02-10 10:32:42,392] {cursor.py:560} INFO - query execution done
[2021-02-10 10:32:42,393] {logging_mixin.py:103} INFO - [2021-02-10 10:32:42,393] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:32:50,492] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:33:29,129] {scheduler_job.py:181} INFO - Started process (PID=67404) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:33:29,130] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:33:29,131] {logging_mixin.py:103} INFO - [2021-02-10 10:33:29,131] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:33:31,988] {logging_mixin.py:103} INFO - [2021-02-10 10:33:31,988] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:33:32,535] {logging_mixin.py:103} INFO - [2021-02-10 10:33:32,535] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:33:32,867] {logging_mixin.py:103} INFO - [2021-02-10 10:33:32,867] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:33:32,867] {logging_mixin.py:103} INFO - [2021-02-10 10:33:32,867] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:33:32,867] {logging_mixin.py:103} INFO - [2021-02-10 10:33:32,867] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:33:34,705] {logging_mixin.py:103} INFO - [2021-02-10 10:33:34,705] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:33:34,866] {logging_mixin.py:103} INFO - [2021-02-10 10:33:34,866] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:34,868] {logging_mixin.py:103} INFO - [2021-02-10 10:33:34,868] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:33:35,011] {logging_mixin.py:103} INFO - [2021-02-10 10:33:35,011] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:35,011] {logging_mixin.py:103} INFO - [2021-02-10 10:33:35,011] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:33:35,150] {logging_mixin.py:103} INFO - [2021-02-10 10:33:35,150] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:35,281] {logging_mixin.py:103} INFO - [2021-02-10 10:33:35,281] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:33:36,207] {logging_mixin.py:103} INFO - [2021-02-10 10:33:36,207] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:36,349] {logging_mixin.py:103} INFO - [2021-02-10 10:33:36,349] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:33:36,607] {logging_mixin.py:103} INFO - [2021-02-10 10:33:36,607] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:36,672] {logging_mixin.py:103} INFO - [2021-02-10 10:33:36,672] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:33:36,672] {logging_mixin.py:103} INFO - [2021-02-10 10:33:36,672] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:33:39,924] {logging_mixin.py:103} INFO - [2021-02-10 10:33:39,923] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:39,930] {logging_mixin.py:103} INFO - [2021-02-10 10:33:39,929] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:33:39,943] {logging_mixin.py:103} INFO - [2021-02-10 10:33:39,943] {data_context.py:1281} INFO - Setting run_name to: 20210210T093339.943202Z
[2021-02-10 10:33:39,946] {logging_mixin.py:103} INFO - [2021-02-10 10:33:39,945] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:33:39,958] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:33:39,958] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd1f7d6b430>
[2021-02-10 10:33:39,958] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:33:39,959] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:33:39,961] {logging_mixin.py:103} INFO - [2021-02-10 10:33:39,961] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:33:40,221] {logging_mixin.py:103} INFO - [2021-02-10 10:33:40,221] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:40,222] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:33:40,223] {logging_mixin.py:103} INFO - [2021-02-10 10:33:40,223] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:33:40,410] {logging_mixin.py:103} INFO - [2021-02-10 10:33:40,410] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:40,410] {logging_mixin.py:103} INFO - [2021-02-10 10:33:40,410] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:33:40,413] {logging_mixin.py:103} INFO - [2021-02-10 10:33:40,413] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:33:40,577] {logging_mixin.py:103} INFO - [2021-02-10 10:33:40,577] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:40,582] {logging_mixin.py:103} INFO - [2021-02-10 10:33:40,582] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:33:40,743] {logging_mixin.py:103} INFO - [2021-02-10 10:33:40,743] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:40,745] {logging_mixin.py:103} INFO - [2021-02-10 10:33:40,745] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:33:40,927] {logging_mixin.py:103} INFO - [2021-02-10 10:33:40,926] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:40,927] {logging_mixin.py:103} INFO - [2021-02-10 10:33:40,927] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:33:40,943] {logging_mixin.py:103} INFO - [2021-02-10 10:33:40,943] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:33:40,944] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:33:40,944] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd1f7d6b430>
[2021-02-10 10:33:40,944] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:33:40,944] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:33:40,947] {logging_mixin.py:103} INFO - [2021-02-10 10:33:40,946] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:33:41,148] {logging_mixin.py:103} INFO - [2021-02-10 10:33:41,148] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:41,149] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:33:41,150] {logging_mixin.py:103} INFO - [2021-02-10 10:33:41,150] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:33:41,361] {logging_mixin.py:103} INFO - [2021-02-10 10:33:41,361] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:41,362] {logging_mixin.py:103} INFO - [2021-02-10 10:33:41,361] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:33:41,364] {logging_mixin.py:103} INFO - [2021-02-10 10:33:41,364] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:33:41,549] {logging_mixin.py:103} INFO - [2021-02-10 10:33:41,549] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:41,550] {logging_mixin.py:103} INFO - [2021-02-10 10:33:41,550] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:33:41,766] {logging_mixin.py:103} INFO - [2021-02-10 10:33:41,766] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:41,768] {logging_mixin.py:103} INFO - [2021-02-10 10:33:41,768] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:33:41,982] {logging_mixin.py:103} INFO - [2021-02-10 10:33:41,982] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:41,984] {logging_mixin.py:103} INFO - [2021-02-10 10:33:41,984] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:33:42,198] {logging_mixin.py:103} INFO - [2021-02-10 10:33:42,198] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:42,198] {logging_mixin.py:103} INFO - [2021-02-10 10:33:42,198] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:33:42,200] {logging_mixin.py:103} INFO - [2021-02-10 10:33:42,200] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:33:42,388] {logging_mixin.py:103} INFO - [2021-02-10 10:33:42,388] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:42,394] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:33:42,395] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd1f7d6b430>
[2021-02-10 10:33:42,395] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:33:42,395] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:33:42,398] {logging_mixin.py:103} INFO - [2021-02-10 10:33:42,398] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:33:42,667] {logging_mixin.py:103} INFO - [2021-02-10 10:33:42,667] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:42,668] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:33:42,669] {logging_mixin.py:103} INFO - [2021-02-10 10:33:42,669] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:33:42,882] {logging_mixin.py:103} INFO - [2021-02-10 10:33:42,881] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:42,884] {logging_mixin.py:103} INFO - [2021-02-10 10:33:42,883] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:33:42,885] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:33:42,886] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fd1f7d6bc10>
[2021-02-10 10:33:42,886] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:33:42,889] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:33:42,892] {logging_mixin.py:103} INFO - [2021-02-10 10:33:42,892] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:33:43,072] {logging_mixin.py:103} INFO - [2021-02-10 10:33:43,072] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:43,073] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:33:43,074] {logging_mixin.py:103} INFO - [2021-02-10 10:33:43,074] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:33:43,321] {logging_mixin.py:103} INFO - [2021-02-10 10:33:43,321] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:43,321] {logging_mixin.py:103} INFO - [2021-02-10 10:33:43,321] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:33:43,322] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:33:43,322] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fd1f7d6bc10>
[2021-02-10 10:33:43,322] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:33:43,323] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:33:43,325] {logging_mixin.py:103} INFO - [2021-02-10 10:33:43,325] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:33:43,556] {logging_mixin.py:103} INFO - [2021-02-10 10:33:43,555] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:43,556] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:33:43,557] {logging_mixin.py:103} INFO - [2021-02-10 10:33:43,557] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:33:43,771] {logging_mixin.py:103} INFO - [2021-02-10 10:33:43,771] {cursor.py:560} INFO - query execution done
[2021-02-10 10:33:43,771] {logging_mixin.py:103} INFO - [2021-02-10 10:33:43,771] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:33:53,747] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:34:32,833] {scheduler_job.py:181} INFO - Started process (PID=67468) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:34:32,834] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:34:32,834] {logging_mixin.py:103} INFO - [2021-02-10 10:34:32,834] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:34:34,846] {logging_mixin.py:103} INFO - [2021-02-10 10:34:34,846] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:34:35,236] {logging_mixin.py:103} INFO - [2021-02-10 10:34:35,236] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:34:35,677] {logging_mixin.py:103} INFO - [2021-02-10 10:34:35,677] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:34:35,677] {logging_mixin.py:103} INFO - [2021-02-10 10:34:35,677] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:34:35,677] {logging_mixin.py:103} INFO - [2021-02-10 10:34:35,677] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:34:36,872] {logging_mixin.py:103} INFO - [2021-02-10 10:34:36,870] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:34:37,127] {logging_mixin.py:103} INFO - [2021-02-10 10:34:37,127] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:37,129] {logging_mixin.py:103} INFO - [2021-02-10 10:34:37,129] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:34:37,303] {logging_mixin.py:103} INFO - [2021-02-10 10:34:37,303] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:37,304] {logging_mixin.py:103} INFO - [2021-02-10 10:34:37,304] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:34:37,548] {logging_mixin.py:103} INFO - [2021-02-10 10:34:37,548] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:37,648] {logging_mixin.py:103} INFO - [2021-02-10 10:34:37,647] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:34:37,858] {logging_mixin.py:103} INFO - [2021-02-10 10:34:37,857] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:37,988] {logging_mixin.py:103} INFO - [2021-02-10 10:34:37,988] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:34:38,212] {logging_mixin.py:103} INFO - [2021-02-10 10:34:38,212] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:38,275] {logging_mixin.py:103} INFO - [2021-02-10 10:34:38,275] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:34:38,276] {logging_mixin.py:103} INFO - [2021-02-10 10:34:38,276] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:34:40,107] {logging_mixin.py:103} INFO - [2021-02-10 10:34:40,106] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:40,109] {logging_mixin.py:103} INFO - [2021-02-10 10:34:40,109] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:34:40,131] {logging_mixin.py:103} INFO - [2021-02-10 10:34:40,131] {data_context.py:1281} INFO - Setting run_name to: 20210210T093440.131475Z
[2021-02-10 10:34:40,134] {logging_mixin.py:103} INFO - [2021-02-10 10:34:40,133] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:34:40,153] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:34:40,153] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fe9b4d6b430>
[2021-02-10 10:34:40,153] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:34:40,154] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:34:40,156] {logging_mixin.py:103} INFO - [2021-02-10 10:34:40,156] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:34:40,328] {logging_mixin.py:103} INFO - [2021-02-10 10:34:40,328] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:40,329] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:34:40,330] {logging_mixin.py:103} INFO - [2021-02-10 10:34:40,330] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:34:40,541] {logging_mixin.py:103} INFO - [2021-02-10 10:34:40,541] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:40,542] {logging_mixin.py:103} INFO - [2021-02-10 10:34:40,542] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:34:40,543] {logging_mixin.py:103} INFO - [2021-02-10 10:34:40,543] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:34:40,753] {logging_mixin.py:103} INFO - [2021-02-10 10:34:40,753] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:40,754] {logging_mixin.py:103} INFO - [2021-02-10 10:34:40,754] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:34:40,928] {logging_mixin.py:103} INFO - [2021-02-10 10:34:40,928] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:40,930] {logging_mixin.py:103} INFO - [2021-02-10 10:34:40,930] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:34:41,115] {logging_mixin.py:103} INFO - [2021-02-10 10:34:41,115] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:41,115] {logging_mixin.py:103} INFO - [2021-02-10 10:34:41,115] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:34:41,126] {logging_mixin.py:103} INFO - [2021-02-10 10:34:41,126] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:34:41,127] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:34:41,127] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fe9b4d6b430>
[2021-02-10 10:34:41,127] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:34:41,127] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:34:41,129] {logging_mixin.py:103} INFO - [2021-02-10 10:34:41,129] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:34:41,326] {logging_mixin.py:103} INFO - [2021-02-10 10:34:41,326] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:41,327] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:34:41,327] {logging_mixin.py:103} INFO - [2021-02-10 10:34:41,327] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:34:41,499] {logging_mixin.py:103} INFO - [2021-02-10 10:34:41,499] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:41,500] {logging_mixin.py:103} INFO - [2021-02-10 10:34:41,500] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:34:41,501] {logging_mixin.py:103} INFO - [2021-02-10 10:34:41,501] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:34:41,713] {logging_mixin.py:103} INFO - [2021-02-10 10:34:41,713] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:41,714] {logging_mixin.py:103} INFO - [2021-02-10 10:34:41,714] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:34:41,892] {logging_mixin.py:103} INFO - [2021-02-10 10:34:41,892] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:41,894] {logging_mixin.py:103} INFO - [2021-02-10 10:34:41,893] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:34:42,038] {logging_mixin.py:103} INFO - [2021-02-10 10:34:42,038] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:42,041] {logging_mixin.py:103} INFO - [2021-02-10 10:34:42,041] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:34:42,201] {logging_mixin.py:103} INFO - [2021-02-10 10:34:42,200] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:42,201] {logging_mixin.py:103} INFO - [2021-02-10 10:34:42,201] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:34:42,203] {logging_mixin.py:103} INFO - [2021-02-10 10:34:42,203] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:34:42,440] {logging_mixin.py:103} INFO - [2021-02-10 10:34:42,440] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:42,443] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:34:42,443] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fe9b4d6b430>
[2021-02-10 10:34:42,443] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:34:42,443] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:34:42,444] {logging_mixin.py:103} INFO - [2021-02-10 10:34:42,444] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:34:42,620] {logging_mixin.py:103} INFO - [2021-02-10 10:34:42,620] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:42,621] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:34:42,622] {logging_mixin.py:103} INFO - [2021-02-10 10:34:42,622] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:34:42,873] {logging_mixin.py:103} INFO - [2021-02-10 10:34:42,873] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:42,873] {logging_mixin.py:103} INFO - [2021-02-10 10:34:42,873] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:34:42,874] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:34:42,874] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fe9b4d6bc10>
[2021-02-10 10:34:42,874] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:34:42,876] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:34:42,877] {logging_mixin.py:103} INFO - [2021-02-10 10:34:42,877] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:34:43,125] {logging_mixin.py:103} INFO - [2021-02-10 10:34:43,125] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:43,126] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:34:43,126] {logging_mixin.py:103} INFO - [2021-02-10 10:34:43,126] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:34:43,312] {logging_mixin.py:103} INFO - [2021-02-10 10:34:43,312] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:43,312] {logging_mixin.py:103} INFO - [2021-02-10 10:34:43,312] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:34:43,313] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:34:43,313] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fe9b4d6bc10>
[2021-02-10 10:34:43,313] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:34:43,314] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:34:43,315] {logging_mixin.py:103} INFO - [2021-02-10 10:34:43,315] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:34:43,473] {logging_mixin.py:103} INFO - [2021-02-10 10:34:43,473] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:43,474] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:34:43,474] {logging_mixin.py:103} INFO - [2021-02-10 10:34:43,474] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:34:43,631] {logging_mixin.py:103} INFO - [2021-02-10 10:34:43,631] {cursor.py:560} INFO - query execution done
[2021-02-10 10:34:43,631] {logging_mixin.py:103} INFO - [2021-02-10 10:34:43,631] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:34:52,738] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:35:33,982] {scheduler_job.py:181} INFO - Started process (PID=67571) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:35:33,983] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:35:33,984] {logging_mixin.py:103} INFO - [2021-02-10 10:35:33,984] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:35:36,749] {logging_mixin.py:103} INFO - [2021-02-10 10:35:36,749] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:35:37,698] {logging_mixin.py:103} INFO - [2021-02-10 10:35:37,698] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:35:38,227] {logging_mixin.py:103} INFO - [2021-02-10 10:35:38,227] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:35:38,227] {logging_mixin.py:103} INFO - [2021-02-10 10:35:38,227] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:35:38,227] {logging_mixin.py:103} INFO - [2021-02-10 10:35:38,227] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:35:40,014] {logging_mixin.py:103} INFO - [2021-02-10 10:35:40,014] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:35:40,219] {logging_mixin.py:103} INFO - [2021-02-10 10:35:40,218] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:40,221] {logging_mixin.py:103} INFO - [2021-02-10 10:35:40,220] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:35:40,367] {logging_mixin.py:103} INFO - [2021-02-10 10:35:40,367] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:40,368] {logging_mixin.py:103} INFO - [2021-02-10 10:35:40,368] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:35:40,504] {logging_mixin.py:103} INFO - [2021-02-10 10:35:40,504] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:40,596] {logging_mixin.py:103} INFO - [2021-02-10 10:35:40,596] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:35:40,793] {logging_mixin.py:103} INFO - [2021-02-10 10:35:40,792] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:41,012] {logging_mixin.py:103} INFO - [2021-02-10 10:35:41,012] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:35:41,205] {logging_mixin.py:103} INFO - [2021-02-10 10:35:41,205] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:41,245] {logging_mixin.py:103} INFO - [2021-02-10 10:35:41,245] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:35:41,246] {logging_mixin.py:103} INFO - [2021-02-10 10:35:41,246] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:35:42,921] {logging_mixin.py:103} INFO - [2021-02-10 10:35:42,921] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:42,923] {logging_mixin.py:103} INFO - [2021-02-10 10:35:42,923] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:35:42,934] {logging_mixin.py:103} INFO - [2021-02-10 10:35:42,934] {data_context.py:1281} INFO - Setting run_name to: 20210210T093542.934762Z
[2021-02-10 10:35:42,935] {logging_mixin.py:103} INFO - None
[2021-02-10 10:35:42,936] {logging_mixin.py:103} INFO - [2021-02-10 10:35:42,936] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:35:42,945] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:35:42,945] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd546d6b430>
[2021-02-10 10:35:42,945] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:35:42,945] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:35:42,947] {logging_mixin.py:103} INFO - [2021-02-10 10:35:42,947] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:35:43,248] {logging_mixin.py:103} INFO - [2021-02-10 10:35:43,247] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:43,249] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:35:43,251] {logging_mixin.py:103} INFO - [2021-02-10 10:35:43,251] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:35:43,488] {logging_mixin.py:103} INFO - [2021-02-10 10:35:43,488] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:43,489] {logging_mixin.py:103} INFO - [2021-02-10 10:35:43,489] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:35:43,492] {logging_mixin.py:103} INFO - [2021-02-10 10:35:43,491] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:35:43,679] {logging_mixin.py:103} INFO - [2021-02-10 10:35:43,679] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:43,683] {logging_mixin.py:103} INFO - [2021-02-10 10:35:43,683] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:35:44,621] {logging_mixin.py:103} INFO - [2021-02-10 10:35:44,621] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:44,624] {logging_mixin.py:103} INFO - [2021-02-10 10:35:44,624] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:35:44,869] {logging_mixin.py:103} INFO - [2021-02-10 10:35:44,869] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:44,870] {logging_mixin.py:103} INFO - [2021-02-10 10:35:44,869] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:35:44,890] {logging_mixin.py:103} INFO - [2021-02-10 10:35:44,890] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:35:44,891] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:35:44,891] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd546d6b430>
[2021-02-10 10:35:44,891] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:35:44,891] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:35:44,894] {logging_mixin.py:103} INFO - [2021-02-10 10:35:44,893] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:35:45,087] {logging_mixin.py:103} INFO - [2021-02-10 10:35:45,087] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:45,088] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:35:45,089] {logging_mixin.py:103} INFO - [2021-02-10 10:35:45,089] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:35:45,294] {logging_mixin.py:103} INFO - [2021-02-10 10:35:45,294] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:45,294] {logging_mixin.py:103} INFO - [2021-02-10 10:35:45,294] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:35:45,296] {logging_mixin.py:103} INFO - [2021-02-10 10:35:45,296] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:35:45,484] {logging_mixin.py:103} INFO - [2021-02-10 10:35:45,484] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:45,486] {logging_mixin.py:103} INFO - [2021-02-10 10:35:45,485] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:35:45,689] {logging_mixin.py:103} INFO - [2021-02-10 10:35:45,688] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:45,692] {logging_mixin.py:103} INFO - [2021-02-10 10:35:45,692] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:35:46,027] {logging_mixin.py:103} INFO - [2021-02-10 10:35:46,027] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:46,030] {logging_mixin.py:103} INFO - [2021-02-10 10:35:46,030] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:35:46,257] {logging_mixin.py:103} INFO - [2021-02-10 10:35:46,257] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:46,258] {logging_mixin.py:103} INFO - [2021-02-10 10:35:46,257] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:35:46,261] {logging_mixin.py:103} INFO - [2021-02-10 10:35:46,261] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:35:46,480] {logging_mixin.py:103} INFO - [2021-02-10 10:35:46,480] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:46,484] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:35:46,485] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fd546d6b430>
[2021-02-10 10:35:46,485] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:35:46,485] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:35:46,487] {logging_mixin.py:103} INFO - [2021-02-10 10:35:46,487] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:35:46,712] {logging_mixin.py:103} INFO - [2021-02-10 10:35:46,711] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:46,712] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:35:46,714] {logging_mixin.py:103} INFO - [2021-02-10 10:35:46,714] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:35:47,040] {logging_mixin.py:103} INFO - [2021-02-10 10:35:47,040] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:47,040] {logging_mixin.py:103} INFO - [2021-02-10 10:35:47,040] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:35:47,041] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:35:47,042] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fd546d6bc10>
[2021-02-10 10:35:47,042] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:35:47,044] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:35:47,046] {logging_mixin.py:103} INFO - [2021-02-10 10:35:47,046] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:35:47,241] {logging_mixin.py:103} INFO - [2021-02-10 10:35:47,240] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:47,241] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:35:47,243] {logging_mixin.py:103} INFO - [2021-02-10 10:35:47,243] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:35:47,446] {logging_mixin.py:103} INFO - [2021-02-10 10:35:47,446] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:47,446] {logging_mixin.py:103} INFO - [2021-02-10 10:35:47,446] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:35:47,447] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:35:47,447] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fd546d6bc10>
[2021-02-10 10:35:47,447] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:35:47,449] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:35:47,452] {logging_mixin.py:103} INFO - [2021-02-10 10:35:47,452] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:35:47,746] {logging_mixin.py:103} INFO - [2021-02-10 10:35:47,746] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:47,747] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:35:47,749] {logging_mixin.py:103} INFO - [2021-02-10 10:35:47,748] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:35:48,617] {logging_mixin.py:103} INFO - [2021-02-10 10:35:48,617] {cursor.py:560} INFO - query execution done
[2021-02-10 10:35:48,618] {logging_mixin.py:103} INFO - [2021-02-10 10:35:48,618] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:35:55,377] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:36:24,956] {scheduler_job.py:181} INFO - Started process (PID=67625) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:36:24,956] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:36:24,956] {logging_mixin.py:103} INFO - [2021-02-10 10:36:24,956] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:36:27,199] {logging_mixin.py:103} INFO - [2021-02-10 10:36:27,199] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:36:27,759] {logging_mixin.py:103} INFO - [2021-02-10 10:36:27,759] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:36:28,332] {logging_mixin.py:103} INFO - [2021-02-10 10:36:28,332] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:36:28,332] {logging_mixin.py:103} INFO - [2021-02-10 10:36:28,332] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:36:28,332] {logging_mixin.py:103} INFO - [2021-02-10 10:36:28,332] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:36:29,694] {logging_mixin.py:103} INFO - [2021-02-10 10:36:29,694] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:36:29,882] {logging_mixin.py:103} INFO - [2021-02-10 10:36:29,882] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:29,884] {logging_mixin.py:103} INFO - [2021-02-10 10:36:29,884] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:36:30,045] {logging_mixin.py:103} INFO - [2021-02-10 10:36:30,045] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:30,046] {logging_mixin.py:103} INFO - [2021-02-10 10:36:30,046] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:36:30,793] {logging_mixin.py:103} INFO - [2021-02-10 10:36:30,793] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:30,794] {logging_mixin.py:103} INFO - [2021-02-10 10:36:30,794] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:36:30,972] {logging_mixin.py:103} INFO - [2021-02-10 10:36:30,972] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:31,106] {logging_mixin.py:103} INFO - [2021-02-10 10:36:31,106] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:36:31,264] {logging_mixin.py:103} INFO - [2021-02-10 10:36:31,264] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:31,318] {logging_mixin.py:103} INFO - [2021-02-10 10:36:31,318] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:36:31,318] {logging_mixin.py:103} INFO - [2021-02-10 10:36:31,318] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:36:33,775] {logging_mixin.py:103} INFO - [2021-02-10 10:36:33,775] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:33,778] {logging_mixin.py:103} INFO - [2021-02-10 10:36:33,778] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:36:33,792] {logging_mixin.py:103} INFO - [2021-02-10 10:36:33,792] {data_context.py:1281} INFO - Setting run_name to: 20210210T093633.792568Z
[2021-02-10 10:36:33,792] {logging_mixin.py:103} INFO - None
[2021-02-10 10:36:33,794] {logging_mixin.py:103} INFO - [2021-02-10 10:36:33,794] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:36:33,808] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:36:33,808] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f8548d6b430>
[2021-02-10 10:36:33,808] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:36:33,808] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:36:33,810] {logging_mixin.py:103} INFO - [2021-02-10 10:36:33,810] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:36:34,072] {logging_mixin.py:103} INFO - [2021-02-10 10:36:34,072] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:34,073] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:36:34,074] {logging_mixin.py:103} INFO - [2021-02-10 10:36:34,074] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:36:34,720] {logging_mixin.py:103} INFO - [2021-02-10 10:36:34,720] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:34,720] {logging_mixin.py:103} INFO - [2021-02-10 10:36:34,720] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:36:34,722] {logging_mixin.py:103} INFO - [2021-02-10 10:36:34,722] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:36:34,909] {logging_mixin.py:103} INFO - [2021-02-10 10:36:34,909] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:34,911] {logging_mixin.py:103} INFO - [2021-02-10 10:36:34,911] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:36:35,616] {logging_mixin.py:103} INFO - [2021-02-10 10:36:35,616] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:35,617] {logging_mixin.py:103} INFO - [2021-02-10 10:36:35,617] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:36:35,785] {logging_mixin.py:103} INFO - [2021-02-10 10:36:35,785] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:35,786] {logging_mixin.py:103} INFO - [2021-02-10 10:36:35,786] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:36:35,797] {logging_mixin.py:103} INFO - [2021-02-10 10:36:35,797] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:36:35,798] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:36:35,798] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f8548d6b430>
[2021-02-10 10:36:35,798] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:36:35,799] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:36:35,800] {logging_mixin.py:103} INFO - [2021-02-10 10:36:35,800] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:36:36,009] {logging_mixin.py:103} INFO - [2021-02-10 10:36:36,009] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:36,010] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:36:36,011] {logging_mixin.py:103} INFO - [2021-02-10 10:36:36,011] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:36:36,170] {logging_mixin.py:103} INFO - [2021-02-10 10:36:36,170] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:36,170] {logging_mixin.py:103} INFO - [2021-02-10 10:36:36,170] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:36:36,172] {logging_mixin.py:103} INFO - [2021-02-10 10:36:36,172] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:36:36,865] {logging_mixin.py:103} INFO - [2021-02-10 10:36:36,864] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:36,866] {logging_mixin.py:103} INFO - [2021-02-10 10:36:36,866] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:36:37,014] {logging_mixin.py:103} INFO - [2021-02-10 10:36:37,014] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:37,016] {logging_mixin.py:103} INFO - [2021-02-10 10:36:37,016] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:36:37,771] {logging_mixin.py:103} INFO - [2021-02-10 10:36:37,771] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:37,773] {logging_mixin.py:103} INFO - [2021-02-10 10:36:37,773] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:36:37,950] {logging_mixin.py:103} INFO - [2021-02-10 10:36:37,950] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:37,950] {logging_mixin.py:103} INFO - [2021-02-10 10:36:37,950] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:36:37,952] {logging_mixin.py:103} INFO - [2021-02-10 10:36:37,952] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:36:38,387] {logging_mixin.py:103} INFO - [2021-02-10 10:36:38,386] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:38,395] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:36:38,395] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f8548d6b430>
[2021-02-10 10:36:38,395] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:36:38,397] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:36:38,399] {logging_mixin.py:103} INFO - [2021-02-10 10:36:38,399] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:36:38,586] {logging_mixin.py:103} INFO - [2021-02-10 10:36:38,586] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:38,587] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:36:38,588] {logging_mixin.py:103} INFO - [2021-02-10 10:36:38,588] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:36:38,755] {logging_mixin.py:103} INFO - [2021-02-10 10:36:38,755] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:38,755] {logging_mixin.py:103} INFO - [2021-02-10 10:36:38,755] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:36:38,756] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:36:38,756] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f8548d6bc10>
[2021-02-10 10:36:38,756] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:36:38,757] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:36:38,758] {logging_mixin.py:103} INFO - [2021-02-10 10:36:38,758] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:36:39,004] {logging_mixin.py:103} INFO - [2021-02-10 10:36:39,003] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:39,005] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:36:39,006] {logging_mixin.py:103} INFO - [2021-02-10 10:36:39,006] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:36:39,167] {logging_mixin.py:103} INFO - [2021-02-10 10:36:39,167] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:39,167] {logging_mixin.py:103} INFO - [2021-02-10 10:36:39,167] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:36:39,167] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:36:39,167] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f8548d6bc10>
[2021-02-10 10:36:39,168] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:36:39,168] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:36:39,169] {logging_mixin.py:103} INFO - [2021-02-10 10:36:39,169] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:36:39,352] {logging_mixin.py:103} INFO - [2021-02-10 10:36:39,352] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:39,353] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:36:39,355] {logging_mixin.py:103} INFO - [2021-02-10 10:36:39,355] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:36:39,530] {logging_mixin.py:103} INFO - [2021-02-10 10:36:39,530] {cursor.py:560} INFO - query execution done
[2021-02-10 10:36:39,531] {logging_mixin.py:103} INFO - [2021-02-10 10:36:39,531] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:36:46,372] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:37:21,160] {scheduler_job.py:181} INFO - Started process (PID=67715) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:37:21,161] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:37:21,162] {logging_mixin.py:103} INFO - [2021-02-10 10:37:21,162] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:37:25,008] {logging_mixin.py:103} INFO - [2021-02-10 10:37:25,008] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:37:25,492] {logging_mixin.py:103} INFO - [2021-02-10 10:37:25,492] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:37:25,897] {logging_mixin.py:103} INFO - [2021-02-10 10:37:25,897] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:37:25,898] {logging_mixin.py:103} INFO - [2021-02-10 10:37:25,898] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:37:25,898] {logging_mixin.py:103} INFO - [2021-02-10 10:37:25,898] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:37:27,141] {logging_mixin.py:103} INFO - [2021-02-10 10:37:27,141] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:37:27,354] {logging_mixin.py:103} INFO - [2021-02-10 10:37:27,354] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:27,358] {logging_mixin.py:103} INFO - [2021-02-10 10:37:27,358] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:37:27,501] {logging_mixin.py:103} INFO - [2021-02-10 10:37:27,501] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:27,501] {logging_mixin.py:103} INFO - [2021-02-10 10:37:27,501] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:37:27,680] {logging_mixin.py:103} INFO - [2021-02-10 10:37:27,679] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:27,787] {logging_mixin.py:103} INFO - [2021-02-10 10:37:27,787] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:37:28,076] {logging_mixin.py:103} INFO - [2021-02-10 10:37:28,076] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:28,208] {logging_mixin.py:103} INFO - [2021-02-10 10:37:28,208] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:37:28,378] {logging_mixin.py:103} INFO - [2021-02-10 10:37:28,378] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:28,433] {logging_mixin.py:103} INFO - [2021-02-10 10:37:28,433] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:37:28,433] {logging_mixin.py:103} INFO - [2021-02-10 10:37:28,433] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:37:30,997] {logging_mixin.py:103} INFO - [2021-02-10 10:37:30,997] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:31,000] {logging_mixin.py:103} INFO - [2021-02-10 10:37:31,000] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:37:31,013] {logging_mixin.py:103} INFO - [2021-02-10 10:37:31,013] {data_context.py:1281} INFO - Setting run_name to: 20210210T093731.013718Z
[2021-02-10 10:37:31,015] {logging_mixin.py:103} INFO - [2021-02-10 10:37:31,015] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:37:31,028] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:37:31,029] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fa448d6b430>
[2021-02-10 10:37:31,029] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:37:31,030] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:37:31,032] {logging_mixin.py:103} INFO - [2021-02-10 10:37:31,032] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:37:31,237] {logging_mixin.py:103} INFO - [2021-02-10 10:37:31,237] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:31,238] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:37:31,239] {logging_mixin.py:103} INFO - [2021-02-10 10:37:31,239] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:37:31,426] {logging_mixin.py:103} INFO - [2021-02-10 10:37:31,426] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:31,427] {logging_mixin.py:103} INFO - [2021-02-10 10:37:31,427] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:37:31,428] {logging_mixin.py:103} INFO - [2021-02-10 10:37:31,428] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:37:31,636] {logging_mixin.py:103} INFO - [2021-02-10 10:37:31,636] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:31,641] {logging_mixin.py:103} INFO - [2021-02-10 10:37:31,640] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:37:31,804] {logging_mixin.py:103} INFO - [2021-02-10 10:37:31,804] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:31,807] {logging_mixin.py:103} INFO - [2021-02-10 10:37:31,807] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:37:31,995] {logging_mixin.py:103} INFO - [2021-02-10 10:37:31,995] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:31,995] {logging_mixin.py:103} INFO - [2021-02-10 10:37:31,995] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:37:32,010] {logging_mixin.py:103} INFO - [2021-02-10 10:37:32,009] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:37:32,010] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:37:32,010] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fa448d6b430>
[2021-02-10 10:37:32,011] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:37:32,011] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:37:32,012] {logging_mixin.py:103} INFO - [2021-02-10 10:37:32,012] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:37:32,256] {logging_mixin.py:103} INFO - [2021-02-10 10:37:32,256] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:32,257] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:37:32,258] {logging_mixin.py:103} INFO - [2021-02-10 10:37:32,258] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:37:32,436] {logging_mixin.py:103} INFO - [2021-02-10 10:37:32,436] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:32,437] {logging_mixin.py:103} INFO - [2021-02-10 10:37:32,437] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:37:32,440] {logging_mixin.py:103} INFO - [2021-02-10 10:37:32,440] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:37:32,649] {logging_mixin.py:103} INFO - [2021-02-10 10:37:32,648] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:32,651] {logging_mixin.py:103} INFO - [2021-02-10 10:37:32,651] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:37:32,829] {logging_mixin.py:103} INFO - [2021-02-10 10:37:32,828] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:32,833] {logging_mixin.py:103} INFO - [2021-02-10 10:37:32,833] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:37:33,013] {logging_mixin.py:103} INFO - [2021-02-10 10:37:33,013] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:33,016] {logging_mixin.py:103} INFO - [2021-02-10 10:37:33,016] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:37:33,193] {logging_mixin.py:103} INFO - [2021-02-10 10:37:33,193] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:33,194] {logging_mixin.py:103} INFO - [2021-02-10 10:37:33,194] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:37:33,198] {logging_mixin.py:103} INFO - [2021-02-10 10:37:33,198] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:37:33,388] {logging_mixin.py:103} INFO - [2021-02-10 10:37:33,388] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:33,392] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:37:33,393] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fa448d6b430>
[2021-02-10 10:37:33,393] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:37:33,393] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:37:33,395] {logging_mixin.py:103} INFO - [2021-02-10 10:37:33,395] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:37:33,581] {logging_mixin.py:103} INFO - [2021-02-10 10:37:33,581] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:33,581] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:37:33,583] {logging_mixin.py:103} INFO - [2021-02-10 10:37:33,582] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:37:33,757] {logging_mixin.py:103} INFO - [2021-02-10 10:37:33,757] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:33,758] {logging_mixin.py:103} INFO - [2021-02-10 10:37:33,758] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:37:33,758] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:37:33,759] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fa448d6bc10>
[2021-02-10 10:37:33,759] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:37:33,760] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:37:33,761] {logging_mixin.py:103} INFO - [2021-02-10 10:37:33,761] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:37:33,939] {logging_mixin.py:103} INFO - [2021-02-10 10:37:33,939] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:33,940] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:37:33,940] {logging_mixin.py:103} INFO - [2021-02-10 10:37:33,940] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:37:34,145] {logging_mixin.py:103} INFO - [2021-02-10 10:37:34,145] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:34,145] {logging_mixin.py:103} INFO - [2021-02-10 10:37:34,145] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:37:34,146] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:37:34,146] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fa448d6bc10>
[2021-02-10 10:37:34,146] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:37:34,147] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:37:34,149] {logging_mixin.py:103} INFO - [2021-02-10 10:37:34,149] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:37:34,389] {logging_mixin.py:103} INFO - [2021-02-10 10:37:34,389] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:34,390] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:37:34,391] {logging_mixin.py:103} INFO - [2021-02-10 10:37:34,391] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:37:35,216] {logging_mixin.py:103} INFO - [2021-02-10 10:37:35,215] {cursor.py:560} INFO - query execution done
[2021-02-10 10:37:35,216] {logging_mixin.py:103} INFO - [2021-02-10 10:37:35,216] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:37:44,194] {logging_mixin.py:103} INFO - {'validation_result': {
  "evaluation_parameters": {},
  "statistics": {
    "evaluated_expectations": 13,
    "successful_expectations": 6,
    "unsuccessful_expectations": 7,
    "success_percent": 46.15384615384615
  },
  "success": false,
  "meta": {
    "great_expectations_version": "0.13.8+3.g9a8cbaf4.dirty",
    "expectation_suite_name": "taxisuite",
    "run_id": {
      "run_name": "20210210T093731.013718Z",
      "run_time": "2021-02-10T09:37:31.013718+00:00"
    },
    "batch_kwargs": {
      "table": "raw_monthly_taxi",
      "schema": "public",
      "data_asset_name": "raw_monthly_taxi",
      "datasource": "my_snowflake_db"
    },
    "batch_markers": {
      "ge_load_time": "20210210T093728.207599Z"
    },
    "batch_parameters": null,
    "validation_time": "20210210T093731.014413Z"
  },
  "results": [
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": false,
      "expectation_config": {
        "meta": {},
        "expectation_type": "expect_table_column_count_to_equal",
        "kwargs": {
          "value": 19,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "result": {
        "observed_value": 18
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": false,
      "expectation_config": {
        "meta": {},
        "expectation_type": "expect_table_columns_to_match_ordered_list",
        "kwargs": {
          "column_list": [
            "vendor_id",
            "pickup_date",
            "dropoff_date",
            "passenger_count",
            "trip_distance",
            "rate_code_id",
            "flag",
            "pickup_loc",
            "dropff_loc",
            "payment_type",
            "fare_amount",
            "extra",
            "mta_tax",
            "tip",
            "tolls",
            "improvement_surcharge",
            "total_amount",
            "congestion_surcharge",
            "ge_validation_result"
          ],
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "result": {
        "observed_value": [
          "vendor_id",
          "pickup_date",
          "dropoff_date",
          "passenger_count",
          "trip_distance",
          "rate_code_id",
          "flag",
          "pickup_loc",
          "dropff_loc",
          "payment_type",
          "fare_amount",
          "extra",
          "mta_tax",
          "tip",
          "tolls",
          "improvement_surcharge",
          "total_amount",
          "congestion_surcharge"
        ],
        "details": {
          "mismatched": [
            {
              "Expected Column Position": 18,
              "Expected": "ge_validation_result",
              "Found": null
            }
          ]
        }
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": true,
      "expectation_config": {
        "meta": {},
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "vendor_id",
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "result": {
        "element_count": 0,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "partial_unexpected_list": []
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": true,
      "expectation_config": {
        "meta": {},
        "expectation_type": "expect_column_distinct_values_to_be_in_set",
        "kwargs": {
          "column": "vendor_id",
          "value_set": [
            1,
            2,
            4
          ],
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "result": {
        "observed_value": [],
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null,
        "details": {
          "value_counts": []
        }
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": false,
      "expectation_config": {
        "meta": {},
        "expectation_type": "expect_column_kl_divergence_to_be_less_than",
        "kwargs": {
          "column": "vendor_id",
          "partition_object": {
            "values": [
              1,
              2,
              4
            ],
            "weights": [
              0.376,
              0.618,
              0.006
            ]
          },
          "threshold": 0.6,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null,
        "details": {
          "observed_partition": {
            "values": [
              1,
              2,
              4
            ],
            "weights": [
              0.0,
              0.0,
              0.0
            ]
          },
          "expected_partition": {
            "values": [
              1,
              2,
              4
            ],
            "weights": [
              0.376,
              0.618,
              0.006
            ]
          }
        }
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": true,
      "expectation_config": {
        "meta": {},
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "trip_distance",
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "result": {
        "element_count": 0,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "partial_unexpected_list": []
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": false,
      "expectation_config": {
        "meta": {},
        "expectation_type": "expect_column_min_to_be_between",
        "kwargs": {
          "column": "trip_distance",
          "max_value": 1.0,
          "min_value": -1.0,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": false,
      "expectation_config": {
        "meta": {},
        "expectation_type": "expect_column_mean_to_be_between",
        "kwargs": {
          "column": "trip_distance",
          "max_value": 3.99714,
          "min_value": 1.99714,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": false,
      "expectation_config": {
        "meta": {},
        "expectation_type": "expect_column_median_to_be_between",
        "kwargs": {
          "column": "trip_distance",
          "max_value": 2.595,
          "min_value": 0.5950000000000002,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null
      }
    },
    {
      "exception_info": {
        "raised_exception": true,
        "exception_message": "TypeError: '<=' not supported between instances of 'float' and 'NoneType'",
        "exception_traceback": "Traceback (most recent call last):\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/data_asset/data_asset.py\", line 262, in wrapper\n    return_obj = func(self, **evaluation_args)\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/dataset/dataset.py\", line 155, in inner_wrapper\n    evaluation_result = func(self, *args, **kwargs)\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/dataset/dataset.py\", line 2937, in expect_column_quantile_values_to_be_between\n    success_details = [\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/dataset/dataset.py\", line 2938, in <listcomp>\n    range_[0] <= quantile_vals[idx] <= range_[1]\nTypeError: '<=' not supported between instances of 'float' and 'NoneType'\n"
      },
      "success": false,
      "expectation_config": {
        "meta": {},
        "expectation_type": "expect_column_quantile_values_to_be_between",
        "kwargs": {
          "allow_relative_error": false,
          "column": "trip_distance",
          "quantile_ranges": {
            "quantiles": [
              0.05,
              0.25,
              0.5,
              0.75,
              0.95
            ],
            "value_ranges": [
              [
                -0.53,
                1.47
              ],
              [
                -0.050000000000000044,
                1.95
              ],
              [
                0.5900000000000001,
                2.59
              ],
              [
                1.9,
                3.9
              ],
              [
                10.21,
                12.21
              ]
            ]
          },
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "result": {}
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": true,
      "expectation_config": {
        "meta": {},
        "expectation_type": "expect_column_values_to_not_be_null",
        "kwargs": {
          "column": "pickup_date",
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "result": {
        "element_count": 0,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "partial_unexpected_list": []
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": true,
      "expectation_config": {
        "meta": {},
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "pickup_date",
          "max_value": "2020-03-27 00:00:00",
          "min_value": "2018-03-01 00:00:00",
          "parse_strings_as_datetimes": true,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "result": {
        "element_count": 0,
        "missing_count": 0,
        "missing_percent": null,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "unexpected_percent_nonmissing": null,
        "partial_unexpected_list": [],
        "partial_unexpected_index_list": null,
        "partial_unexpected_counts": []
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": true,
      "expectation_config": {
        "meta": {},
        "expectation_type": "expect_column_values_to_be_between",
        "kwargs": {
          "column": "passenger_count",
          "max_value": 6,
          "min_value": 1,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "result": {
        "element_count": 0,
        "missing_count": 0,
        "missing_percent": null,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "unexpected_percent_nonmissing": null,
        "partial_unexpected_list": [],
        "partial_unexpected_index_list": null,
        "partial_unexpected_counts": []
      }
    }
  ]
}, 'actions_results': {'store_validation_result': {'class': 'StoreValidationResultAction'}, 'store_evaluation_params': {'class': 'StoreEvaluationParametersAction'}, 'update_data_docs': {'local_site': 'file:///Users/sara/airflow/dags/demo/great_expectations/uncommitted/data_docs/local_site/validations/taxisuite/20210210T093731.013718Z/20210210T093731.013718Z/b2e8a19be6c44cbb814773567bfc0573.html', 'class': 'UpdateDataDocsAction'}}}
[2021-02-10 10:37:44,210] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:38:17,354] {scheduler_job.py:181} INFO - Started process (PID=67785) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:38:17,356] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:38:17,357] {logging_mixin.py:103} INFO - [2021-02-10 10:38:17,356] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:38:19,243] {logging_mixin.py:103} INFO - [2021-02-10 10:38:19,243] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:38:19,557] {logging_mixin.py:103} INFO - [2021-02-10 10:38:19,557] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:38:19,957] {logging_mixin.py:103} INFO - [2021-02-10 10:38:19,957] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:38:19,957] {logging_mixin.py:103} INFO - [2021-02-10 10:38:19,957] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:38:19,957] {logging_mixin.py:103} INFO - [2021-02-10 10:38:19,957] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:38:21,279] {logging_mixin.py:103} INFO - [2021-02-10 10:38:21,279] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:38:21,446] {logging_mixin.py:103} INFO - [2021-02-10 10:38:21,446] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:21,448] {logging_mixin.py:103} INFO - [2021-02-10 10:38:21,448] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:38:21,624] {logging_mixin.py:103} INFO - [2021-02-10 10:38:21,624] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:21,625] {logging_mixin.py:103} INFO - [2021-02-10 10:38:21,624] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:38:21,829] {logging_mixin.py:103} INFO - [2021-02-10 10:38:21,829] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:21,918] {logging_mixin.py:103} INFO - [2021-02-10 10:38:21,917] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:38:22,141] {logging_mixin.py:103} INFO - [2021-02-10 10:38:22,141] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:22,280] {logging_mixin.py:103} INFO - [2021-02-10 10:38:22,280] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:38:22,492] {logging_mixin.py:103} INFO - [2021-02-10 10:38:22,491] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:22,544] {logging_mixin.py:103} INFO - [2021-02-10 10:38:22,543] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:38:22,544] {logging_mixin.py:103} INFO - [2021-02-10 10:38:22,544] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:38:24,492] {logging_mixin.py:103} INFO - [2021-02-10 10:38:24,492] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:24,496] {logging_mixin.py:103} INFO - [2021-02-10 10:38:24,496] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:38:24,509] {logging_mixin.py:103} INFO - [2021-02-10 10:38:24,508] {data_context.py:1281} INFO - Setting run_name to: 20210210T093824.508851Z
[2021-02-10 10:38:24,510] {logging_mixin.py:103} INFO - [2021-02-10 10:38:24,510] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:38:24,519] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:38:24,519] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fbe1d5aa430>
[2021-02-10 10:38:24,520] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:38:24,520] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:38:24,522] {logging_mixin.py:103} INFO - [2021-02-10 10:38:24,522] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:38:24,693] {logging_mixin.py:103} INFO - [2021-02-10 10:38:24,692] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:24,694] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:38:24,695] {logging_mixin.py:103} INFO - [2021-02-10 10:38:24,695] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:38:25,301] {logging_mixin.py:103} INFO - [2021-02-10 10:38:25,301] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:25,302] {logging_mixin.py:103} INFO - [2021-02-10 10:38:25,301] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:38:25,304] {logging_mixin.py:103} INFO - [2021-02-10 10:38:25,304] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:38:25,535] {logging_mixin.py:103} INFO - [2021-02-10 10:38:25,535] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:25,538] {logging_mixin.py:103} INFO - [2021-02-10 10:38:25,538] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:38:25,695] {logging_mixin.py:103} INFO - [2021-02-10 10:38:25,695] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:25,698] {logging_mixin.py:103} INFO - [2021-02-10 10:38:25,698] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:38:25,878] {logging_mixin.py:103} INFO - [2021-02-10 10:38:25,878] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:25,878] {logging_mixin.py:103} INFO - [2021-02-10 10:38:25,878] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:38:25,899] {logging_mixin.py:103} INFO - [2021-02-10 10:38:25,898] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:38:25,900] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:38:25,900] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fbe1d5aa430>
[2021-02-10 10:38:25,900] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:38:25,900] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:38:25,903] {logging_mixin.py:103} INFO - [2021-02-10 10:38:25,902] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:38:26,103] {logging_mixin.py:103} INFO - [2021-02-10 10:38:26,103] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:26,104] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:38:26,105] {logging_mixin.py:103} INFO - [2021-02-10 10:38:26,105] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:38:26,326] {logging_mixin.py:103} INFO - [2021-02-10 10:38:26,326] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:26,326] {logging_mixin.py:103} INFO - [2021-02-10 10:38:26,326] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:38:26,329] {logging_mixin.py:103} INFO - [2021-02-10 10:38:26,329] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:38:26,513] {logging_mixin.py:103} INFO - [2021-02-10 10:38:26,513] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:26,516] {logging_mixin.py:103} INFO - [2021-02-10 10:38:26,515] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:38:26,752] {logging_mixin.py:103} INFO - [2021-02-10 10:38:26,752] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:26,755] {logging_mixin.py:103} INFO - [2021-02-10 10:38:26,754] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:38:26,899] {logging_mixin.py:103} INFO - [2021-02-10 10:38:26,899] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:26,901] {logging_mixin.py:103} INFO - [2021-02-10 10:38:26,901] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:38:27,092] {logging_mixin.py:103} INFO - [2021-02-10 10:38:27,092] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:27,092] {logging_mixin.py:103} INFO - [2021-02-10 10:38:27,092] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:38:27,097] {logging_mixin.py:103} INFO - [2021-02-10 10:38:27,096] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:38:27,254] {logging_mixin.py:103} INFO - [2021-02-10 10:38:27,254] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:27,266] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:38:27,266] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fbe1d5aa430>
[2021-02-10 10:38:27,266] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:38:27,267] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:38:27,268] {logging_mixin.py:103} INFO - [2021-02-10 10:38:27,268] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:38:27,444] {logging_mixin.py:103} INFO - [2021-02-10 10:38:27,444] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:27,445] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:38:27,447] {logging_mixin.py:103} INFO - [2021-02-10 10:38:27,447] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:38:27,643] {logging_mixin.py:103} INFO - [2021-02-10 10:38:27,643] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:27,643] {logging_mixin.py:103} INFO - [2021-02-10 10:38:27,643] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:38:27,644] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:38:27,645] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fbe1d5aac10>
[2021-02-10 10:38:27,645] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:38:27,647] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:38:27,649] {logging_mixin.py:103} INFO - [2021-02-10 10:38:27,649] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:38:27,826] {logging_mixin.py:103} INFO - [2021-02-10 10:38:27,826] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:27,827] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:38:27,829] {logging_mixin.py:103} INFO - [2021-02-10 10:38:27,829] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:38:27,990] {logging_mixin.py:103} INFO - [2021-02-10 10:38:27,990] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:27,990] {logging_mixin.py:103} INFO - [2021-02-10 10:38:27,990] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:38:27,991] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:38:27,992] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fbe1d5aac10>
[2021-02-10 10:38:27,992] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:38:27,993] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:38:27,996] {logging_mixin.py:103} INFO - [2021-02-10 10:38:27,995] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:38:28,204] {logging_mixin.py:103} INFO - [2021-02-10 10:38:28,204] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:28,205] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:38:28,206] {logging_mixin.py:103} INFO - [2021-02-10 10:38:28,206] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:38:28,393] {logging_mixin.py:103} INFO - [2021-02-10 10:38:28,393] {cursor.py:560} INFO - query execution done
[2021-02-10 10:38:28,394] {logging_mixin.py:103} INFO - [2021-02-10 10:38:28,394] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:38:34,671] {logging_mixin.py:103} INFO - {'validation_result': {
  "statistics": {
    "evaluated_expectations": 13,
    "successful_expectations": 6,
    "unsuccessful_expectations": 7,
    "success_percent": 46.15384615384615
  },
  "meta": {
    "great_expectations_version": "0.13.8+3.g9a8cbaf4.dirty",
    "expectation_suite_name": "taxisuite",
    "run_id": {
      "run_time": "2021-02-10T09:38:24.508851+00:00",
      "run_name": "20210210T093824.508851Z"
    },
    "batch_kwargs": {
      "table": "raw_monthly_taxi",
      "schema": "public",
      "data_asset_name": "raw_monthly_taxi",
      "datasource": "my_snowflake_db"
    },
    "batch_markers": {
      "ge_load_time": "20210210T093822.279749Z"
    },
    "batch_parameters": null,
    "validation_time": "20210210T093824.509523Z"
  },
  "results": [
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "meta": {},
      "result": {
        "observed_value": 18
      },
      "success": false,
      "expectation_config": {
        "kwargs": {
          "value": 19,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "meta": {},
        "expectation_type": "expect_table_column_count_to_equal"
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "meta": {},
      "result": {
        "observed_value": [
          "vendor_id",
          "pickup_date",
          "dropoff_date",
          "passenger_count",
          "trip_distance",
          "rate_code_id",
          "flag",
          "pickup_loc",
          "dropff_loc",
          "payment_type",
          "fare_amount",
          "extra",
          "mta_tax",
          "tip",
          "tolls",
          "improvement_surcharge",
          "total_amount",
          "congestion_surcharge"
        ],
        "details": {
          "mismatched": [
            {
              "Expected Column Position": 18,
              "Expected": "ge_validation_result",
              "Found": null
            }
          ]
        }
      },
      "success": false,
      "expectation_config": {
        "kwargs": {
          "column_list": [
            "vendor_id",
            "pickup_date",
            "dropoff_date",
            "passenger_count",
            "trip_distance",
            "rate_code_id",
            "flag",
            "pickup_loc",
            "dropff_loc",
            "payment_type",
            "fare_amount",
            "extra",
            "mta_tax",
            "tip",
            "tolls",
            "improvement_surcharge",
            "total_amount",
            "congestion_surcharge",
            "ge_validation_result"
          ],
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "meta": {},
        "expectation_type": "expect_table_columns_to_match_ordered_list"
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "meta": {},
      "result": {
        "element_count": 0,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "partial_unexpected_list": []
      },
      "success": true,
      "expectation_config": {
        "kwargs": {
          "column": "vendor_id",
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "meta": {},
        "expectation_type": "expect_column_values_to_not_be_null"
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "meta": {},
      "result": {
        "observed_value": [],
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null,
        "details": {
          "value_counts": []
        }
      },
      "success": true,
      "expectation_config": {
        "kwargs": {
          "column": "vendor_id",
          "value_set": [
            1,
            2,
            4
          ],
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "meta": {},
        "expectation_type": "expect_column_distinct_values_to_be_in_set"
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "meta": {},
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null,
        "details": {
          "observed_partition": {
            "values": [
              1,
              2,
              4
            ],
            "weights": [
              0.0,
              0.0,
              0.0
            ]
          },
          "expected_partition": {
            "values": [
              1,
              2,
              4
            ],
            "weights": [
              0.376,
              0.618,
              0.006
            ]
          }
        }
      },
      "success": false,
      "expectation_config": {
        "kwargs": {
          "column": "vendor_id",
          "partition_object": {
            "values": [
              1,
              2,
              4
            ],
            "weights": [
              0.376,
              0.618,
              0.006
            ]
          },
          "threshold": 0.6,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "meta": {},
        "expectation_type": "expect_column_kl_divergence_to_be_less_than"
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "meta": {},
      "result": {
        "element_count": 0,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "partial_unexpected_list": []
      },
      "success": true,
      "expectation_config": {
        "kwargs": {
          "column": "trip_distance",
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "meta": {},
        "expectation_type": "expect_column_values_to_not_be_null"
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "meta": {},
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null
      },
      "success": false,
      "expectation_config": {
        "kwargs": {
          "column": "trip_distance",
          "max_value": 1.0,
          "min_value": -1.0,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "meta": {},
        "expectation_type": "expect_column_min_to_be_between"
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "meta": {},
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null
      },
      "success": false,
      "expectation_config": {
        "kwargs": {
          "column": "trip_distance",
          "max_value": 3.99714,
          "min_value": 1.99714,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "meta": {},
        "expectation_type": "expect_column_mean_to_be_between"
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "meta": {},
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null
      },
      "success": false,
      "expectation_config": {
        "kwargs": {
          "column": "trip_distance",
          "max_value": 2.595,
          "min_value": 0.5950000000000002,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "meta": {},
        "expectation_type": "expect_column_median_to_be_between"
      }
    },
    {
      "exception_info": {
        "raised_exception": true,
        "exception_message": "TypeError: '<=' not supported between instances of 'float' and 'NoneType'",
        "exception_traceback": "Traceback (most recent call last):\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/data_asset/data_asset.py\", line 262, in wrapper\n    return_obj = func(self, **evaluation_args)\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/dataset/dataset.py\", line 155, in inner_wrapper\n    evaluation_result = func(self, *args, **kwargs)\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/dataset/dataset.py\", line 2937, in expect_column_quantile_values_to_be_between\n    success_details = [\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/dataset/dataset.py\", line 2938, in <listcomp>\n    range_[0] <= quantile_vals[idx] <= range_[1]\nTypeError: '<=' not supported between instances of 'float' and 'NoneType'\n"
      },
      "meta": {},
      "result": {},
      "success": false,
      "expectation_config": {
        "kwargs": {
          "allow_relative_error": false,
          "column": "trip_distance",
          "quantile_ranges": {
            "quantiles": [
              0.05,
              0.25,
              0.5,
              0.75,
              0.95
            ],
            "value_ranges": [
              [
                -0.53,
                1.47
              ],
              [
                -0.050000000000000044,
                1.95
              ],
              [
                0.5900000000000001,
                2.59
              ],
              [
                1.9,
                3.9
              ],
              [
                10.21,
                12.21
              ]
            ]
          },
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "meta": {},
        "expectation_type": "expect_column_quantile_values_to_be_between"
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "meta": {},
      "result": {
        "element_count": 0,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "partial_unexpected_list": []
      },
      "success": true,
      "expectation_config": {
        "kwargs": {
          "column": "pickup_date",
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "meta": {},
        "expectation_type": "expect_column_values_to_not_be_null"
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "meta": {},
      "result": {
        "element_count": 0,
        "missing_count": 0,
        "missing_percent": null,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "unexpected_percent_nonmissing": null,
        "partial_unexpected_list": [],
        "partial_unexpected_index_list": null,
        "partial_unexpected_counts": []
      },
      "success": true,
      "expectation_config": {
        "kwargs": {
          "column": "pickup_date",
          "max_value": "2020-03-27 00:00:00",
          "min_value": "2018-03-01 00:00:00",
          "parse_strings_as_datetimes": true,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "meta": {},
        "expectation_type": "expect_column_values_to_be_between"
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "meta": {},
      "result": {
        "element_count": 0,
        "missing_count": 0,
        "missing_percent": null,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "unexpected_percent_nonmissing": null,
        "partial_unexpected_list": [],
        "partial_unexpected_index_list": null,
        "partial_unexpected_counts": []
      },
      "success": true,
      "expectation_config": {
        "kwargs": {
          "column": "passenger_count",
          "max_value": 6,
          "min_value": 1,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "meta": {},
        "expectation_type": "expect_column_values_to_be_between"
      }
    }
  ],
  "success": false,
  "evaluation_parameters": {}
}, 'actions_results': {'store_validation_result': {'class': 'StoreValidationResultAction'}, 'store_evaluation_params': {'class': 'StoreEvaluationParametersAction'}, 'update_data_docs': {'local_site': 'file:///Users/sara/airflow/dags/demo/great_expectations/uncommitted/data_docs/local_site/validations/taxisuite/20210210T093824.508851Z/20210210T093824.508851Z/b2e8a19be6c44cbb814773567bfc0573.html', 'class': 'UpdateDataDocsAction'}}}
[2021-02-10 10:38:34,682] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:39:07,682] {scheduler_job.py:181} INFO - Started process (PID=67843) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:39:07,683] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:39:07,683] {logging_mixin.py:103} INFO - [2021-02-10 10:39:07,683] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:39:09,449] {logging_mixin.py:103} INFO - [2021-02-10 10:39:09,449] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:39:09,747] {logging_mixin.py:103} INFO - [2021-02-10 10:39:09,747] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:39:10,130] {logging_mixin.py:103} INFO - [2021-02-10 10:39:10,130] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:39:10,130] {logging_mixin.py:103} INFO - [2021-02-10 10:39:10,130] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:39:10,130] {logging_mixin.py:103} INFO - [2021-02-10 10:39:10,130] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:39:11,590] {logging_mixin.py:103} INFO - [2021-02-10 10:39:11,590] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:39:11,774] {logging_mixin.py:103} INFO - [2021-02-10 10:39:11,774] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:11,776] {logging_mixin.py:103} INFO - [2021-02-10 10:39:11,776] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:39:11,927] {logging_mixin.py:103} INFO - [2021-02-10 10:39:11,927] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:11,928] {logging_mixin.py:103} INFO - [2021-02-10 10:39:11,927] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:39:12,080] {logging_mixin.py:103} INFO - [2021-02-10 10:39:12,080] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:12,183] {logging_mixin.py:103} INFO - [2021-02-10 10:39:12,183] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:39:12,332] {logging_mixin.py:103} INFO - [2021-02-10 10:39:12,332] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:12,472] {logging_mixin.py:103} INFO - [2021-02-10 10:39:12,471] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:39:12,659] {logging_mixin.py:103} INFO - [2021-02-10 10:39:12,658] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:12,706] {logging_mixin.py:103} INFO - [2021-02-10 10:39:12,706] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:39:12,707] {logging_mixin.py:103} INFO - [2021-02-10 10:39:12,707] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:39:15,060] {logging_mixin.py:103} INFO - [2021-02-10 10:39:15,059] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:15,063] {logging_mixin.py:103} INFO - [2021-02-10 10:39:15,063] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:39:15,074] {logging_mixin.py:103} INFO - [2021-02-10 10:39:15,074] {data_context.py:1281} INFO - Setting run_name to: 20210210T093915.074247Z
[2021-02-10 10:39:15,075] {logging_mixin.py:103} INFO - [2021-02-10 10:39:15,075] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:39:15,084] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:39:15,084] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f80535aa430>
[2021-02-10 10:39:15,084] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:39:15,084] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:39:15,086] {logging_mixin.py:103} INFO - [2021-02-10 10:39:15,086] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:39:15,393] {logging_mixin.py:103} INFO - [2021-02-10 10:39:15,393] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:15,394] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:39:15,396] {logging_mixin.py:103} INFO - [2021-02-10 10:39:15,396] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:39:15,679] {logging_mixin.py:103} INFO - [2021-02-10 10:39:15,679] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:15,680] {logging_mixin.py:103} INFO - [2021-02-10 10:39:15,680] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:39:15,682] {logging_mixin.py:103} INFO - [2021-02-10 10:39:15,682] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:39:15,886] {logging_mixin.py:103} INFO - [2021-02-10 10:39:15,886] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:15,889] {logging_mixin.py:103} INFO - [2021-02-10 10:39:15,889] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:39:16,078] {logging_mixin.py:103} INFO - [2021-02-10 10:39:16,078] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:16,081] {logging_mixin.py:103} INFO - [2021-02-10 10:39:16,081] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:39:16,240] {logging_mixin.py:103} INFO - [2021-02-10 10:39:16,240] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:16,240] {logging_mixin.py:103} INFO - [2021-02-10 10:39:16,240] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:39:16,258] {logging_mixin.py:103} INFO - [2021-02-10 10:39:16,257] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:39:16,258] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:39:16,259] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f80535aa430>
[2021-02-10 10:39:16,259] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:39:16,259] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:39:16,261] {logging_mixin.py:103} INFO - [2021-02-10 10:39:16,260] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:39:16,457] {logging_mixin.py:103} INFO - [2021-02-10 10:39:16,457] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:16,458] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:39:16,460] {logging_mixin.py:103} INFO - [2021-02-10 10:39:16,460] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:39:16,634] {logging_mixin.py:103} INFO - [2021-02-10 10:39:16,634] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:16,634] {logging_mixin.py:103} INFO - [2021-02-10 10:39:16,634] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:39:16,638] {logging_mixin.py:103} INFO - [2021-02-10 10:39:16,638] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:39:16,829] {logging_mixin.py:103} INFO - [2021-02-10 10:39:16,829] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:16,831] {logging_mixin.py:103} INFO - [2021-02-10 10:39:16,831] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:39:17,000] {logging_mixin.py:103} INFO - [2021-02-10 10:39:17,000] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:17,004] {logging_mixin.py:103} INFO - [2021-02-10 10:39:17,004] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:39:17,237] {logging_mixin.py:103} INFO - [2021-02-10 10:39:17,236] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:17,239] {logging_mixin.py:103} INFO - [2021-02-10 10:39:17,239] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:39:17,418] {logging_mixin.py:103} INFO - [2021-02-10 10:39:17,418] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:17,419] {logging_mixin.py:103} INFO - [2021-02-10 10:39:17,419] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:39:17,423] {logging_mixin.py:103} INFO - [2021-02-10 10:39:17,423] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:39:17,619] {logging_mixin.py:103} INFO - [2021-02-10 10:39:17,619] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:17,629] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:39:17,630] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f80535aa430>
[2021-02-10 10:39:17,630] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:39:17,630] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:39:17,632] {logging_mixin.py:103} INFO - [2021-02-10 10:39:17,632] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:39:17,809] {logging_mixin.py:103} INFO - [2021-02-10 10:39:17,809] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:17,810] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:39:17,811] {logging_mixin.py:103} INFO - [2021-02-10 10:39:17,811] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:39:18,061] {logging_mixin.py:103} INFO - [2021-02-10 10:39:18,061] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:18,061] {logging_mixin.py:103} INFO - [2021-02-10 10:39:18,061] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:39:18,062] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:39:18,063] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f80535aac10>
[2021-02-10 10:39:18,063] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:39:18,065] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:39:18,066] {logging_mixin.py:103} INFO - [2021-02-10 10:39:18,066] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:39:18,259] {logging_mixin.py:103} INFO - [2021-02-10 10:39:18,258] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:18,260] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:39:18,261] {logging_mixin.py:103} INFO - [2021-02-10 10:39:18,261] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:39:18,426] {logging_mixin.py:103} INFO - [2021-02-10 10:39:18,426] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:18,427] {logging_mixin.py:103} INFO - [2021-02-10 10:39:18,426] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:39:18,428] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:39:18,428] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f80535aac10>
[2021-02-10 10:39:18,428] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:39:18,429] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:39:18,432] {logging_mixin.py:103} INFO - [2021-02-10 10:39:18,431] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:39:18,641] {logging_mixin.py:103} INFO - [2021-02-10 10:39:18,641] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:18,643] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:39:18,644] {logging_mixin.py:103} INFO - [2021-02-10 10:39:18,644] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:39:18,805] {logging_mixin.py:103} INFO - [2021-02-10 10:39:18,805] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:18,806] {logging_mixin.py:103} INFO - [2021-02-10 10:39:18,806] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:39:24,063] {logging_mixin.py:103} INFO - {'validation_result': {
  "meta": {
    "great_expectations_version": "0.13.8+3.g9a8cbaf4.dirty",
    "expectation_suite_name": "taxisuite",
    "run_id": {
      "run_time": "2021-02-10T09:39:15.074247+00:00",
      "run_name": "20210210T093915.074247Z"
    },
    "batch_kwargs": {
      "table": "raw_monthly_taxi",
      "schema": "public",
      "data_asset_name": "raw_monthly_taxi",
      "datasource": "my_snowflake_db"
    },
    "batch_markers": {
      "ge_load_time": "20210210T093912.471199Z"
    },
    "batch_parameters": null,
    "validation_time": "20210210T093915.074883Z"
  },
  "statistics": {
    "evaluated_expectations": 13,
    "successful_expectations": 6,
    "unsuccessful_expectations": 7,
    "success_percent": 46.15384615384615
  },
  "results": [
    {
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "observed_value": 18
      },
      "expectation_config": {
        "expectation_type": "expect_table_column_count_to_equal",
        "meta": {},
        "kwargs": {
          "value": 19,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "success": false
    },
    {
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "observed_value": [
          "vendor_id",
          "pickup_date",
          "dropoff_date",
          "passenger_count",
          "trip_distance",
          "rate_code_id",
          "flag",
          "pickup_loc",
          "dropff_loc",
          "payment_type",
          "fare_amount",
          "extra",
          "mta_tax",
          "tip",
          "tolls",
          "improvement_surcharge",
          "total_amount",
          "congestion_surcharge"
        ],
        "details": {
          "mismatched": [
            {
              "Expected Column Position": 18,
              "Expected": "ge_validation_result",
              "Found": null
            }
          ]
        }
      },
      "expectation_config": {
        "expectation_type": "expect_table_columns_to_match_ordered_list",
        "meta": {},
        "kwargs": {
          "column_list": [
            "vendor_id",
            "pickup_date",
            "dropoff_date",
            "passenger_count",
            "trip_distance",
            "rate_code_id",
            "flag",
            "pickup_loc",
            "dropff_loc",
            "payment_type",
            "fare_amount",
            "extra",
            "mta_tax",
            "tip",
            "tolls",
            "improvement_surcharge",
            "total_amount",
            "congestion_surcharge",
            "ge_validation_result"
          ],
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "success": false
    },
    {
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "element_count": 0,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "partial_unexpected_list": []
      },
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "meta": {},
        "kwargs": {
          "column": "vendor_id",
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "success": true
    },
    {
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "observed_value": [],
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null,
        "details": {
          "value_counts": []
        }
      },
      "expectation_config": {
        "expectation_type": "expect_column_distinct_values_to_be_in_set",
        "meta": {},
        "kwargs": {
          "column": "vendor_id",
          "value_set": [
            1,
            2,
            4
          ],
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "success": true
    },
    {
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null,
        "details": {
          "observed_partition": {
            "values": [
              1,
              2,
              4
            ],
            "weights": [
              0.0,
              0.0,
              0.0
            ]
          },
          "expected_partition": {
            "values": [
              1,
              2,
              4
            ],
            "weights": [
              0.376,
              0.618,
              0.006
            ]
          }
        }
      },
      "expectation_config": {
        "expectation_type": "expect_column_kl_divergence_to_be_less_than",
        "meta": {},
        "kwargs": {
          "column": "vendor_id",
          "partition_object": {
            "values": [
              1,
              2,
              4
            ],
            "weights": [
              0.376,
              0.618,
              0.006
            ]
          },
          "threshold": 0.6,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "success": false
    },
    {
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "element_count": 0,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "partial_unexpected_list": []
      },
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "meta": {},
        "kwargs": {
          "column": "trip_distance",
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "success": true
    },
    {
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null
      },
      "expectation_config": {
        "expectation_type": "expect_column_min_to_be_between",
        "meta": {},
        "kwargs": {
          "column": "trip_distance",
          "max_value": 1.0,
          "min_value": -1.0,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "success": false
    },
    {
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null
      },
      "expectation_config": {
        "expectation_type": "expect_column_mean_to_be_between",
        "meta": {},
        "kwargs": {
          "column": "trip_distance",
          "max_value": 3.99714,
          "min_value": 1.99714,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "success": false
    },
    {
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null
      },
      "expectation_config": {
        "expectation_type": "expect_column_median_to_be_between",
        "meta": {},
        "kwargs": {
          "column": "trip_distance",
          "max_value": 2.595,
          "min_value": 0.5950000000000002,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "success": false
    },
    {
      "meta": {},
      "exception_info": {
        "raised_exception": true,
        "exception_message": "TypeError: '<=' not supported between instances of 'float' and 'NoneType'",
        "exception_traceback": "Traceback (most recent call last):\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/data_asset/data_asset.py\", line 262, in wrapper\n    return_obj = func(self, **evaluation_args)\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/dataset/dataset.py\", line 155, in inner_wrapper\n    evaluation_result = func(self, *args, **kwargs)\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/dataset/dataset.py\", line 2937, in expect_column_quantile_values_to_be_between\n    success_details = [\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/dataset/dataset.py\", line 2938, in <listcomp>\n    range_[0] <= quantile_vals[idx] <= range_[1]\nTypeError: '<=' not supported between instances of 'float' and 'NoneType'\n"
      },
      "result": {},
      "expectation_config": {
        "expectation_type": "expect_column_quantile_values_to_be_between",
        "meta": {},
        "kwargs": {
          "allow_relative_error": false,
          "column": "trip_distance",
          "quantile_ranges": {
            "quantiles": [
              0.05,
              0.25,
              0.5,
              0.75,
              0.95
            ],
            "value_ranges": [
              [
                -0.53,
                1.47
              ],
              [
                -0.050000000000000044,
                1.95
              ],
              [
                0.5900000000000001,
                2.59
              ],
              [
                1.9,
                3.9
              ],
              [
                10.21,
                12.21
              ]
            ]
          },
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "success": false
    },
    {
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "element_count": 0,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "partial_unexpected_list": []
      },
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "meta": {},
        "kwargs": {
          "column": "pickup_date",
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "success": true
    },
    {
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "element_count": 0,
        "missing_count": 0,
        "missing_percent": null,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "unexpected_percent_nonmissing": null,
        "partial_unexpected_list": [],
        "partial_unexpected_index_list": null,
        "partial_unexpected_counts": []
      },
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "meta": {},
        "kwargs": {
          "column": "pickup_date",
          "max_value": "2020-03-27 00:00:00",
          "min_value": "2018-03-01 00:00:00",
          "parse_strings_as_datetimes": true,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "success": true
    },
    {
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "element_count": 0,
        "missing_count": 0,
        "missing_percent": null,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "unexpected_percent_nonmissing": null,
        "partial_unexpected_list": [],
        "partial_unexpected_index_list": null,
        "partial_unexpected_counts": []
      },
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "meta": {},
        "kwargs": {
          "column": "passenger_count",
          "max_value": 6,
          "min_value": 1,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "success": true
    }
  ],
  "evaluation_parameters": {},
  "success": false
}, 'actions_results': {'store_validation_result': {'class': 'StoreValidationResultAction'}, 'store_evaluation_params': {'class': 'StoreEvaluationParametersAction'}, 'update_data_docs': {'local_site': 'file:///Users/sara/airflow/dags/demo/great_expectations/uncommitted/data_docs/local_site/validations/taxisuite/20210210T093915.074247Z/20210210T093915.074247Z/b2e8a19be6c44cbb814773567bfc0573.html', 'class': 'UpdateDataDocsAction'}}}
[2021-02-10 10:39:24,074] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:39:51,633] {scheduler_job.py:181} INFO - Started process (PID=67904) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:39:51,633] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:39:51,634] {logging_mixin.py:103} INFO - [2021-02-10 10:39:51,634] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:39:53,515] {logging_mixin.py:103} INFO - [2021-02-10 10:39:53,515] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:39:53,859] {logging_mixin.py:103} INFO - [2021-02-10 10:39:53,859] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:39:54,228] {logging_mixin.py:103} INFO - [2021-02-10 10:39:54,228] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:39:54,228] {logging_mixin.py:103} INFO - [2021-02-10 10:39:54,228] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:39:54,228] {logging_mixin.py:103} INFO - [2021-02-10 10:39:54,228] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:39:55,323] {logging_mixin.py:103} INFO - [2021-02-10 10:39:55,323] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:39:55,468] {logging_mixin.py:103} INFO - [2021-02-10 10:39:55,468] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:55,470] {logging_mixin.py:103} INFO - [2021-02-10 10:39:55,470] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:39:55,620] {logging_mixin.py:103} INFO - [2021-02-10 10:39:55,620] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:55,621] {logging_mixin.py:103} INFO - [2021-02-10 10:39:55,621] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:39:55,753] {logging_mixin.py:103} INFO - [2021-02-10 10:39:55,753] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:55,846] {logging_mixin.py:103} INFO - [2021-02-10 10:39:55,846] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:39:56,033] {logging_mixin.py:103} INFO - [2021-02-10 10:39:56,033] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:56,157] {logging_mixin.py:103} INFO - [2021-02-10 10:39:56,157] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:39:56,343] {logging_mixin.py:103} INFO - [2021-02-10 10:39:56,343] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:56,398] {logging_mixin.py:103} INFO - [2021-02-10 10:39:56,398] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:39:56,398] {logging_mixin.py:103} INFO - [2021-02-10 10:39:56,398] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:39:58,075] {logging_mixin.py:103} INFO - [2021-02-10 10:39:58,075] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:58,078] {logging_mixin.py:103} INFO - [2021-02-10 10:39:58,078] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:39:58,090] {logging_mixin.py:103} INFO - [2021-02-10 10:39:58,090] {data_context.py:1281} INFO - Setting run_name to: 20210210T093958.090599Z
[2021-02-10 10:39:58,092] {logging_mixin.py:103} INFO - [2021-02-10 10:39:58,091] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:39:58,101] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:39:58,102] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f8eb846b430>
[2021-02-10 10:39:58,102] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:39:58,102] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:39:58,104] {logging_mixin.py:103} INFO - [2021-02-10 10:39:58,104] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:39:58,270] {logging_mixin.py:103} INFO - [2021-02-10 10:39:58,270] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:58,271] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:39:58,272] {logging_mixin.py:103} INFO - [2021-02-10 10:39:58,272] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:39:58,429] {logging_mixin.py:103} INFO - [2021-02-10 10:39:58,429] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:58,430] {logging_mixin.py:103} INFO - [2021-02-10 10:39:58,430] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:39:58,432] {logging_mixin.py:103} INFO - [2021-02-10 10:39:58,432] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:39:58,649] {logging_mixin.py:103} INFO - [2021-02-10 10:39:58,648] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:58,651] {logging_mixin.py:103} INFO - [2021-02-10 10:39:58,651] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:39:58,819] {logging_mixin.py:103} INFO - [2021-02-10 10:39:58,819] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:58,822] {logging_mixin.py:103} INFO - [2021-02-10 10:39:58,822] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:39:59,022] {logging_mixin.py:103} INFO - [2021-02-10 10:39:59,021] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:59,022] {logging_mixin.py:103} INFO - [2021-02-10 10:39:59,022] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:39:59,040] {logging_mixin.py:103} INFO - [2021-02-10 10:39:59,040] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:39:59,041] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:39:59,041] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f8eb846b430>
[2021-02-10 10:39:59,041] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:39:59,041] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:39:59,043] {logging_mixin.py:103} INFO - [2021-02-10 10:39:59,043] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:39:59,213] {logging_mixin.py:103} INFO - [2021-02-10 10:39:59,213] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:59,214] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:39:59,215] {logging_mixin.py:103} INFO - [2021-02-10 10:39:59,215] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:39:59,399] {logging_mixin.py:103} INFO - [2021-02-10 10:39:59,399] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:59,400] {logging_mixin.py:103} INFO - [2021-02-10 10:39:59,400] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:39:59,403] {logging_mixin.py:103} INFO - [2021-02-10 10:39:59,403] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:39:59,589] {logging_mixin.py:103} INFO - [2021-02-10 10:39:59,589] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:59,590] {logging_mixin.py:103} INFO - [2021-02-10 10:39:59,590] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:39:59,780] {logging_mixin.py:103} INFO - [2021-02-10 10:39:59,779] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:59,782] {logging_mixin.py:103} INFO - [2021-02-10 10:39:59,781] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:39:59,984] {logging_mixin.py:103} INFO - [2021-02-10 10:39:59,984] {cursor.py:560} INFO - query execution done
[2021-02-10 10:39:59,986] {logging_mixin.py:103} INFO - [2021-02-10 10:39:59,986] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:40:00,175] {logging_mixin.py:103} INFO - [2021-02-10 10:40:00,175] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:00,176] {logging_mixin.py:103} INFO - [2021-02-10 10:40:00,176] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:40:00,180] {logging_mixin.py:103} INFO - [2021-02-10 10:40:00,180] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:40:00,367] {logging_mixin.py:103} INFO - [2021-02-10 10:40:00,367] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:00,376] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:40:00,376] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f8eb846b430>
[2021-02-10 10:40:00,376] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:40:00,377] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:40:00,383] {logging_mixin.py:103} INFO - [2021-02-10 10:40:00,383] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:40:00,562] {logging_mixin.py:103} INFO - [2021-02-10 10:40:00,562] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:00,563] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:40:00,565] {logging_mixin.py:103} INFO - [2021-02-10 10:40:00,565] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:40:00,758] {logging_mixin.py:103} INFO - [2021-02-10 10:40:00,758] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:00,759] {logging_mixin.py:103} INFO - [2021-02-10 10:40:00,759] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:40:00,760] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:40:00,760] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f8eb846bc10>
[2021-02-10 10:40:00,760] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:40:00,763] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:40:00,764] {logging_mixin.py:103} INFO - [2021-02-10 10:40:00,764] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:40:01,458] {logging_mixin.py:103} INFO - [2021-02-10 10:40:01,458] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:01,459] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:40:01,461] {logging_mixin.py:103} INFO - [2021-02-10 10:40:01,461] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:40:02,378] {logging_mixin.py:103} INFO - [2021-02-10 10:40:02,378] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:02,379] {logging_mixin.py:103} INFO - [2021-02-10 10:40:02,379] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:40:02,380] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:40:02,381] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f8eb846bc10>
[2021-02-10 10:40:02,381] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:40:02,382] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:40:02,385] {logging_mixin.py:103} INFO - [2021-02-10 10:40:02,385] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:40:02,582] {logging_mixin.py:103} INFO - [2021-02-10 10:40:02,581] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:02,583] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:40:02,584] {logging_mixin.py:103} INFO - [2021-02-10 10:40:02,584] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:40:02,849] {logging_mixin.py:103} INFO - [2021-02-10 10:40:02,848] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:02,850] {logging_mixin.py:103} INFO - [2021-02-10 10:40:02,849] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:40:08,881] {logging_mixin.py:103} INFO - {'validation_result': {
  "statistics": {
    "evaluated_expectations": 13,
    "successful_expectations": 6,
    "unsuccessful_expectations": 7,
    "success_percent": 46.15384615384615
  },
  "evaluation_parameters": {},
  "results": [
    {
      "expectation_config": {
        "expectation_type": "expect_table_column_count_to_equal",
        "meta": {},
        "kwargs": {
          "value": 19,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "observed_value": 18
      },
      "meta": {},
      "success": false
    },
    {
      "expectation_config": {
        "expectation_type": "expect_table_columns_to_match_ordered_list",
        "meta": {},
        "kwargs": {
          "column_list": [
            "vendor_id",
            "pickup_date",
            "dropoff_date",
            "passenger_count",
            "trip_distance",
            "rate_code_id",
            "flag",
            "pickup_loc",
            "dropff_loc",
            "payment_type",
            "fare_amount",
            "extra",
            "mta_tax",
            "tip",
            "tolls",
            "improvement_surcharge",
            "total_amount",
            "congestion_surcharge",
            "ge_validation_result"
          ],
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "observed_value": [
          "vendor_id",
          "pickup_date",
          "dropoff_date",
          "passenger_count",
          "trip_distance",
          "rate_code_id",
          "flag",
          "pickup_loc",
          "dropff_loc",
          "payment_type",
          "fare_amount",
          "extra",
          "mta_tax",
          "tip",
          "tolls",
          "improvement_surcharge",
          "total_amount",
          "congestion_surcharge"
        ],
        "details": {
          "mismatched": [
            {
              "Expected Column Position": 18,
              "Expected": "ge_validation_result",
              "Found": null
            }
          ]
        }
      },
      "meta": {},
      "success": false
    },
    {
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "meta": {},
        "kwargs": {
          "column": "vendor_id",
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "element_count": 0,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "partial_unexpected_list": []
      },
      "meta": {},
      "success": true
    },
    {
      "expectation_config": {
        "expectation_type": "expect_column_distinct_values_to_be_in_set",
        "meta": {},
        "kwargs": {
          "column": "vendor_id",
          "value_set": [
            1,
            2,
            4
          ],
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "observed_value": [],
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null,
        "details": {
          "value_counts": []
        }
      },
      "meta": {},
      "success": true
    },
    {
      "expectation_config": {
        "expectation_type": "expect_column_kl_divergence_to_be_less_than",
        "meta": {},
        "kwargs": {
          "column": "vendor_id",
          "partition_object": {
            "values": [
              1,
              2,
              4
            ],
            "weights": [
              0.376,
              0.618,
              0.006
            ]
          },
          "threshold": 0.6,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null,
        "details": {
          "observed_partition": {
            "values": [
              1,
              2,
              4
            ],
            "weights": [
              0.0,
              0.0,
              0.0
            ]
          },
          "expected_partition": {
            "values": [
              1,
              2,
              4
            ],
            "weights": [
              0.376,
              0.618,
              0.006
            ]
          }
        }
      },
      "meta": {},
      "success": false
    },
    {
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "meta": {},
        "kwargs": {
          "column": "trip_distance",
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "element_count": 0,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "partial_unexpected_list": []
      },
      "meta": {},
      "success": true
    },
    {
      "expectation_config": {
        "expectation_type": "expect_column_min_to_be_between",
        "meta": {},
        "kwargs": {
          "column": "trip_distance",
          "max_value": 1.0,
          "min_value": -1.0,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null
      },
      "meta": {},
      "success": false
    },
    {
      "expectation_config": {
        "expectation_type": "expect_column_mean_to_be_between",
        "meta": {},
        "kwargs": {
          "column": "trip_distance",
          "max_value": 3.99714,
          "min_value": 1.99714,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null
      },
      "meta": {},
      "success": false
    },
    {
      "expectation_config": {
        "expectation_type": "expect_column_median_to_be_between",
        "meta": {},
        "kwargs": {
          "column": "trip_distance",
          "max_value": 2.595,
          "min_value": 0.5950000000000002,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null
      },
      "meta": {},
      "success": false
    },
    {
      "expectation_config": {
        "expectation_type": "expect_column_quantile_values_to_be_between",
        "meta": {},
        "kwargs": {
          "allow_relative_error": false,
          "column": "trip_distance",
          "quantile_ranges": {
            "quantiles": [
              0.05,
              0.25,
              0.5,
              0.75,
              0.95
            ],
            "value_ranges": [
              [
                -0.53,
                1.47
              ],
              [
                -0.050000000000000044,
                1.95
              ],
              [
                0.5900000000000001,
                2.59
              ],
              [
                1.9,
                3.9
              ],
              [
                10.21,
                12.21
              ]
            ]
          },
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "exception_info": {
        "raised_exception": true,
        "exception_message": "TypeError: '<=' not supported between instances of 'float' and 'NoneType'",
        "exception_traceback": "Traceback (most recent call last):\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/data_asset/data_asset.py\", line 262, in wrapper\n    return_obj = func(self, **evaluation_args)\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/dataset/dataset.py\", line 155, in inner_wrapper\n    evaluation_result = func(self, *args, **kwargs)\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/dataset/dataset.py\", line 2937, in expect_column_quantile_values_to_be_between\n    success_details = [\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/dataset/dataset.py\", line 2938, in <listcomp>\n    range_[0] <= quantile_vals[idx] <= range_[1]\nTypeError: '<=' not supported between instances of 'float' and 'NoneType'\n"
      },
      "result": {},
      "meta": {},
      "success": false
    },
    {
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "meta": {},
        "kwargs": {
          "column": "pickup_date",
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "element_count": 0,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "partial_unexpected_list": []
      },
      "meta": {},
      "success": true
    },
    {
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "meta": {},
        "kwargs": {
          "column": "pickup_date",
          "max_value": "2020-03-27 00:00:00",
          "min_value": "2018-03-01 00:00:00",
          "parse_strings_as_datetimes": true,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "element_count": 0,
        "missing_count": 0,
        "missing_percent": null,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "unexpected_percent_nonmissing": null,
        "partial_unexpected_list": [],
        "partial_unexpected_index_list": null,
        "partial_unexpected_counts": []
      },
      "meta": {},
      "success": true
    },
    {
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "meta": {},
        "kwargs": {
          "column": "passenger_count",
          "max_value": 6,
          "min_value": 1,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "element_count": 0,
        "missing_count": 0,
        "missing_percent": null,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "unexpected_percent_nonmissing": null,
        "partial_unexpected_list": [],
        "partial_unexpected_index_list": null,
        "partial_unexpected_counts": []
      },
      "meta": {},
      "success": true
    }
  ],
  "meta": {
    "great_expectations_version": "0.13.8+3.g9a8cbaf4.dirty",
    "expectation_suite_name": "taxisuite",
    "run_id": {
      "run_time": "2021-02-10T09:39:58.090599+00:00",
      "run_name": "20210210T093958.090599Z"
    },
    "batch_kwargs": {
      "table": "raw_monthly_taxi",
      "schema": "public",
      "data_asset_name": "raw_monthly_taxi",
      "datasource": "my_snowflake_db"
    },
    "batch_markers": {
      "ge_load_time": "20210210T093956.156165Z"
    },
    "batch_parameters": null,
    "validation_time": "20210210T093958.091319Z"
  },
  "success": false
}, 'actions_results': {'store_validation_result': {'class': 'StoreValidationResultAction'}, 'store_evaluation_params': {'class': 'StoreEvaluationParametersAction'}, 'update_data_docs': {'local_site': 'file:///Users/sara/airflow/dags/demo/great_expectations/uncommitted/data_docs/local_site/validations/taxisuite/20210210T093958.090599Z/20210210T093958.090599Z/b2e8a19be6c44cbb814773567bfc0573.html', 'class': 'UpdateDataDocsAction'}}}
[2021-02-10 10:40:08,909] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:40:40,829] {scheduler_job.py:181} INFO - Started process (PID=67963) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:40:40,830] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:40:40,831] {logging_mixin.py:103} INFO - [2021-02-10 10:40:40,831] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:40:44,136] {logging_mixin.py:103} INFO - [2021-02-10 10:40:44,136] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:40:44,623] {logging_mixin.py:103} INFO - [2021-02-10 10:40:44,623] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:40:45,407] {logging_mixin.py:103} INFO - [2021-02-10 10:40:45,407] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:40:45,408] {logging_mixin.py:103} INFO - [2021-02-10 10:40:45,408] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:40:45,408] {logging_mixin.py:103} INFO - [2021-02-10 10:40:45,408] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:40:46,938] {logging_mixin.py:103} INFO - [2021-02-10 10:40:46,938] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:40:47,286] {logging_mixin.py:103} INFO - [2021-02-10 10:40:47,285] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:47,286] {logging_mixin.py:103} INFO - [2021-02-10 10:40:47,286] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:40:47,554] {logging_mixin.py:103} INFO - [2021-02-10 10:40:47,554] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:47,554] {logging_mixin.py:103} INFO - [2021-02-10 10:40:47,554] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:40:47,826] {logging_mixin.py:103} INFO - [2021-02-10 10:40:47,826] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:47,921] {logging_mixin.py:103} INFO - [2021-02-10 10:40:47,921] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:40:48,090] {logging_mixin.py:103} INFO - [2021-02-10 10:40:48,090] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:48,302] {logging_mixin.py:103} INFO - [2021-02-10 10:40:48,302] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:40:48,513] {logging_mixin.py:103} INFO - [2021-02-10 10:40:48,513] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:48,557] {logging_mixin.py:103} INFO - [2021-02-10 10:40:48,557] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:40:48,557] {logging_mixin.py:103} INFO - [2021-02-10 10:40:48,557] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:40:54,901] {logging_mixin.py:103} INFO - [2021-02-10 10:40:54,901] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:54,903] {logging_mixin.py:103} INFO - [2021-02-10 10:40:54,903] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:40:54,913] {logging_mixin.py:103} INFO - [2021-02-10 10:40:54,913] {data_context.py:1281} INFO - Setting run_name to: 20210210T094054.913422Z
[2021-02-10 10:40:54,914] {logging_mixin.py:103} INFO - [2021-02-10 10:40:54,914] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:40:54,932] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:40:54,932] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fde1cd6b430>
[2021-02-10 10:40:54,932] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:40:54,933] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:40:54,935] {logging_mixin.py:103} INFO - [2021-02-10 10:40:54,935] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:40:55,144] {logging_mixin.py:103} INFO - [2021-02-10 10:40:55,143] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:55,144] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:40:55,145] {logging_mixin.py:103} INFO - [2021-02-10 10:40:55,145] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:40:55,432] {logging_mixin.py:103} INFO - [2021-02-10 10:40:55,432] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:55,432] {logging_mixin.py:103} INFO - [2021-02-10 10:40:55,432] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:40:55,434] {logging_mixin.py:103} INFO - [2021-02-10 10:40:55,434] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:40:55,621] {logging_mixin.py:103} INFO - [2021-02-10 10:40:55,621] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:55,623] {logging_mixin.py:103} INFO - [2021-02-10 10:40:55,623] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:40:55,827] {logging_mixin.py:103} INFO - [2021-02-10 10:40:55,826] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:55,829] {logging_mixin.py:103} INFO - [2021-02-10 10:40:55,829] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:40:56,750] {logging_mixin.py:103} INFO - [2021-02-10 10:40:56,750] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:56,750] {logging_mixin.py:103} INFO - [2021-02-10 10:40:56,750] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:40:56,762] {logging_mixin.py:103} INFO - [2021-02-10 10:40:56,762] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:40:56,763] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:40:56,763] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fde1cd6b430>
[2021-02-10 10:40:56,763] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:40:56,763] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:40:56,764] {logging_mixin.py:103} INFO - [2021-02-10 10:40:56,764] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:40:56,936] {logging_mixin.py:103} INFO - [2021-02-10 10:40:56,935] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:56,936] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:40:56,937] {logging_mixin.py:103} INFO - [2021-02-10 10:40:56,937] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:40:57,115] {logging_mixin.py:103} INFO - [2021-02-10 10:40:57,115] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:57,115] {logging_mixin.py:103} INFO - [2021-02-10 10:40:57,115] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:40:57,117] {logging_mixin.py:103} INFO - [2021-02-10 10:40:57,117] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:40:57,288] {logging_mixin.py:103} INFO - [2021-02-10 10:40:57,288] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:57,288] {logging_mixin.py:103} INFO - [2021-02-10 10:40:57,288] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:40:57,558] {logging_mixin.py:103} INFO - [2021-02-10 10:40:57,558] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:57,560] {logging_mixin.py:103} INFO - [2021-02-10 10:40:57,560] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:40:57,972] {logging_mixin.py:103} INFO - [2021-02-10 10:40:57,972] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:57,973] {logging_mixin.py:103} INFO - [2021-02-10 10:40:57,973] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:40:58,146] {logging_mixin.py:103} INFO - [2021-02-10 10:40:58,146] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:58,146] {logging_mixin.py:103} INFO - [2021-02-10 10:40:58,146] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:40:58,148] {logging_mixin.py:103} INFO - [2021-02-10 10:40:58,148] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:40:58,318] {logging_mixin.py:103} INFO - [2021-02-10 10:40:58,317] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:58,320] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:40:58,320] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fde1cd6b430>
[2021-02-10 10:40:58,320] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:40:58,320] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:40:58,322] {logging_mixin.py:103} INFO - [2021-02-10 10:40:58,322] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:40:58,492] {logging_mixin.py:103} INFO - [2021-02-10 10:40:58,492] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:58,493] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:40:58,493] {logging_mixin.py:103} INFO - [2021-02-10 10:40:58,493] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:40:58,982] {logging_mixin.py:103} INFO - [2021-02-10 10:40:58,982] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:58,982] {logging_mixin.py:103} INFO - [2021-02-10 10:40:58,982] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:40:58,983] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:40:58,983] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fde1cd6bc10>
[2021-02-10 10:40:58,983] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:40:58,984] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:40:58,985] {logging_mixin.py:103} INFO - [2021-02-10 10:40:58,985] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:40:59,149] {logging_mixin.py:103} INFO - [2021-02-10 10:40:59,149] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:59,150] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:40:59,151] {logging_mixin.py:103} INFO - [2021-02-10 10:40:59,151] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:40:59,451] {logging_mixin.py:103} INFO - [2021-02-10 10:40:59,451] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:59,452] {logging_mixin.py:103} INFO - [2021-02-10 10:40:59,452] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:40:59,452] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:40:59,452] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fde1cd6bc10>
[2021-02-10 10:40:59,452] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:40:59,453] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:40:59,454] {logging_mixin.py:103} INFO - [2021-02-10 10:40:59,454] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:40:59,670] {logging_mixin.py:103} INFO - [2021-02-10 10:40:59,670] {cursor.py:560} INFO - query execution done
[2021-02-10 10:40:59,671] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:40:59,672] {logging_mixin.py:103} INFO - [2021-02-10 10:40:59,671] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:41:00,737] {logging_mixin.py:103} INFO - [2021-02-10 10:41:00,737] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:00,737] {logging_mixin.py:103} INFO - [2021-02-10 10:41:00,737] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:41:08,426] {logging_mixin.py:103} INFO - {'validation_result': {
  "success": false,
  "meta": {
    "great_expectations_version": "0.13.8+3.g9a8cbaf4.dirty",
    "expectation_suite_name": "taxisuite",
    "run_id": {
      "run_time": "2021-02-10T09:40:54.913422+00:00",
      "run_name": "20210210T094054.913422Z"
    },
    "batch_kwargs": {
      "table": "raw_monthly_taxi",
      "schema": "public",
      "data_asset_name": "raw_monthly_taxi",
      "datasource": "my_snowflake_db"
    },
    "batch_markers": {
      "ge_load_time": "20210210T094048.300777Z"
    },
    "batch_parameters": null,
    "validation_time": "20210210T094054.914051Z"
  },
  "evaluation_parameters": {},
  "statistics": {
    "evaluated_expectations": 13,
    "successful_expectations": 6,
    "unsuccessful_expectations": 7,
    "success_percent": 46.15384615384615
  },
  "results": [
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_table_column_count_to_equal",
        "meta": {},
        "kwargs": {
          "value": 19,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "observed_value": 18
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_table_columns_to_match_ordered_list",
        "meta": {},
        "kwargs": {
          "column_list": [
            "vendor_id",
            "pickup_date",
            "dropoff_date",
            "passenger_count",
            "trip_distance",
            "rate_code_id",
            "flag",
            "pickup_loc",
            "dropff_loc",
            "payment_type",
            "fare_amount",
            "extra",
            "mta_tax",
            "tip",
            "tolls",
            "improvement_surcharge",
            "total_amount",
            "congestion_surcharge",
            "ge_validation_result"
          ],
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "observed_value": [
          "vendor_id",
          "pickup_date",
          "dropoff_date",
          "passenger_count",
          "trip_distance",
          "rate_code_id",
          "flag",
          "pickup_loc",
          "dropff_loc",
          "payment_type",
          "fare_amount",
          "extra",
          "mta_tax",
          "tip",
          "tolls",
          "improvement_surcharge",
          "total_amount",
          "congestion_surcharge"
        ],
        "details": {
          "mismatched": [
            {
              "Expected Column Position": 18,
              "Expected": "ge_validation_result",
              "Found": null
            }
          ]
        }
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "meta": {},
        "kwargs": {
          "column": "vendor_id",
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "element_count": 0,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "partial_unexpected_list": []
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_distinct_values_to_be_in_set",
        "meta": {},
        "kwargs": {
          "column": "vendor_id",
          "value_set": [
            1,
            2,
            4
          ],
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "observed_value": [],
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null,
        "details": {
          "value_counts": []
        }
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_kl_divergence_to_be_less_than",
        "meta": {},
        "kwargs": {
          "column": "vendor_id",
          "partition_object": {
            "values": [
              1,
              2,
              4
            ],
            "weights": [
              0.376,
              0.618,
              0.006
            ]
          },
          "threshold": 0.6,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null,
        "details": {
          "observed_partition": {
            "values": [
              1,
              2,
              4
            ],
            "weights": [
              0.0,
              0.0,
              0.0
            ]
          },
          "expected_partition": {
            "values": [
              1,
              2,
              4
            ],
            "weights": [
              0.376,
              0.618,
              0.006
            ]
          }
        }
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "meta": {},
        "kwargs": {
          "column": "trip_distance",
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "element_count": 0,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "partial_unexpected_list": []
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_min_to_be_between",
        "meta": {},
        "kwargs": {
          "column": "trip_distance",
          "max_value": 1.0,
          "min_value": -1.0,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_mean_to_be_between",
        "meta": {},
        "kwargs": {
          "column": "trip_distance",
          "max_value": 3.99714,
          "min_value": 1.99714,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_median_to_be_between",
        "meta": {},
        "kwargs": {
          "column": "trip_distance",
          "max_value": 2.595,
          "min_value": 0.5950000000000002,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null
      }
    },
    {
      "success": false,
      "expectation_config": {
        "expectation_type": "expect_column_quantile_values_to_be_between",
        "meta": {},
        "kwargs": {
          "allow_relative_error": false,
          "column": "trip_distance",
          "quantile_ranges": {
            "quantiles": [
              0.05,
              0.25,
              0.5,
              0.75,
              0.95
            ],
            "value_ranges": [
              [
                -0.53,
                1.47
              ],
              [
                -0.050000000000000044,
                1.95
              ],
              [
                0.5900000000000001,
                2.59
              ],
              [
                1.9,
                3.9
              ],
              [
                10.21,
                12.21
              ]
            ]
          },
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "exception_info": {
        "raised_exception": true,
        "exception_message": "TypeError: '<=' not supported between instances of 'float' and 'NoneType'",
        "exception_traceback": "Traceback (most recent call last):\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/data_asset/data_asset.py\", line 262, in wrapper\n    return_obj = func(self, **evaluation_args)\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/dataset/dataset.py\", line 155, in inner_wrapper\n    evaluation_result = func(self, *args, **kwargs)\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/dataset/dataset.py\", line 2937, in expect_column_quantile_values_to_be_between\n    success_details = [\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/dataset/dataset.py\", line 2938, in <listcomp>\n    range_[0] <= quantile_vals[idx] <= range_[1]\nTypeError: '<=' not supported between instances of 'float' and 'NoneType'\n"
      },
      "result": {}
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_not_be_null",
        "meta": {},
        "kwargs": {
          "column": "pickup_date",
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "element_count": 0,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "partial_unexpected_list": []
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "meta": {},
        "kwargs": {
          "column": "pickup_date",
          "max_value": "2020-03-27 00:00:00",
          "min_value": "2018-03-01 00:00:00",
          "parse_strings_as_datetimes": true,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "element_count": 0,
        "missing_count": 0,
        "missing_percent": null,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "unexpected_percent_nonmissing": null,
        "partial_unexpected_list": [],
        "partial_unexpected_index_list": null,
        "partial_unexpected_counts": []
      }
    },
    {
      "success": true,
      "expectation_config": {
        "expectation_type": "expect_column_values_to_be_between",
        "meta": {},
        "kwargs": {
          "column": "passenger_count",
          "max_value": 6,
          "min_value": 1,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        }
      },
      "meta": {},
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "result": {
        "element_count": 0,
        "missing_count": 0,
        "missing_percent": null,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "unexpected_percent_nonmissing": null,
        "partial_unexpected_list": [],
        "partial_unexpected_index_list": null,
        "partial_unexpected_counts": []
      }
    }
  ]
}, 'actions_results': {'store_validation_result': {'class': 'StoreValidationResultAction'}, 'store_evaluation_params': {'class': 'StoreEvaluationParametersAction'}, 'update_data_docs': {'local_site': 'file:///Users/sara/airflow/dags/demo/great_expectations/uncommitted/data_docs/local_site/validations/taxisuite/20210210T094054.913422Z/20210210T094054.913422Z/b2e8a19be6c44cbb814773567bfc0573.html', 'class': 'UpdateDataDocsAction'}}}
[2021-02-10 10:41:08,438] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:41:39,377] {scheduler_job.py:181} INFO - Started process (PID=68034) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:41:39,378] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:41:39,378] {logging_mixin.py:103} INFO - [2021-02-10 10:41:39,378] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:41:41,440] {logging_mixin.py:103} INFO - [2021-02-10 10:41:41,440] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:41:41,758] {logging_mixin.py:103} INFO - [2021-02-10 10:41:41,758] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:41:42,320] {logging_mixin.py:103} INFO - [2021-02-10 10:41:42,320] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:41:42,321] {logging_mixin.py:103} INFO - [2021-02-10 10:41:42,321] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:41:42,321] {logging_mixin.py:103} INFO - [2021-02-10 10:41:42,321] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:41:43,749] {logging_mixin.py:103} INFO - [2021-02-10 10:41:43,749] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:41:43,908] {logging_mixin.py:103} INFO - [2021-02-10 10:41:43,908] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:43,910] {logging_mixin.py:103} INFO - [2021-02-10 10:41:43,909] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:41:44,073] {logging_mixin.py:103} INFO - [2021-02-10 10:41:44,073] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:44,073] {logging_mixin.py:103} INFO - [2021-02-10 10:41:44,073] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:41:44,248] {logging_mixin.py:103} INFO - [2021-02-10 10:41:44,248] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:44,381] {logging_mixin.py:103} INFO - [2021-02-10 10:41:44,380] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:41:44,536] {logging_mixin.py:103} INFO - [2021-02-10 10:41:44,536] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:44,794] {logging_mixin.py:103} INFO - [2021-02-10 10:41:44,794] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:41:47,742] {logging_mixin.py:103} INFO - [2021-02-10 10:41:47,742] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:47,824] {logging_mixin.py:103} INFO - [2021-02-10 10:41:47,824] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:41:47,825] {logging_mixin.py:103} INFO - [2021-02-10 10:41:47,825] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:41:49,300] {logging_mixin.py:103} INFO - [2021-02-10 10:41:49,300] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:49,303] {logging_mixin.py:103} INFO - [2021-02-10 10:41:49,302] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:41:49,314] {logging_mixin.py:103} INFO - [2021-02-10 10:41:49,314] {data_context.py:1281} INFO - Setting run_name to: 20210210T094149.314376Z
[2021-02-10 10:41:49,316] {logging_mixin.py:103} INFO - [2021-02-10 10:41:49,316] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:41:49,329] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:41:49,329] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f85a1daa430>
[2021-02-10 10:41:49,329] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:41:49,330] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:41:49,333] {logging_mixin.py:103} INFO - [2021-02-10 10:41:49,333] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:41:49,532] {logging_mixin.py:103} INFO - [2021-02-10 10:41:49,532] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:49,533] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:41:49,534] {logging_mixin.py:103} INFO - [2021-02-10 10:41:49,534] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:41:51,120] {logging_mixin.py:103} INFO - [2021-02-10 10:41:51,120] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:51,121] {logging_mixin.py:103} INFO - [2021-02-10 10:41:51,121] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:41:51,122] {logging_mixin.py:103} INFO - [2021-02-10 10:41:51,122] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:41:51,301] {logging_mixin.py:103} INFO - [2021-02-10 10:41:51,301] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:51,304] {logging_mixin.py:103} INFO - [2021-02-10 10:41:51,303] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:41:51,538] {logging_mixin.py:103} INFO - [2021-02-10 10:41:51,538] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:51,540] {logging_mixin.py:103} INFO - [2021-02-10 10:41:51,540] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:41:51,713] {logging_mixin.py:103} INFO - [2021-02-10 10:41:51,713] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:51,713] {logging_mixin.py:103} INFO - [2021-02-10 10:41:51,713] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:41:51,729] {logging_mixin.py:103} INFO - [2021-02-10 10:41:51,729] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:41:51,730] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:41:51,730] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f85a1daa430>
[2021-02-10 10:41:51,730] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:41:51,731] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:41:51,733] {logging_mixin.py:103} INFO - [2021-02-10 10:41:51,733] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:41:51,956] {logging_mixin.py:103} INFO - [2021-02-10 10:41:51,956] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:51,957] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:41:51,957] {logging_mixin.py:103} INFO - [2021-02-10 10:41:51,957] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:41:52,225] {logging_mixin.py:103} INFO - [2021-02-10 10:41:52,225] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:52,225] {logging_mixin.py:103} INFO - [2021-02-10 10:41:52,225] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:41:52,227] {logging_mixin.py:103} INFO - [2021-02-10 10:41:52,227] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:41:52,691] {logging_mixin.py:103} INFO - [2021-02-10 10:41:52,691] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:52,692] {logging_mixin.py:103} INFO - [2021-02-10 10:41:52,692] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:41:52,882] {logging_mixin.py:103} INFO - [2021-02-10 10:41:52,881] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:52,884] {logging_mixin.py:103} INFO - [2021-02-10 10:41:52,884] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:41:54,198] {logging_mixin.py:103} INFO - [2021-02-10 10:41:54,198] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:54,200] {logging_mixin.py:103} INFO - [2021-02-10 10:41:54,200] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:41:54,415] {logging_mixin.py:103} INFO - [2021-02-10 10:41:54,415] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:54,415] {logging_mixin.py:103} INFO - [2021-02-10 10:41:54,415] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:41:54,419] {logging_mixin.py:103} INFO - [2021-02-10 10:41:54,418] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:41:54,676] {logging_mixin.py:103} INFO - [2021-02-10 10:41:54,676] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:54,679] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:41:54,679] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f85a1daa430>
[2021-02-10 10:41:54,680] {logging_mixin.py:103} INFO - ['column', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:41:54,680] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:41:54,683] {logging_mixin.py:103} INFO - [2021-02-10 10:41:54,683] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:41:54,846] {logging_mixin.py:103} INFO - [2021-02-10 10:41:54,846] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:54,847] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:41:54,848] {logging_mixin.py:103} INFO - [2021-02-10 10:41:54,848] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:41:55,029] {logging_mixin.py:103} INFO - [2021-02-10 10:41:55,029] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:55,030] {logging_mixin.py:103} INFO - [2021-02-10 10:41:55,029] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:41:55,030] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:41:55,031] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f85a1daac10>
[2021-02-10 10:41:55,031] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:41:55,033] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:41:55,034] {logging_mixin.py:103} INFO - [2021-02-10 10:41:55,034] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:41:55,217] {logging_mixin.py:103} INFO - [2021-02-10 10:41:55,217] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:55,218] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:41:55,219] {logging_mixin.py:103} INFO - [2021-02-10 10:41:55,219] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:41:55,503] {logging_mixin.py:103} INFO - [2021-02-10 10:41:55,503] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:55,504] {logging_mixin.py:103} INFO - [2021-02-10 10:41:55,503] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:41:55,505] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:41:55,505] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f85a1daac10>
[2021-02-10 10:41:55,505] {logging_mixin.py:103} INFO - ['column', 'min_value', 'max_value', 'strict_min', 'strict_max', 'allow_cross_type_comparisons', 'parse_strings_as_datetimes', 'output_strftime_format', 'mostly', 'result_format', 'include_config', 'catch_exceptions', 'meta']
[2021-02-10 10:41:55,506] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:41:55,511] {logging_mixin.py:103} INFO - [2021-02-10 10:41:55,511] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:41:55,690] {logging_mixin.py:103} INFO - [2021-02-10 10:41:55,690] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:55,691] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:41:55,694] {logging_mixin.py:103} INFO - [2021-02-10 10:41:55,694] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:41:55,880] {logging_mixin.py:103} INFO - [2021-02-10 10:41:55,880] {cursor.py:560} INFO - query execution done
[2021-02-10 10:41:55,881] {logging_mixin.py:103} INFO - [2021-02-10 10:41:55,880] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:42:04,696] {logging_mixin.py:103} INFO - {'validation_result': {
  "success": false,
  "evaluation_parameters": {},
  "statistics": {
    "evaluated_expectations": 13,
    "successful_expectations": 6,
    "unsuccessful_expectations": 7,
    "success_percent": 46.15384615384615
  },
  "results": [
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": false,
      "expectation_config": {
        "kwargs": {
          "value": 19,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "expectation_type": "expect_table_column_count_to_equal",
        "meta": {}
      },
      "meta": {},
      "result": {
        "observed_value": 18
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": false,
      "expectation_config": {
        "kwargs": {
          "column_list": [
            "vendor_id",
            "pickup_date",
            "dropoff_date",
            "passenger_count",
            "trip_distance",
            "rate_code_id",
            "flag",
            "pickup_loc",
            "dropff_loc",
            "payment_type",
            "fare_amount",
            "extra",
            "mta_tax",
            "tip",
            "tolls",
            "improvement_surcharge",
            "total_amount",
            "congestion_surcharge",
            "ge_validation_result"
          ],
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "expectation_type": "expect_table_columns_to_match_ordered_list",
        "meta": {}
      },
      "meta": {},
      "result": {
        "observed_value": [
          "vendor_id",
          "pickup_date",
          "dropoff_date",
          "passenger_count",
          "trip_distance",
          "rate_code_id",
          "flag",
          "pickup_loc",
          "dropff_loc",
          "payment_type",
          "fare_amount",
          "extra",
          "mta_tax",
          "tip",
          "tolls",
          "improvement_surcharge",
          "total_amount",
          "congestion_surcharge"
        ],
        "details": {
          "mismatched": [
            {
              "Expected Column Position": 18,
              "Expected": "ge_validation_result",
              "Found": null
            }
          ]
        }
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": true,
      "expectation_config": {
        "kwargs": {
          "column": "vendor_id",
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "expectation_type": "expect_column_values_to_not_be_null",
        "meta": {}
      },
      "meta": {},
      "result": {
        "element_count": 0,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "partial_unexpected_list": []
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": true,
      "expectation_config": {
        "kwargs": {
          "column": "vendor_id",
          "value_set": [
            1,
            2,
            4
          ],
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "expectation_type": "expect_column_distinct_values_to_be_in_set",
        "meta": {}
      },
      "meta": {},
      "result": {
        "observed_value": [],
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null,
        "details": {
          "value_counts": []
        }
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": false,
      "expectation_config": {
        "kwargs": {
          "column": "vendor_id",
          "partition_object": {
            "values": [
              1,
              2,
              4
            ],
            "weights": [
              0.376,
              0.618,
              0.006
            ]
          },
          "threshold": 0.6,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "expectation_type": "expect_column_kl_divergence_to_be_less_than",
        "meta": {}
      },
      "meta": {},
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null,
        "details": {
          "observed_partition": {
            "values": [
              1,
              2,
              4
            ],
            "weights": [
              0.0,
              0.0,
              0.0
            ]
          },
          "expected_partition": {
            "values": [
              1,
              2,
              4
            ],
            "weights": [
              0.376,
              0.618,
              0.006
            ]
          }
        }
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": true,
      "expectation_config": {
        "kwargs": {
          "column": "trip_distance",
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "expectation_type": "expect_column_values_to_not_be_null",
        "meta": {}
      },
      "meta": {},
      "result": {
        "element_count": 0,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "partial_unexpected_list": []
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": false,
      "expectation_config": {
        "kwargs": {
          "column": "trip_distance",
          "max_value": 1.0,
          "min_value": -1.0,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "expectation_type": "expect_column_min_to_be_between",
        "meta": {}
      },
      "meta": {},
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": false,
      "expectation_config": {
        "kwargs": {
          "column": "trip_distance",
          "max_value": 3.99714,
          "min_value": 1.99714,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "expectation_type": "expect_column_mean_to_be_between",
        "meta": {}
      },
      "meta": {},
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": false,
      "expectation_config": {
        "kwargs": {
          "column": "trip_distance",
          "max_value": 2.595,
          "min_value": 0.5950000000000002,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "expectation_type": "expect_column_median_to_be_between",
        "meta": {}
      },
      "meta": {},
      "result": {
        "observed_value": null,
        "element_count": 0,
        "missing_count": null,
        "missing_percent": null
      }
    },
    {
      "exception_info": {
        "raised_exception": true,
        "exception_message": "TypeError: '<=' not supported between instances of 'float' and 'NoneType'",
        "exception_traceback": "Traceback (most recent call last):\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/data_asset/data_asset.py\", line 262, in wrapper\n    return_obj = func(self, **evaluation_args)\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/dataset/dataset.py\", line 155, in inner_wrapper\n    evaluation_result = func(self, *args, **kwargs)\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/dataset/dataset.py\", line 2937, in expect_column_quantile_values_to_be_between\n    success_details = [\n  File \"/Users/sara/Dropbox/My Mac (admin\u2019s MacBook Air)/Desktop/demo/great_expectations/great_expectations/dataset/dataset.py\", line 2938, in <listcomp>\n    range_[0] <= quantile_vals[idx] <= range_[1]\nTypeError: '<=' not supported between instances of 'float' and 'NoneType'\n"
      },
      "success": false,
      "expectation_config": {
        "kwargs": {
          "allow_relative_error": false,
          "column": "trip_distance",
          "quantile_ranges": {
            "quantiles": [
              0.05,
              0.25,
              0.5,
              0.75,
              0.95
            ],
            "value_ranges": [
              [
                -0.53,
                1.47
              ],
              [
                -0.050000000000000044,
                1.95
              ],
              [
                0.5900000000000001,
                2.59
              ],
              [
                1.9,
                3.9
              ],
              [
                10.21,
                12.21
              ]
            ]
          },
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "expectation_type": "expect_column_quantile_values_to_be_between",
        "meta": {}
      },
      "meta": {},
      "result": {}
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": true,
      "expectation_config": {
        "kwargs": {
          "column": "pickup_date",
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "expectation_type": "expect_column_values_to_not_be_null",
        "meta": {}
      },
      "meta": {},
      "result": {
        "element_count": 0,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "partial_unexpected_list": []
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": true,
      "expectation_config": {
        "kwargs": {
          "column": "pickup_date",
          "max_value": "2020-03-27 00:00:00",
          "min_value": "2018-03-01 00:00:00",
          "parse_strings_as_datetimes": true,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "expectation_type": "expect_column_values_to_be_between",
        "meta": {}
      },
      "meta": {},
      "result": {
        "element_count": 0,
        "missing_count": 0,
        "missing_percent": null,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "unexpected_percent_nonmissing": null,
        "partial_unexpected_list": [],
        "partial_unexpected_index_list": null,
        "partial_unexpected_counts": []
      }
    },
    {
      "exception_info": {
        "raised_exception": false,
        "exception_message": null,
        "exception_traceback": null
      },
      "success": true,
      "expectation_config": {
        "kwargs": {
          "column": "passenger_count",
          "max_value": 6,
          "min_value": 1,
          "result_format": {
            "result_format": "SUMMARY",
            "partial_unexpected_count": 20
          }
        },
        "expectation_type": "expect_column_values_to_be_between",
        "meta": {}
      },
      "meta": {},
      "result": {
        "element_count": 0,
        "missing_count": 0,
        "missing_percent": null,
        "unexpected_count": 0,
        "unexpected_percent": null,
        "unexpected_percent_nonmissing": null,
        "partial_unexpected_list": [],
        "partial_unexpected_index_list": null,
        "partial_unexpected_counts": []
      }
    }
  ],
  "meta": {
    "great_expectations_version": "0.13.8+3.g9a8cbaf4.dirty",
    "expectation_suite_name": "taxisuite",
    "run_id": {
      "run_time": "2021-02-10T09:41:49.314376+00:00",
      "run_name": "20210210T094149.314376Z"
    },
    "batch_kwargs": {
      "table": "raw_monthly_taxi",
      "schema": "public",
      "data_asset_name": "raw_monthly_taxi",
      "datasource": "my_snowflake_db"
    },
    "batch_markers": {
      "ge_load_time": "20210210T094144.793814Z"
    },
    "batch_parameters": null,
    "validation_time": "20210210T094149.315261Z"
  }
}, 'actions_results': {'store_validation_result': {'class': 'StoreValidationResultAction'}, 'store_evaluation_params': {'class': 'StoreEvaluationParametersAction'}, 'update_data_docs': {'local_site': 'file:///Users/sara/airflow/dags/demo/great_expectations/uncommitted/data_docs/local_site/validations/taxisuite/20210210T094149.314376Z/20210210T094149.314376Z/b2e8a19be6c44cbb814773567bfc0573.html', 'class': 'UpdateDataDocsAction'}}}
[2021-02-10 10:42:04,708] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:42:47,285] {scheduler_job.py:181} INFO - Started process (PID=68129) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:42:47,288] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:42:47,289] {logging_mixin.py:103} INFO - [2021-02-10 10:42:47,288] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:42:50,016] {logging_mixin.py:103} INFO - [2021-02-10 10:42:50,016] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:42:50,606] {logging_mixin.py:103} INFO - [2021-02-10 10:42:50,606] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:42:51,348] {logging_mixin.py:103} INFO - [2021-02-10 10:42:51,347] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:42:51,349] {logging_mixin.py:103} INFO - [2021-02-10 10:42:51,348] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:42:51,349] {logging_mixin.py:103} INFO - [2021-02-10 10:42:51,349] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:42:52,731] {logging_mixin.py:103} INFO - [2021-02-10 10:42:52,731] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:42:52,882] {logging_mixin.py:103} INFO - [2021-02-10 10:42:52,882] {cursor.py:560} INFO - query execution done
[2021-02-10 10:42:52,884] {logging_mixin.py:103} INFO - [2021-02-10 10:42:52,884] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:42:53,086] {logging_mixin.py:103} INFO - [2021-02-10 10:42:53,086] {cursor.py:560} INFO - query execution done
[2021-02-10 10:42:53,087] {logging_mixin.py:103} INFO - [2021-02-10 10:42:53,086] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:42:53,339] {logging_mixin.py:103} INFO - [2021-02-10 10:42:53,339] {cursor.py:560} INFO - query execution done
[2021-02-10 10:42:53,341] {logging_mixin.py:103} INFO - [2021-02-10 10:42:53,341] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:42:53,803] {logging_mixin.py:103} INFO - [2021-02-10 10:42:53,803] {cursor.py:560} INFO - query execution done
[2021-02-10 10:42:54,121] {logging_mixin.py:103} INFO - [2021-02-10 10:42:54,121] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:42:54,289] {logging_mixin.py:103} INFO - [2021-02-10 10:42:54,289] {cursor.py:560} INFO - query execution done
[2021-02-10 10:42:54,411] {logging_mixin.py:103} INFO - [2021-02-10 10:42:54,411] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:42:54,411] {logging_mixin.py:103} INFO - [2021-02-10 10:42:54,411] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:42:56,689] {logging_mixin.py:103} INFO - [2021-02-10 10:42:56,688] {cursor.py:560} INFO - query execution done
[2021-02-10 10:42:56,691] {logging_mixin.py:103} INFO - [2021-02-10 10:42:56,691] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:42:56,700] {logging_mixin.py:103} INFO - [2021-02-10 10:42:56,700] {data_context.py:1281} INFO - Setting run_name to: 20210210T094256.700351Z
[2021-02-10 10:42:56,701] {logging_mixin.py:103} INFO - [2021-02-10 10:42:56,701] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:42:56,711] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:42:56,711] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fe55f5aa430>
[2021-02-10 10:42:56,711] {logging_mixin.py:103} INFO - False
[2021-02-10 10:42:56,711] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:42:56,713] {logging_mixin.py:103} INFO - [2021-02-10 10:42:56,713] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:42:57,071] {logging_mixin.py:103} INFO - [2021-02-10 10:42:57,071] {cursor.py:560} INFO - query execution done
[2021-02-10 10:42:57,072] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:42:57,073] {logging_mixin.py:103} INFO - [2021-02-10 10:42:57,073] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:42:57,765] {logging_mixin.py:103} INFO - [2021-02-10 10:42:57,765] {cursor.py:560} INFO - query execution done
[2021-02-10 10:42:57,765] {logging_mixin.py:103} INFO - [2021-02-10 10:42:57,765] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:42:57,767] {logging_mixin.py:103} INFO - [2021-02-10 10:42:57,767] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:42:57,944] {logging_mixin.py:103} INFO - [2021-02-10 10:42:57,943] {cursor.py:560} INFO - query execution done
[2021-02-10 10:42:57,945] {logging_mixin.py:103} INFO - [2021-02-10 10:42:57,945] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:42:58,100] {logging_mixin.py:103} INFO - [2021-02-10 10:42:58,100] {cursor.py:560} INFO - query execution done
[2021-02-10 10:42:58,102] {logging_mixin.py:103} INFO - [2021-02-10 10:42:58,102] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:42:58,275] {logging_mixin.py:103} INFO - [2021-02-10 10:42:58,275] {cursor.py:560} INFO - query execution done
[2021-02-10 10:42:58,276] {logging_mixin.py:103} INFO - [2021-02-10 10:42:58,276] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:42:58,290] {logging_mixin.py:103} INFO - [2021-02-10 10:42:58,290] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:42:58,291] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:42:58,291] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fe55f5aa430>
[2021-02-10 10:42:58,291] {logging_mixin.py:103} INFO - False
[2021-02-10 10:42:58,292] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:42:58,293] {logging_mixin.py:103} INFO - [2021-02-10 10:42:58,293] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:42:58,446] {logging_mixin.py:103} INFO - [2021-02-10 10:42:58,446] {cursor.py:560} INFO - query execution done
[2021-02-10 10:42:58,446] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:42:58,447] {logging_mixin.py:103} INFO - [2021-02-10 10:42:58,447] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:42:58,627] {logging_mixin.py:103} INFO - [2021-02-10 10:42:58,627] {cursor.py:560} INFO - query execution done
[2021-02-10 10:42:58,627] {logging_mixin.py:103} INFO - [2021-02-10 10:42:58,627] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:42:58,629] {logging_mixin.py:103} INFO - [2021-02-10 10:42:58,629] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:42:58,869] {logging_mixin.py:103} INFO - [2021-02-10 10:42:58,869] {cursor.py:560} INFO - query execution done
[2021-02-10 10:42:58,870] {logging_mixin.py:103} INFO - [2021-02-10 10:42:58,870] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:42:59,029] {logging_mixin.py:103} INFO - [2021-02-10 10:42:59,029] {cursor.py:560} INFO - query execution done
[2021-02-10 10:42:59,031] {logging_mixin.py:103} INFO - [2021-02-10 10:42:59,031] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:42:59,213] {logging_mixin.py:103} INFO - [2021-02-10 10:42:59,213] {cursor.py:560} INFO - query execution done
[2021-02-10 10:42:59,215] {logging_mixin.py:103} INFO - [2021-02-10 10:42:59,215] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:42:59,353] {logging_mixin.py:103} INFO - [2021-02-10 10:42:59,353] {cursor.py:560} INFO - query execution done
[2021-02-10 10:42:59,353] {logging_mixin.py:103} INFO - [2021-02-10 10:42:59,353] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:42:59,356] {logging_mixin.py:103} INFO - [2021-02-10 10:42:59,356] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:42:59,552] {logging_mixin.py:103} INFO - [2021-02-10 10:42:59,551] {cursor.py:560} INFO - query execution done
[2021-02-10 10:42:59,554] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:42:59,554] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fe55f5aa430>
[2021-02-10 10:42:59,554] {logging_mixin.py:103} INFO - False
[2021-02-10 10:42:59,555] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:42:59,556] {logging_mixin.py:103} INFO - [2021-02-10 10:42:59,556] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:42:59,722] {logging_mixin.py:103} INFO - [2021-02-10 10:42:59,722] {cursor.py:560} INFO - query execution done
[2021-02-10 10:42:59,722] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:42:59,723] {logging_mixin.py:103} INFO - [2021-02-10 10:42:59,723] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:42:59,891] {logging_mixin.py:103} INFO - [2021-02-10 10:42:59,891] {cursor.py:560} INFO - query execution done
[2021-02-10 10:42:59,892] {logging_mixin.py:103} INFO - [2021-02-10 10:42:59,892] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:42:59,893] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:42:59,893] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fe55f5aac10>
[2021-02-10 10:42:59,893] {logging_mixin.py:103} INFO - False
[2021-02-10 10:42:59,894] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:42:59,898] {logging_mixin.py:103} INFO - [2021-02-10 10:42:59,898] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:43:01,483] {logging_mixin.py:103} INFO - [2021-02-10 10:43:01,483] {cursor.py:560} INFO - query execution done
[2021-02-10 10:43:01,484] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:43:01,485] {logging_mixin.py:103} INFO - [2021-02-10 10:43:01,485] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:43:02,916] {logging_mixin.py:103} INFO - [2021-02-10 10:43:02,916] {cursor.py:560} INFO - query execution done
[2021-02-10 10:43:02,916] {logging_mixin.py:103} INFO - [2021-02-10 10:43:02,916] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:43:02,917] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:43:02,917] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fe55f5aac10>
[2021-02-10 10:43:02,917] {logging_mixin.py:103} INFO - True
[2021-02-10 10:43:02,918] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:43:02,919] {logging_mixin.py:103} INFO - [2021-02-10 10:43:02,919] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:43:03,942] {logging_mixin.py:103} INFO - [2021-02-10 10:43:03,942] {cursor.py:560} INFO - query execution done
[2021-02-10 10:43:03,943] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:43:03,944] {logging_mixin.py:103} INFO - [2021-02-10 10:43:03,944] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:43:04,912] {logging_mixin.py:103} INFO - [2021-02-10 10:43:04,911] {cursor.py:560} INFO - query execution done
[2021-02-10 10:43:04,912] {logging_mixin.py:103} INFO - [2021-02-10 10:43:04,912] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:43:16,056] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:43:50,218] {scheduler_job.py:181} INFO - Started process (PID=68203) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:43:50,218] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:43:50,219] {logging_mixin.py:103} INFO - [2021-02-10 10:43:50,219] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:43:52,128] {logging_mixin.py:103} INFO - [2021-02-10 10:43:52,128] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:43:52,436] {logging_mixin.py:103} INFO - [2021-02-10 10:43:52,436] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:43:52,771] {logging_mixin.py:103} INFO - [2021-02-10 10:43:52,771] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:43:52,771] {logging_mixin.py:103} INFO - [2021-02-10 10:43:52,771] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:43:52,771] {logging_mixin.py:103} INFO - [2021-02-10 10:43:52,771] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:43:54,313] {logging_mixin.py:103} INFO - [2021-02-10 10:43:54,313] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:43:54,627] {logging_mixin.py:103} INFO - [2021-02-10 10:43:54,627] {cursor.py:560} INFO - query execution done
[2021-02-10 10:43:54,628] {logging_mixin.py:103} INFO - [2021-02-10 10:43:54,628] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:43:54,852] {logging_mixin.py:103} INFO - [2021-02-10 10:43:54,852] {cursor.py:560} INFO - query execution done
[2021-02-10 10:43:54,855] {logging_mixin.py:103} INFO - [2021-02-10 10:43:54,855] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:43:55,140] {logging_mixin.py:103} INFO - [2021-02-10 10:43:55,140] {cursor.py:560} INFO - query execution done
[2021-02-10 10:43:55,141] {logging_mixin.py:103} INFO - [2021-02-10 10:43:55,141] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:43:55,533] {logging_mixin.py:103} INFO - [2021-02-10 10:43:55,533] {cursor.py:560} INFO - query execution done
[2021-02-10 10:43:55,920] {logging_mixin.py:103} INFO - [2021-02-10 10:43:55,920] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:43:56,925] {logging_mixin.py:103} INFO - [2021-02-10 10:43:56,925] {cursor.py:560} INFO - query execution done
[2021-02-10 10:43:56,982] {logging_mixin.py:103} INFO - [2021-02-10 10:43:56,982] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:43:56,982] {logging_mixin.py:103} INFO - [2021-02-10 10:43:56,982] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:43:58,619] {logging_mixin.py:103} INFO - [2021-02-10 10:43:58,619] {cursor.py:560} INFO - query execution done
[2021-02-10 10:43:58,622] {logging_mixin.py:103} INFO - [2021-02-10 10:43:58,622] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:43:58,634] {logging_mixin.py:103} INFO - [2021-02-10 10:43:58,634] {data_context.py:1281} INFO - Setting run_name to: 20210210T094358.634214Z
[2021-02-10 10:43:58,635] {logging_mixin.py:103} INFO - [2021-02-10 10:43:58,635] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:43:58,645] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:43:58,645] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f9d3746b430>
[2021-02-10 10:43:58,645] {logging_mixin.py:103} INFO - False
[2021-02-10 10:43:58,646] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:43:58,648] {logging_mixin.py:103} INFO - [2021-02-10 10:43:58,647] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:43:59,548] {logging_mixin.py:103} INFO - [2021-02-10 10:43:59,548] {cursor.py:560} INFO - query execution done
[2021-02-10 10:43:59,551] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:43:59,552] {logging_mixin.py:103} INFO - [2021-02-10 10:43:59,552] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:43:59,799] {logging_mixin.py:103} INFO - [2021-02-10 10:43:59,799] {cursor.py:560} INFO - query execution done
[2021-02-10 10:43:59,800] {logging_mixin.py:103} INFO - [2021-02-10 10:43:59,800] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:43:59,802] {logging_mixin.py:103} INFO - [2021-02-10 10:43:59,802] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:44:00,467] {logging_mixin.py:103} INFO - [2021-02-10 10:44:00,466] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:00,470] {logging_mixin.py:103} INFO - [2021-02-10 10:44:00,470] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:44:00,633] {logging_mixin.py:103} INFO - [2021-02-10 10:44:00,633] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:00,635] {logging_mixin.py:103} INFO - [2021-02-10 10:44:00,635] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:44:01,069] {logging_mixin.py:103} INFO - [2021-02-10 10:44:01,069] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:01,070] {logging_mixin.py:103} INFO - [2021-02-10 10:44:01,070] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:44:01,081] {logging_mixin.py:103} INFO - [2021-02-10 10:44:01,081] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:44:01,082] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:44:01,082] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f9d3746b430>
[2021-02-10 10:44:01,082] {logging_mixin.py:103} INFO - False
[2021-02-10 10:44:01,083] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:44:01,085] {logging_mixin.py:103} INFO - [2021-02-10 10:44:01,084] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:44:01,260] {logging_mixin.py:103} INFO - [2021-02-10 10:44:01,260] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:01,261] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:44:01,262] {logging_mixin.py:103} INFO - [2021-02-10 10:44:01,262] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:44:01,684] {logging_mixin.py:103} INFO - [2021-02-10 10:44:01,684] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:01,684] {logging_mixin.py:103} INFO - [2021-02-10 10:44:01,684] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:44:01,689] {logging_mixin.py:103} INFO - [2021-02-10 10:44:01,689] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:44:01,918] {logging_mixin.py:103} INFO - [2021-02-10 10:44:01,918] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:01,920] {logging_mixin.py:103} INFO - [2021-02-10 10:44:01,920] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:44:02,167] {logging_mixin.py:103} INFO - [2021-02-10 10:44:02,167] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:02,169] {logging_mixin.py:103} INFO - [2021-02-10 10:44:02,169] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:44:02,366] {logging_mixin.py:103} INFO - [2021-02-10 10:44:02,366] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:02,368] {logging_mixin.py:103} INFO - [2021-02-10 10:44:02,368] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:44:02,540] {logging_mixin.py:103} INFO - [2021-02-10 10:44:02,540] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:02,541] {logging_mixin.py:103} INFO - [2021-02-10 10:44:02,540] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:44:02,544] {logging_mixin.py:103} INFO - [2021-02-10 10:44:02,544] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:44:02,747] {logging_mixin.py:103} INFO - [2021-02-10 10:44:02,747] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:02,755] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:44:02,755] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7f9d3746b430>
[2021-02-10 10:44:02,755] {logging_mixin.py:103} INFO - False
[2021-02-10 10:44:02,755] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:44:02,757] {logging_mixin.py:103} INFO - [2021-02-10 10:44:02,757] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:44:02,924] {logging_mixin.py:103} INFO - [2021-02-10 10:44:02,924] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:02,925] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:44:02,927] {logging_mixin.py:103} INFO - [2021-02-10 10:44:02,926] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:44:03,128] {logging_mixin.py:103} INFO - [2021-02-10 10:44:03,128] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:03,129] {logging_mixin.py:103} INFO - [2021-02-10 10:44:03,129] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:44:03,130] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:44:03,130] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f9d3746bc10>
[2021-02-10 10:44:03,130] {logging_mixin.py:103} INFO - False
[2021-02-10 10:44:03,134] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:44:03,136] {logging_mixin.py:103} INFO - [2021-02-10 10:44:03,136] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:44:03,326] {logging_mixin.py:103} INFO - [2021-02-10 10:44:03,326] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:03,327] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:44:03,329] {logging_mixin.py:103} INFO - [2021-02-10 10:44:03,329] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:44:03,542] {logging_mixin.py:103} INFO - [2021-02-10 10:44:03,542] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:03,542] {logging_mixin.py:103} INFO - [2021-02-10 10:44:03,542] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:44:03,543] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:44:03,543] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7f9d3746bc10>
[2021-02-10 10:44:03,543] {logging_mixin.py:103} INFO - True
[2021-02-10 10:44:03,544] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:44:03,548] {logging_mixin.py:103} INFO - [2021-02-10 10:44:03,548] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:44:03,753] {logging_mixin.py:103} INFO - [2021-02-10 10:44:03,753] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:03,755] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:44:03,756] {logging_mixin.py:103} INFO - [2021-02-10 10:44:03,756] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:44:03,937] {logging_mixin.py:103} INFO - [2021-02-10 10:44:03,937] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:03,938] {logging_mixin.py:103} INFO - [2021-02-10 10:44:03,938] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:44:10,385] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:44:41,872] {scheduler_job.py:181} INFO - Started process (PID=68263) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:44:41,872] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:44:41,873] {logging_mixin.py:103} INFO - [2021-02-10 10:44:41,873] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:44:45,446] {logging_mixin.py:103} INFO - [2021-02-10 10:44:45,445] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:44:45,891] {logging_mixin.py:103} INFO - [2021-02-10 10:44:45,891] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:44:46,436] {logging_mixin.py:103} INFO - [2021-02-10 10:44:46,436] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:44:46,436] {logging_mixin.py:103} INFO - [2021-02-10 10:44:46,436] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:44:46,436] {logging_mixin.py:103} INFO - [2021-02-10 10:44:46,436] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:44:48,398] {logging_mixin.py:103} INFO - [2021-02-10 10:44:48,398] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:44:48,637] {logging_mixin.py:103} INFO - [2021-02-10 10:44:48,637] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:48,640] {logging_mixin.py:103} INFO - [2021-02-10 10:44:48,640] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:44:48,774] {logging_mixin.py:103} INFO - [2021-02-10 10:44:48,774] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:48,775] {logging_mixin.py:103} INFO - [2021-02-10 10:44:48,775] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:44:49,018] {logging_mixin.py:103} INFO - [2021-02-10 10:44:49,018] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:49,022] {logging_mixin.py:103} INFO - [2021-02-10 10:44:49,021] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:44:49,166] {logging_mixin.py:103} INFO - [2021-02-10 10:44:49,166] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:49,387] {logging_mixin.py:103} INFO - [2021-02-10 10:44:49,387] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:44:49,563] {logging_mixin.py:103} INFO - [2021-02-10 10:44:49,563] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:49,763] {logging_mixin.py:103} INFO - [2021-02-10 10:44:49,763] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:44:49,764] {logging_mixin.py:103} INFO - [2021-02-10 10:44:49,764] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:44:51,173] {logging_mixin.py:103} INFO - [2021-02-10 10:44:51,173] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:51,176] {logging_mixin.py:103} INFO - [2021-02-10 10:44:51,176] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:44:51,189] {logging_mixin.py:103} INFO - [2021-02-10 10:44:51,189] {data_context.py:1281} INFO - Setting run_name to: 20210210T094451.189086Z
[2021-02-10 10:44:51,190] {logging_mixin.py:103} INFO - [2021-02-10 10:44:51,190] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:44:51,199] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:44:51,199] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fc9fad6b430>
[2021-02-10 10:44:51,199] {logging_mixin.py:103} INFO - False
[2021-02-10 10:44:51,200] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:44:51,201] {logging_mixin.py:103} INFO - [2021-02-10 10:44:51,201] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:44:51,371] {logging_mixin.py:103} INFO - [2021-02-10 10:44:51,370] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:51,371] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:44:51,373] {logging_mixin.py:103} INFO - [2021-02-10 10:44:51,373] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:44:51,557] {logging_mixin.py:103} INFO - [2021-02-10 10:44:51,556] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:51,557] {logging_mixin.py:103} INFO - [2021-02-10 10:44:51,557] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:44:51,559] {logging_mixin.py:103} INFO - [2021-02-10 10:44:51,559] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:44:51,745] {logging_mixin.py:103} INFO - [2021-02-10 10:44:51,745] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:51,748] {logging_mixin.py:103} INFO - [2021-02-10 10:44:51,748] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:44:51,966] {logging_mixin.py:103} INFO - [2021-02-10 10:44:51,966] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:51,969] {logging_mixin.py:103} INFO - [2021-02-10 10:44:51,969] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:44:52,272] {logging_mixin.py:103} INFO - [2021-02-10 10:44:52,272] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:52,272] {logging_mixin.py:103} INFO - [2021-02-10 10:44:52,272] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:44:52,284] {logging_mixin.py:103} INFO - [2021-02-10 10:44:52,284] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:44:52,285] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:44:52,285] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fc9fad6b430>
[2021-02-10 10:44:52,285] {logging_mixin.py:103} INFO - False
[2021-02-10 10:44:52,285] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:44:52,287] {logging_mixin.py:103} INFO - [2021-02-10 10:44:52,287] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:44:52,458] {logging_mixin.py:103} INFO - [2021-02-10 10:44:52,458] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:52,459] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:44:52,461] {logging_mixin.py:103} INFO - [2021-02-10 10:44:52,461] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:44:52,746] {logging_mixin.py:103} INFO - [2021-02-10 10:44:52,746] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:52,747] {logging_mixin.py:103} INFO - [2021-02-10 10:44:52,746] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:44:52,750] {logging_mixin.py:103} INFO - [2021-02-10 10:44:52,749] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:44:52,931] {logging_mixin.py:103} INFO - [2021-02-10 10:44:52,931] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:52,932] {logging_mixin.py:103} INFO - [2021-02-10 10:44:52,932] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:44:53,168] {logging_mixin.py:103} INFO - [2021-02-10 10:44:53,168] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:53,171] {logging_mixin.py:103} INFO - [2021-02-10 10:44:53,171] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:44:53,376] {logging_mixin.py:103} INFO - [2021-02-10 10:44:53,376] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:53,378] {logging_mixin.py:103} INFO - [2021-02-10 10:44:53,377] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:44:53,595] {logging_mixin.py:103} INFO - [2021-02-10 10:44:53,594] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:53,595] {logging_mixin.py:103} INFO - [2021-02-10 10:44:53,595] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:44:53,599] {logging_mixin.py:103} INFO - [2021-02-10 10:44:53,599] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:44:53,808] {logging_mixin.py:103} INFO - [2021-02-10 10:44:53,808] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:53,813] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:44:53,813] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fc9fad6b430>
[2021-02-10 10:44:53,813] {logging_mixin.py:103} INFO - False
[2021-02-10 10:44:53,814] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:44:53,816] {logging_mixin.py:103} INFO - [2021-02-10 10:44:53,815] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:44:54,003] {logging_mixin.py:103} INFO - [2021-02-10 10:44:54,003] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:54,004] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:44:54,005] {logging_mixin.py:103} INFO - [2021-02-10 10:44:54,005] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:44:54,266] {logging_mixin.py:103} INFO - [2021-02-10 10:44:54,266] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:54,267] {logging_mixin.py:103} INFO - [2021-02-10 10:44:54,267] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:44:54,268] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:44:54,268] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fc9fad6bc10>
[2021-02-10 10:44:54,268] {logging_mixin.py:103} INFO - False
[2021-02-10 10:44:54,270] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:44:54,272] {logging_mixin.py:103} INFO - [2021-02-10 10:44:54,272] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:44:54,452] {logging_mixin.py:103} INFO - [2021-02-10 10:44:54,452] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:54,453] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:44:54,455] {logging_mixin.py:103} INFO - [2021-02-10 10:44:54,455] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:44:54,650] {logging_mixin.py:103} INFO - [2021-02-10 10:44:54,650] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:54,651] {logging_mixin.py:103} INFO - [2021-02-10 10:44:54,651] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:44:54,652] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:44:54,652] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fc9fad6bc10>
[2021-02-10 10:44:54,652] {logging_mixin.py:103} INFO - True
[2021-02-10 10:44:54,653] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:44:54,656] {logging_mixin.py:103} INFO - [2021-02-10 10:44:54,656] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:44:54,833] {logging_mixin.py:103} INFO - [2021-02-10 10:44:54,833] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:54,834] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:44:54,836] {logging_mixin.py:103} INFO - [2021-02-10 10:44:54,836] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:44:55,050] {logging_mixin.py:103} INFO - [2021-02-10 10:44:55,049] {cursor.py:560} INFO - query execution done
[2021-02-10 10:44:55,050] {logging_mixin.py:103} INFO - [2021-02-10 10:44:55,050] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:45:00,290] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:45:32,926] {scheduler_job.py:181} INFO - Started process (PID=68322) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:45:32,926] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:45:32,927] {logging_mixin.py:103} INFO - [2021-02-10 10:45:32,927] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:45:34,859] {logging_mixin.py:103} INFO - [2021-02-10 10:45:34,859] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:45:35,207] {logging_mixin.py:103} INFO - [2021-02-10 10:45:35,207] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:45:36,005] {logging_mixin.py:103} INFO - [2021-02-10 10:45:36,005] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:45:36,005] {logging_mixin.py:103} INFO - [2021-02-10 10:45:36,005] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:45:36,005] {logging_mixin.py:103} INFO - [2021-02-10 10:45:36,005] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:45:37,233] {logging_mixin.py:103} INFO - [2021-02-10 10:45:37,232] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:45:37,860] {logging_mixin.py:103} INFO - [2021-02-10 10:45:37,860] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:37,861] {logging_mixin.py:103} INFO - [2021-02-10 10:45:37,861] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:45:38,122] {logging_mixin.py:103} INFO - [2021-02-10 10:45:38,122] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:38,123] {logging_mixin.py:103} INFO - [2021-02-10 10:45:38,123] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:45:38,295] {logging_mixin.py:103} INFO - [2021-02-10 10:45:38,295] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:38,298] {logging_mixin.py:103} INFO - [2021-02-10 10:45:38,297] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:45:38,506] {logging_mixin.py:103} INFO - [2021-02-10 10:45:38,506] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:38,764] {logging_mixin.py:103} INFO - [2021-02-10 10:45:38,764] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:45:39,001] {logging_mixin.py:103} INFO - [2021-02-10 10:45:39,001] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:39,042] {logging_mixin.py:103} INFO - [2021-02-10 10:45:39,042] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:45:39,042] {logging_mixin.py:103} INFO - [2021-02-10 10:45:39,042] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:45:42,771] {logging_mixin.py:103} INFO - [2021-02-10 10:45:42,771] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:42,772] {logging_mixin.py:103} INFO - [2021-02-10 10:45:42,772] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:45:42,782] {logging_mixin.py:103} INFO - [2021-02-10 10:45:42,782] {data_context.py:1281} INFO - Setting run_name to: 20210210T094542.782047Z
[2021-02-10 10:45:42,783] {logging_mixin.py:103} INFO - [2021-02-10 10:45:42,783] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:45:42,791] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:45:42,791] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7ffd96c6b430>
[2021-02-10 10:45:42,792] {logging_mixin.py:103} INFO - False
[2021-02-10 10:45:42,792] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:45:42,794] {logging_mixin.py:103} INFO - [2021-02-10 10:45:42,793] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:45:43,369] {logging_mixin.py:103} INFO - [2021-02-10 10:45:43,369] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:43,369] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:45:43,370] {logging_mixin.py:103} INFO - [2021-02-10 10:45:43,370] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:45:43,993] {logging_mixin.py:103} INFO - [2021-02-10 10:45:43,993] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:43,994] {logging_mixin.py:103} INFO - [2021-02-10 10:45:43,994] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:45:43,996] {logging_mixin.py:103} INFO - [2021-02-10 10:45:43,996] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:45:44,175] {logging_mixin.py:103} INFO - [2021-02-10 10:45:44,175] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:44,176] {logging_mixin.py:103} INFO - [2021-02-10 10:45:44,176] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:45:44,372] {logging_mixin.py:103} INFO - [2021-02-10 10:45:44,372] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:44,374] {logging_mixin.py:103} INFO - [2021-02-10 10:45:44,374] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:45:44,542] {logging_mixin.py:103} INFO - [2021-02-10 10:45:44,542] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:44,543] {logging_mixin.py:103} INFO - [2021-02-10 10:45:44,543] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:45:44,575] {logging_mixin.py:103} INFO - [2021-02-10 10:45:44,574] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:45:44,576] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:45:44,576] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7ffd96c6b430>
[2021-02-10 10:45:44,576] {logging_mixin.py:103} INFO - False
[2021-02-10 10:45:44,586] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:45:44,590] {logging_mixin.py:103} INFO - [2021-02-10 10:45:44,590] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:45:45,232] {logging_mixin.py:103} INFO - [2021-02-10 10:45:45,232] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:45,233] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:45:45,234] {logging_mixin.py:103} INFO - [2021-02-10 10:45:45,234] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:45:45,391] {logging_mixin.py:103} INFO - [2021-02-10 10:45:45,391] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:45,392] {logging_mixin.py:103} INFO - [2021-02-10 10:45:45,392] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:45:45,393] {logging_mixin.py:103} INFO - [2021-02-10 10:45:45,393] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:45:45,600] {logging_mixin.py:103} INFO - [2021-02-10 10:45:45,600] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:45,601] {logging_mixin.py:103} INFO - [2021-02-10 10:45:45,601] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:45:45,772] {logging_mixin.py:103} INFO - [2021-02-10 10:45:45,772] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:45,774] {logging_mixin.py:103} INFO - [2021-02-10 10:45:45,773] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:45:45,950] {logging_mixin.py:103} INFO - [2021-02-10 10:45:45,950] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:45,951] {logging_mixin.py:103} INFO - [2021-02-10 10:45:45,951] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:45:46,126] {logging_mixin.py:103} INFO - [2021-02-10 10:45:46,126] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:46,126] {logging_mixin.py:103} INFO - [2021-02-10 10:45:46,126] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:45:46,133] {logging_mixin.py:103} INFO - [2021-02-10 10:45:46,133] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:45:46,365] {logging_mixin.py:103} INFO - [2021-02-10 10:45:46,365] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:46,368] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:45:46,368] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7ffd96c6b430>
[2021-02-10 10:45:46,368] {logging_mixin.py:103} INFO - False
[2021-02-10 10:45:46,368] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:45:46,370] {logging_mixin.py:103} INFO - [2021-02-10 10:45:46,370] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:45:46,532] {logging_mixin.py:103} INFO - [2021-02-10 10:45:46,532] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:46,532] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:45:46,533] {logging_mixin.py:103} INFO - [2021-02-10 10:45:46,533] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:45:46,727] {logging_mixin.py:103} INFO - [2021-02-10 10:45:46,727] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:46,728] {logging_mixin.py:103} INFO - [2021-02-10 10:45:46,728] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:45:46,728] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:45:46,728] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7ffd96c6bc10>
[2021-02-10 10:45:46,728] {logging_mixin.py:103} INFO - False
[2021-02-10 10:45:46,730] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:45:46,731] {logging_mixin.py:103} INFO - [2021-02-10 10:45:46,731] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:45:46,930] {logging_mixin.py:103} INFO - [2021-02-10 10:45:46,930] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:46,930] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:45:46,932] {logging_mixin.py:103} INFO - [2021-02-10 10:45:46,932] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:45:47,126] {logging_mixin.py:103} INFO - [2021-02-10 10:45:47,126] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:47,126] {logging_mixin.py:103} INFO - [2021-02-10 10:45:47,126] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:45:47,127] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:45:47,127] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7ffd96c6bc10>
[2021-02-10 10:45:47,127] {logging_mixin.py:103} INFO - True
[2021-02-10 10:45:47,128] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:45:47,129] {logging_mixin.py:103} INFO - [2021-02-10 10:45:47,129] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:45:47,344] {logging_mixin.py:103} INFO - [2021-02-10 10:45:47,344] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:47,345] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:45:47,347] {logging_mixin.py:103} INFO - [2021-02-10 10:45:47,346] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:45:47,516] {logging_mixin.py:103} INFO - [2021-02-10 10:45:47,516] {cursor.py:560} INFO - query execution done
[2021-02-10 10:45:47,517] {logging_mixin.py:103} INFO - [2021-02-10 10:45:47,516] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:45:54,937] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:46:32,357] {scheduler_job.py:181} INFO - Started process (PID=68394) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:46:32,357] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:46:32,358] {logging_mixin.py:103} INFO - [2021-02-10 10:46:32,358] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:46:34,821] {logging_mixin.py:103} INFO - [2021-02-10 10:46:34,820] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:46:35,291] {logging_mixin.py:103} INFO - [2021-02-10 10:46:35,291] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:46:35,776] {logging_mixin.py:103} INFO - [2021-02-10 10:46:35,776] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:46:35,776] {logging_mixin.py:103} INFO - [2021-02-10 10:46:35,776] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:46:35,776] {logging_mixin.py:103} INFO - [2021-02-10 10:46:35,776] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:46:37,223] {logging_mixin.py:103} INFO - [2021-02-10 10:46:37,223] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:46:37,401] {logging_mixin.py:103} INFO - [2021-02-10 10:46:37,401] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:37,403] {logging_mixin.py:103} INFO - [2021-02-10 10:46:37,402] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:46:37,588] {logging_mixin.py:103} INFO - [2021-02-10 10:46:37,588] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:37,588] {logging_mixin.py:103} INFO - [2021-02-10 10:46:37,588] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:46:38,057] {logging_mixin.py:103} INFO - [2021-02-10 10:46:38,057] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:38,060] {logging_mixin.py:103} INFO - [2021-02-10 10:46:38,060] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:46:38,675] {logging_mixin.py:103} INFO - [2021-02-10 10:46:38,674] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:38,953] {logging_mixin.py:103} INFO - [2021-02-10 10:46:38,953] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:46:39,123] {logging_mixin.py:103} INFO - [2021-02-10 10:46:39,122] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:39,166] {logging_mixin.py:103} INFO - [2021-02-10 10:46:39,166] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:46:39,166] {logging_mixin.py:103} INFO - [2021-02-10 10:46:39,166] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:46:44,814] {logging_mixin.py:103} INFO - [2021-02-10 10:46:44,813] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:44,818] {logging_mixin.py:103} INFO - [2021-02-10 10:46:44,818] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:46:44,833] {logging_mixin.py:103} INFO - [2021-02-10 10:46:44,833] {data_context.py:1281} INFO - Setting run_name to: 20210210T094644.833625Z
[2021-02-10 10:46:44,836] {logging_mixin.py:103} INFO - [2021-02-10 10:46:44,835] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:46:44,859] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:46:44,860] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fe79c56b430>
[2021-02-10 10:46:44,860] {logging_mixin.py:103} INFO - False
[2021-02-10 10:46:44,861] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:46:44,867] {logging_mixin.py:103} INFO - [2021-02-10 10:46:44,867] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:46:45,058] {logging_mixin.py:103} INFO - [2021-02-10 10:46:45,058] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:45,059] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:46:45,061] {logging_mixin.py:103} INFO - [2021-02-10 10:46:45,061] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:46:45,293] {logging_mixin.py:103} INFO - [2021-02-10 10:46:45,293] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:45,294] {logging_mixin.py:103} INFO - [2021-02-10 10:46:45,294] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:46:45,296] {logging_mixin.py:103} INFO - [2021-02-10 10:46:45,296] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:46:46,068] {logging_mixin.py:103} INFO - [2021-02-10 10:46:46,068] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:46,070] {logging_mixin.py:103} INFO - [2021-02-10 10:46:46,070] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:46:46,659] {logging_mixin.py:103} INFO - [2021-02-10 10:46:46,658] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:46,662] {logging_mixin.py:103} INFO - [2021-02-10 10:46:46,662] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:46:47,014] {logging_mixin.py:103} INFO - [2021-02-10 10:46:47,014] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:47,015] {logging_mixin.py:103} INFO - [2021-02-10 10:46:47,015] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:46:47,026] {logging_mixin.py:103} INFO - [2021-02-10 10:46:47,026] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:46:47,027] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:46:47,027] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fe79c56b430>
[2021-02-10 10:46:47,027] {logging_mixin.py:103} INFO - False
[2021-02-10 10:46:47,027] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:46:47,029] {logging_mixin.py:103} INFO - [2021-02-10 10:46:47,029] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:46:47,320] {logging_mixin.py:103} INFO - [2021-02-10 10:46:47,320] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:47,321] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:46:47,324] {logging_mixin.py:103} INFO - [2021-02-10 10:46:47,324] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:46:48,502] {logging_mixin.py:103} INFO - [2021-02-10 10:46:48,502] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:48,503] {logging_mixin.py:103} INFO - [2021-02-10 10:46:48,503] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:46:48,505] {logging_mixin.py:103} INFO - [2021-02-10 10:46:48,505] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:46:48,847] {logging_mixin.py:103} INFO - [2021-02-10 10:46:48,847] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:48,849] {logging_mixin.py:103} INFO - [2021-02-10 10:46:48,849] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:46:50,656] {logging_mixin.py:103} INFO - [2021-02-10 10:46:50,656] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:50,658] {logging_mixin.py:103} INFO - [2021-02-10 10:46:50,658] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:46:50,899] {logging_mixin.py:103} INFO - [2021-02-10 10:46:50,898] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:50,901] {logging_mixin.py:103} INFO - [2021-02-10 10:46:50,901] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:46:51,083] {logging_mixin.py:103} INFO - [2021-02-10 10:46:51,083] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:51,083] {logging_mixin.py:103} INFO - [2021-02-10 10:46:51,083] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:46:51,088] {logging_mixin.py:103} INFO - [2021-02-10 10:46:51,088] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:46:51,393] {logging_mixin.py:103} INFO - [2021-02-10 10:46:51,393] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:51,399] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:46:51,400] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fe79c56b430>
[2021-02-10 10:46:51,400] {logging_mixin.py:103} INFO - False
[2021-02-10 10:46:51,401] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:46:51,403] {logging_mixin.py:103} INFO - [2021-02-10 10:46:51,403] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:46:51,666] {logging_mixin.py:103} INFO - [2021-02-10 10:46:51,666] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:51,667] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:46:51,668] {logging_mixin.py:103} INFO - [2021-02-10 10:46:51,668] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:46:51,850] {logging_mixin.py:103} INFO - [2021-02-10 10:46:51,850] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:51,851] {logging_mixin.py:103} INFO - [2021-02-10 10:46:51,851] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:46:51,852] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:46:51,852] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fe79c56bc10>
[2021-02-10 10:46:51,852] {logging_mixin.py:103} INFO - False
[2021-02-10 10:46:51,853] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:46:51,856] {logging_mixin.py:103} INFO - [2021-02-10 10:46:51,856] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:46:52,148] {logging_mixin.py:103} INFO - [2021-02-10 10:46:52,147] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:52,149] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:46:52,150] {logging_mixin.py:103} INFO - [2021-02-10 10:46:52,150] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:46:52,405] {logging_mixin.py:103} INFO - [2021-02-10 10:46:52,405] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:52,406] {logging_mixin.py:103} INFO - [2021-02-10 10:46:52,406] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:46:52,407] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:46:52,407] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fe79c56bc10>
[2021-02-10 10:46:52,407] {logging_mixin.py:103} INFO - True
[2021-02-10 10:46:52,408] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:46:52,410] {logging_mixin.py:103} INFO - [2021-02-10 10:46:52,410] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:46:53,107] {logging_mixin.py:103} INFO - [2021-02-10 10:46:53,107] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:53,107] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:46:53,109] {logging_mixin.py:103} INFO - [2021-02-10 10:46:53,108] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:46:53,349] {logging_mixin.py:103} INFO - [2021-02-10 10:46:53,349] {cursor.py:560} INFO - query execution done
[2021-02-10 10:46:53,350] {logging_mixin.py:103} INFO - [2021-02-10 10:46:53,350] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:47:00,939] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:47:34,827] {scheduler_job.py:181} INFO - Started process (PID=68458) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:47:34,827] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:47:34,827] {logging_mixin.py:103} INFO - [2021-02-10 10:47:34,827] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:47:36,604] {logging_mixin.py:103} INFO - [2021-02-10 10:47:36,604] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:47:36,944] {logging_mixin.py:103} INFO - [2021-02-10 10:47:36,944] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:47:37,324] {logging_mixin.py:103} INFO - [2021-02-10 10:47:37,324] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:47:37,324] {logging_mixin.py:103} INFO - [2021-02-10 10:47:37,324] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:47:37,325] {logging_mixin.py:103} INFO - [2021-02-10 10:47:37,325] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:47:38,885] {logging_mixin.py:103} INFO - [2021-02-10 10:47:38,885] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:47:39,045] {logging_mixin.py:103} INFO - [2021-02-10 10:47:39,044] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:39,047] {logging_mixin.py:103} INFO - [2021-02-10 10:47:39,047] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:47:39,204] {logging_mixin.py:103} INFO - [2021-02-10 10:47:39,203] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:39,204] {logging_mixin.py:103} INFO - [2021-02-10 10:47:39,204] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:47:39,391] {logging_mixin.py:103} INFO - [2021-02-10 10:47:39,391] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:39,394] {logging_mixin.py:103} INFO - [2021-02-10 10:47:39,393] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:47:40,124] {logging_mixin.py:103} INFO - [2021-02-10 10:47:40,123] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:40,627] {logging_mixin.py:103} INFO - [2021-02-10 10:47:40,627] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:47:41,644] {logging_mixin.py:103} INFO - [2021-02-10 10:47:41,644] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:41,718] {logging_mixin.py:103} INFO - [2021-02-10 10:47:41,718] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:47:41,719] {logging_mixin.py:103} INFO - [2021-02-10 10:47:41,719] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:47:45,040] {logging_mixin.py:103} INFO - [2021-02-10 10:47:45,039] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:45,043] {logging_mixin.py:103} INFO - [2021-02-10 10:47:45,043] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:47:45,067] {logging_mixin.py:103} INFO - [2021-02-10 10:47:45,067] {data_context.py:1281} INFO - Setting run_name to: 20210210T094745.066985Z
[2021-02-10 10:47:45,070] {logging_mixin.py:103} INFO - [2021-02-10 10:47:45,069] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:47:45,084] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:47:45,085] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fe7ea56b430>
[2021-02-10 10:47:45,085] {logging_mixin.py:103} INFO - False
[2021-02-10 10:47:45,085] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:47:45,096] {logging_mixin.py:103} INFO - [2021-02-10 10:47:45,096] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:47:45,285] {logging_mixin.py:103} INFO - [2021-02-10 10:47:45,285] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:45,286] {logging_mixin.py:103} INFO - vendor_id IS NOT NULL
[2021-02-10 10:47:45,288] {logging_mixin.py:103} INFO - [2021-02-10 10:47:45,288] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:47:45,497] {logging_mixin.py:103} INFO - [2021-02-10 10:47:45,497] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:45,497] {logging_mixin.py:103} INFO - [2021-02-10 10:47:45,497] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:47:45,501] {logging_mixin.py:103} INFO - [2021-02-10 10:47:45,500] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:47:46,134] {logging_mixin.py:103} INFO - [2021-02-10 10:47:46,134] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:46,138] {logging_mixin.py:103} INFO - [2021-02-10 10:47:46,138] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:47:46,343] {logging_mixin.py:103} INFO - [2021-02-10 10:47:46,342] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:46,344] {logging_mixin.py:103} INFO - [2021-02-10 10:47:46,344] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:47:46,528] {logging_mixin.py:103} INFO - [2021-02-10 10:47:46,528] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:46,528] {logging_mixin.py:103} INFO - [2021-02-10 10:47:46,528] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:47:46,547] {logging_mixin.py:103} INFO - [2021-02-10 10:47:46,547] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:47:46,549] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:47:46,550] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fe7ea56b430>
[2021-02-10 10:47:46,550] {logging_mixin.py:103} INFO - False
[2021-02-10 10:47:46,550] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:47:46,552] {logging_mixin.py:103} INFO - [2021-02-10 10:47:46,552] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:47:46,750] {logging_mixin.py:103} INFO - [2021-02-10 10:47:46,750] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:46,751] {logging_mixin.py:103} INFO - trip_distance IS NOT NULL
[2021-02-10 10:47:46,752] {logging_mixin.py:103} INFO - [2021-02-10 10:47:46,752] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:47:46,928] {logging_mixin.py:103} INFO - [2021-02-10 10:47:46,928] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:46,930] {logging_mixin.py:103} INFO - [2021-02-10 10:47:46,930] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:47:46,934] {logging_mixin.py:103} INFO - [2021-02-10 10:47:46,934] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:47:47,128] {logging_mixin.py:103} INFO - [2021-02-10 10:47:47,128] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:47,130] {logging_mixin.py:103} INFO - [2021-02-10 10:47:47,130] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:47:47,304] {logging_mixin.py:103} INFO - [2021-02-10 10:47:47,304] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:47,307] {logging_mixin.py:103} INFO - [2021-02-10 10:47:47,307] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:47:47,504] {logging_mixin.py:103} INFO - [2021-02-10 10:47:47,503] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:47,506] {logging_mixin.py:103} INFO - [2021-02-10 10:47:47,506] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:47:47,674] {logging_mixin.py:103} INFO - [2021-02-10 10:47:47,674] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:47,675] {logging_mixin.py:103} INFO - [2021-02-10 10:47:47,674] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:47:47,679] {logging_mixin.py:103} INFO - [2021-02-10 10:47:47,679] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:47:47,836] {logging_mixin.py:103} INFO - [2021-02-10 10:47:47,836] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:47,841] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:47:47,841] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_not_be_null at 0x7fe7ea56b430>
[2021-02-10 10:47:47,841] {logging_mixin.py:103} INFO - False
[2021-02-10 10:47:47,841] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:47:47,843] {logging_mixin.py:103} INFO - [2021-02-10 10:47:47,843] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:47:48,018] {logging_mixin.py:103} INFO - [2021-02-10 10:47:48,018] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:48,019] {logging_mixin.py:103} INFO - pickup_date IS NOT NULL
[2021-02-10 10:47:48,020] {logging_mixin.py:103} INFO - [2021-02-10 10:47:48,020] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:47:48,209] {logging_mixin.py:103} INFO - [2021-02-10 10:47:48,209] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:48,210] {logging_mixin.py:103} INFO - [2021-02-10 10:47:48,210] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:47:48,211] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:47:48,211] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fe7ea56bc10>
[2021-02-10 10:47:48,211] {logging_mixin.py:103} INFO - False
[2021-02-10 10:47:48,214] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:47:48,217] {logging_mixin.py:103} INFO - [2021-02-10 10:47:48,217] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:47:48,392] {logging_mixin.py:103} INFO - [2021-02-10 10:47:48,392] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:48,393] {logging_mixin.py:103} INFO - pickup_date >= :pickup_date_1 AND pickup_date <= :pickup_date_2
[2021-02-10 10:47:48,394] {logging_mixin.py:103} INFO - [2021-02-10 10:47:48,394] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:47:48,578] {logging_mixin.py:103} INFO - [2021-02-10 10:47:48,578] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:48,579] {logging_mixin.py:103} INFO - [2021-02-10 10:47:48,579] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:47:48,580] {logging_mixin.py:103} INFO - {'result_format': 'SUMMARY', 'partial_unexpected_count': 20}
[2021-02-10 10:47:48,580] {logging_mixin.py:103} INFO - <function SqlAlchemyDataset.expect_column_values_to_be_between at 0x7fe7ea56bc10>
[2021-02-10 10:47:48,580] {logging_mixin.py:103} INFO - True
[2021-02-10 10:47:48,581] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:47:48,586] {logging_mixin.py:103} INFO - [2021-02-10 10:47:48,585] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:47:48,768] {logging_mixin.py:103} INFO - [2021-02-10 10:47:48,768] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:48,769] {logging_mixin.py:103} INFO - passenger_count >= :passenger_count_1 AND passenger_count <= :passenger_count_2
[2021-02-10 10:47:48,771] {logging_mixin.py:103} INFO - [2021-02-10 10:47:48,771] {cursor.py:537} INFO - query: [SELECT passenger_count FROM public.raw_monthly_taxi WHERE NOT (passenger_count >...]
[2021-02-10 10:47:48,937] {logging_mixin.py:103} INFO - [2021-02-10 10:47:48,937] {cursor.py:560} INFO - query execution done
[2021-02-10 10:47:48,937] {logging_mixin.py:103} INFO - [2021-02-10 10:47:48,937] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:47:58,611] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:49:08,546] {scheduler_job.py:181} INFO - Started process (PID=68564) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:49:08,547] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:49:08,549] {logging_mixin.py:103} INFO - [2021-02-10 10:49:08,549] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:49:15,470] {logging_mixin.py:103} INFO - [2021-02-10 10:49:15,470] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:49:16,709] {logging_mixin.py:103} INFO - [2021-02-10 10:49:16,709] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:49:17,722] {logging_mixin.py:103} INFO - [2021-02-10 10:49:17,722] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:49:17,724] {logging_mixin.py:103} INFO - [2021-02-10 10:49:17,724] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:49:17,725] {logging_mixin.py:103} INFO - [2021-02-10 10:49:17,724] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:49:19,979] {logging_mixin.py:103} INFO - [2021-02-10 10:49:19,979] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:49:20,181] {logging_mixin.py:103} INFO - [2021-02-10 10:49:20,181] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:20,183] {logging_mixin.py:103} INFO - [2021-02-10 10:49:20,183] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:49:20,347] {logging_mixin.py:103} INFO - [2021-02-10 10:49:20,347] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:20,349] {logging_mixin.py:103} INFO - [2021-02-10 10:49:20,349] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:49:20,547] {logging_mixin.py:103} INFO - [2021-02-10 10:49:20,546] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:20,550] {logging_mixin.py:103} INFO - [2021-02-10 10:49:20,550] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:49:20,731] {logging_mixin.py:103} INFO - [2021-02-10 10:49:20,731] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:21,303] {logging_mixin.py:103} INFO - [2021-02-10 10:49:21,303] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:49:21,491] {logging_mixin.py:103} INFO - [2021-02-10 10:49:21,491] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:21,620] {logging_mixin.py:103} INFO - [2021-02-10 10:49:21,620] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:49:21,621] {logging_mixin.py:103} INFO - [2021-02-10 10:49:21,621] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:49:23,032] {logging_mixin.py:103} INFO - [2021-02-10 10:49:23,031] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:23,036] {logging_mixin.py:103} INFO - [2021-02-10 10:49:23,036] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:49:23,061] {logging_mixin.py:103} INFO - [2021-02-10 10:49:23,060] {data_context.py:1281} INFO - Setting run_name to: 20210210T094923.060807Z
[2021-02-10 10:49:23,063] {logging_mixin.py:103} INFO - [2021-02-10 10:49:23,063] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:49:23,091] {logging_mixin.py:103} INFO - [2021-02-10 10:49:23,091] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:49:23,299] {logging_mixin.py:103} INFO - [2021-02-10 10:49:23,298] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:23,302] {logging_mixin.py:103} INFO - [2021-02-10 10:49:23,302] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:49:23,510] {logging_mixin.py:103} INFO - [2021-02-10 10:49:23,510] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:23,511] {logging_mixin.py:103} INFO - [2021-02-10 10:49:23,511] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:49:23,513] {logging_mixin.py:103} INFO - [2021-02-10 10:49:23,513] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:49:23,693] {logging_mixin.py:103} INFO - [2021-02-10 10:49:23,693] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:23,697] {logging_mixin.py:103} INFO - [2021-02-10 10:49:23,697] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:49:23,910] {logging_mixin.py:103} INFO - [2021-02-10 10:49:23,910] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:23,913] {logging_mixin.py:103} INFO - [2021-02-10 10:49:23,912] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:49:24,124] {logging_mixin.py:103} INFO - [2021-02-10 10:49:24,124] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:24,125] {logging_mixin.py:103} INFO - [2021-02-10 10:49:24,124] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:49:24,156] {logging_mixin.py:103} INFO - [2021-02-10 10:49:24,156] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:49:24,163] {logging_mixin.py:103} INFO - [2021-02-10 10:49:24,163] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:49:24,327] {logging_mixin.py:103} INFO - [2021-02-10 10:49:24,327] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:24,329] {logging_mixin.py:103} INFO - [2021-02-10 10:49:24,328] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:49:24,499] {logging_mixin.py:103} INFO - [2021-02-10 10:49:24,499] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:24,500] {logging_mixin.py:103} INFO - [2021-02-10 10:49:24,500] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:49:24,504] {logging_mixin.py:103} INFO - [2021-02-10 10:49:24,503] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:49:24,709] {logging_mixin.py:103} INFO - [2021-02-10 10:49:24,709] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:24,710] {logging_mixin.py:103} INFO - [2021-02-10 10:49:24,710] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:49:24,864] {logging_mixin.py:103} INFO - [2021-02-10 10:49:24,864] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:24,869] {logging_mixin.py:103} INFO - [2021-02-10 10:49:24,868] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:49:25,086] {logging_mixin.py:103} INFO - [2021-02-10 10:49:25,086] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:25,089] {logging_mixin.py:103} INFO - [2021-02-10 10:49:25,089] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:49:25,311] {logging_mixin.py:103} INFO - [2021-02-10 10:49:25,311] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:25,312] {logging_mixin.py:103} INFO - [2021-02-10 10:49:25,312] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:49:25,316] {logging_mixin.py:103} INFO - [2021-02-10 10:49:25,316] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:49:25,474] {logging_mixin.py:103} INFO - [2021-02-10 10:49:25,474] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:25,480] {logging_mixin.py:103} INFO - [2021-02-10 10:49:25,479] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:49:25,651] {logging_mixin.py:103} INFO - [2021-02-10 10:49:25,650] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:25,654] {logging_mixin.py:103} INFO - [2021-02-10 10:49:25,654] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:49:25,829] {logging_mixin.py:103} INFO - [2021-02-10 10:49:25,829] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:25,830] {logging_mixin.py:103} INFO - [2021-02-10 10:49:25,830] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:49:25,835] {logging_mixin.py:103} INFO - [2021-02-10 10:49:25,835] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:49:26,020] {logging_mixin.py:103} INFO - [2021-02-10 10:49:26,020] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:26,021] {logging_mixin.py:103} INFO - [2021-02-10 10:49:26,021] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:49:26,215] {logging_mixin.py:103} INFO - [2021-02-10 10:49:26,215] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:26,216] {logging_mixin.py:103} INFO - [2021-02-10 10:49:26,216] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:49:26,220] {logging_mixin.py:103} INFO - [2021-02-10 10:49:26,220] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:49:26,421] {logging_mixin.py:103} INFO - [2021-02-10 10:49:26,421] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:26,423] {logging_mixin.py:103} INFO - [2021-02-10 10:49:26,423] {warnings.py:109} WARNING - /Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/dataset/sqlalchemy_dataset.py:242: UserWarning: Setting row_validation=true without specifying result_update_column variable assumes your data has a column named 'ge_validation_result' where the results are going to be saved
  warnings.warn(
[2021-02-10 10:49:26,428] {logging_mixin.py:103} INFO - [2021-02-10 10:49:26,428] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET "GE_validation_result"=1 WHERE NOT (passenger...]
[2021-02-10 10:49:26,633] {logging_mixin.py:103} INFO - [2021-02-10 10:49:26,633] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:26,725] {logging_mixin.py:103} INFO - [2021-02-10 10:49:26,725] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:49:26,899] {logging_mixin.py:103} INFO - [2021-02-10 10:49:26,899] {cursor.py:560} INFO - query execution done
[2021-02-10 10:49:38,264] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:50:14,089] {scheduler_job.py:181} INFO - Started process (PID=68642) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:50:14,090] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:50:14,095] {logging_mixin.py:103} INFO - [2021-02-10 10:50:14,092] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:50:17,615] {logging_mixin.py:103} INFO - [2021-02-10 10:50:17,615] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:50:18,182] {logging_mixin.py:103} INFO - [2021-02-10 10:50:18,182] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:50:18,694] {logging_mixin.py:103} INFO - [2021-02-10 10:50:18,694] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:50:18,694] {logging_mixin.py:103} INFO - [2021-02-10 10:50:18,694] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:50:18,694] {logging_mixin.py:103} INFO - [2021-02-10 10:50:18,694] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:50:20,485] {logging_mixin.py:103} INFO - [2021-02-10 10:50:20,484] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:50:20,619] {logging_mixin.py:103} INFO - [2021-02-10 10:50:20,619] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:20,620] {logging_mixin.py:103} INFO - [2021-02-10 10:50:20,620] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:50:20,787] {logging_mixin.py:103} INFO - [2021-02-10 10:50:20,786] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:20,787] {logging_mixin.py:103} INFO - [2021-02-10 10:50:20,787] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:50:20,974] {logging_mixin.py:103} INFO - [2021-02-10 10:50:20,974] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:20,977] {logging_mixin.py:103} INFO - [2021-02-10 10:50:20,977] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:50:21,138] {logging_mixin.py:103} INFO - [2021-02-10 10:50:21,138] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:21,499] {logging_mixin.py:103} INFO - [2021-02-10 10:50:21,499] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:50:21,825] {logging_mixin.py:103} INFO - [2021-02-10 10:50:21,825] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:21,881] {logging_mixin.py:103} INFO - [2021-02-10 10:50:21,881] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:50:21,881] {logging_mixin.py:103} INFO - [2021-02-10 10:50:21,881] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:50:23,546] {logging_mixin.py:103} INFO - [2021-02-10 10:50:23,546] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:23,550] {logging_mixin.py:103} INFO - [2021-02-10 10:50:23,550] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:50:23,569] {logging_mixin.py:103} INFO - [2021-02-10 10:50:23,568] {data_context.py:1281} INFO - Setting run_name to: 20210210T095023.568792Z
[2021-02-10 10:50:23,571] {logging_mixin.py:103} INFO - [2021-02-10 10:50:23,570] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:50:23,592] {logging_mixin.py:103} INFO - [2021-02-10 10:50:23,592] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:50:23,778] {logging_mixin.py:103} INFO - [2021-02-10 10:50:23,777] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:23,779] {logging_mixin.py:103} INFO - [2021-02-10 10:50:23,779] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:50:24,469] {logging_mixin.py:103} INFO - [2021-02-10 10:50:24,469] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:24,469] {logging_mixin.py:103} INFO - [2021-02-10 10:50:24,469] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:50:24,471] {logging_mixin.py:103} INFO - [2021-02-10 10:50:24,471] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:50:24,661] {logging_mixin.py:103} INFO - [2021-02-10 10:50:24,661] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:24,666] {logging_mixin.py:103} INFO - [2021-02-10 10:50:24,665] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:50:24,839] {logging_mixin.py:103} INFO - [2021-02-10 10:50:24,838] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:24,841] {logging_mixin.py:103} INFO - [2021-02-10 10:50:24,841] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:50:25,401] {logging_mixin.py:103} INFO - [2021-02-10 10:50:25,400] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:25,401] {logging_mixin.py:103} INFO - [2021-02-10 10:50:25,401] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:50:25,410] {logging_mixin.py:103} INFO - [2021-02-10 10:50:25,410] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:50:25,413] {logging_mixin.py:103} INFO - [2021-02-10 10:50:25,413] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:50:25,661] {logging_mixin.py:103} INFO - [2021-02-10 10:50:25,661] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:25,662] {logging_mixin.py:103} INFO - [2021-02-10 10:50:25,662] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:50:25,910] {logging_mixin.py:103} INFO - [2021-02-10 10:50:25,910] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:25,910] {logging_mixin.py:103} INFO - [2021-02-10 10:50:25,910] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:50:25,913] {logging_mixin.py:103} INFO - [2021-02-10 10:50:25,912] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:50:26,895] {logging_mixin.py:103} INFO - [2021-02-10 10:50:26,895] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:26,897] {logging_mixin.py:103} INFO - [2021-02-10 10:50:26,897] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:50:27,127] {logging_mixin.py:103} INFO - [2021-02-10 10:50:27,127] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:27,131] {logging_mixin.py:103} INFO - [2021-02-10 10:50:27,131] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:50:27,862] {logging_mixin.py:103} INFO - [2021-02-10 10:50:27,861] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:27,863] {logging_mixin.py:103} INFO - [2021-02-10 10:50:27,863] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:50:28,040] {logging_mixin.py:103} INFO - [2021-02-10 10:50:28,039] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:28,040] {logging_mixin.py:103} INFO - [2021-02-10 10:50:28,040] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:50:28,043] {logging_mixin.py:103} INFO - [2021-02-10 10:50:28,043] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:50:28,465] {logging_mixin.py:103} INFO - [2021-02-10 10:50:28,465] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:28,471] {logging_mixin.py:103} INFO - [2021-02-10 10:50:28,471] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:50:29,078] {logging_mixin.py:103} INFO - [2021-02-10 10:50:29,078] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:29,079] {logging_mixin.py:103} INFO - [2021-02-10 10:50:29,079] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:50:29,269] {logging_mixin.py:103} INFO - [2021-02-10 10:50:29,268] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:29,269] {logging_mixin.py:103} INFO - [2021-02-10 10:50:29,269] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:50:29,274] {logging_mixin.py:103} INFO - [2021-02-10 10:50:29,274] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:50:29,464] {logging_mixin.py:103} INFO - [2021-02-10 10:50:29,464] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:29,466] {logging_mixin.py:103} INFO - [2021-02-10 10:50:29,466] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:50:29,631] {logging_mixin.py:103} INFO - [2021-02-10 10:50:29,630] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:29,631] {logging_mixin.py:103} INFO - [2021-02-10 10:50:29,631] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:50:29,633] {logging_mixin.py:103} INFO - [2021-02-10 10:50:29,633] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:50:29,895] {logging_mixin.py:103} INFO - [2021-02-10 10:50:29,895] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:29,897] {logging_mixin.py:103} INFO - [2021-02-10 10:50:29,897] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 10:50:30,073] {logging_mixin.py:103} INFO - [2021-02-10 10:50:30,073] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:30,082] {logging_mixin.py:103} INFO - [2021-02-10 10:50:30,082] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:50:30,251] {logging_mixin.py:103} INFO - [2021-02-10 10:50:30,251] {cursor.py:560} INFO - query execution done
[2021-02-10 10:50:40,425] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:51:19,609] {scheduler_job.py:181} INFO - Started process (PID=68734) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:51:19,610] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:51:19,611] {logging_mixin.py:103} INFO - [2021-02-10 10:51:19,611] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:51:22,106] {logging_mixin.py:103} INFO - [2021-02-10 10:51:22,106] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:51:22,552] {logging_mixin.py:103} INFO - [2021-02-10 10:51:22,551] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:51:23,036] {logging_mixin.py:103} INFO - [2021-02-10 10:51:23,036] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:51:23,036] {logging_mixin.py:103} INFO - [2021-02-10 10:51:23,036] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:51:23,036] {logging_mixin.py:103} INFO - [2021-02-10 10:51:23,036] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:51:24,208] {logging_mixin.py:103} INFO - [2021-02-10 10:51:24,208] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:51:24,337] {logging_mixin.py:103} INFO - [2021-02-10 10:51:24,337] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:24,338] {logging_mixin.py:103} INFO - [2021-02-10 10:51:24,338] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:51:24,493] {logging_mixin.py:103} INFO - [2021-02-10 10:51:24,493] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:24,494] {logging_mixin.py:103} INFO - [2021-02-10 10:51:24,494] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:51:24,662] {logging_mixin.py:103} INFO - [2021-02-10 10:51:24,662] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:24,664] {logging_mixin.py:103} INFO - [2021-02-10 10:51:24,664] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:51:24,813] {logging_mixin.py:103} INFO - [2021-02-10 10:51:24,813] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:25,085] {logging_mixin.py:103} INFO - [2021-02-10 10:51:25,085] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:51:25,250] {logging_mixin.py:103} INFO - [2021-02-10 10:51:25,250] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:25,298] {logging_mixin.py:103} INFO - [2021-02-10 10:51:25,298] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:51:25,299] {logging_mixin.py:103} INFO - [2021-02-10 10:51:25,298] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:51:26,457] {logging_mixin.py:103} INFO - [2021-02-10 10:51:26,456] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:26,460] {logging_mixin.py:103} INFO - [2021-02-10 10:51:26,459] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:51:26,470] {logging_mixin.py:103} INFO - [2021-02-10 10:51:26,470] {data_context.py:1281} INFO - Setting run_name to: 20210210T095126.469973Z
[2021-02-10 10:51:26,471] {logging_mixin.py:103} INFO - [2021-02-10 10:51:26,471] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:51:26,484] {logging_mixin.py:103} INFO - [2021-02-10 10:51:26,484] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:51:26,685] {logging_mixin.py:103} INFO - [2021-02-10 10:51:26,685] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:26,686] {logging_mixin.py:103} INFO - [2021-02-10 10:51:26,686] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:51:27,022] {logging_mixin.py:103} INFO - [2021-02-10 10:51:27,022] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:27,022] {logging_mixin.py:103} INFO - [2021-02-10 10:51:27,022] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:51:27,023] {logging_mixin.py:103} INFO - [2021-02-10 10:51:27,023] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:51:27,199] {logging_mixin.py:103} INFO - [2021-02-10 10:51:27,199] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:27,201] {logging_mixin.py:103} INFO - [2021-02-10 10:51:27,200] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:51:27,355] {logging_mixin.py:103} INFO - [2021-02-10 10:51:27,355] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:27,356] {logging_mixin.py:103} INFO - [2021-02-10 10:51:27,356] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:51:27,533] {logging_mixin.py:103} INFO - [2021-02-10 10:51:27,533] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:27,533] {logging_mixin.py:103} INFO - [2021-02-10 10:51:27,533] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:51:27,546] {logging_mixin.py:103} INFO - [2021-02-10 10:51:27,546] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:51:27,551] {logging_mixin.py:103} INFO - [2021-02-10 10:51:27,551] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:51:27,719] {logging_mixin.py:103} INFO - [2021-02-10 10:51:27,719] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:27,721] {logging_mixin.py:103} INFO - [2021-02-10 10:51:27,721] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:51:27,885] {logging_mixin.py:103} INFO - [2021-02-10 10:51:27,885] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:27,885] {logging_mixin.py:103} INFO - [2021-02-10 10:51:27,885] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:51:27,886] {logging_mixin.py:103} INFO - [2021-02-10 10:51:27,886] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:51:28,078] {logging_mixin.py:103} INFO - [2021-02-10 10:51:28,077] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:28,079] {logging_mixin.py:103} INFO - [2021-02-10 10:51:28,079] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:51:28,672] {logging_mixin.py:103} INFO - [2021-02-10 10:51:28,672] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:28,675] {logging_mixin.py:103} INFO - [2021-02-10 10:51:28,675] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:51:28,880] {logging_mixin.py:103} INFO - [2021-02-10 10:51:28,880] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:28,882] {logging_mixin.py:103} INFO - [2021-02-10 10:51:28,882] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:51:29,063] {logging_mixin.py:103} INFO - [2021-02-10 10:51:29,063] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:29,064] {logging_mixin.py:103} INFO - [2021-02-10 10:51:29,063] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:51:29,066] {logging_mixin.py:103} INFO - [2021-02-10 10:51:29,066] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:51:29,265] {logging_mixin.py:103} INFO - [2021-02-10 10:51:29,265] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:29,274] {logging_mixin.py:103} INFO - [2021-02-10 10:51:29,274] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:51:29,446] {logging_mixin.py:103} INFO - [2021-02-10 10:51:29,446] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:29,447] {logging_mixin.py:103} INFO - [2021-02-10 10:51:29,447] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:51:29,684] {logging_mixin.py:103} INFO - [2021-02-10 10:51:29,684] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:29,685] {logging_mixin.py:103} INFO - [2021-02-10 10:51:29,684] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:51:29,687] {logging_mixin.py:103} INFO - [2021-02-10 10:51:29,687] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:51:29,849] {logging_mixin.py:103} INFO - [2021-02-10 10:51:29,849] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:29,851] {logging_mixin.py:103} INFO - [2021-02-10 10:51:29,851] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:51:30,011] {logging_mixin.py:103} INFO - [2021-02-10 10:51:30,011] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:30,011] {logging_mixin.py:103} INFO - [2021-02-10 10:51:30,011] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:51:30,013] {logging_mixin.py:103} INFO - [2021-02-10 10:51:30,013] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:51:30,192] {logging_mixin.py:103} INFO - [2021-02-10 10:51:30,192] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:30,194] {logging_mixin.py:103} INFO - [2021-02-10 10:51:30,194] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 10:51:30,370] {logging_mixin.py:103} INFO - [2021-02-10 10:51:30,370] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:30,383] {logging_mixin.py:103} INFO - [2021-02-10 10:51:30,383] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:51:30,598] {logging_mixin.py:103} INFO - [2021-02-10 10:51:30,598] {cursor.py:560} INFO - query execution done
[2021-02-10 10:51:45,745] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:52:21,293] {scheduler_job.py:181} INFO - Started process (PID=68804) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:52:21,294] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:52:21,294] {logging_mixin.py:103} INFO - [2021-02-10 10:52:21,294] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:52:23,147] {logging_mixin.py:103} INFO - [2021-02-10 10:52:23,147] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:52:23,489] {logging_mixin.py:103} INFO - [2021-02-10 10:52:23,489] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:52:23,859] {logging_mixin.py:103} INFO - [2021-02-10 10:52:23,859] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:52:23,859] {logging_mixin.py:103} INFO - [2021-02-10 10:52:23,859] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:52:23,859] {logging_mixin.py:103} INFO - [2021-02-10 10:52:23,859] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:52:25,019] {logging_mixin.py:103} INFO - [2021-02-10 10:52:25,019] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:52:25,169] {logging_mixin.py:103} INFO - [2021-02-10 10:52:25,169] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:25,171] {logging_mixin.py:103} INFO - [2021-02-10 10:52:25,171] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:52:25,332] {logging_mixin.py:103} INFO - [2021-02-10 10:52:25,332] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:25,333] {logging_mixin.py:103} INFO - [2021-02-10 10:52:25,333] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:52:25,505] {logging_mixin.py:103} INFO - [2021-02-10 10:52:25,505] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:25,508] {logging_mixin.py:103} INFO - [2021-02-10 10:52:25,507] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:52:25,645] {logging_mixin.py:103} INFO - [2021-02-10 10:52:25,645] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:25,874] {logging_mixin.py:103} INFO - [2021-02-10 10:52:25,874] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:52:26,061] {logging_mixin.py:103} INFO - [2021-02-10 10:52:26,061] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:26,107] {logging_mixin.py:103} INFO - [2021-02-10 10:52:26,106] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:52:26,107] {logging_mixin.py:103} INFO - [2021-02-10 10:52:26,107] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:52:27,965] {logging_mixin.py:103} INFO - [2021-02-10 10:52:27,965] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:27,969] {logging_mixin.py:103} INFO - [2021-02-10 10:52:27,969] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:52:27,980] {logging_mixin.py:103} INFO - [2021-02-10 10:52:27,980] {data_context.py:1281} INFO - Setting run_name to: 20210210T095227.979976Z
[2021-02-10 10:52:27,981] {logging_mixin.py:103} INFO - [2021-02-10 10:52:27,981] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:52:27,991] {logging_mixin.py:103} INFO - [2021-02-10 10:52:27,991] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:52:28,193] {logging_mixin.py:103} INFO - [2021-02-10 10:52:28,193] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:28,195] {logging_mixin.py:103} INFO - [2021-02-10 10:52:28,195] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:52:28,385] {logging_mixin.py:103} INFO - [2021-02-10 10:52:28,385] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:28,385] {logging_mixin.py:103} INFO - [2021-02-10 10:52:28,385] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:52:28,387] {logging_mixin.py:103} INFO - [2021-02-10 10:52:28,387] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:52:28,661] {logging_mixin.py:103} INFO - [2021-02-10 10:52:28,661] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:28,664] {logging_mixin.py:103} INFO - [2021-02-10 10:52:28,664] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:52:28,878] {logging_mixin.py:103} INFO - [2021-02-10 10:52:28,877] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:28,880] {logging_mixin.py:103} INFO - [2021-02-10 10:52:28,880] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:52:29,123] {logging_mixin.py:103} INFO - [2021-02-10 10:52:29,123] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:29,124] {logging_mixin.py:103} INFO - [2021-02-10 10:52:29,124] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:52:29,141] {logging_mixin.py:103} INFO - [2021-02-10 10:52:29,141] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:52:29,143] {logging_mixin.py:103} INFO - [2021-02-10 10:52:29,143] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:52:29,314] {logging_mixin.py:103} INFO - [2021-02-10 10:52:29,314] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:29,316] {logging_mixin.py:103} INFO - [2021-02-10 10:52:29,316] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:52:29,492] {logging_mixin.py:103} INFO - [2021-02-10 10:52:29,492] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:29,493] {logging_mixin.py:103} INFO - [2021-02-10 10:52:29,493] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:52:29,496] {logging_mixin.py:103} INFO - [2021-02-10 10:52:29,495] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:52:29,676] {logging_mixin.py:103} INFO - [2021-02-10 10:52:29,676] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:29,678] {logging_mixin.py:103} INFO - [2021-02-10 10:52:29,677] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:52:29,865] {logging_mixin.py:103} INFO - [2021-02-10 10:52:29,865] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:29,869] {logging_mixin.py:103} INFO - [2021-02-10 10:52:29,869] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:52:30,117] {logging_mixin.py:103} INFO - [2021-02-10 10:52:30,116] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:30,119] {logging_mixin.py:103} INFO - [2021-02-10 10:52:30,119] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:52:30,331] {logging_mixin.py:103} INFO - [2021-02-10 10:52:30,331] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:30,332] {logging_mixin.py:103} INFO - [2021-02-10 10:52:30,331] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:52:30,334] {logging_mixin.py:103} INFO - [2021-02-10 10:52:30,334] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:52:30,551] {logging_mixin.py:103} INFO - [2021-02-10 10:52:30,551] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:30,558] {logging_mixin.py:103} INFO - [2021-02-10 10:52:30,558] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:52:30,759] {logging_mixin.py:103} INFO - [2021-02-10 10:52:30,759] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:30,761] {logging_mixin.py:103} INFO - [2021-02-10 10:52:30,761] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:52:30,942] {logging_mixin.py:103} INFO - [2021-02-10 10:52:30,942] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:30,942] {logging_mixin.py:103} INFO - [2021-02-10 10:52:30,942] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:52:30,947] {logging_mixin.py:103} INFO - [2021-02-10 10:52:30,947] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:52:31,118] {logging_mixin.py:103} INFO - [2021-02-10 10:52:31,118] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:31,120] {logging_mixin.py:103} INFO - [2021-02-10 10:52:31,120] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:52:31,318] {logging_mixin.py:103} INFO - [2021-02-10 10:52:31,318] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:31,319] {logging_mixin.py:103} INFO - [2021-02-10 10:52:31,319] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:52:31,325] {logging_mixin.py:103} INFO - [2021-02-10 10:52:31,325] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:52:31,500] {logging_mixin.py:103} INFO - [2021-02-10 10:52:31,499] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:31,502] {logging_mixin.py:103} INFO - [2021-02-10 10:52:31,502] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 10:52:31,693] {logging_mixin.py:103} INFO - [2021-02-10 10:52:31,693] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:31,733] {logging_mixin.py:103} INFO - [2021-02-10 10:52:31,732] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:52:31,874] {logging_mixin.py:103} INFO - [2021-02-10 10:52:31,874] {cursor.py:560} INFO - query execution done
[2021-02-10 10:52:38,497] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:53:12,017] {scheduler_job.py:181} INFO - Started process (PID=68866) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:53:12,017] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:53:12,018] {logging_mixin.py:103} INFO - [2021-02-10 10:53:12,018] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:53:13,893] {logging_mixin.py:103} INFO - [2021-02-10 10:53:13,893] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:53:14,216] {logging_mixin.py:103} INFO - [2021-02-10 10:53:14,216] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:53:14,613] {logging_mixin.py:103} INFO - [2021-02-10 10:53:14,612] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:53:14,613] {logging_mixin.py:103} INFO - [2021-02-10 10:53:14,613] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:53:14,613] {logging_mixin.py:103} INFO - [2021-02-10 10:53:14,613] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:53:15,892] {logging_mixin.py:103} INFO - [2021-02-10 10:53:15,892] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:53:16,047] {logging_mixin.py:103} INFO - [2021-02-10 10:53:16,047] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:16,049] {logging_mixin.py:103} INFO - [2021-02-10 10:53:16,048] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:53:16,237] {logging_mixin.py:103} INFO - [2021-02-10 10:53:16,237] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:16,237] {logging_mixin.py:103} INFO - [2021-02-10 10:53:16,237] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:53:16,386] {logging_mixin.py:103} INFO - [2021-02-10 10:53:16,386] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:16,390] {logging_mixin.py:103} INFO - [2021-02-10 10:53:16,389] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:53:16,605] {logging_mixin.py:103} INFO - [2021-02-10 10:53:16,605] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:16,901] {logging_mixin.py:103} INFO - [2021-02-10 10:53:16,901] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:53:17,068] {logging_mixin.py:103} INFO - [2021-02-10 10:53:17,068] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:17,118] {logging_mixin.py:103} INFO - [2021-02-10 10:53:17,118] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:53:17,118] {logging_mixin.py:103} INFO - [2021-02-10 10:53:17,118] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:53:18,964] {logging_mixin.py:103} INFO - [2021-02-10 10:53:18,964] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:18,967] {logging_mixin.py:103} INFO - [2021-02-10 10:53:18,967] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:53:18,977] {logging_mixin.py:103} INFO - [2021-02-10 10:53:18,977] {data_context.py:1281} INFO - Setting run_name to: 20210210T095318.977795Z
[2021-02-10 10:53:18,979] {logging_mixin.py:103} INFO - [2021-02-10 10:53:18,979] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:53:18,991] {logging_mixin.py:103} INFO - [2021-02-10 10:53:18,991] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:53:19,183] {logging_mixin.py:103} INFO - [2021-02-10 10:53:19,183] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:19,185] {logging_mixin.py:103} INFO - [2021-02-10 10:53:19,185] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:53:19,346] {logging_mixin.py:103} INFO - [2021-02-10 10:53:19,346] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:19,347] {logging_mixin.py:103} INFO - [2021-02-10 10:53:19,347] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:53:19,348] {logging_mixin.py:103} INFO - [2021-02-10 10:53:19,348] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:53:19,536] {logging_mixin.py:103} INFO - [2021-02-10 10:53:19,536] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:19,538] {logging_mixin.py:103} INFO - [2021-02-10 10:53:19,538] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:53:19,739] {logging_mixin.py:103} INFO - [2021-02-10 10:53:19,739] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:19,743] {logging_mixin.py:103} INFO - [2021-02-10 10:53:19,743] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:53:19,887] {logging_mixin.py:103} INFO - [2021-02-10 10:53:19,887] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:19,888] {logging_mixin.py:103} INFO - [2021-02-10 10:53:19,888] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:53:19,907] {logging_mixin.py:103} INFO - [2021-02-10 10:53:19,907] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:53:19,910] {logging_mixin.py:103} INFO - [2021-02-10 10:53:19,910] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:53:20,068] {logging_mixin.py:103} INFO - [2021-02-10 10:53:20,068] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:20,070] {logging_mixin.py:103} INFO - [2021-02-10 10:53:20,070] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:53:20,255] {logging_mixin.py:103} INFO - [2021-02-10 10:53:20,255] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:20,256] {logging_mixin.py:103} INFO - [2021-02-10 10:53:20,256] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:53:20,269] {logging_mixin.py:103} INFO - [2021-02-10 10:53:20,268] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:53:20,533] {logging_mixin.py:103} INFO - [2021-02-10 10:53:20,533] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:20,534] {logging_mixin.py:103} INFO - [2021-02-10 10:53:20,534] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:53:20,700] {logging_mixin.py:103} INFO - [2021-02-10 10:53:20,700] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:20,740] {logging_mixin.py:103} INFO - [2021-02-10 10:53:20,740] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:53:21,423] {logging_mixin.py:103} INFO - [2021-02-10 10:53:21,423] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:21,425] {logging_mixin.py:103} INFO - [2021-02-10 10:53:21,425] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:53:21,714] {logging_mixin.py:103} INFO - [2021-02-10 10:53:21,714] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:21,715] {logging_mixin.py:103} INFO - [2021-02-10 10:53:21,715] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:53:21,717] {logging_mixin.py:103} INFO - [2021-02-10 10:53:21,717] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:53:21,868] {logging_mixin.py:103} INFO - [2021-02-10 10:53:21,868] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:21,884] {logging_mixin.py:103} INFO - [2021-02-10 10:53:21,884] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:53:22,072] {logging_mixin.py:103} INFO - [2021-02-10 10:53:22,072] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:22,074] {logging_mixin.py:103} INFO - [2021-02-10 10:53:22,074] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:53:22,245] {logging_mixin.py:103} INFO - [2021-02-10 10:53:22,245] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:22,246] {logging_mixin.py:103} INFO - [2021-02-10 10:53:22,246] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:53:22,249] {logging_mixin.py:103} INFO - [2021-02-10 10:53:22,249] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:53:22,445] {logging_mixin.py:103} INFO - [2021-02-10 10:53:22,445] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:22,446] {logging_mixin.py:103} INFO - [2021-02-10 10:53:22,446] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:53:22,629] {logging_mixin.py:103} INFO - [2021-02-10 10:53:22,629] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:22,629] {logging_mixin.py:103} INFO - [2021-02-10 10:53:22,629] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:53:22,631] {logging_mixin.py:103} INFO - [2021-02-10 10:53:22,630] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:53:22,782] {logging_mixin.py:103} INFO - [2021-02-10 10:53:22,782] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:22,783] {logging_mixin.py:103} INFO - [2021-02-10 10:53:22,783] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 10:53:22,972] {logging_mixin.py:103} INFO - [2021-02-10 10:53:22,972] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:23,010] {logging_mixin.py:103} INFO - [2021-02-10 10:53:23,010] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:53:23,297] {logging_mixin.py:103} INFO - [2021-02-10 10:53:23,297] {cursor.py:560} INFO - query execution done
[2021-02-10 10:53:30,972] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:54:08,081] {scheduler_job.py:181} INFO - Started process (PID=68939) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:54:08,082] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:54:08,083] {logging_mixin.py:103} INFO - [2021-02-10 10:54:08,083] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:54:10,902] {logging_mixin.py:103} INFO - [2021-02-10 10:54:10,901] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:54:11,534] {logging_mixin.py:103} INFO - [2021-02-10 10:54:11,534] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:54:11,918] {logging_mixin.py:103} INFO - [2021-02-10 10:54:11,918] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:54:11,918] {logging_mixin.py:103} INFO - [2021-02-10 10:54:11,918] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:54:11,918] {logging_mixin.py:103} INFO - [2021-02-10 10:54:11,918] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:54:13,339] {logging_mixin.py:103} INFO - [2021-02-10 10:54:13,339] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:54:13,506] {logging_mixin.py:103} INFO - [2021-02-10 10:54:13,505] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:13,507] {logging_mixin.py:103} INFO - [2021-02-10 10:54:13,507] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:54:13,669] {logging_mixin.py:103} INFO - [2021-02-10 10:54:13,669] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:13,670] {logging_mixin.py:103} INFO - [2021-02-10 10:54:13,670] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:54:13,810] {logging_mixin.py:103} INFO - [2021-02-10 10:54:13,810] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:13,813] {logging_mixin.py:103} INFO - [2021-02-10 10:54:13,813] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:54:13,939] {logging_mixin.py:103} INFO - [2021-02-10 10:54:13,938] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:14,167] {logging_mixin.py:103} INFO - [2021-02-10 10:54:14,167] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:54:14,883] {logging_mixin.py:103} INFO - [2021-02-10 10:54:14,883] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:14,929] {logging_mixin.py:103} INFO - [2021-02-10 10:54:14,929] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:54:14,929] {logging_mixin.py:103} INFO - [2021-02-10 10:54:14,929] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:54:16,896] {logging_mixin.py:103} INFO - [2021-02-10 10:54:16,895] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:16,898] {logging_mixin.py:103} INFO - [2021-02-10 10:54:16,898] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:54:16,910] {logging_mixin.py:103} INFO - [2021-02-10 10:54:16,910] {data_context.py:1281} INFO - Setting run_name to: 20210210T095416.910008Z
[2021-02-10 10:54:16,911] {logging_mixin.py:103} INFO - [2021-02-10 10:54:16,911] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:54:16,924] {logging_mixin.py:103} INFO - [2021-02-10 10:54:16,924] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:54:17,145] {logging_mixin.py:103} INFO - [2021-02-10 10:54:17,145] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:17,147] {logging_mixin.py:103} INFO - [2021-02-10 10:54:17,147] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:54:17,350] {logging_mixin.py:103} INFO - [2021-02-10 10:54:17,350] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:17,351] {logging_mixin.py:103} INFO - [2021-02-10 10:54:17,351] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:54:17,353] {logging_mixin.py:103} INFO - [2021-02-10 10:54:17,353] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:54:17,514] {logging_mixin.py:103} INFO - [2021-02-10 10:54:17,514] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:17,516] {logging_mixin.py:103} INFO - [2021-02-10 10:54:17,516] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:54:17,682] {logging_mixin.py:103} INFO - [2021-02-10 10:54:17,682] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:17,685] {logging_mixin.py:103} INFO - [2021-02-10 10:54:17,684] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:54:17,857] {logging_mixin.py:103} INFO - [2021-02-10 10:54:17,857] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:17,859] {logging_mixin.py:103} INFO - [2021-02-10 10:54:17,858] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:54:17,878] {logging_mixin.py:103} INFO - [2021-02-10 10:54:17,877] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:54:17,881] {logging_mixin.py:103} INFO - [2021-02-10 10:54:17,881] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:54:18,057] {logging_mixin.py:103} INFO - [2021-02-10 10:54:18,056] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:18,060] {logging_mixin.py:103} INFO - [2021-02-10 10:54:18,059] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:54:18,212] {logging_mixin.py:103} INFO - [2021-02-10 10:54:18,211] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:18,214] {logging_mixin.py:103} INFO - [2021-02-10 10:54:18,214] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:54:18,218] {logging_mixin.py:103} INFO - [2021-02-10 10:54:18,218] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:54:18,393] {logging_mixin.py:103} INFO - [2021-02-10 10:54:18,393] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:18,395] {logging_mixin.py:103} INFO - [2021-02-10 10:54:18,395] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:54:18,585] {logging_mixin.py:103} INFO - [2021-02-10 10:54:18,585] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:18,589] {logging_mixin.py:103} INFO - [2021-02-10 10:54:18,589] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:54:18,752] {logging_mixin.py:103} INFO - [2021-02-10 10:54:18,752] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:18,757] {logging_mixin.py:103} INFO - [2021-02-10 10:54:18,757] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:54:18,965] {logging_mixin.py:103} INFO - [2021-02-10 10:54:18,964] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:18,965] {logging_mixin.py:103} INFO - [2021-02-10 10:54:18,965] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:54:18,969] {logging_mixin.py:103} INFO - [2021-02-10 10:54:18,969] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:54:19,152] {logging_mixin.py:103} INFO - [2021-02-10 10:54:19,152] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:19,168] {logging_mixin.py:103} INFO - [2021-02-10 10:54:19,168] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:54:19,359] {logging_mixin.py:103} INFO - [2021-02-10 10:54:19,359] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:19,361] {logging_mixin.py:103} INFO - [2021-02-10 10:54:19,361] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:54:19,531] {logging_mixin.py:103} INFO - [2021-02-10 10:54:19,531] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:19,531] {logging_mixin.py:103} INFO - [2021-02-10 10:54:19,531] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:54:19,535] {logging_mixin.py:103} INFO - [2021-02-10 10:54:19,535] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:54:19,736] {logging_mixin.py:103} INFO - [2021-02-10 10:54:19,736] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:19,738] {logging_mixin.py:103} INFO - [2021-02-10 10:54:19,738] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:54:19,915] {logging_mixin.py:103} INFO - [2021-02-10 10:54:19,914] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:19,915] {logging_mixin.py:103} INFO - [2021-02-10 10:54:19,915] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:54:19,920] {logging_mixin.py:103} INFO - [2021-02-10 10:54:19,920] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:54:20,082] {logging_mixin.py:103} INFO - [2021-02-10 10:54:20,082] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:20,085] {logging_mixin.py:103} INFO - [2021-02-10 10:54:20,084] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 10:54:20,714] {logging_mixin.py:103} INFO - [2021-02-10 10:54:20,714] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:20,759] {logging_mixin.py:103} INFO - [2021-02-10 10:54:20,759] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:54:20,958] {logging_mixin.py:103} INFO - [2021-02-10 10:54:20,957] {cursor.py:560} INFO - query execution done
[2021-02-10 10:54:27,752] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:54:58,979] {scheduler_job.py:181} INFO - Started process (PID=68982) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:54:58,982] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:54:58,983] {logging_mixin.py:103} INFO - [2021-02-10 10:54:58,983] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:55:00,704] {logging_mixin.py:103} INFO - [2021-02-10 10:55:00,704] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:55:01,007] {logging_mixin.py:103} INFO - [2021-02-10 10:55:01,007] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:55:01,370] {logging_mixin.py:103} INFO - [2021-02-10 10:55:01,370] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:55:01,370] {logging_mixin.py:103} INFO - [2021-02-10 10:55:01,370] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:55:01,370] {logging_mixin.py:103} INFO - [2021-02-10 10:55:01,370] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:55:02,492] {logging_mixin.py:103} INFO - [2021-02-10 10:55:02,492] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:55:02,719] {logging_mixin.py:103} INFO - [2021-02-10 10:55:02,719] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:02,722] {logging_mixin.py:103} INFO - [2021-02-10 10:55:02,722] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:55:02,984] {logging_mixin.py:103} INFO - [2021-02-10 10:55:02,984] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:02,985] {logging_mixin.py:103} INFO - [2021-02-10 10:55:02,985] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:55:03,160] {logging_mixin.py:103} INFO - [2021-02-10 10:55:03,160] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:03,163] {logging_mixin.py:103} INFO - [2021-02-10 10:55:03,163] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:55:03,331] {logging_mixin.py:103} INFO - [2021-02-10 10:55:03,331] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:03,605] {logging_mixin.py:103} INFO - [2021-02-10 10:55:03,605] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:55:04,121] {logging_mixin.py:103} INFO - [2021-02-10 10:55:04,121] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:04,169] {logging_mixin.py:103} INFO - [2021-02-10 10:55:04,169] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:55:04,170] {logging_mixin.py:103} INFO - [2021-02-10 10:55:04,169] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:55:05,581] {logging_mixin.py:103} INFO - [2021-02-10 10:55:05,581] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:05,585] {logging_mixin.py:103} INFO - [2021-02-10 10:55:05,585] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:55:05,596] {logging_mixin.py:103} INFO - [2021-02-10 10:55:05,596] {data_context.py:1281} INFO - Setting run_name to: 20210210T095505.596397Z
[2021-02-10 10:55:05,597] {logging_mixin.py:103} INFO - [2021-02-10 10:55:05,597] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:55:05,608] {logging_mixin.py:103} INFO - [2021-02-10 10:55:05,608] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:55:05,793] {logging_mixin.py:103} INFO - [2021-02-10 10:55:05,792] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:05,795] {logging_mixin.py:103} INFO - [2021-02-10 10:55:05,794] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:55:05,979] {logging_mixin.py:103} INFO - [2021-02-10 10:55:05,978] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:05,979] {logging_mixin.py:103} INFO - [2021-02-10 10:55:05,979] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:55:05,982] {logging_mixin.py:103} INFO - [2021-02-10 10:55:05,982] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:55:06,174] {logging_mixin.py:103} INFO - [2021-02-10 10:55:06,174] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:06,176] {logging_mixin.py:103} INFO - [2021-02-10 10:55:06,176] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:55:06,331] {logging_mixin.py:103} INFO - [2021-02-10 10:55:06,331] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:06,333] {logging_mixin.py:103} INFO - [2021-02-10 10:55:06,333] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:55:06,505] {logging_mixin.py:103} INFO - [2021-02-10 10:55:06,505] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:06,506] {logging_mixin.py:103} INFO - [2021-02-10 10:55:06,506] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:55:06,521] {logging_mixin.py:103} INFO - [2021-02-10 10:55:06,521] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:55:06,523] {logging_mixin.py:103} INFO - [2021-02-10 10:55:06,523] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:55:06,703] {logging_mixin.py:103} INFO - [2021-02-10 10:55:06,703] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:06,705] {logging_mixin.py:103} INFO - [2021-02-10 10:55:06,705] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:55:07,077] {logging_mixin.py:103} INFO - [2021-02-10 10:55:07,076] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:07,077] {logging_mixin.py:103} INFO - [2021-02-10 10:55:07,077] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:55:07,080] {logging_mixin.py:103} INFO - [2021-02-10 10:55:07,080] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:55:07,239] {logging_mixin.py:103} INFO - [2021-02-10 10:55:07,238] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:07,240] {logging_mixin.py:103} INFO - [2021-02-10 10:55:07,240] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:55:07,407] {logging_mixin.py:103} INFO - [2021-02-10 10:55:07,407] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:07,411] {logging_mixin.py:103} INFO - [2021-02-10 10:55:07,410] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:55:07,589] {logging_mixin.py:103} INFO - [2021-02-10 10:55:07,589] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:07,592] {logging_mixin.py:103} INFO - [2021-02-10 10:55:07,592] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:55:07,752] {logging_mixin.py:103} INFO - [2021-02-10 10:55:07,752] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:07,753] {logging_mixin.py:103} INFO - [2021-02-10 10:55:07,753] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:55:07,757] {logging_mixin.py:103} INFO - [2021-02-10 10:55:07,757] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:55:07,966] {logging_mixin.py:103} INFO - [2021-02-10 10:55:07,966] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:07,979] {logging_mixin.py:103} INFO - [2021-02-10 10:55:07,979] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:55:08,145] {logging_mixin.py:103} INFO - [2021-02-10 10:55:08,145] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:08,147] {logging_mixin.py:103} INFO - [2021-02-10 10:55:08,147] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:55:08,313] {logging_mixin.py:103} INFO - [2021-02-10 10:55:08,313] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:08,313] {logging_mixin.py:103} INFO - [2021-02-10 10:55:08,313] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:55:08,318] {logging_mixin.py:103} INFO - [2021-02-10 10:55:08,318] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:55:08,492] {logging_mixin.py:103} INFO - [2021-02-10 10:55:08,492] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:08,494] {logging_mixin.py:103} INFO - [2021-02-10 10:55:08,494] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:55:08,686] {logging_mixin.py:103} INFO - [2021-02-10 10:55:08,686] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:08,687] {logging_mixin.py:103} INFO - [2021-02-10 10:55:08,686] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:55:08,691] {logging_mixin.py:103} INFO - [2021-02-10 10:55:08,691] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:55:08,853] {logging_mixin.py:103} INFO - [2021-02-10 10:55:08,853] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:08,856] {logging_mixin.py:103} INFO - [2021-02-10 10:55:08,855] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 10:55:09,010] {logging_mixin.py:103} INFO - [2021-02-10 10:55:09,010] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:09,050] {logging_mixin.py:103} INFO - [2021-02-10 10:55:09,050] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:55:09,183] {logging_mixin.py:103} INFO - [2021-02-10 10:55:09,183] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:15,779] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:55:48,692] {scheduler_job.py:181} INFO - Started process (PID=69053) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:55:48,694] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:55:48,694] {logging_mixin.py:103} INFO - [2021-02-10 10:55:48,694] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:55:50,976] {logging_mixin.py:103} INFO - [2021-02-10 10:55:50,976] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:55:51,528] {logging_mixin.py:103} INFO - [2021-02-10 10:55:51,528] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:55:51,933] {logging_mixin.py:103} INFO - [2021-02-10 10:55:51,933] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:55:51,933] {logging_mixin.py:103} INFO - [2021-02-10 10:55:51,933] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:55:51,933] {logging_mixin.py:103} INFO - [2021-02-10 10:55:51,933] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:55:53,182] {logging_mixin.py:103} INFO - [2021-02-10 10:55:53,182] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:55:53,379] {logging_mixin.py:103} INFO - [2021-02-10 10:55:53,379] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:53,381] {logging_mixin.py:103} INFO - [2021-02-10 10:55:53,381] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:55:53,555] {logging_mixin.py:103} INFO - [2021-02-10 10:55:53,555] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:53,555] {logging_mixin.py:103} INFO - [2021-02-10 10:55:53,555] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:55:53,717] {logging_mixin.py:103} INFO - [2021-02-10 10:55:53,717] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:53,717] {logging_mixin.py:103} INFO - [2021-02-10 10:55:53,717] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:55:53,869] {logging_mixin.py:103} INFO - [2021-02-10 10:55:53,868] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:54,201] {logging_mixin.py:103} INFO - [2021-02-10 10:55:54,201] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:55:54,349] {logging_mixin.py:103} INFO - [2021-02-10 10:55:54,349] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:54,395] {logging_mixin.py:103} INFO - [2021-02-10 10:55:54,395] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:55:54,395] {logging_mixin.py:103} INFO - [2021-02-10 10:55:54,395] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:55:55,951] {logging_mixin.py:103} INFO - [2021-02-10 10:55:55,951] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:55,955] {logging_mixin.py:103} INFO - [2021-02-10 10:55:55,955] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:55:55,966] {logging_mixin.py:103} INFO - [2021-02-10 10:55:55,966] {data_context.py:1281} INFO - Setting run_name to: 20210210T095555.965983Z
[2021-02-10 10:55:55,967] {logging_mixin.py:103} INFO - [2021-02-10 10:55:55,967] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:55:55,977] {logging_mixin.py:103} INFO - [2021-02-10 10:55:55,977] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:55:56,273] {logging_mixin.py:103} INFO - [2021-02-10 10:55:56,272] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:56,275] {logging_mixin.py:103} INFO - [2021-02-10 10:55:56,275] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:55:56,456] {logging_mixin.py:103} INFO - [2021-02-10 10:55:56,455] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:56,456] {logging_mixin.py:103} INFO - [2021-02-10 10:55:56,456] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:55:56,458] {logging_mixin.py:103} INFO - [2021-02-10 10:55:56,458] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:55:56,638] {logging_mixin.py:103} INFO - [2021-02-10 10:55:56,637] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:56,640] {logging_mixin.py:103} INFO - [2021-02-10 10:55:56,640] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:55:56,813] {logging_mixin.py:103} INFO - [2021-02-10 10:55:56,813] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:56,815] {logging_mixin.py:103} INFO - [2021-02-10 10:55:56,814] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:55:56,986] {logging_mixin.py:103} INFO - [2021-02-10 10:55:56,986] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:56,987] {logging_mixin.py:103} INFO - [2021-02-10 10:55:56,986] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:55:57,002] {logging_mixin.py:103} INFO - [2021-02-10 10:55:57,002] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:55:57,005] {logging_mixin.py:103} INFO - [2021-02-10 10:55:57,004] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:55:57,205] {logging_mixin.py:103} INFO - [2021-02-10 10:55:57,205] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:57,207] {logging_mixin.py:103} INFO - [2021-02-10 10:55:57,207] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:55:57,510] {logging_mixin.py:103} INFO - [2021-02-10 10:55:57,510] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:57,511] {logging_mixin.py:103} INFO - [2021-02-10 10:55:57,510] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:55:57,513] {logging_mixin.py:103} INFO - [2021-02-10 10:55:57,513] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:55:57,704] {logging_mixin.py:103} INFO - [2021-02-10 10:55:57,703] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:57,705] {logging_mixin.py:103} INFO - [2021-02-10 10:55:57,705] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:55:57,892] {logging_mixin.py:103} INFO - [2021-02-10 10:55:57,892] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:57,895] {logging_mixin.py:103} INFO - [2021-02-10 10:55:57,894] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:55:58,068] {logging_mixin.py:103} INFO - [2021-02-10 10:55:58,068] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:58,071] {logging_mixin.py:103} INFO - [2021-02-10 10:55:58,071] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:55:58,235] {logging_mixin.py:103} INFO - [2021-02-10 10:55:58,235] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:58,236] {logging_mixin.py:103} INFO - [2021-02-10 10:55:58,235] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:55:58,240] {logging_mixin.py:103} INFO - [2021-02-10 10:55:58,240] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:55:58,485] {logging_mixin.py:103} INFO - [2021-02-10 10:55:58,485] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:58,499] {logging_mixin.py:103} INFO - [2021-02-10 10:55:58,498] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:55:58,705] {logging_mixin.py:103} INFO - [2021-02-10 10:55:58,705] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:58,707] {logging_mixin.py:103} INFO - [2021-02-10 10:55:58,707] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:55:58,933] {logging_mixin.py:103} INFO - [2021-02-10 10:55:58,933] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:58,933] {logging_mixin.py:103} INFO - [2021-02-10 10:55:58,933] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:55:58,936] {logging_mixin.py:103} INFO - [2021-02-10 10:55:58,936] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:55:59,133] {logging_mixin.py:103} INFO - [2021-02-10 10:55:59,133] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:59,135] {logging_mixin.py:103} INFO - [2021-02-10 10:55:59,135] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:55:59,297] {logging_mixin.py:103} INFO - [2021-02-10 10:55:59,297] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:59,297] {logging_mixin.py:103} INFO - [2021-02-10 10:55:59,297] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:55:59,299] {logging_mixin.py:103} INFO - [2021-02-10 10:55:59,299] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:55:59,458] {logging_mixin.py:103} INFO - [2021-02-10 10:55:59,458] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:59,460] {logging_mixin.py:103} INFO - [2021-02-10 10:55:59,460] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 10:55:59,734] {logging_mixin.py:103} INFO - [2021-02-10 10:55:59,734] {cursor.py:560} INFO - query execution done
[2021-02-10 10:55:59,784] {logging_mixin.py:103} INFO - [2021-02-10 10:55:59,784] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:55:59,943] {logging_mixin.py:103} INFO - [2021-02-10 10:55:59,943] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:09,484] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:56:41,628] {scheduler_job.py:181} INFO - Started process (PID=69122) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:56:41,630] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:56:41,630] {logging_mixin.py:103} INFO - [2021-02-10 10:56:41,630] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:56:44,783] {logging_mixin.py:103} INFO - [2021-02-10 10:56:44,782] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:56:45,265] {logging_mixin.py:103} INFO - [2021-02-10 10:56:45,264] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:56:45,747] {logging_mixin.py:103} INFO - [2021-02-10 10:56:45,747] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:56:45,747] {logging_mixin.py:103} INFO - [2021-02-10 10:56:45,747] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:56:45,748] {logging_mixin.py:103} INFO - [2021-02-10 10:56:45,747] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:56:46,696] {logging_mixin.py:103} INFO - [2021-02-10 10:56:46,696] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:56:46,865] {logging_mixin.py:103} INFO - [2021-02-10 10:56:46,865] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:46,868] {logging_mixin.py:103} INFO - [2021-02-10 10:56:46,868] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:56:47,055] {logging_mixin.py:103} INFO - [2021-02-10 10:56:47,055] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:47,056] {logging_mixin.py:103} INFO - [2021-02-10 10:56:47,055] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:56:47,214] {logging_mixin.py:103} INFO - [2021-02-10 10:56:47,214] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:47,219] {logging_mixin.py:103} INFO - [2021-02-10 10:56:47,218] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:56:47,370] {logging_mixin.py:103} INFO - [2021-02-10 10:56:47,370] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:47,602] {logging_mixin.py:103} INFO - [2021-02-10 10:56:47,601] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 10:56:47,784] {logging_mixin.py:103} INFO - [2021-02-10 10:56:47,783] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:47,831] {logging_mixin.py:103} INFO - [2021-02-10 10:56:47,831] {json_result.py:116} INFO - fetching data done
[2021-02-10 10:56:47,832] {logging_mixin.py:103} INFO - [2021-02-10 10:56:47,832] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 10:56:49,039] {logging_mixin.py:103} INFO - [2021-02-10 10:56:49,039] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:49,044] {logging_mixin.py:103} INFO - [2021-02-10 10:56:49,044] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:56:49,059] {logging_mixin.py:103} INFO - [2021-02-10 10:56:49,059] {data_context.py:1281} INFO - Setting run_name to: 20210210T095649.059211Z
[2021-02-10 10:56:49,061] {logging_mixin.py:103} INFO - [2021-02-10 10:56:49,061] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 10:56:49,076] {logging_mixin.py:103} INFO - [2021-02-10 10:56:49,075] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:56:49,253] {logging_mixin.py:103} INFO - [2021-02-10 10:56:49,252] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:49,255] {logging_mixin.py:103} INFO - [2021-02-10 10:56:49,254] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 10:56:49,408] {logging_mixin.py:103} INFO - [2021-02-10 10:56:49,408] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:49,409] {logging_mixin.py:103} INFO - [2021-02-10 10:56:49,409] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:56:49,413] {logging_mixin.py:103} INFO - [2021-02-10 10:56:49,412] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:56:49,631] {logging_mixin.py:103} INFO - [2021-02-10 10:56:49,631] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:49,633] {logging_mixin.py:103} INFO - [2021-02-10 10:56:49,633] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 10:56:49,837] {logging_mixin.py:103} INFO - [2021-02-10 10:56:49,837] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:49,840] {logging_mixin.py:103} INFO - [2021-02-10 10:56:49,840] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 10:56:49,989] {logging_mixin.py:103} INFO - [2021-02-10 10:56:49,987] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:49,989] {logging_mixin.py:103} INFO - [2021-02-10 10:56:49,989] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:56:50,006] {logging_mixin.py:103} INFO - [2021-02-10 10:56:50,006] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 10:56:50,008] {logging_mixin.py:103} INFO - [2021-02-10 10:56:50,008] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:56:50,211] {logging_mixin.py:103} INFO - [2021-02-10 10:56:50,211] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:50,214] {logging_mixin.py:103} INFO - [2021-02-10 10:56:50,213] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 10:56:50,641] {logging_mixin.py:103} INFO - [2021-02-10 10:56:50,641] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:50,641] {logging_mixin.py:103} INFO - [2021-02-10 10:56:50,641] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:56:50,643] {logging_mixin.py:103} INFO - [2021-02-10 10:56:50,643] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 10:56:50,834] {logging_mixin.py:103} INFO - [2021-02-10 10:56:50,834] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:50,836] {logging_mixin.py:103} INFO - [2021-02-10 10:56:50,835] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:56:51,011] {logging_mixin.py:103} INFO - [2021-02-10 10:56:51,011] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:51,017] {logging_mixin.py:103} INFO - [2021-02-10 10:56:51,017] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 10:56:51,549] {logging_mixin.py:103} INFO - [2021-02-10 10:56:51,549] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:51,552] {logging_mixin.py:103} INFO - [2021-02-10 10:56:51,552] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 10:56:51,739] {logging_mixin.py:103} INFO - [2021-02-10 10:56:51,738] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:51,739] {logging_mixin.py:103} INFO - [2021-02-10 10:56:51,739] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:56:51,743] {logging_mixin.py:103} INFO - [2021-02-10 10:56:51,743] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 10:56:51,909] {logging_mixin.py:103} INFO - [2021-02-10 10:56:51,909] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:51,925] {logging_mixin.py:103} INFO - [2021-02-10 10:56:51,925] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 10:56:52,129] {logging_mixin.py:103} INFO - [2021-02-10 10:56:52,129] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:52,131] {logging_mixin.py:103} INFO - [2021-02-10 10:56:52,130] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 10:56:52,347] {logging_mixin.py:103} INFO - [2021-02-10 10:56:52,347] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:52,347] {logging_mixin.py:103} INFO - [2021-02-10 10:56:52,347] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:56:52,351] {logging_mixin.py:103} INFO - [2021-02-10 10:56:52,351] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 10:56:52,571] {logging_mixin.py:103} INFO - [2021-02-10 10:56:52,570] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:52,583] {logging_mixin.py:103} INFO - [2021-02-10 10:56:52,582] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 10:56:52,757] {logging_mixin.py:103} INFO - [2021-02-10 10:56:52,757] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:52,757] {logging_mixin.py:103} INFO - [2021-02-10 10:56:52,757] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 10:56:52,762] {logging_mixin.py:103} INFO - [2021-02-10 10:56:52,762] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 10:56:52,946] {logging_mixin.py:103} INFO - [2021-02-10 10:56:52,946] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:52,948] {logging_mixin.py:103} INFO - [2021-02-10 10:56:52,948] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 10:56:53,136] {logging_mixin.py:103} INFO - [2021-02-10 10:56:53,136] {cursor.py:560} INFO - query execution done
[2021-02-10 10:56:53,184] {logging_mixin.py:103} INFO - [2021-02-10 10:56:53,184] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:56:53,376] {logging_mixin.py:103} INFO - [2021-02-10 10:56:53,376] {cursor.py:560} INFO - query execution done
[2021-02-10 10:57:01,161] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 10:59:54,986] {scheduler_job.py:181} INFO - Started process (PID=69326) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:59:54,987] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 10:59:54,987] {logging_mixin.py:103} INFO - [2021-02-10 10:59:54,987] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 10:59:57,369] {logging_mixin.py:103} INFO - [2021-02-10 10:59:57,368] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 10:59:57,675] {logging_mixin.py:103} INFO - [2021-02-10 10:59:57,675] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 10:59:58,043] {logging_mixin.py:103} INFO - [2021-02-10 10:59:58,043] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 10:59:58,043] {logging_mixin.py:103} INFO - [2021-02-10 10:59:58,043] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 10:59:58,043] {logging_mixin.py:103} INFO - [2021-02-10 10:59:58,043] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 10:59:58,929] {logging_mixin.py:103} INFO - [2021-02-10 10:59:58,929] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:59:59,083] {logging_mixin.py:103} INFO - [2021-02-10 10:59:59,083] {cursor.py:560} INFO - query execution done
[2021-02-10 10:59:59,085] {logging_mixin.py:103} INFO - [2021-02-10 10:59:59,085] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 10:59:59,261] {logging_mixin.py:103} INFO - [2021-02-10 10:59:59,261] {cursor.py:560} INFO - query execution done
[2021-02-10 10:59:59,262] {logging_mixin.py:103} INFO - [2021-02-10 10:59:59,262] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:59:59,405] {logging_mixin.py:103} INFO - [2021-02-10 10:59:59,405] {cursor.py:560} INFO - query execution done
[2021-02-10 10:59:59,408] {logging_mixin.py:103} INFO - [2021-02-10 10:59:59,407] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 10:59:59,573] {logging_mixin.py:103} INFO - [2021-02-10 10:59:59,573] {cursor.py:560} INFO - query execution done
[2021-02-10 11:00:00,055] {logging_mixin.py:103} INFO - [2021-02-10 11:00:00,055] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:00:00,223] {logging_mixin.py:103} INFO - [2021-02-10 11:00:00,223] {cursor.py:560} INFO - query execution done
[2021-02-10 11:00:00,324] {logging_mixin.py:103} INFO - [2021-02-10 11:00:00,323] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:00:00,324] {logging_mixin.py:103} INFO - [2021-02-10 11:00:00,324] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:00:02,362] {logging_mixin.py:103} INFO - [2021-02-10 11:00:02,362] {cursor.py:560} INFO - query execution done
[2021-02-10 11:00:02,366] {logging_mixin.py:103} INFO - [2021-02-10 11:00:02,366] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:00:02,377] {logging_mixin.py:103} INFO - [2021-02-10 11:00:02,377] {data_context.py:1281} INFO - Setting run_name to: 20210210T100002.377022Z
[2021-02-10 11:00:02,378] {logging_mixin.py:103} INFO - [2021-02-10 11:00:02,378] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:00:02,391] {logging_mixin.py:103} INFO - [2021-02-10 11:00:02,391] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:00:03,344] {logging_mixin.py:103} INFO - [2021-02-10 11:00:03,344] {cursor.py:560} INFO - query execution done
[2021-02-10 11:00:03,346] {logging_mixin.py:103} INFO - [2021-02-10 11:00:03,346] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:00:03,818] {logging_mixin.py:103} INFO - [2021-02-10 11:00:03,818] {cursor.py:560} INFO - query execution done
[2021-02-10 11:00:03,818] {logging_mixin.py:103} INFO - [2021-02-10 11:00:03,818] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:00:03,819] {logging_mixin.py:103} INFO - [2021-02-10 11:00:03,819] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:00:04,919] {logging_mixin.py:103} INFO - [2021-02-10 11:00:04,919] {cursor.py:560} INFO - query execution done
[2021-02-10 11:00:04,921] {logging_mixin.py:103} INFO - [2021-02-10 11:00:04,921] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:00:05,423] {logging_mixin.py:103} INFO - [2021-02-10 11:00:05,423] {cursor.py:560} INFO - query execution done
[2021-02-10 11:00:05,426] {logging_mixin.py:103} INFO - [2021-02-10 11:00:05,425] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:00:05,793] {logging_mixin.py:103} INFO - [2021-02-10 11:00:05,792] {cursor.py:560} INFO - query execution done
[2021-02-10 11:00:05,793] {logging_mixin.py:103} INFO - [2021-02-10 11:00:05,793] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:00:05,809] {logging_mixin.py:103} INFO - [2021-02-10 11:00:05,809] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:00:05,812] {logging_mixin.py:103} INFO - [2021-02-10 11:00:05,811] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:00:06,079] {logging_mixin.py:103} INFO - [2021-02-10 11:00:06,079] {cursor.py:560} INFO - query execution done
[2021-02-10 11:00:06,081] {logging_mixin.py:103} INFO - [2021-02-10 11:00:06,080] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:00:06,334] {logging_mixin.py:103} INFO - [2021-02-10 11:00:06,334] {cursor.py:560} INFO - query execution done
[2021-02-10 11:00:06,334] {logging_mixin.py:103} INFO - [2021-02-10 11:00:06,334] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:00:06,338] {logging_mixin.py:103} INFO - [2021-02-10 11:00:06,337] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:00:06,655] {logging_mixin.py:103} INFO - [2021-02-10 11:00:06,655] {cursor.py:560} INFO - query execution done
[2021-02-10 11:00:06,657] {logging_mixin.py:103} INFO - [2021-02-10 11:00:06,656] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:00:06,874] {logging_mixin.py:103} INFO - [2021-02-10 11:00:06,874] {cursor.py:560} INFO - query execution done
[2021-02-10 11:00:06,877] {logging_mixin.py:103} INFO - [2021-02-10 11:00:06,877] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:00:07,114] {logging_mixin.py:103} INFO - [2021-02-10 11:00:07,114] {cursor.py:560} INFO - query execution done
[2021-02-10 11:00:07,116] {logging_mixin.py:103} INFO - [2021-02-10 11:00:07,116] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:00:07,551] {logging_mixin.py:103} INFO - [2021-02-10 11:00:07,551] {cursor.py:560} INFO - query execution done
[2021-02-10 11:00:07,551] {logging_mixin.py:103} INFO - [2021-02-10 11:00:07,551] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:00:07,554] {logging_mixin.py:103} INFO - [2021-02-10 11:00:07,554] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:00:08,468] {logging_mixin.py:103} INFO - [2021-02-10 11:00:08,468] {cursor.py:560} INFO - query execution done
[2021-02-10 11:00:08,492] {logging_mixin.py:103} INFO - [2021-02-10 11:00:08,492] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:00:08,781] {logging_mixin.py:103} INFO - [2021-02-10 11:00:08,781] {cursor.py:560} INFO - query execution done
[2021-02-10 11:00:08,783] {logging_mixin.py:103} INFO - [2021-02-10 11:00:08,783] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:00:08,994] {logging_mixin.py:103} INFO - [2021-02-10 11:00:08,994] {cursor.py:560} INFO - query execution done
[2021-02-10 11:00:08,995] {logging_mixin.py:103} INFO - [2021-02-10 11:00:08,994] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:00:08,997] {logging_mixin.py:103} INFO - [2021-02-10 11:00:08,997] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:00:09,701] {logging_mixin.py:103} INFO - [2021-02-10 11:00:09,701] {cursor.py:560} INFO - query execution done
[2021-02-10 11:00:09,704] {logging_mixin.py:103} INFO - [2021-02-10 11:00:09,704] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:00:09,970] {logging_mixin.py:103} INFO - [2021-02-10 11:00:09,969] {cursor.py:560} INFO - query execution done
[2021-02-10 11:00:09,972] {logging_mixin.py:103} INFO - [2021-02-10 11:00:09,972] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:00:09,976] {logging_mixin.py:103} INFO - [2021-02-10 11:00:09,975] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:00:10,244] {logging_mixin.py:103} INFO - [2021-02-10 11:00:10,244] {cursor.py:560} INFO - query execution done
[2021-02-10 11:00:10,246] {logging_mixin.py:103} INFO - [2021-02-10 11:00:10,246] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:00:10,467] {logging_mixin.py:103} INFO - [2021-02-10 11:00:10,467] {cursor.py:560} INFO - query execution done
[2021-02-10 11:00:10,520] {logging_mixin.py:103} INFO - [2021-02-10 11:00:10,520] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:00:10,717] {logging_mixin.py:103} INFO - [2021-02-10 11:00:10,717] {cursor.py:560} INFO - query execution done
[2021-02-10 11:00:17,875] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:00:56,932] {scheduler_job.py:181} INFO - Started process (PID=69415) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:00:56,933] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:00:56,934] {logging_mixin.py:103} INFO - [2021-02-10 11:00:56,934] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:00:59,041] {logging_mixin.py:103} INFO - [2021-02-10 11:00:59,040] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:00:59,349] {logging_mixin.py:103} INFO - [2021-02-10 11:00:59,349] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:00:59,759] {logging_mixin.py:103} INFO - [2021-02-10 11:00:59,759] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:00:59,759] {logging_mixin.py:103} INFO - [2021-02-10 11:00:59,759] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:00:59,759] {logging_mixin.py:103} INFO - [2021-02-10 11:00:59,759] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:01:01,960] {logging_mixin.py:103} INFO - [2021-02-10 11:01:01,960] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:01:02,193] {logging_mixin.py:103} INFO - [2021-02-10 11:01:02,192] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:02,195] {logging_mixin.py:103} INFO - [2021-02-10 11:01:02,195] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:01:02,358] {logging_mixin.py:103} INFO - [2021-02-10 11:01:02,357] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:02,358] {logging_mixin.py:103} INFO - [2021-02-10 11:01:02,358] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:01:02,576] {logging_mixin.py:103} INFO - [2021-02-10 11:01:02,576] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:02,579] {logging_mixin.py:103} INFO - [2021-02-10 11:01:02,579] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:01:03,160] {logging_mixin.py:103} INFO - [2021-02-10 11:01:03,160] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:03,395] {logging_mixin.py:103} INFO - [2021-02-10 11:01:03,394] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:01:03,638] {logging_mixin.py:103} INFO - [2021-02-10 11:01:03,637] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:03,693] {logging_mixin.py:103} INFO - [2021-02-10 11:01:03,693] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:01:03,694] {logging_mixin.py:103} INFO - [2021-02-10 11:01:03,693] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:01:07,785] {logging_mixin.py:103} INFO - [2021-02-10 11:01:07,785] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:07,789] {logging_mixin.py:103} INFO - [2021-02-10 11:01:07,789] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:01:07,799] {logging_mixin.py:103} INFO - [2021-02-10 11:01:07,799] {data_context.py:1281} INFO - Setting run_name to: 20210210T100107.799424Z
[2021-02-10 11:01:07,800] {logging_mixin.py:103} INFO - [2021-02-10 11:01:07,800] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:01:07,811] {logging_mixin.py:103} INFO - [2021-02-10 11:01:07,811] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:01:08,374] {logging_mixin.py:103} INFO - [2021-02-10 11:01:08,374] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:08,375] {logging_mixin.py:103} INFO - [2021-02-10 11:01:08,375] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:01:09,607] {logging_mixin.py:103} INFO - [2021-02-10 11:01:09,607] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:09,608] {logging_mixin.py:103} INFO - [2021-02-10 11:01:09,608] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:01:09,610] {logging_mixin.py:103} INFO - [2021-02-10 11:01:09,610] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:01:09,824] {logging_mixin.py:103} INFO - [2021-02-10 11:01:09,824] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:09,827] {logging_mixin.py:103} INFO - [2021-02-10 11:01:09,827] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:01:10,025] {logging_mixin.py:103} INFO - [2021-02-10 11:01:10,025] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:10,028] {logging_mixin.py:103} INFO - [2021-02-10 11:01:10,028] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:01:10,832] {logging_mixin.py:103} INFO - [2021-02-10 11:01:10,831] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:10,832] {logging_mixin.py:103} INFO - [2021-02-10 11:01:10,832] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:01:10,852] {logging_mixin.py:103} INFO - [2021-02-10 11:01:10,851] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:01:10,854] {logging_mixin.py:103} INFO - [2021-02-10 11:01:10,854] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:01:11,451] {logging_mixin.py:103} INFO - [2021-02-10 11:01:11,450] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:11,453] {logging_mixin.py:103} INFO - [2021-02-10 11:01:11,452] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:01:12,070] {logging_mixin.py:103} INFO - [2021-02-10 11:01:12,070] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:12,071] {logging_mixin.py:103} INFO - [2021-02-10 11:01:12,071] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:01:12,074] {logging_mixin.py:103} INFO - [2021-02-10 11:01:12,074] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:01:12,317] {logging_mixin.py:103} INFO - [2021-02-10 11:01:12,317] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:12,319] {logging_mixin.py:103} INFO - [2021-02-10 11:01:12,319] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:01:12,569] {logging_mixin.py:103} INFO - [2021-02-10 11:01:12,569] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:12,573] {logging_mixin.py:103} INFO - [2021-02-10 11:01:12,573] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:01:13,904] {logging_mixin.py:103} INFO - [2021-02-10 11:01:13,904] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:13,907] {logging_mixin.py:103} INFO - [2021-02-10 11:01:13,907] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:01:14,522] {logging_mixin.py:103} INFO - [2021-02-10 11:01:14,522] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:14,523] {logging_mixin.py:103} INFO - [2021-02-10 11:01:14,523] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:01:14,527] {logging_mixin.py:103} INFO - [2021-02-10 11:01:14,527] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:01:15,153] {logging_mixin.py:103} INFO - [2021-02-10 11:01:15,152] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:15,166] {logging_mixin.py:103} INFO - [2021-02-10 11:01:15,166] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:01:15,416] {logging_mixin.py:103} INFO - [2021-02-10 11:01:15,416] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:15,419] {logging_mixin.py:103} INFO - [2021-02-10 11:01:15,419] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:01:15,761] {logging_mixin.py:103} INFO - [2021-02-10 11:01:15,760] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:15,761] {logging_mixin.py:103} INFO - [2021-02-10 11:01:15,761] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:01:15,765] {logging_mixin.py:103} INFO - [2021-02-10 11:01:15,765] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:01:16,063] {logging_mixin.py:103} INFO - [2021-02-10 11:01:16,063] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:16,065] {logging_mixin.py:103} INFO - [2021-02-10 11:01:16,065] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:01:16,273] {logging_mixin.py:103} INFO - [2021-02-10 11:01:16,272] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:16,273] {logging_mixin.py:103} INFO - [2021-02-10 11:01:16,273] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:01:16,277] {logging_mixin.py:103} INFO - [2021-02-10 11:01:16,277] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:01:16,675] {logging_mixin.py:103} INFO - [2021-02-10 11:01:16,675] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:16,677] {logging_mixin.py:103} INFO - [2021-02-10 11:01:16,677] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:01:16,944] {logging_mixin.py:103} INFO - [2021-02-10 11:01:16,944] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:16,981] {logging_mixin.py:103} INFO - [2021-02-10 11:01:16,981] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:01:17,342] {logging_mixin.py:103} INFO - [2021-02-10 11:01:17,342] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:24,348] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:01:54,450] {scheduler_job.py:181} INFO - Started process (PID=69478) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:01:54,452] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:01:54,452] {logging_mixin.py:103} INFO - [2021-02-10 11:01:54,452] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:01:56,853] {logging_mixin.py:103} INFO - [2021-02-10 11:01:56,852] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:01:57,261] {logging_mixin.py:103} INFO - [2021-02-10 11:01:57,261] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:01:58,098] {logging_mixin.py:103} INFO - [2021-02-10 11:01:58,097] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:01:58,098] {logging_mixin.py:103} INFO - [2021-02-10 11:01:58,098] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:01:58,098] {logging_mixin.py:103} INFO - [2021-02-10 11:01:58,098] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:01:59,154] {logging_mixin.py:103} INFO - [2021-02-10 11:01:59,154] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:01:59,550] {logging_mixin.py:103} INFO - [2021-02-10 11:01:59,550] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:59,552] {logging_mixin.py:103} INFO - [2021-02-10 11:01:59,552] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:01:59,774] {logging_mixin.py:103} INFO - [2021-02-10 11:01:59,774] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:59,775] {logging_mixin.py:103} INFO - [2021-02-10 11:01:59,775] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:01:59,959] {logging_mixin.py:103} INFO - [2021-02-10 11:01:59,959] {cursor.py:560} INFO - query execution done
[2021-02-10 11:01:59,962] {logging_mixin.py:103} INFO - [2021-02-10 11:01:59,962] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:02:00,110] {logging_mixin.py:103} INFO - [2021-02-10 11:02:00,109] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:00,581] {logging_mixin.py:103} INFO - [2021-02-10 11:02:00,581] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:02:00,802] {logging_mixin.py:103} INFO - [2021-02-10 11:02:00,802] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:00,847] {logging_mixin.py:103} INFO - [2021-02-10 11:02:00,847] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:02:00,847] {logging_mixin.py:103} INFO - [2021-02-10 11:02:00,847] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:02:02,154] {logging_mixin.py:103} INFO - [2021-02-10 11:02:02,154] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:02,157] {logging_mixin.py:103} INFO - [2021-02-10 11:02:02,157] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:02:02,168] {logging_mixin.py:103} INFO - [2021-02-10 11:02:02,168] {data_context.py:1281} INFO - Setting run_name to: 20210210T100202.168722Z
[2021-02-10 11:02:02,170] {logging_mixin.py:103} INFO - [2021-02-10 11:02:02,170] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:02:02,180] {logging_mixin.py:103} INFO - [2021-02-10 11:02:02,180] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:02:02,369] {logging_mixin.py:103} INFO - [2021-02-10 11:02:02,369] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:02,371] {logging_mixin.py:103} INFO - [2021-02-10 11:02:02,371] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:02:02,626] {logging_mixin.py:103} INFO - [2021-02-10 11:02:02,626] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:02,627] {logging_mixin.py:103} INFO - [2021-02-10 11:02:02,627] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:02:02,632] {logging_mixin.py:103} INFO - [2021-02-10 11:02:02,632] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:02:02,908] {logging_mixin.py:103} INFO - [2021-02-10 11:02:02,908] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:02,911] {logging_mixin.py:103} INFO - [2021-02-10 11:02:02,911] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:02:03,187] {logging_mixin.py:103} INFO - [2021-02-10 11:02:03,187] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:03,191] {logging_mixin.py:103} INFO - [2021-02-10 11:02:03,190] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:02:03,433] {logging_mixin.py:103} INFO - [2021-02-10 11:02:03,433] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:03,434] {logging_mixin.py:103} INFO - [2021-02-10 11:02:03,434] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:02:03,462] {logging_mixin.py:103} INFO - [2021-02-10 11:02:03,461] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:02:03,466] {logging_mixin.py:103} INFO - [2021-02-10 11:02:03,466] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:02:03,741] {logging_mixin.py:103} INFO - [2021-02-10 11:02:03,741] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:03,744] {logging_mixin.py:103} INFO - [2021-02-10 11:02:03,743] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:02:03,964] {logging_mixin.py:103} INFO - [2021-02-10 11:02:03,964] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:03,965] {logging_mixin.py:103} INFO - [2021-02-10 11:02:03,965] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:02:03,968] {logging_mixin.py:103} INFO - [2021-02-10 11:02:03,968] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:02:04,188] {logging_mixin.py:103} INFO - [2021-02-10 11:02:04,187] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:04,190] {logging_mixin.py:103} INFO - [2021-02-10 11:02:04,190] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:02:04,441] {logging_mixin.py:103} INFO - [2021-02-10 11:02:04,441] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:04,445] {logging_mixin.py:103} INFO - [2021-02-10 11:02:04,445] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:02:04,660] {logging_mixin.py:103} INFO - [2021-02-10 11:02:04,660] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:04,663] {logging_mixin.py:103} INFO - [2021-02-10 11:02:04,662] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:02:04,907] {logging_mixin.py:103} INFO - [2021-02-10 11:02:04,907] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:04,907] {logging_mixin.py:103} INFO - [2021-02-10 11:02:04,907] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:02:04,914] {logging_mixin.py:103} INFO - [2021-02-10 11:02:04,914] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:02:05,192] {logging_mixin.py:103} INFO - [2021-02-10 11:02:05,191] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:05,201] {logging_mixin.py:103} INFO - [2021-02-10 11:02:05,201] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:02:05,439] {logging_mixin.py:103} INFO - [2021-02-10 11:02:05,439] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:05,441] {logging_mixin.py:103} INFO - [2021-02-10 11:02:05,441] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:02:05,843] {logging_mixin.py:103} INFO - [2021-02-10 11:02:05,843] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:05,843] {logging_mixin.py:103} INFO - [2021-02-10 11:02:05,843] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:02:05,848] {logging_mixin.py:103} INFO - [2021-02-10 11:02:05,847] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:02:06,079] {logging_mixin.py:103} INFO - [2021-02-10 11:02:06,078] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:06,080] {logging_mixin.py:103} INFO - [2021-02-10 11:02:06,080] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:02:06,361] {logging_mixin.py:103} INFO - [2021-02-10 11:02:06,361] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:06,362] {logging_mixin.py:103} INFO - [2021-02-10 11:02:06,361] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:02:06,368] {logging_mixin.py:103} INFO - [2021-02-10 11:02:06,367] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:02:06,647] {logging_mixin.py:103} INFO - [2021-02-10 11:02:06,647] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:06,651] {logging_mixin.py:103} INFO - [2021-02-10 11:02:06,651] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:02:06,887] {logging_mixin.py:103} INFO - [2021-02-10 11:02:06,887] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:06,923] {logging_mixin.py:103} INFO - [2021-02-10 11:02:06,923] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:02:07,150] {logging_mixin.py:103} INFO - [2021-02-10 11:02:07,150] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:14,708] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:02:48,997] {scheduler_job.py:181} INFO - Started process (PID=69542) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:02:48,999] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:02:48,999] {logging_mixin.py:103} INFO - [2021-02-10 11:02:48,999] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:02:51,271] {logging_mixin.py:103} INFO - [2021-02-10 11:02:51,271] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:02:51,635] {logging_mixin.py:103} INFO - [2021-02-10 11:02:51,635] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:02:51,993] {logging_mixin.py:103} INFO - [2021-02-10 11:02:51,993] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:02:51,994] {logging_mixin.py:103} INFO - [2021-02-10 11:02:51,994] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:02:51,994] {logging_mixin.py:103} INFO - [2021-02-10 11:02:51,994] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:02:53,756] {logging_mixin.py:103} INFO - [2021-02-10 11:02:53,756] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:02:54,361] {logging_mixin.py:103} INFO - [2021-02-10 11:02:54,360] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:54,362] {logging_mixin.py:103} INFO - [2021-02-10 11:02:54,362] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:02:54,712] {logging_mixin.py:103} INFO - [2021-02-10 11:02:54,712] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:54,713] {logging_mixin.py:103} INFO - [2021-02-10 11:02:54,713] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:02:54,868] {logging_mixin.py:103} INFO - [2021-02-10 11:02:54,867] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:54,871] {logging_mixin.py:103} INFO - [2021-02-10 11:02:54,870] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:02:55,066] {logging_mixin.py:103} INFO - [2021-02-10 11:02:55,065] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:55,404] {logging_mixin.py:103} INFO - [2021-02-10 11:02:55,404] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:02:55,597] {logging_mixin.py:103} INFO - [2021-02-10 11:02:55,597] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:55,650] {logging_mixin.py:103} INFO - [2021-02-10 11:02:55,650] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:02:55,651] {logging_mixin.py:103} INFO - [2021-02-10 11:02:55,651] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:02:56,824] {logging_mixin.py:103} INFO - [2021-02-10 11:02:56,824] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:56,828] {logging_mixin.py:103} INFO - [2021-02-10 11:02:56,828] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:02:56,840] {logging_mixin.py:103} INFO - [2021-02-10 11:02:56,840] {data_context.py:1281} INFO - Setting run_name to: 20210210T100256.840081Z
[2021-02-10 11:02:56,841] {logging_mixin.py:103} INFO - [2021-02-10 11:02:56,841] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:02:56,852] {logging_mixin.py:103} INFO - [2021-02-10 11:02:56,852] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:02:57,086] {logging_mixin.py:103} INFO - [2021-02-10 11:02:57,086] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:57,087] {logging_mixin.py:103} INFO - [2021-02-10 11:02:57,087] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:02:57,244] {logging_mixin.py:103} INFO - [2021-02-10 11:02:57,244] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:57,245] {logging_mixin.py:103} INFO - [2021-02-10 11:02:57,245] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:02:57,246] {logging_mixin.py:103} INFO - [2021-02-10 11:02:57,246] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:02:58,222] {logging_mixin.py:103} INFO - [2021-02-10 11:02:58,222] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:58,224] {logging_mixin.py:103} INFO - [2021-02-10 11:02:58,224] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:02:58,699] {logging_mixin.py:103} INFO - [2021-02-10 11:02:58,699] {cursor.py:560} INFO - query execution done
[2021-02-10 11:02:58,700] {logging_mixin.py:103} INFO - [2021-02-10 11:02:58,700] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:03:00,257] {logging_mixin.py:103} INFO - [2021-02-10 11:03:00,257] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:00,257] {logging_mixin.py:103} INFO - [2021-02-10 11:03:00,257] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:03:00,274] {logging_mixin.py:103} INFO - [2021-02-10 11:03:00,274] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:03:00,278] {logging_mixin.py:103} INFO - [2021-02-10 11:03:00,278] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:03:00,621] {logging_mixin.py:103} INFO - [2021-02-10 11:03:00,621] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:00,624] {logging_mixin.py:103} INFO - [2021-02-10 11:03:00,623] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:03:01,752] {logging_mixin.py:103} INFO - [2021-02-10 11:03:01,752] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:01,754] {logging_mixin.py:103} INFO - [2021-02-10 11:03:01,753] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:03:01,760] {logging_mixin.py:103} INFO - [2021-02-10 11:03:01,759] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:03:01,920] {logging_mixin.py:103} INFO - [2021-02-10 11:03:01,920] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:01,922] {logging_mixin.py:103} INFO - [2021-02-10 11:03:01,922] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:03:02,656] {logging_mixin.py:103} INFO - [2021-02-10 11:03:02,655] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:02,661] {logging_mixin.py:103} INFO - [2021-02-10 11:03:02,661] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:03:02,840] {logging_mixin.py:103} INFO - [2021-02-10 11:03:02,839] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:02,845] {logging_mixin.py:103} INFO - [2021-02-10 11:03:02,845] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:03:03,041] {logging_mixin.py:103} INFO - [2021-02-10 11:03:03,041] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:03,042] {logging_mixin.py:103} INFO - [2021-02-10 11:03:03,042] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:03:03,046] {logging_mixin.py:103} INFO - [2021-02-10 11:03:03,046] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:03:03,591] {logging_mixin.py:103} INFO - [2021-02-10 11:03:03,591] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:03,607] {logging_mixin.py:103} INFO - [2021-02-10 11:03:03,607] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:03:03,827] {logging_mixin.py:103} INFO - [2021-02-10 11:03:03,827] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:03,830] {logging_mixin.py:103} INFO - [2021-02-10 11:03:03,830] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:03:04,516] {logging_mixin.py:103} INFO - [2021-02-10 11:03:04,516] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:04,517] {logging_mixin.py:103} INFO - [2021-02-10 11:03:04,517] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:03:04,524] {logging_mixin.py:103} INFO - [2021-02-10 11:03:04,524] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:03:04,749] {logging_mixin.py:103} INFO - [2021-02-10 11:03:04,748] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:04,754] {logging_mixin.py:103} INFO - [2021-02-10 11:03:04,754] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:03:05,042] {logging_mixin.py:103} INFO - [2021-02-10 11:03:05,041] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:05,042] {logging_mixin.py:103} INFO - [2021-02-10 11:03:05,042] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:03:05,046] {logging_mixin.py:103} INFO - [2021-02-10 11:03:05,045] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:03:05,261] {logging_mixin.py:103} INFO - [2021-02-10 11:03:05,261] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:05,262] {logging_mixin.py:103} INFO - [2021-02-10 11:03:05,262] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:03:06,072] {logging_mixin.py:103} INFO - [2021-02-10 11:03:06,072] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:06,118] {logging_mixin.py:103} INFO - [2021-02-10 11:03:06,118] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:03:06,492] {logging_mixin.py:103} INFO - [2021-02-10 11:03:06,491] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:13,431] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:03:48,914] {scheduler_job.py:181} INFO - Started process (PID=69605) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:03:48,915] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:03:48,916] {logging_mixin.py:103} INFO - [2021-02-10 11:03:48,916] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:03:51,452] {logging_mixin.py:103} INFO - [2021-02-10 11:03:51,452] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:03:51,760] {logging_mixin.py:103} INFO - [2021-02-10 11:03:51,760] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:03:52,239] {logging_mixin.py:103} INFO - [2021-02-10 11:03:52,239] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:03:52,240] {logging_mixin.py:103} INFO - [2021-02-10 11:03:52,240] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:03:52,240] {logging_mixin.py:103} INFO - [2021-02-10 11:03:52,240] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:03:53,347] {logging_mixin.py:103} INFO - [2021-02-10 11:03:53,347] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:03:53,517] {logging_mixin.py:103} INFO - [2021-02-10 11:03:53,517] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:53,519] {logging_mixin.py:103} INFO - [2021-02-10 11:03:53,519] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:03:53,661] {logging_mixin.py:103} INFO - [2021-02-10 11:03:53,661] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:53,662] {logging_mixin.py:103} INFO - [2021-02-10 11:03:53,662] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:03:53,804] {logging_mixin.py:103} INFO - [2021-02-10 11:03:53,804] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:53,807] {logging_mixin.py:103} INFO - [2021-02-10 11:03:53,807] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:03:53,965] {logging_mixin.py:103} INFO - [2021-02-10 11:03:53,964] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:54,208] {logging_mixin.py:103} INFO - [2021-02-10 11:03:54,208] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:03:54,362] {logging_mixin.py:103} INFO - [2021-02-10 11:03:54,362] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:54,410] {logging_mixin.py:103} INFO - [2021-02-10 11:03:54,410] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:03:54,410] {logging_mixin.py:103} INFO - [2021-02-10 11:03:54,410] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:03:55,502] {logging_mixin.py:103} INFO - [2021-02-10 11:03:55,502] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:55,505] {logging_mixin.py:103} INFO - [2021-02-10 11:03:55,505] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:03:55,517] {logging_mixin.py:103} INFO - [2021-02-10 11:03:55,517] {data_context.py:1281} INFO - Setting run_name to: 20210210T100355.517245Z
[2021-02-10 11:03:55,518] {logging_mixin.py:103} INFO - [2021-02-10 11:03:55,518] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:03:55,530] {logging_mixin.py:103} INFO - [2021-02-10 11:03:55,529] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:03:55,695] {logging_mixin.py:103} INFO - [2021-02-10 11:03:55,695] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:55,697] {logging_mixin.py:103} INFO - [2021-02-10 11:03:55,697] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:03:55,918] {logging_mixin.py:103} INFO - [2021-02-10 11:03:55,918] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:55,919] {logging_mixin.py:103} INFO - [2021-02-10 11:03:55,919] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:03:55,921] {logging_mixin.py:103} INFO - [2021-02-10 11:03:55,921] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:03:56,127] {logging_mixin.py:103} INFO - [2021-02-10 11:03:56,127] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:56,130] {logging_mixin.py:103} INFO - [2021-02-10 11:03:56,130] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:03:56,287] {logging_mixin.py:103} INFO - [2021-02-10 11:03:56,287] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:56,289] {logging_mixin.py:103} INFO - [2021-02-10 11:03:56,289] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:03:56,489] {logging_mixin.py:103} INFO - [2021-02-10 11:03:56,489] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:56,490] {logging_mixin.py:103} INFO - [2021-02-10 11:03:56,490] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:03:56,510] {logging_mixin.py:103} INFO - [2021-02-10 11:03:56,510] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:03:56,513] {logging_mixin.py:103} INFO - [2021-02-10 11:03:56,513] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:03:56,679] {logging_mixin.py:103} INFO - [2021-02-10 11:03:56,679] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:56,681] {logging_mixin.py:103} INFO - [2021-02-10 11:03:56,681] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:03:56,832] {logging_mixin.py:103} INFO - [2021-02-10 11:03:56,832] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:56,833] {logging_mixin.py:103} INFO - [2021-02-10 11:03:56,833] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:03:56,836] {logging_mixin.py:103} INFO - [2021-02-10 11:03:56,835] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:03:57,003] {logging_mixin.py:103} INFO - [2021-02-10 11:03:57,003] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:57,004] {logging_mixin.py:103} INFO - [2021-02-10 11:03:57,004] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:03:57,151] {logging_mixin.py:103} INFO - [2021-02-10 11:03:57,151] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:57,155] {logging_mixin.py:103} INFO - [2021-02-10 11:03:57,155] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:03:57,374] {logging_mixin.py:103} INFO - [2021-02-10 11:03:57,374] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:57,377] {logging_mixin.py:103} INFO - [2021-02-10 11:03:57,377] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:03:57,953] {logging_mixin.py:103} INFO - [2021-02-10 11:03:57,953] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:57,954] {logging_mixin.py:103} INFO - [2021-02-10 11:03:57,954] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:03:57,957] {logging_mixin.py:103} INFO - [2021-02-10 11:03:57,957] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:03:58,146] {logging_mixin.py:103} INFO - [2021-02-10 11:03:58,146] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:58,161] {logging_mixin.py:103} INFO - [2021-02-10 11:03:58,161] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:03:58,317] {logging_mixin.py:103} INFO - [2021-02-10 11:03:58,317] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:58,320] {logging_mixin.py:103} INFO - [2021-02-10 11:03:58,320] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:03:58,502] {logging_mixin.py:103} INFO - [2021-02-10 11:03:58,502] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:58,502] {logging_mixin.py:103} INFO - [2021-02-10 11:03:58,502] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:03:58,506] {logging_mixin.py:103} INFO - [2021-02-10 11:03:58,506] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:03:58,759] {logging_mixin.py:103} INFO - [2021-02-10 11:03:58,758] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:58,761] {logging_mixin.py:103} INFO - [2021-02-10 11:03:58,760] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:03:58,934] {logging_mixin.py:103} INFO - [2021-02-10 11:03:58,934] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:58,935] {logging_mixin.py:103} INFO - [2021-02-10 11:03:58,935] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:03:58,939] {logging_mixin.py:103} INFO - [2021-02-10 11:03:58,939] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:03:59,107] {logging_mixin.py:103} INFO - [2021-02-10 11:03:59,107] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:59,108] {logging_mixin.py:103} INFO - [2021-02-10 11:03:59,108] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:03:59,289] {logging_mixin.py:103} INFO - [2021-02-10 11:03:59,289] {cursor.py:560} INFO - query execution done
[2021-02-10 11:03:59,328] {logging_mixin.py:103} INFO - [2021-02-10 11:03:59,327] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:03:59,489] {logging_mixin.py:103} INFO - [2021-02-10 11:03:59,489] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:06,087] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:04:34,406] {scheduler_job.py:181} INFO - Started process (PID=69662) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:04:34,407] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:04:34,407] {logging_mixin.py:103} INFO - [2021-02-10 11:04:34,407] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:04:37,170] {logging_mixin.py:103} INFO - [2021-02-10 11:04:37,170] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:04:37,596] {logging_mixin.py:103} INFO - [2021-02-10 11:04:37,596] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:04:37,995] {logging_mixin.py:103} INFO - [2021-02-10 11:04:37,995] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:04:37,995] {logging_mixin.py:103} INFO - [2021-02-10 11:04:37,995] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:04:37,996] {logging_mixin.py:103} INFO - [2021-02-10 11:04:37,996] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:04:39,447] {logging_mixin.py:103} INFO - [2021-02-10 11:04:39,447] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:04:39,618] {logging_mixin.py:103} INFO - [2021-02-10 11:04:39,618] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:39,620] {logging_mixin.py:103} INFO - [2021-02-10 11:04:39,620] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:04:39,804] {logging_mixin.py:103} INFO - [2021-02-10 11:04:39,804] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:39,805] {logging_mixin.py:103} INFO - [2021-02-10 11:04:39,805] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:04:39,986] {logging_mixin.py:103} INFO - [2021-02-10 11:04:39,986] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:39,989] {logging_mixin.py:103} INFO - [2021-02-10 11:04:39,988] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:04:40,147] {logging_mixin.py:103} INFO - [2021-02-10 11:04:40,147] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:40,409] {logging_mixin.py:103} INFO - [2021-02-10 11:04:40,408] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:04:40,590] {logging_mixin.py:103} INFO - [2021-02-10 11:04:40,590] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:40,628] {logging_mixin.py:103} INFO - [2021-02-10 11:04:40,628] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:04:40,628] {logging_mixin.py:103} INFO - [2021-02-10 11:04:40,628] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:04:42,815] {logging_mixin.py:103} INFO - [2021-02-10 11:04:42,814] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:42,820] {logging_mixin.py:103} INFO - [2021-02-10 11:04:42,820] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:04:42,832] {logging_mixin.py:103} INFO - [2021-02-10 11:04:42,832] {data_context.py:1281} INFO - Setting run_name to: 20210210T100442.832686Z
[2021-02-10 11:04:42,834] {logging_mixin.py:103} INFO - [2021-02-10 11:04:42,834] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:04:42,854] {logging_mixin.py:103} INFO - [2021-02-10 11:04:42,854] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:04:43,025] {logging_mixin.py:103} INFO - [2021-02-10 11:04:43,025] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:43,028] {logging_mixin.py:103} INFO - [2021-02-10 11:04:43,027] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:04:43,176] {logging_mixin.py:103} INFO - [2021-02-10 11:04:43,176] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:43,177] {logging_mixin.py:103} INFO - [2021-02-10 11:04:43,177] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:04:43,178] {logging_mixin.py:103} INFO - [2021-02-10 11:04:43,178] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:04:43,372] {logging_mixin.py:103} INFO - [2021-02-10 11:04:43,372] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:43,374] {logging_mixin.py:103} INFO - [2021-02-10 11:04:43,374] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:04:43,675] {logging_mixin.py:103} INFO - [2021-02-10 11:04:43,674] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:43,678] {logging_mixin.py:103} INFO - [2021-02-10 11:04:43,678] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:04:43,972] {logging_mixin.py:103} INFO - [2021-02-10 11:04:43,971] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:43,972] {logging_mixin.py:103} INFO - [2021-02-10 11:04:43,972] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:04:43,992] {logging_mixin.py:103} INFO - [2021-02-10 11:04:43,992] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:04:43,996] {logging_mixin.py:103} INFO - [2021-02-10 11:04:43,996] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:04:44,236] {logging_mixin.py:103} INFO - [2021-02-10 11:04:44,236] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:44,238] {logging_mixin.py:103} INFO - [2021-02-10 11:04:44,238] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:04:44,432] {logging_mixin.py:103} INFO - [2021-02-10 11:04:44,432] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:44,433] {logging_mixin.py:103} INFO - [2021-02-10 11:04:44,433] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:04:44,435] {logging_mixin.py:103} INFO - [2021-02-10 11:04:44,435] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:04:44,600] {logging_mixin.py:103} INFO - [2021-02-10 11:04:44,600] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:44,602] {logging_mixin.py:103} INFO - [2021-02-10 11:04:44,602] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:04:44,800] {logging_mixin.py:103} INFO - [2021-02-10 11:04:44,799] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:44,803] {logging_mixin.py:103} INFO - [2021-02-10 11:04:44,803] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:04:45,005] {logging_mixin.py:103} INFO - [2021-02-10 11:04:45,005] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:45,008] {logging_mixin.py:103} INFO - [2021-02-10 11:04:45,007] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:04:45,180] {logging_mixin.py:103} INFO - [2021-02-10 11:04:45,180] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:45,180] {logging_mixin.py:103} INFO - [2021-02-10 11:04:45,180] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:04:45,184] {logging_mixin.py:103} INFO - [2021-02-10 11:04:45,184] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:04:45,428] {logging_mixin.py:103} INFO - [2021-02-10 11:04:45,428] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:45,440] {logging_mixin.py:103} INFO - [2021-02-10 11:04:45,440] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:04:45,625] {logging_mixin.py:103} INFO - [2021-02-10 11:04:45,625] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:45,628] {logging_mixin.py:103} INFO - [2021-02-10 11:04:45,628] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:04:45,833] {logging_mixin.py:103} INFO - [2021-02-10 11:04:45,833] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:45,833] {logging_mixin.py:103} INFO - [2021-02-10 11:04:45,833] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:04:45,837] {logging_mixin.py:103} INFO - [2021-02-10 11:04:45,837] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:04:46,024] {logging_mixin.py:103} INFO - [2021-02-10 11:04:46,024] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:46,026] {logging_mixin.py:103} INFO - [2021-02-10 11:04:46,026] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:04:46,183] {logging_mixin.py:103} INFO - [2021-02-10 11:04:46,183] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:46,184] {logging_mixin.py:103} INFO - [2021-02-10 11:04:46,183] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:04:46,187] {logging_mixin.py:103} INFO - [2021-02-10 11:04:46,187] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:04:46,388] {logging_mixin.py:103} INFO - [2021-02-10 11:04:46,387] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:46,389] {logging_mixin.py:103} INFO - [2021-02-10 11:04:46,389] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:04:46,558] {logging_mixin.py:103} INFO - [2021-02-10 11:04:46,558] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:46,593] {logging_mixin.py:103} INFO - [2021-02-10 11:04:46,593] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:04:46,790] {logging_mixin.py:103} INFO - [2021-02-10 11:04:46,789] {cursor.py:560} INFO - query execution done
[2021-02-10 11:04:54,881] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:05:31,181] {scheduler_job.py:181} INFO - Started process (PID=69728) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:05:31,181] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:05:31,182] {logging_mixin.py:103} INFO - [2021-02-10 11:05:31,182] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:05:34,133] {logging_mixin.py:103} INFO - [2021-02-10 11:05:34,133] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:05:34,583] {logging_mixin.py:103} INFO - [2021-02-10 11:05:34,583] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:05:34,976] {logging_mixin.py:103} INFO - [2021-02-10 11:05:34,976] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:05:34,977] {logging_mixin.py:103} INFO - [2021-02-10 11:05:34,977] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:05:34,977] {logging_mixin.py:103} INFO - [2021-02-10 11:05:34,977] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:05:36,577] {logging_mixin.py:103} INFO - [2021-02-10 11:05:36,576] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:05:36,817] {logging_mixin.py:103} INFO - [2021-02-10 11:05:36,817] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:36,819] {logging_mixin.py:103} INFO - [2021-02-10 11:05:36,819] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:05:36,973] {logging_mixin.py:103} INFO - [2021-02-10 11:05:36,973] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:36,974] {logging_mixin.py:103} INFO - [2021-02-10 11:05:36,974] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:05:37,148] {logging_mixin.py:103} INFO - [2021-02-10 11:05:37,148] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:37,149] {logging_mixin.py:103} INFO - [2021-02-10 11:05:37,149] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:05:37,797] {logging_mixin.py:103} INFO - [2021-02-10 11:05:37,797] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:38,059] {logging_mixin.py:103} INFO - [2021-02-10 11:05:38,058] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:05:38,285] {logging_mixin.py:103} INFO - [2021-02-10 11:05:38,285] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:38,331] {logging_mixin.py:103} INFO - [2021-02-10 11:05:38,331] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:05:38,331] {logging_mixin.py:103} INFO - [2021-02-10 11:05:38,331] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:05:39,648] {logging_mixin.py:103} INFO - [2021-02-10 11:05:39,648] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:39,652] {logging_mixin.py:103} INFO - [2021-02-10 11:05:39,652] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:05:39,662] {logging_mixin.py:103} INFO - [2021-02-10 11:05:39,662] {data_context.py:1281} INFO - Setting run_name to: 20210210T100539.662786Z
[2021-02-10 11:05:39,664] {logging_mixin.py:103} INFO - [2021-02-10 11:05:39,663] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:05:39,674] {logging_mixin.py:103} INFO - [2021-02-10 11:05:39,674] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:05:39,865] {logging_mixin.py:103} INFO - [2021-02-10 11:05:39,864] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:39,867] {logging_mixin.py:103} INFO - [2021-02-10 11:05:39,867] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:05:40,131] {logging_mixin.py:103} INFO - [2021-02-10 11:05:40,131] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:40,131] {logging_mixin.py:103} INFO - [2021-02-10 11:05:40,131] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:05:40,134] {logging_mixin.py:103} INFO - [2021-02-10 11:05:40,134] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:05:40,326] {logging_mixin.py:103} INFO - [2021-02-10 11:05:40,325] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:40,328] {logging_mixin.py:103} INFO - [2021-02-10 11:05:40,328] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:05:40,508] {logging_mixin.py:103} INFO - [2021-02-10 11:05:40,508] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:40,509] {logging_mixin.py:103} INFO - [2021-02-10 11:05:40,509] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:05:40,681] {logging_mixin.py:103} INFO - [2021-02-10 11:05:40,681] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:40,682] {logging_mixin.py:103} INFO - [2021-02-10 11:05:40,682] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:05:40,700] {logging_mixin.py:103} INFO - [2021-02-10 11:05:40,700] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:05:40,702] {logging_mixin.py:103} INFO - [2021-02-10 11:05:40,702] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:05:40,935] {logging_mixin.py:103} INFO - [2021-02-10 11:05:40,935] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:40,937] {logging_mixin.py:103} INFO - [2021-02-10 11:05:40,937] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:05:41,147] {logging_mixin.py:103} INFO - [2021-02-10 11:05:41,147] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:41,147] {logging_mixin.py:103} INFO - [2021-02-10 11:05:41,147] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:05:41,150] {logging_mixin.py:103} INFO - [2021-02-10 11:05:41,150] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:05:41,329] {logging_mixin.py:103} INFO - [2021-02-10 11:05:41,329] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:41,330] {logging_mixin.py:103} INFO - [2021-02-10 11:05:41,330] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:05:41,562] {logging_mixin.py:103} INFO - [2021-02-10 11:05:41,562] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:41,565] {logging_mixin.py:103} INFO - [2021-02-10 11:05:41,565] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:05:41,782] {logging_mixin.py:103} INFO - [2021-02-10 11:05:41,782] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:41,784] {logging_mixin.py:103} INFO - [2021-02-10 11:05:41,784] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:05:41,967] {logging_mixin.py:103} INFO - [2021-02-10 11:05:41,967] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:41,968] {logging_mixin.py:103} INFO - [2021-02-10 11:05:41,967] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:05:41,972] {logging_mixin.py:103} INFO - [2021-02-10 11:05:41,971] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:05:42,259] {logging_mixin.py:103} INFO - [2021-02-10 11:05:42,259] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:42,273] {logging_mixin.py:103} INFO - [2021-02-10 11:05:42,273] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:05:42,515] {logging_mixin.py:103} INFO - [2021-02-10 11:05:42,515] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:42,518] {logging_mixin.py:103} INFO - [2021-02-10 11:05:42,518] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:05:42,729] {logging_mixin.py:103} INFO - [2021-02-10 11:05:42,729] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:42,730] {logging_mixin.py:103} INFO - [2021-02-10 11:05:42,730] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:05:42,734] {logging_mixin.py:103} INFO - [2021-02-10 11:05:42,734] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:05:42,892] {logging_mixin.py:103} INFO - [2021-02-10 11:05:42,892] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:42,894] {logging_mixin.py:103} INFO - [2021-02-10 11:05:42,894] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:05:43,083] {logging_mixin.py:103} INFO - [2021-02-10 11:05:43,083] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:43,084] {logging_mixin.py:103} INFO - [2021-02-10 11:05:43,084] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:05:43,089] {logging_mixin.py:103} INFO - [2021-02-10 11:05:43,088] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:05:43,263] {logging_mixin.py:103} INFO - [2021-02-10 11:05:43,262] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:43,265] {logging_mixin.py:103} INFO - [2021-02-10 11:05:43,265] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:05:43,943] {logging_mixin.py:103} INFO - [2021-02-10 11:05:43,943] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:43,993] {logging_mixin.py:103} INFO - [2021-02-10 11:05:43,993] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:05:44,865] {logging_mixin.py:103} INFO - [2021-02-10 11:05:44,864] {cursor.py:560} INFO - query execution done
[2021-02-10 11:05:51,372] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:06:18,404] {scheduler_job.py:181} INFO - Started process (PID=69792) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:06:18,405] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:06:18,405] {logging_mixin.py:103} INFO - [2021-02-10 11:06:18,405] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:06:20,178] {logging_mixin.py:103} INFO - [2021-02-10 11:06:20,178] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:06:20,489] {logging_mixin.py:103} INFO - [2021-02-10 11:06:20,489] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:06:20,818] {logging_mixin.py:103} INFO - [2021-02-10 11:06:20,818] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:06:20,818] {logging_mixin.py:103} INFO - [2021-02-10 11:06:20,818] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:06:20,818] {logging_mixin.py:103} INFO - [2021-02-10 11:06:20,818] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:06:22,053] {logging_mixin.py:103} INFO - [2021-02-10 11:06:22,053] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:06:22,391] {logging_mixin.py:103} INFO - [2021-02-10 11:06:22,391] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:22,392] {logging_mixin.py:103} INFO - [2021-02-10 11:06:22,392] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:06:22,542] {logging_mixin.py:103} INFO - [2021-02-10 11:06:22,542] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:22,542] {logging_mixin.py:103} INFO - [2021-02-10 11:06:22,542] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:06:22,698] {logging_mixin.py:103} INFO - [2021-02-10 11:06:22,698] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:22,701] {logging_mixin.py:103} INFO - [2021-02-10 11:06:22,700] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:06:22,858] {logging_mixin.py:103} INFO - [2021-02-10 11:06:22,858] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:23,074] {logging_mixin.py:103} INFO - [2021-02-10 11:06:23,074] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:06:23,238] {logging_mixin.py:103} INFO - [2021-02-10 11:06:23,238] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:23,286] {logging_mixin.py:103} INFO - [2021-02-10 11:06:23,286] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:06:23,287] {logging_mixin.py:103} INFO - [2021-02-10 11:06:23,287] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:06:24,569] {logging_mixin.py:103} INFO - [2021-02-10 11:06:24,569] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:24,572] {logging_mixin.py:103} INFO - [2021-02-10 11:06:24,572] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:06:24,585] {logging_mixin.py:103} INFO - [2021-02-10 11:06:24,585] {data_context.py:1281} INFO - Setting run_name to: 20210210T100624.585093Z
[2021-02-10 11:06:24,586] {logging_mixin.py:103} INFO - [2021-02-10 11:06:24,586] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:06:24,605] {logging_mixin.py:103} INFO - [2021-02-10 11:06:24,605] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:06:24,849] {logging_mixin.py:103} INFO - [2021-02-10 11:06:24,849] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:24,851] {logging_mixin.py:103} INFO - [2021-02-10 11:06:24,851] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:06:25,038] {logging_mixin.py:103} INFO - [2021-02-10 11:06:25,037] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:25,038] {logging_mixin.py:103} INFO - [2021-02-10 11:06:25,038] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:06:25,039] {logging_mixin.py:103} INFO - [2021-02-10 11:06:25,039] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:06:25,292] {logging_mixin.py:103} INFO - [2021-02-10 11:06:25,291] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:25,294] {logging_mixin.py:103} INFO - [2021-02-10 11:06:25,294] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:06:25,454] {logging_mixin.py:103} INFO - [2021-02-10 11:06:25,454] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:25,457] {logging_mixin.py:103} INFO - [2021-02-10 11:06:25,457] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:06:25,684] {logging_mixin.py:103} INFO - [2021-02-10 11:06:25,684] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:25,684] {logging_mixin.py:103} INFO - [2021-02-10 11:06:25,684] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:06:25,705] {logging_mixin.py:103} INFO - [2021-02-10 11:06:25,705] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:06:25,708] {logging_mixin.py:103} INFO - [2021-02-10 11:06:25,708] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:06:25,917] {logging_mixin.py:103} INFO - [2021-02-10 11:06:25,917] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:25,919] {logging_mixin.py:103} INFO - [2021-02-10 11:06:25,919] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:06:26,144] {logging_mixin.py:103} INFO - [2021-02-10 11:06:26,144] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:26,145] {logging_mixin.py:103} INFO - [2021-02-10 11:06:26,145] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:06:26,149] {logging_mixin.py:103} INFO - [2021-02-10 11:06:26,148] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:06:26,330] {logging_mixin.py:103} INFO - [2021-02-10 11:06:26,329] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:26,332] {logging_mixin.py:103} INFO - [2021-02-10 11:06:26,332] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:06:26,540] {logging_mixin.py:103} INFO - [2021-02-10 11:06:26,540] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:26,544] {logging_mixin.py:103} INFO - [2021-02-10 11:06:26,543] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:06:26,705] {logging_mixin.py:103} INFO - [2021-02-10 11:06:26,705] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:26,708] {logging_mixin.py:103} INFO - [2021-02-10 11:06:26,708] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:06:27,127] {logging_mixin.py:103} INFO - [2021-02-10 11:06:27,127] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:27,128] {logging_mixin.py:103} INFO - [2021-02-10 11:06:27,128] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:06:27,132] {logging_mixin.py:103} INFO - [2021-02-10 11:06:27,132] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:06:27,407] {logging_mixin.py:103} INFO - [2021-02-10 11:06:27,406] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:27,416] {logging_mixin.py:103} INFO - [2021-02-10 11:06:27,416] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:06:27,664] {logging_mixin.py:103} INFO - [2021-02-10 11:06:27,664] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:27,666] {logging_mixin.py:103} INFO - [2021-02-10 11:06:27,665] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:06:27,861] {logging_mixin.py:103} INFO - [2021-02-10 11:06:27,861] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:27,862] {logging_mixin.py:103} INFO - [2021-02-10 11:06:27,861] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:06:27,867] {logging_mixin.py:103} INFO - [2021-02-10 11:06:27,867] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:06:28,038] {logging_mixin.py:103} INFO - [2021-02-10 11:06:28,038] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:28,040] {logging_mixin.py:103} INFO - [2021-02-10 11:06:28,040] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:06:28,194] {logging_mixin.py:103} INFO - [2021-02-10 11:06:28,194] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:28,194] {logging_mixin.py:103} INFO - [2021-02-10 11:06:28,194] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:06:28,199] {logging_mixin.py:103} INFO - [2021-02-10 11:06:28,199] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:06:28,375] {logging_mixin.py:103} INFO - [2021-02-10 11:06:28,375] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:28,377] {logging_mixin.py:103} INFO - [2021-02-10 11:06:28,377] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:06:28,540] {logging_mixin.py:103} INFO - [2021-02-10 11:06:28,539] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:28,578] {logging_mixin.py:103} INFO - [2021-02-10 11:06:28,578] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:06:28,744] {logging_mixin.py:103} INFO - [2021-02-10 11:06:28,744] {cursor.py:560} INFO - query execution done
[2021-02-10 11:06:35,576] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:07:09,585] {scheduler_job.py:181} INFO - Started process (PID=69858) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:07:09,587] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:07:09,587] {logging_mixin.py:103} INFO - [2021-02-10 11:07:09,587] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:07:11,708] {logging_mixin.py:103} INFO - [2021-02-10 11:07:11,707] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:07:12,096] {logging_mixin.py:103} INFO - [2021-02-10 11:07:12,095] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:07:12,487] {logging_mixin.py:103} INFO - [2021-02-10 11:07:12,487] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:07:12,487] {logging_mixin.py:103} INFO - [2021-02-10 11:07:12,487] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:07:12,487] {logging_mixin.py:103} INFO - [2021-02-10 11:07:12,487] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:07:13,677] {logging_mixin.py:103} INFO - [2021-02-10 11:07:13,677] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:07:13,835] {logging_mixin.py:103} INFO - [2021-02-10 11:07:13,835] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:13,838] {logging_mixin.py:103} INFO - [2021-02-10 11:07:13,838] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:07:14,012] {logging_mixin.py:103} INFO - [2021-02-10 11:07:14,012] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:14,013] {logging_mixin.py:103} INFO - [2021-02-10 11:07:14,013] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:07:14,186] {logging_mixin.py:103} INFO - [2021-02-10 11:07:14,186] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:14,189] {logging_mixin.py:103} INFO - [2021-02-10 11:07:14,189] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:07:14,334] {logging_mixin.py:103} INFO - [2021-02-10 11:07:14,334] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:14,590] {logging_mixin.py:103} INFO - [2021-02-10 11:07:14,590] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:07:14,798] {logging_mixin.py:103} INFO - [2021-02-10 11:07:14,797] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:14,861] {logging_mixin.py:103} INFO - [2021-02-10 11:07:14,861] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:07:14,862] {logging_mixin.py:103} INFO - [2021-02-10 11:07:14,861] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:07:16,419] {logging_mixin.py:103} INFO - [2021-02-10 11:07:16,419] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:16,422] {logging_mixin.py:103} INFO - [2021-02-10 11:07:16,421] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:07:16,432] {logging_mixin.py:103} INFO - [2021-02-10 11:07:16,432] {data_context.py:1281} INFO - Setting run_name to: 20210210T100716.432629Z
[2021-02-10 11:07:16,433] {logging_mixin.py:103} INFO - [2021-02-10 11:07:16,433] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:07:16,444] {logging_mixin.py:103} INFO - [2021-02-10 11:07:16,444] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:07:16,629] {logging_mixin.py:103} INFO - [2021-02-10 11:07:16,629] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:16,631] {logging_mixin.py:103} INFO - [2021-02-10 11:07:16,631] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:07:16,874] {logging_mixin.py:103} INFO - [2021-02-10 11:07:16,874] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:16,874] {logging_mixin.py:103} INFO - [2021-02-10 11:07:16,874] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:07:16,875] {logging_mixin.py:103} INFO - [2021-02-10 11:07:16,875] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:07:17,038] {logging_mixin.py:103} INFO - [2021-02-10 11:07:17,038] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:17,039] {logging_mixin.py:103} INFO - [2021-02-10 11:07:17,039] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:07:17,225] {logging_mixin.py:103} INFO - [2021-02-10 11:07:17,225] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:17,226] {logging_mixin.py:103} INFO - [2021-02-10 11:07:17,226] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:07:17,664] {logging_mixin.py:103} INFO - [2021-02-10 11:07:17,664] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:17,665] {logging_mixin.py:103} INFO - [2021-02-10 11:07:17,665] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:07:17,687] {logging_mixin.py:103} INFO - [2021-02-10 11:07:17,687] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:07:17,691] {logging_mixin.py:103} INFO - [2021-02-10 11:07:17,690] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:07:17,892] {logging_mixin.py:103} INFO - [2021-02-10 11:07:17,892] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:17,893] {logging_mixin.py:103} INFO - [2021-02-10 11:07:17,893] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:07:18,064] {logging_mixin.py:103} INFO - [2021-02-10 11:07:18,064] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:18,064] {logging_mixin.py:103} INFO - [2021-02-10 11:07:18,064] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:07:18,066] {logging_mixin.py:103} INFO - [2021-02-10 11:07:18,066] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:07:18,295] {logging_mixin.py:103} INFO - [2021-02-10 11:07:18,295] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:18,297] {logging_mixin.py:103} INFO - [2021-02-10 11:07:18,297] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:07:18,449] {logging_mixin.py:103} INFO - [2021-02-10 11:07:18,449] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:18,453] {logging_mixin.py:103} INFO - [2021-02-10 11:07:18,452] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:07:18,668] {logging_mixin.py:103} INFO - [2021-02-10 11:07:18,668] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:18,671] {logging_mixin.py:103} INFO - [2021-02-10 11:07:18,670] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:07:18,827] {logging_mixin.py:103} INFO - [2021-02-10 11:07:18,827] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:18,828] {logging_mixin.py:103} INFO - [2021-02-10 11:07:18,828] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:07:18,832] {logging_mixin.py:103} INFO - [2021-02-10 11:07:18,832] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:07:19,024] {logging_mixin.py:103} INFO - [2021-02-10 11:07:19,024] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:19,030] {logging_mixin.py:103} INFO - [2021-02-10 11:07:19,030] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:07:19,205] {logging_mixin.py:103} INFO - [2021-02-10 11:07:19,204] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:19,207] {logging_mixin.py:103} INFO - [2021-02-10 11:07:19,207] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:07:19,376] {logging_mixin.py:103} INFO - [2021-02-10 11:07:19,375] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:19,376] {logging_mixin.py:103} INFO - [2021-02-10 11:07:19,376] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:07:19,380] {logging_mixin.py:103} INFO - [2021-02-10 11:07:19,380] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:07:19,605] {logging_mixin.py:103} INFO - [2021-02-10 11:07:19,605] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:19,607] {logging_mixin.py:103} INFO - [2021-02-10 11:07:19,607] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:07:19,768] {logging_mixin.py:103} INFO - [2021-02-10 11:07:19,768] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:19,769] {logging_mixin.py:103} INFO - [2021-02-10 11:07:19,769] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:07:19,772] {logging_mixin.py:103} INFO - [2021-02-10 11:07:19,772] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:07:19,962] {logging_mixin.py:103} INFO - [2021-02-10 11:07:19,962] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:19,965] {logging_mixin.py:103} INFO - [2021-02-10 11:07:19,965] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:07:20,247] {logging_mixin.py:103} INFO - [2021-02-10 11:07:20,247] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:20,286] {logging_mixin.py:103} INFO - [2021-02-10 11:07:20,285] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:07:20,435] {logging_mixin.py:103} INFO - [2021-02-10 11:07:20,434] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:27,246] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:07:54,257] {scheduler_job.py:181} INFO - Started process (PID=69931) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:07:54,257] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:07:54,258] {logging_mixin.py:103} INFO - [2021-02-10 11:07:54,257] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:07:56,051] {logging_mixin.py:103} INFO - [2021-02-10 11:07:56,051] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:07:56,349] {logging_mixin.py:103} INFO - [2021-02-10 11:07:56,349] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:07:56,694] {logging_mixin.py:103} INFO - [2021-02-10 11:07:56,694] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:07:56,695] {logging_mixin.py:103} INFO - [2021-02-10 11:07:56,695] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:07:56,695] {logging_mixin.py:103} INFO - [2021-02-10 11:07:56,695] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:07:57,919] {logging_mixin.py:103} INFO - [2021-02-10 11:07:57,919] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:07:58,107] {logging_mixin.py:103} INFO - [2021-02-10 11:07:58,107] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:58,109] {logging_mixin.py:103} INFO - [2021-02-10 11:07:58,108] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:07:58,787] {logging_mixin.py:103} INFO - [2021-02-10 11:07:58,787] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:58,788] {logging_mixin.py:103} INFO - [2021-02-10 11:07:58,788] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:07:58,970] {logging_mixin.py:103} INFO - [2021-02-10 11:07:58,969] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:58,972] {logging_mixin.py:103} INFO - [2021-02-10 11:07:58,972] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:07:59,135] {logging_mixin.py:103} INFO - [2021-02-10 11:07:59,134] {cursor.py:560} INFO - query execution done
[2021-02-10 11:07:59,352] {logging_mixin.py:103} INFO - [2021-02-10 11:07:59,352] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:08:01,225] {logging_mixin.py:103} INFO - [2021-02-10 11:08:01,225] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:01,270] {logging_mixin.py:103} INFO - [2021-02-10 11:08:01,270] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:08:01,270] {logging_mixin.py:103} INFO - [2021-02-10 11:08:01,270] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:08:02,669] {logging_mixin.py:103} INFO - [2021-02-10 11:08:02,668] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:02,672] {logging_mixin.py:103} INFO - [2021-02-10 11:08:02,672] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:08:02,682] {logging_mixin.py:103} INFO - [2021-02-10 11:08:02,682] {data_context.py:1281} INFO - Setting run_name to: 20210210T100802.682810Z
[2021-02-10 11:08:02,684] {logging_mixin.py:103} INFO - [2021-02-10 11:08:02,684] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:08:02,694] {logging_mixin.py:103} INFO - [2021-02-10 11:08:02,694] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:08:03,011] {logging_mixin.py:103} INFO - [2021-02-10 11:08:03,011] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:03,014] {logging_mixin.py:103} INFO - [2021-02-10 11:08:03,013] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:08:03,178] {logging_mixin.py:103} INFO - [2021-02-10 11:08:03,177] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:03,178] {logging_mixin.py:103} INFO - [2021-02-10 11:08:03,178] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:08:03,180] {logging_mixin.py:103} INFO - [2021-02-10 11:08:03,180] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:08:03,489] {logging_mixin.py:103} INFO - [2021-02-10 11:08:03,489] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:03,491] {logging_mixin.py:103} INFO - [2021-02-10 11:08:03,491] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:08:03,679] {logging_mixin.py:103} INFO - [2021-02-10 11:08:03,679] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:03,682] {logging_mixin.py:103} INFO - [2021-02-10 11:08:03,682] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:08:03,991] {logging_mixin.py:103} INFO - [2021-02-10 11:08:03,991] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:03,992] {logging_mixin.py:103} INFO - [2021-02-10 11:08:03,992] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:08:04,008] {logging_mixin.py:103} INFO - [2021-02-10 11:08:04,008] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:08:04,011] {logging_mixin.py:103} INFO - [2021-02-10 11:08:04,011] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:08:04,329] {logging_mixin.py:103} INFO - [2021-02-10 11:08:04,328] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:04,330] {logging_mixin.py:103} INFO - [2021-02-10 11:08:04,330] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:08:04,500] {logging_mixin.py:103} INFO - [2021-02-10 11:08:04,499] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:04,500] {logging_mixin.py:103} INFO - [2021-02-10 11:08:04,500] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:08:04,503] {logging_mixin.py:103} INFO - [2021-02-10 11:08:04,503] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:08:04,799] {logging_mixin.py:103} INFO - [2021-02-10 11:08:04,799] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:04,801] {logging_mixin.py:103} INFO - [2021-02-10 11:08:04,801] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:08:05,131] {logging_mixin.py:103} INFO - [2021-02-10 11:08:05,130] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:05,135] {logging_mixin.py:103} INFO - [2021-02-10 11:08:05,134] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:08:05,298] {logging_mixin.py:103} INFO - [2021-02-10 11:08:05,298] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:05,301] {logging_mixin.py:103} INFO - [2021-02-10 11:08:05,301] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:08:05,479] {logging_mixin.py:103} INFO - [2021-02-10 11:08:05,479] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:05,479] {logging_mixin.py:103} INFO - [2021-02-10 11:08:05,479] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:08:05,484] {logging_mixin.py:103} INFO - [2021-02-10 11:08:05,484] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:08:05,644] {logging_mixin.py:103} INFO - [2021-02-10 11:08:05,643] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:05,651] {logging_mixin.py:103} INFO - [2021-02-10 11:08:05,651] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:08:05,858] {logging_mixin.py:103} INFO - [2021-02-10 11:08:05,858] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:05,860] {logging_mixin.py:103} INFO - [2021-02-10 11:08:05,860] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:08:06,512] {logging_mixin.py:103} INFO - [2021-02-10 11:08:06,511] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:06,512] {logging_mixin.py:103} INFO - [2021-02-10 11:08:06,512] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:08:06,515] {logging_mixin.py:103} INFO - [2021-02-10 11:08:06,515] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:08:06,681] {logging_mixin.py:103} INFO - [2021-02-10 11:08:06,681] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:06,683] {logging_mixin.py:103} INFO - [2021-02-10 11:08:06,683] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:08:06,884] {logging_mixin.py:103} INFO - [2021-02-10 11:08:06,884] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:06,886] {logging_mixin.py:103} INFO - [2021-02-10 11:08:06,885] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:08:06,889] {logging_mixin.py:103} INFO - [2021-02-10 11:08:06,889] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:08:07,169] {logging_mixin.py:103} INFO - [2021-02-10 11:08:07,169] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:07,171] {logging_mixin.py:103} INFO - [2021-02-10 11:08:07,171] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:08:07,350] {logging_mixin.py:103} INFO - [2021-02-10 11:08:07,350] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:07,362] {logging_mixin.py:103} INFO - [2021-02-10 11:08:07,361] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:08:07,501] {logging_mixin.py:103} INFO - [2021-02-10 11:08:07,501] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:13,992] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:08:42,656] {scheduler_job.py:181} INFO - Started process (PID=69989) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:08:42,657] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:08:42,657] {logging_mixin.py:103} INFO - [2021-02-10 11:08:42,657] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:08:44,359] {logging_mixin.py:103} INFO - [2021-02-10 11:08:44,358] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:08:44,651] {logging_mixin.py:103} INFO - [2021-02-10 11:08:44,651] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:08:44,982] {logging_mixin.py:103} INFO - [2021-02-10 11:08:44,982] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:08:44,983] {logging_mixin.py:103} INFO - [2021-02-10 11:08:44,983] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:08:44,983] {logging_mixin.py:103} INFO - [2021-02-10 11:08:44,983] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:08:46,549] {logging_mixin.py:103} INFO - [2021-02-10 11:08:46,549] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:08:46,730] {logging_mixin.py:103} INFO - [2021-02-10 11:08:46,730] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:46,732] {logging_mixin.py:103} INFO - [2021-02-10 11:08:46,732] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:08:46,907] {logging_mixin.py:103} INFO - [2021-02-10 11:08:46,907] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:46,908] {logging_mixin.py:103} INFO - [2021-02-10 11:08:46,908] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:08:47,051] {logging_mixin.py:103} INFO - [2021-02-10 11:08:47,051] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:47,054] {logging_mixin.py:103} INFO - [2021-02-10 11:08:47,054] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:08:47,243] {logging_mixin.py:103} INFO - [2021-02-10 11:08:47,243] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:47,463] {logging_mixin.py:103} INFO - [2021-02-10 11:08:47,463] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:08:47,696] {logging_mixin.py:103} INFO - [2021-02-10 11:08:47,696] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:47,743] {logging_mixin.py:103} INFO - [2021-02-10 11:08:47,743] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:08:47,743] {logging_mixin.py:103} INFO - [2021-02-10 11:08:47,743] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:08:49,112] {logging_mixin.py:103} INFO - [2021-02-10 11:08:49,112] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:49,116] {logging_mixin.py:103} INFO - [2021-02-10 11:08:49,116] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:08:49,126] {logging_mixin.py:103} INFO - [2021-02-10 11:08:49,126] {data_context.py:1281} INFO - Setting run_name to: 20210210T100849.126547Z
[2021-02-10 11:08:49,127] {logging_mixin.py:103} INFO - [2021-02-10 11:08:49,127] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:08:49,139] {logging_mixin.py:103} INFO - [2021-02-10 11:08:49,138] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:08:49,352] {logging_mixin.py:103} INFO - [2021-02-10 11:08:49,352] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:49,354] {logging_mixin.py:103} INFO - [2021-02-10 11:08:49,354] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:08:49,535] {logging_mixin.py:103} INFO - [2021-02-10 11:08:49,534] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:49,535] {logging_mixin.py:103} INFO - [2021-02-10 11:08:49,535] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:08:49,537] {logging_mixin.py:103} INFO - [2021-02-10 11:08:49,537] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:08:49,710] {logging_mixin.py:103} INFO - [2021-02-10 11:08:49,710] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:49,713] {logging_mixin.py:103} INFO - [2021-02-10 11:08:49,713] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:08:49,952] {logging_mixin.py:103} INFO - [2021-02-10 11:08:49,952] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:49,954] {logging_mixin.py:103} INFO - [2021-02-10 11:08:49,954] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:08:50,142] {logging_mixin.py:103} INFO - [2021-02-10 11:08:50,142] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:50,143] {logging_mixin.py:103} INFO - [2021-02-10 11:08:50,143] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:08:50,160] {logging_mixin.py:103} INFO - [2021-02-10 11:08:50,160] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:08:50,163] {logging_mixin.py:103} INFO - [2021-02-10 11:08:50,162] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:08:50,553] {logging_mixin.py:103} INFO - [2021-02-10 11:08:50,553] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:50,555] {logging_mixin.py:103} INFO - [2021-02-10 11:08:50,555] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:08:51,578] {logging_mixin.py:103} INFO - [2021-02-10 11:08:51,578] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:51,578] {logging_mixin.py:103} INFO - [2021-02-10 11:08:51,578] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:08:51,581] {logging_mixin.py:103} INFO - [2021-02-10 11:08:51,581] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:08:51,868] {logging_mixin.py:103} INFO - [2021-02-10 11:08:51,867] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:51,869] {logging_mixin.py:103} INFO - [2021-02-10 11:08:51,869] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:08:52,052] {logging_mixin.py:103} INFO - [2021-02-10 11:08:52,052] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:52,055] {logging_mixin.py:103} INFO - [2021-02-10 11:08:52,055] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:08:52,274] {logging_mixin.py:103} INFO - [2021-02-10 11:08:52,274] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:52,276] {logging_mixin.py:103} INFO - [2021-02-10 11:08:52,276] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:08:52,591] {logging_mixin.py:103} INFO - [2021-02-10 11:08:52,591] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:52,591] {logging_mixin.py:103} INFO - [2021-02-10 11:08:52,591] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:08:52,595] {logging_mixin.py:103} INFO - [2021-02-10 11:08:52,595] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:08:52,845] {logging_mixin.py:103} INFO - [2021-02-10 11:08:52,845] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:52,852] {logging_mixin.py:103} INFO - [2021-02-10 11:08:52,852] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:08:53,137] {logging_mixin.py:103} INFO - [2021-02-10 11:08:53,137] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:53,140] {logging_mixin.py:103} INFO - [2021-02-10 11:08:53,140] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:08:53,387] {logging_mixin.py:103} INFO - [2021-02-10 11:08:53,387] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:53,388] {logging_mixin.py:103} INFO - [2021-02-10 11:08:53,388] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:08:53,391] {logging_mixin.py:103} INFO - [2021-02-10 11:08:53,391] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:08:53,738] {logging_mixin.py:103} INFO - [2021-02-10 11:08:53,738] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:53,740] {logging_mixin.py:103} INFO - [2021-02-10 11:08:53,740] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:08:53,978] {logging_mixin.py:103} INFO - [2021-02-10 11:08:53,978] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:53,979] {logging_mixin.py:103} INFO - [2021-02-10 11:08:53,978] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:08:53,982] {logging_mixin.py:103} INFO - [2021-02-10 11:08:53,982] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:08:54,226] {logging_mixin.py:103} INFO - [2021-02-10 11:08:54,226] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:54,228] {logging_mixin.py:103} INFO - [2021-02-10 11:08:54,228] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:08:54,406] {logging_mixin.py:103} INFO - [2021-02-10 11:08:54,406] {cursor.py:560} INFO - query execution done
[2021-02-10 11:08:54,418] {logging_mixin.py:103} INFO - [2021-02-10 11:08:54,418] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:08:54,576] {logging_mixin.py:103} INFO - [2021-02-10 11:08:54,576] {cursor.py:560} INFO - query execution done
[2021-02-10 11:09:00,099] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:09:32,248] {scheduler_job.py:181} INFO - Started process (PID=70057) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:09:32,248] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:09:32,248] {logging_mixin.py:103} INFO - [2021-02-10 11:09:32,248] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:09:33,940] {logging_mixin.py:103} INFO - [2021-02-10 11:09:33,939] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:09:34,218] {logging_mixin.py:103} INFO - [2021-02-10 11:09:34,218] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:09:34,551] {logging_mixin.py:103} INFO - [2021-02-10 11:09:34,551] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:09:34,551] {logging_mixin.py:103} INFO - [2021-02-10 11:09:34,551] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:09:34,551] {logging_mixin.py:103} INFO - [2021-02-10 11:09:34,551] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:10:02,255] {logging_mixin.py:103} INFO - [2021-02-10 11:10:02,254] {timeout.py:36} ERROR - Process timed out, PID: 70057
[2021-02-10 11:10:02,326] {logging_mixin.py:103} INFO - [2021-02-10 11:10:02,326] {connection.py:438} INFO - closed
[2021-02-10 11:10:02,404] {logging_mixin.py:103} INFO - [2021-02-10 11:10:02,404] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:10:02,404] {logging_mixin.py:103} INFO - [2021-02-10 11:10:02,404] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:10:43,481] {logging_mixin.py:103} INFO - [2021-02-10 11:10:43,481] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:10:45,899] {logging_mixin.py:103} INFO - [2021-02-10 11:10:45,899] {cursor.py:560} INFO - query execution done
[2021-02-10 11:10:45,902] {logging_mixin.py:103} INFO - [2021-02-10 11:10:45,901] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:10:47,049] {logging_mixin.py:103} INFO - [2021-02-10 11:10:47,049] {cursor.py:560} INFO - query execution done
[2021-02-10 11:10:47,050] {logging_mixin.py:103} INFO - [2021-02-10 11:10:47,050] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:10:48,469] {logging_mixin.py:103} INFO - [2021-02-10 11:10:48,469] {cursor.py:560} INFO - query execution done
[2021-02-10 11:10:48,470] {logging_mixin.py:103} INFO - [2021-02-10 11:10:48,470] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:10:49,231] {logging_mixin.py:103} INFO - [2021-02-10 11:10:49,231] {cursor.py:560} INFO - query execution done
[2021-02-10 11:10:49,244] {logging_mixin.py:103} INFO - [2021-02-10 11:10:49,244] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:10:50,167] {logging_mixin.py:103} INFO - [2021-02-10 11:10:50,167] {cursor.py:560} INFO - query execution done
[2021-02-10 11:10:50,214] {logging_mixin.py:103} INFO - [2021-02-10 11:10:50,214] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:10:50,214] {logging_mixin.py:103} INFO - [2021-02-10 11:10:50,214] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:10:53,608] {logging_mixin.py:103} INFO - [2021-02-10 11:10:53,608] {cursor.py:560} INFO - query execution done
[2021-02-10 11:10:53,612] {logging_mixin.py:103} INFO - [2021-02-10 11:10:53,612] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:10:53,622] {logging_mixin.py:103} INFO - [2021-02-10 11:10:53,622] {data_context.py:1281} INFO - Setting run_name to: 20210210T101053.622300Z
[2021-02-10 11:10:53,623] {logging_mixin.py:103} INFO - [2021-02-10 11:10:53,623] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:10:53,634] {logging_mixin.py:103} INFO - [2021-02-10 11:10:53,634] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:10:56,827] {logging_mixin.py:103} INFO - [2021-02-10 11:10:56,827] {cursor.py:560} INFO - query execution done
[2021-02-10 11:10:56,829] {logging_mixin.py:103} INFO - [2021-02-10 11:10:56,829] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:11:01,288] {logging_mixin.py:103} INFO - [2021-02-10 11:11:01,288] {cursor.py:560} INFO - query execution done
[2021-02-10 11:11:01,289] {logging_mixin.py:103} INFO - [2021-02-10 11:11:01,289] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:11:01,291] {logging_mixin.py:103} INFO - [2021-02-10 11:11:01,291] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:11:03,745] {logging_mixin.py:103} INFO - [2021-02-10 11:11:03,745] {cursor.py:560} INFO - query execution done
[2021-02-10 11:11:03,748] {logging_mixin.py:103} INFO - [2021-02-10 11:11:03,748] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:11:07,753] {logging_mixin.py:103} INFO - [2021-02-10 11:11:07,753] {cursor.py:560} INFO - query execution done
[2021-02-10 11:11:07,756] {logging_mixin.py:103} INFO - [2021-02-10 11:11:07,755] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:11:09,747] {logging_mixin.py:103} INFO - [2021-02-10 11:11:09,746] {cursor.py:560} INFO - query execution done
[2021-02-10 11:11:09,747] {logging_mixin.py:103} INFO - [2021-02-10 11:11:09,747] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:11:09,771] {logging_mixin.py:103} INFO - [2021-02-10 11:11:09,771] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:11:09,773] {logging_mixin.py:103} INFO - [2021-02-10 11:11:09,773] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:11:10,808] {logging_mixin.py:103} INFO - [2021-02-10 11:11:10,807] {cursor.py:560} INFO - query execution done
[2021-02-10 11:11:10,809] {logging_mixin.py:103} INFO - [2021-02-10 11:11:10,809] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:11:11,741] {logging_mixin.py:103} INFO - [2021-02-10 11:11:11,741] {cursor.py:560} INFO - query execution done
[2021-02-10 11:11:11,742] {logging_mixin.py:103} INFO - [2021-02-10 11:11:11,742] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:11:11,745] {logging_mixin.py:103} INFO - [2021-02-10 11:11:11,744] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:11:13,194] {logging_mixin.py:103} INFO - [2021-02-10 11:11:13,194] {cursor.py:560} INFO - query execution done
[2021-02-10 11:11:13,196] {logging_mixin.py:103} INFO - [2021-02-10 11:11:13,196] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:11:14,813] {logging_mixin.py:103} INFO - [2021-02-10 11:11:14,813] {cursor.py:560} INFO - query execution done
[2021-02-10 11:11:14,816] {logging_mixin.py:103} INFO - [2021-02-10 11:11:14,816] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:11:16,059] {logging_mixin.py:103} INFO - [2021-02-10 11:11:16,059] {cursor.py:560} INFO - query execution done
[2021-02-10 11:11:16,062] {logging_mixin.py:103} INFO - [2021-02-10 11:11:16,062] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:11:18,184] {logging_mixin.py:103} INFO - [2021-02-10 11:11:18,183] {cursor.py:560} INFO - query execution done
[2021-02-10 11:11:18,184] {logging_mixin.py:103} INFO - [2021-02-10 11:11:18,184] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:11:18,188] {logging_mixin.py:103} INFO - [2021-02-10 11:11:18,188] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:11:20,376] {logging_mixin.py:103} INFO - [2021-02-10 11:11:20,375] {cursor.py:560} INFO - query execution done
[2021-02-10 11:11:20,390] {logging_mixin.py:103} INFO - [2021-02-10 11:11:20,389] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:11:22,091] {logging_mixin.py:103} INFO - [2021-02-10 11:11:22,090] {cursor.py:560} INFO - query execution done
[2021-02-10 11:11:22,093] {logging_mixin.py:103} INFO - [2021-02-10 11:11:22,093] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:11:27,261] {logging_mixin.py:103} INFO - [2021-02-10 11:11:27,261] {cursor.py:560} INFO - query execution done
[2021-02-10 11:11:27,263] {logging_mixin.py:103} INFO - [2021-02-10 11:11:27,262] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:11:27,267] {logging_mixin.py:103} INFO - [2021-02-10 11:11:27,267] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:11:32,853] {logging_mixin.py:103} INFO - [2021-02-10 11:11:32,853] {cursor.py:560} INFO - query execution done
[2021-02-10 11:11:32,855] {logging_mixin.py:103} INFO - [2021-02-10 11:11:32,854] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:11:40,570] {logging_mixin.py:103} INFO - [2021-02-10 11:11:40,570] {cursor.py:560} INFO - query execution done
[2021-02-10 11:11:40,570] {logging_mixin.py:103} INFO - [2021-02-10 11:11:40,570] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:11:40,574] {logging_mixin.py:103} INFO - [2021-02-10 11:11:40,574] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:11:41,547] {logging_mixin.py:103} INFO - [2021-02-10 11:11:41,547] {cursor.py:560} INFO - query execution done
[2021-02-10 11:11:41,552] {logging_mixin.py:103} INFO - [2021-02-10 11:11:41,551] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:11:43,141] {logging_mixin.py:103} INFO - [2021-02-10 11:11:43,141] {cursor.py:560} INFO - query execution done
[2021-02-10 11:11:43,202] {logging_mixin.py:103} INFO - [2021-02-10 11:11:43,202] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:11:44,280] {logging_mixin.py:103} INFO - [2021-02-10 11:11:44,280] {cursor.py:560} INFO - query execution done
[2021-02-10 11:11:50,637] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:12:19,962] {scheduler_job.py:181} INFO - Started process (PID=70131) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:12:19,963] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:12:19,963] {logging_mixin.py:103} INFO - [2021-02-10 11:12:19,963] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:12:21,584] {logging_mixin.py:103} INFO - [2021-02-10 11:12:21,584] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:12:21,905] {logging_mixin.py:103} INFO - [2021-02-10 11:12:21,905] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:12:22,291] {logging_mixin.py:103} INFO - [2021-02-10 11:12:22,291] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:12:22,292] {logging_mixin.py:103} INFO - [2021-02-10 11:12:22,292] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:12:22,292] {logging_mixin.py:103} INFO - [2021-02-10 11:12:22,292] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:12:23,338] {logging_mixin.py:103} INFO - [2021-02-10 11:12:23,338] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:12:23,524] {logging_mixin.py:103} INFO - [2021-02-10 11:12:23,524] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:23,526] {logging_mixin.py:103} INFO - [2021-02-10 11:12:23,526] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:12:23,710] {logging_mixin.py:103} INFO - [2021-02-10 11:12:23,710] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:23,710] {logging_mixin.py:103} INFO - [2021-02-10 11:12:23,710] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:12:23,864] {logging_mixin.py:103} INFO - [2021-02-10 11:12:23,863] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:23,867] {logging_mixin.py:103} INFO - [2021-02-10 11:12:23,867] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:12:24,109] {logging_mixin.py:103} INFO - [2021-02-10 11:12:24,109] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:24,317] {logging_mixin.py:103} INFO - [2021-02-10 11:12:24,316] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:12:24,513] {logging_mixin.py:103} INFO - [2021-02-10 11:12:24,513] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:24,552] {logging_mixin.py:103} INFO - [2021-02-10 11:12:24,552] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:12:24,553] {logging_mixin.py:103} INFO - [2021-02-10 11:12:24,553] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:12:26,064] {logging_mixin.py:103} INFO - [2021-02-10 11:12:26,064] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:26,066] {logging_mixin.py:103} INFO - [2021-02-10 11:12:26,066] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:12:26,075] {logging_mixin.py:103} INFO - [2021-02-10 11:12:26,075] {data_context.py:1281} INFO - Setting run_name to: 20210210T101226.074987Z
[2021-02-10 11:12:26,076] {logging_mixin.py:103} INFO - [2021-02-10 11:12:26,076] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:12:26,086] {logging_mixin.py:103} INFO - [2021-02-10 11:12:26,086] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:12:26,360] {logging_mixin.py:103} INFO - [2021-02-10 11:12:26,360] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:26,362] {logging_mixin.py:103} INFO - [2021-02-10 11:12:26,362] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:12:26,607] {logging_mixin.py:103} INFO - [2021-02-10 11:12:26,607] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:26,608] {logging_mixin.py:103} INFO - [2021-02-10 11:12:26,607] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:12:26,609] {logging_mixin.py:103} INFO - [2021-02-10 11:12:26,609] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:12:26,781] {logging_mixin.py:103} INFO - [2021-02-10 11:12:26,781] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:26,783] {logging_mixin.py:103} INFO - [2021-02-10 11:12:26,783] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:12:26,925] {logging_mixin.py:103} INFO - [2021-02-10 11:12:26,925] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:26,927] {logging_mixin.py:103} INFO - [2021-02-10 11:12:26,926] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:12:27,092] {logging_mixin.py:103} INFO - [2021-02-10 11:12:27,091] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:27,092] {logging_mixin.py:103} INFO - [2021-02-10 11:12:27,092] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:12:27,103] {logging_mixin.py:103} INFO - [2021-02-10 11:12:27,103] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:12:27,104] {logging_mixin.py:103} INFO - [2021-02-10 11:12:27,104] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:12:27,269] {logging_mixin.py:103} INFO - [2021-02-10 11:12:27,269] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:27,271] {logging_mixin.py:103} INFO - [2021-02-10 11:12:27,271] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:12:27,464] {logging_mixin.py:103} INFO - [2021-02-10 11:12:27,464] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:27,465] {logging_mixin.py:103} INFO - [2021-02-10 11:12:27,465] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:12:27,467] {logging_mixin.py:103} INFO - [2021-02-10 11:12:27,467] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:12:27,691] {logging_mixin.py:103} INFO - [2021-02-10 11:12:27,691] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:27,693] {logging_mixin.py:103} INFO - [2021-02-10 11:12:27,693] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:12:27,859] {logging_mixin.py:103} INFO - [2021-02-10 11:12:27,859] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:27,863] {logging_mixin.py:103} INFO - [2021-02-10 11:12:27,863] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:12:28,024] {logging_mixin.py:103} INFO - [2021-02-10 11:12:28,024] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:28,026] {logging_mixin.py:103} INFO - [2021-02-10 11:12:28,026] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:12:28,218] {logging_mixin.py:103} INFO - [2021-02-10 11:12:28,218] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:28,218] {logging_mixin.py:103} INFO - [2021-02-10 11:12:28,218] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:12:28,223] {logging_mixin.py:103} INFO - [2021-02-10 11:12:28,223] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:12:28,465] {logging_mixin.py:103} INFO - [2021-02-10 11:12:28,465] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:28,472] {logging_mixin.py:103} INFO - [2021-02-10 11:12:28,471] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:12:28,625] {logging_mixin.py:103} INFO - [2021-02-10 11:12:28,625] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:28,627] {logging_mixin.py:103} INFO - [2021-02-10 11:12:28,627] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:12:28,793] {logging_mixin.py:103} INFO - [2021-02-10 11:12:28,793] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:28,794] {logging_mixin.py:103} INFO - [2021-02-10 11:12:28,793] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:12:28,797] {logging_mixin.py:103} INFO - [2021-02-10 11:12:28,797] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:12:28,981] {logging_mixin.py:103} INFO - [2021-02-10 11:12:28,981] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:28,983] {logging_mixin.py:103} INFO - [2021-02-10 11:12:28,983] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:12:29,177] {logging_mixin.py:103} INFO - [2021-02-10 11:12:29,177] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:29,178] {logging_mixin.py:103} INFO - [2021-02-10 11:12:29,178] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:12:29,182] {logging_mixin.py:103} INFO - [2021-02-10 11:12:29,182] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:12:29,365] {logging_mixin.py:103} INFO - [2021-02-10 11:12:29,364] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:29,367] {logging_mixin.py:103} INFO - [2021-02-10 11:12:29,367] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:12:29,534] {logging_mixin.py:103} INFO - [2021-02-10 11:12:29,534] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:29,546] {logging_mixin.py:103} INFO - [2021-02-10 11:12:29,546] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:12:29,693] {logging_mixin.py:103} INFO - [2021-02-10 11:12:29,692] {cursor.py:560} INFO - query execution done
[2021-02-10 11:12:35,986] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:13:02,529] {scheduler_job.py:181} INFO - Started process (PID=70193) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:13:02,530] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:13:02,530] {logging_mixin.py:103} INFO - [2021-02-10 11:13:02,530] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:13:04,115] {logging_mixin.py:103} INFO - [2021-02-10 11:13:04,115] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:13:04,390] {logging_mixin.py:103} INFO - [2021-02-10 11:13:04,390] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:13:04,719] {logging_mixin.py:103} INFO - [2021-02-10 11:13:04,718] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:13:04,719] {logging_mixin.py:103} INFO - [2021-02-10 11:13:04,719] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:13:04,719] {logging_mixin.py:103} INFO - [2021-02-10 11:13:04,719] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:13:06,030] {logging_mixin.py:103} INFO - [2021-02-10 11:13:06,030] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:13:06,225] {logging_mixin.py:103} INFO - [2021-02-10 11:13:06,225] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:06,227] {logging_mixin.py:103} INFO - [2021-02-10 11:13:06,227] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:13:06,394] {logging_mixin.py:103} INFO - [2021-02-10 11:13:06,394] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:06,395] {logging_mixin.py:103} INFO - [2021-02-10 11:13:06,395] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:13:06,552] {logging_mixin.py:103} INFO - [2021-02-10 11:13:06,551] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:06,554] {logging_mixin.py:103} INFO - [2021-02-10 11:13:06,554] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:13:06,751] {logging_mixin.py:103} INFO - [2021-02-10 11:13:06,751] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:06,974] {logging_mixin.py:103} INFO - [2021-02-10 11:13:06,974] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:13:07,130] {logging_mixin.py:103} INFO - [2021-02-10 11:13:07,130] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:07,172] {logging_mixin.py:103} INFO - [2021-02-10 11:13:07,172] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:13:07,173] {logging_mixin.py:103} INFO - [2021-02-10 11:13:07,173] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:13:09,725] {logging_mixin.py:103} INFO - [2021-02-10 11:13:09,725] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:09,729] {logging_mixin.py:103} INFO - [2021-02-10 11:13:09,728] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:13:09,739] {logging_mixin.py:103} INFO - [2021-02-10 11:13:09,739] {data_context.py:1281} INFO - Setting run_name to: 20210210T101309.739687Z
[2021-02-10 11:13:09,740] {logging_mixin.py:103} INFO - [2021-02-10 11:13:09,740] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:13:09,751] {logging_mixin.py:103} INFO - [2021-02-10 11:13:09,751] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:13:09,951] {logging_mixin.py:103} INFO - [2021-02-10 11:13:09,951] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:09,953] {logging_mixin.py:103} INFO - [2021-02-10 11:13:09,953] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:13:10,148] {logging_mixin.py:103} INFO - [2021-02-10 11:13:10,148] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:10,149] {logging_mixin.py:103} INFO - [2021-02-10 11:13:10,148] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:13:10,150] {logging_mixin.py:103} INFO - [2021-02-10 11:13:10,150] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:13:10,360] {logging_mixin.py:103} INFO - [2021-02-10 11:13:10,360] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:10,362] {logging_mixin.py:103} INFO - [2021-02-10 11:13:10,362] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:13:10,616] {logging_mixin.py:103} INFO - [2021-02-10 11:13:10,616] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:10,618] {logging_mixin.py:103} INFO - [2021-02-10 11:13:10,618] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:13:10,792] {logging_mixin.py:103} INFO - [2021-02-10 11:13:10,791] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:10,792] {logging_mixin.py:103} INFO - [2021-02-10 11:13:10,792] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:13:10,805] {logging_mixin.py:103} INFO - [2021-02-10 11:13:10,805] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:13:10,808] {logging_mixin.py:103} INFO - [2021-02-10 11:13:10,808] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:13:10,978] {logging_mixin.py:103} INFO - [2021-02-10 11:13:10,978] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:10,980] {logging_mixin.py:103} INFO - [2021-02-10 11:13:10,980] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:13:11,149] {logging_mixin.py:103} INFO - [2021-02-10 11:13:11,148] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:11,149] {logging_mixin.py:103} INFO - [2021-02-10 11:13:11,149] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:13:11,152] {logging_mixin.py:103} INFO - [2021-02-10 11:13:11,152] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:13:11,331] {logging_mixin.py:103} INFO - [2021-02-10 11:13:11,331] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:11,333] {logging_mixin.py:103} INFO - [2021-02-10 11:13:11,333] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:13:11,477] {logging_mixin.py:103} INFO - [2021-02-10 11:13:11,477] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:11,480] {logging_mixin.py:103} INFO - [2021-02-10 11:13:11,480] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:13:11,674] {logging_mixin.py:103} INFO - [2021-02-10 11:13:11,674] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:11,677] {logging_mixin.py:103} INFO - [2021-02-10 11:13:11,677] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:13:11,885] {logging_mixin.py:103} INFO - [2021-02-10 11:13:11,885] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:11,885] {logging_mixin.py:103} INFO - [2021-02-10 11:13:11,885] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:13:11,889] {logging_mixin.py:103} INFO - [2021-02-10 11:13:11,889] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:13:12,047] {logging_mixin.py:103} INFO - [2021-02-10 11:13:12,046] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:12,053] {logging_mixin.py:103} INFO - [2021-02-10 11:13:12,053] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:13:12,226] {logging_mixin.py:103} INFO - [2021-02-10 11:13:12,226] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:12,228] {logging_mixin.py:103} INFO - [2021-02-10 11:13:12,228] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:13:12,406] {logging_mixin.py:103} INFO - [2021-02-10 11:13:12,406] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:12,407] {logging_mixin.py:103} INFO - [2021-02-10 11:13:12,406] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:13:12,410] {logging_mixin.py:103} INFO - [2021-02-10 11:13:12,410] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:13:12,581] {logging_mixin.py:103} INFO - [2021-02-10 11:13:12,581] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:12,584] {logging_mixin.py:103} INFO - [2021-02-10 11:13:12,583] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:13:12,884] {logging_mixin.py:103} INFO - [2021-02-10 11:13:12,884] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:12,885] {logging_mixin.py:103} INFO - [2021-02-10 11:13:12,885] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:13:12,888] {logging_mixin.py:103} INFO - [2021-02-10 11:13:12,887] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:13:13,069] {logging_mixin.py:103} INFO - [2021-02-10 11:13:13,068] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:13,071] {logging_mixin.py:103} INFO - [2021-02-10 11:13:13,071] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:13:13,264] {logging_mixin.py:103} INFO - [2021-02-10 11:13:13,264] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:13,275] {logging_mixin.py:103} INFO - [2021-02-10 11:13:13,275] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:13:13,443] {logging_mixin.py:103} INFO - [2021-02-10 11:13:13,443] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:19,035] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:13:46,791] {scheduler_job.py:181} INFO - Started process (PID=70256) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:13:46,791] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:13:46,791] {logging_mixin.py:103} INFO - [2021-02-10 11:13:46,791] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:13:48,399] {logging_mixin.py:103} INFO - [2021-02-10 11:13:48,398] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:13:48,686] {logging_mixin.py:103} INFO - [2021-02-10 11:13:48,686] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:13:49,037] {logging_mixin.py:103} INFO - [2021-02-10 11:13:49,037] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:13:49,037] {logging_mixin.py:103} INFO - [2021-02-10 11:13:49,037] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:13:49,037] {logging_mixin.py:103} INFO - [2021-02-10 11:13:49,037] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:13:50,254] {logging_mixin.py:103} INFO - [2021-02-10 11:13:50,254] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:13:50,432] {logging_mixin.py:103} INFO - [2021-02-10 11:13:50,432] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:50,434] {logging_mixin.py:103} INFO - [2021-02-10 11:13:50,434] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:13:50,610] {logging_mixin.py:103} INFO - [2021-02-10 11:13:50,610] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:50,611] {logging_mixin.py:103} INFO - [2021-02-10 11:13:50,611] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:13:50,753] {logging_mixin.py:103} INFO - [2021-02-10 11:13:50,753] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:50,754] {logging_mixin.py:103} INFO - [2021-02-10 11:13:50,754] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:13:50,884] {logging_mixin.py:103} INFO - [2021-02-10 11:13:50,883] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:51,112] {logging_mixin.py:103} INFO - [2021-02-10 11:13:51,111] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:13:51,456] {logging_mixin.py:103} INFO - [2021-02-10 11:13:51,456] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:51,502] {logging_mixin.py:103} INFO - [2021-02-10 11:13:51,502] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:13:51,503] {logging_mixin.py:103} INFO - [2021-02-10 11:13:51,502] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:13:52,709] {logging_mixin.py:103} INFO - [2021-02-10 11:13:52,709] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:52,713] {logging_mixin.py:103} INFO - [2021-02-10 11:13:52,713] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:13:52,723] {logging_mixin.py:103} INFO - [2021-02-10 11:13:52,723] {data_context.py:1281} INFO - Setting run_name to: 20210210T101352.723455Z
[2021-02-10 11:13:52,724] {logging_mixin.py:103} INFO - [2021-02-10 11:13:52,724] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:13:52,734] {logging_mixin.py:103} INFO - [2021-02-10 11:13:52,734] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:13:52,913] {logging_mixin.py:103} INFO - [2021-02-10 11:13:52,913] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:52,915] {logging_mixin.py:103} INFO - [2021-02-10 11:13:52,915] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:13:53,102] {logging_mixin.py:103} INFO - [2021-02-10 11:13:53,102] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:53,102] {logging_mixin.py:103} INFO - [2021-02-10 11:13:53,102] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:13:53,104] {logging_mixin.py:103} INFO - [2021-02-10 11:13:53,104] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:13:53,303] {logging_mixin.py:103} INFO - [2021-02-10 11:13:53,303] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:53,305] {logging_mixin.py:103} INFO - [2021-02-10 11:13:53,305] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:13:53,454] {logging_mixin.py:103} INFO - [2021-02-10 11:13:53,454] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:53,457] {logging_mixin.py:103} INFO - [2021-02-10 11:13:53,457] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:13:54,254] {logging_mixin.py:103} INFO - [2021-02-10 11:13:54,254] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:54,254] {logging_mixin.py:103} INFO - [2021-02-10 11:13:54,254] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:13:54,266] {logging_mixin.py:103} INFO - [2021-02-10 11:13:54,265] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:13:54,268] {logging_mixin.py:103} INFO - [2021-02-10 11:13:54,268] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:13:55,171] {logging_mixin.py:103} INFO - [2021-02-10 11:13:55,171] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:55,174] {logging_mixin.py:103} INFO - [2021-02-10 11:13:55,173] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:13:55,791] {logging_mixin.py:103} INFO - [2021-02-10 11:13:55,790] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:55,791] {logging_mixin.py:103} INFO - [2021-02-10 11:13:55,791] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:13:55,794] {logging_mixin.py:103} INFO - [2021-02-10 11:13:55,794] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:13:56,018] {logging_mixin.py:103} INFO - [2021-02-10 11:13:56,018] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:56,019] {logging_mixin.py:103} INFO - [2021-02-10 11:13:56,019] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:13:56,221] {logging_mixin.py:103} INFO - [2021-02-10 11:13:56,220] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:56,224] {logging_mixin.py:103} INFO - [2021-02-10 11:13:56,223] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:13:56,385] {logging_mixin.py:103} INFO - [2021-02-10 11:13:56,385] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:56,387] {logging_mixin.py:103} INFO - [2021-02-10 11:13:56,387] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:13:56,556] {logging_mixin.py:103} INFO - [2021-02-10 11:13:56,555] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:56,556] {logging_mixin.py:103} INFO - [2021-02-10 11:13:56,556] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:13:56,560] {logging_mixin.py:103} INFO - [2021-02-10 11:13:56,560] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:13:56,726] {logging_mixin.py:103} INFO - [2021-02-10 11:13:56,725] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:56,732] {logging_mixin.py:103} INFO - [2021-02-10 11:13:56,732] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:13:56,924] {logging_mixin.py:103} INFO - [2021-02-10 11:13:56,924] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:56,927] {logging_mixin.py:103} INFO - [2021-02-10 11:13:56,927] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:13:57,107] {logging_mixin.py:103} INFO - [2021-02-10 11:13:57,107] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:57,107] {logging_mixin.py:103} INFO - [2021-02-10 11:13:57,107] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:13:57,111] {logging_mixin.py:103} INFO - [2021-02-10 11:13:57,111] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:13:57,280] {logging_mixin.py:103} INFO - [2021-02-10 11:13:57,279] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:57,281] {logging_mixin.py:103} INFO - [2021-02-10 11:13:57,281] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:13:57,443] {logging_mixin.py:103} INFO - [2021-02-10 11:13:57,443] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:57,444] {logging_mixin.py:103} INFO - [2021-02-10 11:13:57,444] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:13:57,448] {logging_mixin.py:103} INFO - [2021-02-10 11:13:57,448] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:13:57,615] {logging_mixin.py:103} INFO - [2021-02-10 11:13:57,614] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:57,617] {logging_mixin.py:103} INFO - [2021-02-10 11:13:57,617] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:13:57,845] {logging_mixin.py:103} INFO - [2021-02-10 11:13:57,845] {cursor.py:560} INFO - query execution done
[2021-02-10 11:13:57,856] {logging_mixin.py:103} INFO - [2021-02-10 11:13:57,855] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:13:58,008] {logging_mixin.py:103} INFO - [2021-02-10 11:13:58,008] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:03,285] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:14:29,370] {scheduler_job.py:181} INFO - Started process (PID=70315) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:14:29,371] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:14:29,371] {logging_mixin.py:103} INFO - [2021-02-10 11:14:29,371] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:14:31,064] {logging_mixin.py:103} INFO - [2021-02-10 11:14:31,063] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:14:31,347] {logging_mixin.py:103} INFO - [2021-02-10 11:14:31,347] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:14:31,677] {logging_mixin.py:103} INFO - [2021-02-10 11:14:31,677] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:14:31,677] {logging_mixin.py:103} INFO - [2021-02-10 11:14:31,677] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:14:31,677] {logging_mixin.py:103} INFO - [2021-02-10 11:14:31,677] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:14:32,974] {logging_mixin.py:103} INFO - [2021-02-10 11:14:32,973] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:14:33,154] {logging_mixin.py:103} INFO - [2021-02-10 11:14:33,153] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:33,155] {logging_mixin.py:103} INFO - [2021-02-10 11:14:33,155] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:14:33,306] {logging_mixin.py:103} INFO - [2021-02-10 11:14:33,306] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:33,307] {logging_mixin.py:103} INFO - [2021-02-10 11:14:33,306] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:14:33,504] {logging_mixin.py:103} INFO - [2021-02-10 11:14:33,504] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:33,507] {logging_mixin.py:103} INFO - [2021-02-10 11:14:33,507] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:14:33,642] {logging_mixin.py:103} INFO - [2021-02-10 11:14:33,641] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:33,856] {logging_mixin.py:103} INFO - [2021-02-10 11:14:33,855] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:14:34,017] {logging_mixin.py:103} INFO - [2021-02-10 11:14:34,017] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:34,061] {logging_mixin.py:103} INFO - [2021-02-10 11:14:34,061] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:14:34,062] {logging_mixin.py:103} INFO - [2021-02-10 11:14:34,062] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:14:35,737] {logging_mixin.py:103} INFO - [2021-02-10 11:14:35,737] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:35,740] {logging_mixin.py:103} INFO - [2021-02-10 11:14:35,740] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:14:35,751] {logging_mixin.py:103} INFO - [2021-02-10 11:14:35,751] {data_context.py:1281} INFO - Setting run_name to: 20210210T101435.751425Z
[2021-02-10 11:14:35,752] {logging_mixin.py:103} INFO - [2021-02-10 11:14:35,752] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:14:35,764] {logging_mixin.py:103} INFO - [2021-02-10 11:14:35,764] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:14:35,931] {logging_mixin.py:103} INFO - [2021-02-10 11:14:35,931] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:35,933] {logging_mixin.py:103} INFO - [2021-02-10 11:14:35,933] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:14:36,114] {logging_mixin.py:103} INFO - [2021-02-10 11:14:36,114] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:36,115] {logging_mixin.py:103} INFO - [2021-02-10 11:14:36,115] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:14:36,117] {logging_mixin.py:103} INFO - [2021-02-10 11:14:36,117] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:14:36,282] {logging_mixin.py:103} INFO - [2021-02-10 11:14:36,282] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:36,284] {logging_mixin.py:103} INFO - [2021-02-10 11:14:36,284] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:14:36,448] {logging_mixin.py:103} INFO - [2021-02-10 11:14:36,448] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:36,450] {logging_mixin.py:103} INFO - [2021-02-10 11:14:36,450] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:14:36,606] {logging_mixin.py:103} INFO - [2021-02-10 11:14:36,606] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:36,607] {logging_mixin.py:103} INFO - [2021-02-10 11:14:36,607] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:14:36,618] {logging_mixin.py:103} INFO - [2021-02-10 11:14:36,618] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:14:36,621] {logging_mixin.py:103} INFO - [2021-02-10 11:14:36,621] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:14:36,797] {logging_mixin.py:103} INFO - [2021-02-10 11:14:36,797] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:36,798] {logging_mixin.py:103} INFO - [2021-02-10 11:14:36,798] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:14:36,970] {logging_mixin.py:103} INFO - [2021-02-10 11:14:36,970] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:36,970] {logging_mixin.py:103} INFO - [2021-02-10 11:14:36,970] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:14:36,973] {logging_mixin.py:103} INFO - [2021-02-10 11:14:36,973] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:14:37,154] {logging_mixin.py:103} INFO - [2021-02-10 11:14:37,154] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:37,156] {logging_mixin.py:103} INFO - [2021-02-10 11:14:37,156] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:14:37,317] {logging_mixin.py:103} INFO - [2021-02-10 11:14:37,317] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:37,320] {logging_mixin.py:103} INFO - [2021-02-10 11:14:37,320] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:14:37,481] {logging_mixin.py:103} INFO - [2021-02-10 11:14:37,481] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:37,482] {logging_mixin.py:103} INFO - [2021-02-10 11:14:37,482] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:14:37,740] {logging_mixin.py:103} INFO - [2021-02-10 11:14:37,740] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:37,741] {logging_mixin.py:103} INFO - [2021-02-10 11:14:37,741] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:14:37,745] {logging_mixin.py:103} INFO - [2021-02-10 11:14:37,745] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:14:37,916] {logging_mixin.py:103} INFO - [2021-02-10 11:14:37,916] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:37,923] {logging_mixin.py:103} INFO - [2021-02-10 11:14:37,923] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:14:38,134] {logging_mixin.py:103} INFO - [2021-02-10 11:14:38,134] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:38,137] {logging_mixin.py:103} INFO - [2021-02-10 11:14:38,137] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:14:38,289] {logging_mixin.py:103} INFO - [2021-02-10 11:14:38,289] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:38,289] {logging_mixin.py:103} INFO - [2021-02-10 11:14:38,289] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:14:38,294] {logging_mixin.py:103} INFO - [2021-02-10 11:14:38,293] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:14:38,492] {logging_mixin.py:103} INFO - [2021-02-10 11:14:38,492] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:38,495] {logging_mixin.py:103} INFO - [2021-02-10 11:14:38,494] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:14:38,646] {logging_mixin.py:103} INFO - [2021-02-10 11:14:38,646] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:38,646] {logging_mixin.py:103} INFO - [2021-02-10 11:14:38,646] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:14:38,650] {logging_mixin.py:103} INFO - [2021-02-10 11:14:38,650] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:14:38,809] {logging_mixin.py:103} INFO - [2021-02-10 11:14:38,809] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:38,811] {logging_mixin.py:103} INFO - [2021-02-10 11:14:38,811] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:14:38,976] {logging_mixin.py:103} INFO - [2021-02-10 11:14:38,976] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:38,987] {logging_mixin.py:103} INFO - [2021-02-10 11:14:38,987] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:14:39,141] {logging_mixin.py:103} INFO - [2021-02-10 11:14:39,141] {cursor.py:560} INFO - query execution done
[2021-02-10 11:14:44,357] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:15:10,111] {scheduler_job.py:181} INFO - Started process (PID=70377) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:15:10,111] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:15:10,112] {logging_mixin.py:103} INFO - [2021-02-10 11:15:10,112] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:15:11,739] {logging_mixin.py:103} INFO - [2021-02-10 11:15:11,739] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:15:12,032] {logging_mixin.py:103} INFO - [2021-02-10 11:15:12,032] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:15:12,353] {logging_mixin.py:103} INFO - [2021-02-10 11:15:12,353] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:15:12,353] {logging_mixin.py:103} INFO - [2021-02-10 11:15:12,353] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:15:12,353] {logging_mixin.py:103} INFO - [2021-02-10 11:15:12,353] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:15:14,123] {logging_mixin.py:103} INFO - [2021-02-10 11:15:14,123] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:15:14,293] {logging_mixin.py:103} INFO - [2021-02-10 11:15:14,293] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:14,295] {logging_mixin.py:103} INFO - [2021-02-10 11:15:14,295] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:15:14,499] {logging_mixin.py:103} INFO - [2021-02-10 11:15:14,499] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:14,500] {logging_mixin.py:103} INFO - [2021-02-10 11:15:14,500] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:15:14,661] {logging_mixin.py:103} INFO - [2021-02-10 11:15:14,661] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:14,664] {logging_mixin.py:103} INFO - [2021-02-10 11:15:14,664] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:15:14,828] {logging_mixin.py:103} INFO - [2021-02-10 11:15:14,828] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:15,048] {logging_mixin.py:103} INFO - [2021-02-10 11:15:15,048] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:15:15,244] {logging_mixin.py:103} INFO - [2021-02-10 11:15:15,244] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:15,285] {logging_mixin.py:103} INFO - [2021-02-10 11:15:15,285] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:15:15,285] {logging_mixin.py:103} INFO - [2021-02-10 11:15:15,285] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:15:16,581] {logging_mixin.py:103} INFO - [2021-02-10 11:15:16,581] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:16,584] {logging_mixin.py:103} INFO - [2021-02-10 11:15:16,584] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:15:16,595] {logging_mixin.py:103} INFO - [2021-02-10 11:15:16,594] {data_context.py:1281} INFO - Setting run_name to: 20210210T101516.594821Z
[2021-02-10 11:15:16,596] {logging_mixin.py:103} INFO - [2021-02-10 11:15:16,596] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:15:16,606] {logging_mixin.py:103} INFO - [2021-02-10 11:15:16,606] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:15:16,927] {logging_mixin.py:103} INFO - [2021-02-10 11:15:16,926] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:16,929] {logging_mixin.py:103} INFO - [2021-02-10 11:15:16,929] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:15:17,100] {logging_mixin.py:103} INFO - [2021-02-10 11:15:17,100] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:17,101] {logging_mixin.py:103} INFO - [2021-02-10 11:15:17,101] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:15:17,103] {logging_mixin.py:103} INFO - [2021-02-10 11:15:17,103] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:15:17,273] {logging_mixin.py:103} INFO - [2021-02-10 11:15:17,272] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:17,275] {logging_mixin.py:103} INFO - [2021-02-10 11:15:17,275] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:15:17,471] {logging_mixin.py:103} INFO - [2021-02-10 11:15:17,471] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:17,474] {logging_mixin.py:103} INFO - [2021-02-10 11:15:17,474] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:15:17,668] {logging_mixin.py:103} INFO - [2021-02-10 11:15:17,668] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:17,668] {logging_mixin.py:103} INFO - [2021-02-10 11:15:17,668] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:15:17,680] {logging_mixin.py:103} INFO - [2021-02-10 11:15:17,680] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:15:17,682] {logging_mixin.py:103} INFO - [2021-02-10 11:15:17,682] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:15:17,852] {logging_mixin.py:103} INFO - [2021-02-10 11:15:17,851] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:17,854] {logging_mixin.py:103} INFO - [2021-02-10 11:15:17,853] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:15:18,007] {logging_mixin.py:103} INFO - [2021-02-10 11:15:18,007] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:18,008] {logging_mixin.py:103} INFO - [2021-02-10 11:15:18,008] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:15:18,010] {logging_mixin.py:103} INFO - [2021-02-10 11:15:18,010] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:15:18,755] {logging_mixin.py:103} INFO - [2021-02-10 11:15:18,755] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:18,757] {logging_mixin.py:103} INFO - [2021-02-10 11:15:18,757] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:15:18,965] {logging_mixin.py:103} INFO - [2021-02-10 11:15:18,965] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:18,967] {logging_mixin.py:103} INFO - [2021-02-10 11:15:18,967] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:15:19,147] {logging_mixin.py:103} INFO - [2021-02-10 11:15:19,147] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:19,149] {logging_mixin.py:103} INFO - [2021-02-10 11:15:19,149] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:15:19,371] {logging_mixin.py:103} INFO - [2021-02-10 11:15:19,371] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:19,372] {logging_mixin.py:103} INFO - [2021-02-10 11:15:19,372] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:15:19,376] {logging_mixin.py:103} INFO - [2021-02-10 11:15:19,376] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:15:19,631] {logging_mixin.py:103} INFO - [2021-02-10 11:15:19,631] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:19,638] {logging_mixin.py:103} INFO - [2021-02-10 11:15:19,637] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:15:19,821] {logging_mixin.py:103} INFO - [2021-02-10 11:15:19,821] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:19,823] {logging_mixin.py:103} INFO - [2021-02-10 11:15:19,823] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:15:20,081] {logging_mixin.py:103} INFO - [2021-02-10 11:15:20,081] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:20,081] {logging_mixin.py:103} INFO - [2021-02-10 11:15:20,081] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:15:20,085] {logging_mixin.py:103} INFO - [2021-02-10 11:15:20,085] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:15:20,356] {logging_mixin.py:103} INFO - [2021-02-10 11:15:20,356] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:20,358] {logging_mixin.py:103} INFO - [2021-02-10 11:15:20,358] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:15:20,556] {logging_mixin.py:103} INFO - [2021-02-10 11:15:20,556] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:20,557] {logging_mixin.py:103} INFO - [2021-02-10 11:15:20,557] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:15:20,561] {logging_mixin.py:103} INFO - [2021-02-10 11:15:20,561] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:15:20,735] {logging_mixin.py:103} INFO - [2021-02-10 11:15:20,735] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:20,738] {logging_mixin.py:103} INFO - [2021-02-10 11:15:20,738] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:15:21,514] {logging_mixin.py:103} INFO - [2021-02-10 11:15:21,513] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:21,525] {logging_mixin.py:103} INFO - [2021-02-10 11:15:21,525] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:15:21,698] {logging_mixin.py:103} INFO - [2021-02-10 11:15:21,697] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:27,040] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:15:53,978] {scheduler_job.py:181} INFO - Started process (PID=70436) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:15:53,978] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:15:53,979] {logging_mixin.py:103} INFO - [2021-02-10 11:15:53,979] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:15:55,603] {logging_mixin.py:103} INFO - [2021-02-10 11:15:55,603] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:15:55,875] {logging_mixin.py:103} INFO - [2021-02-10 11:15:55,875] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:15:56,212] {logging_mixin.py:103} INFO - [2021-02-10 11:15:56,212] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:15:56,212] {logging_mixin.py:103} INFO - [2021-02-10 11:15:56,212] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:15:56,212] {logging_mixin.py:103} INFO - [2021-02-10 11:15:56,212] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:15:57,389] {logging_mixin.py:103} INFO - [2021-02-10 11:15:57,389] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:15:57,566] {logging_mixin.py:103} INFO - [2021-02-10 11:15:57,566] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:57,568] {logging_mixin.py:103} INFO - [2021-02-10 11:15:57,568] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:15:57,768] {logging_mixin.py:103} INFO - [2021-02-10 11:15:57,768] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:57,768] {logging_mixin.py:103} INFO - [2021-02-10 11:15:57,768] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:15:57,961] {logging_mixin.py:103} INFO - [2021-02-10 11:15:57,961] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:57,964] {logging_mixin.py:103} INFO - [2021-02-10 11:15:57,964] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:15:58,118] {logging_mixin.py:103} INFO - [2021-02-10 11:15:58,117] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:58,330] {logging_mixin.py:103} INFO - [2021-02-10 11:15:58,330] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:15:58,518] {logging_mixin.py:103} INFO - [2021-02-10 11:15:58,518] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:58,563] {logging_mixin.py:103} INFO - [2021-02-10 11:15:58,563] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:15:58,564] {logging_mixin.py:103} INFO - [2021-02-10 11:15:58,564] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:15:59,907] {logging_mixin.py:103} INFO - [2021-02-10 11:15:59,907] {cursor.py:560} INFO - query execution done
[2021-02-10 11:15:59,913] {logging_mixin.py:103} INFO - [2021-02-10 11:15:59,912] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:15:59,927] {logging_mixin.py:103} INFO - [2021-02-10 11:15:59,927] {data_context.py:1281} INFO - Setting run_name to: 20210210T101559.927058Z
[2021-02-10 11:15:59,928] {logging_mixin.py:103} INFO - [2021-02-10 11:15:59,928] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:15:59,941] {logging_mixin.py:103} INFO - [2021-02-10 11:15:59,941] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:16:00,213] {logging_mixin.py:103} INFO - [2021-02-10 11:16:00,213] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:00,215] {logging_mixin.py:103} INFO - [2021-02-10 11:16:00,215] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:16:00,413] {logging_mixin.py:103} INFO - [2021-02-10 11:16:00,413] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:00,414] {logging_mixin.py:103} INFO - [2021-02-10 11:16:00,414] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:16:00,417] {logging_mixin.py:103} INFO - [2021-02-10 11:16:00,417] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:16:00,605] {logging_mixin.py:103} INFO - [2021-02-10 11:16:00,605] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:00,608] {logging_mixin.py:103} INFO - [2021-02-10 11:16:00,608] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:16:00,801] {logging_mixin.py:103} INFO - [2021-02-10 11:16:00,801] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:00,803] {logging_mixin.py:103} INFO - [2021-02-10 11:16:00,803] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:16:00,966] {logging_mixin.py:103} INFO - [2021-02-10 11:16:00,966] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:00,966] {logging_mixin.py:103} INFO - [2021-02-10 11:16:00,966] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:16:00,978] {logging_mixin.py:103} INFO - [2021-02-10 11:16:00,978] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:16:00,981] {logging_mixin.py:103} INFO - [2021-02-10 11:16:00,981] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:16:01,165] {logging_mixin.py:103} INFO - [2021-02-10 11:16:01,165] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:01,167] {logging_mixin.py:103} INFO - [2021-02-10 11:16:01,167] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:16:01,329] {logging_mixin.py:103} INFO - [2021-02-10 11:16:01,329] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:01,329] {logging_mixin.py:103} INFO - [2021-02-10 11:16:01,329] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:16:01,332] {logging_mixin.py:103} INFO - [2021-02-10 11:16:01,332] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:16:01,570] {logging_mixin.py:103} INFO - [2021-02-10 11:16:01,570] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:01,571] {logging_mixin.py:103} INFO - [2021-02-10 11:16:01,571] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:16:01,839] {logging_mixin.py:103} INFO - [2021-02-10 11:16:01,839] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:01,842] {logging_mixin.py:103} INFO - [2021-02-10 11:16:01,842] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:16:02,023] {logging_mixin.py:103} INFO - [2021-02-10 11:16:02,023] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:02,025] {logging_mixin.py:103} INFO - [2021-02-10 11:16:02,025] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:16:02,244] {logging_mixin.py:103} INFO - [2021-02-10 11:16:02,244] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:02,245] {logging_mixin.py:103} INFO - [2021-02-10 11:16:02,245] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:16:02,249] {logging_mixin.py:103} INFO - [2021-02-10 11:16:02,249] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:16:02,572] {logging_mixin.py:103} INFO - [2021-02-10 11:16:02,572] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:02,579] {logging_mixin.py:103} INFO - [2021-02-10 11:16:02,579] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:16:02,840] {logging_mixin.py:103} INFO - [2021-02-10 11:16:02,840] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:02,843] {logging_mixin.py:103} INFO - [2021-02-10 11:16:02,843] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:16:03,007] {logging_mixin.py:103} INFO - [2021-02-10 11:16:03,006] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:03,007] {logging_mixin.py:103} INFO - [2021-02-10 11:16:03,007] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:16:03,011] {logging_mixin.py:103} INFO - [2021-02-10 11:16:03,011] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:16:03,261] {logging_mixin.py:103} INFO - [2021-02-10 11:16:03,260] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:03,263] {logging_mixin.py:103} INFO - [2021-02-10 11:16:03,263] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:16:03,463] {logging_mixin.py:103} INFO - [2021-02-10 11:16:03,463] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:03,463] {logging_mixin.py:103} INFO - [2021-02-10 11:16:03,463] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:16:03,467] {logging_mixin.py:103} INFO - [2021-02-10 11:16:03,467] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:16:03,646] {logging_mixin.py:103} INFO - [2021-02-10 11:16:03,646] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:03,649] {logging_mixin.py:103} INFO - [2021-02-10 11:16:03,648] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:16:03,837] {logging_mixin.py:103} INFO - [2021-02-10 11:16:03,836] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:03,848] {logging_mixin.py:103} INFO - [2021-02-10 11:16:03,847] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:16:04,213] {logging_mixin.py:103} INFO - [2021-02-10 11:16:04,213] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:09,463] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:16:34,805] {scheduler_job.py:181} INFO - Started process (PID=70494) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:16:34,805] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:16:34,805] {logging_mixin.py:103} INFO - [2021-02-10 11:16:34,805] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:16:36,421] {logging_mixin.py:103} INFO - [2021-02-10 11:16:36,421] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:16:36,713] {logging_mixin.py:103} INFO - [2021-02-10 11:16:36,713] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:16:37,046] {logging_mixin.py:103} INFO - [2021-02-10 11:16:37,046] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:16:37,046] {logging_mixin.py:103} INFO - [2021-02-10 11:16:37,046] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:16:37,046] {logging_mixin.py:103} INFO - [2021-02-10 11:16:37,046] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:16:38,928] {logging_mixin.py:103} INFO - [2021-02-10 11:16:38,928] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:16:39,084] {logging_mixin.py:103} INFO - [2021-02-10 11:16:39,084] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:39,086] {logging_mixin.py:103} INFO - [2021-02-10 11:16:39,085] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:16:39,217] {logging_mixin.py:103} INFO - [2021-02-10 11:16:39,217] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:39,218] {logging_mixin.py:103} INFO - [2021-02-10 11:16:39,217] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:16:39,358] {logging_mixin.py:103} INFO - [2021-02-10 11:16:39,358] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:39,361] {logging_mixin.py:103} INFO - [2021-02-10 11:16:39,361] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:16:39,642] {logging_mixin.py:103} INFO - [2021-02-10 11:16:39,641] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:39,855] {logging_mixin.py:103} INFO - [2021-02-10 11:16:39,855] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:16:40,079] {logging_mixin.py:103} INFO - [2021-02-10 11:16:40,078] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:40,121] {logging_mixin.py:103} INFO - [2021-02-10 11:16:40,121] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:16:40,121] {logging_mixin.py:103} INFO - [2021-02-10 11:16:40,121] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:16:42,665] {logging_mixin.py:103} INFO - [2021-02-10 11:16:42,665] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:42,668] {logging_mixin.py:103} INFO - [2021-02-10 11:16:42,668] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:16:42,679] {logging_mixin.py:103} INFO - [2021-02-10 11:16:42,679] {data_context.py:1281} INFO - Setting run_name to: 20210210T101642.679104Z
[2021-02-10 11:16:42,680] {logging_mixin.py:103} INFO - [2021-02-10 11:16:42,680] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:16:42,690] {logging_mixin.py:103} INFO - [2021-02-10 11:16:42,690] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:16:42,864] {logging_mixin.py:103} INFO - [2021-02-10 11:16:42,864] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:42,866] {logging_mixin.py:103} INFO - [2021-02-10 11:16:42,866] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:16:43,107] {logging_mixin.py:103} INFO - [2021-02-10 11:16:43,107] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:43,107] {logging_mixin.py:103} INFO - [2021-02-10 11:16:43,107] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:16:43,109] {logging_mixin.py:103} INFO - [2021-02-10 11:16:43,109] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:16:43,318] {logging_mixin.py:103} INFO - [2021-02-10 11:16:43,318] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:43,320] {logging_mixin.py:103} INFO - [2021-02-10 11:16:43,320] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:16:43,497] {logging_mixin.py:103} INFO - [2021-02-10 11:16:43,497] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:43,499] {logging_mixin.py:103} INFO - [2021-02-10 11:16:43,499] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:16:43,685] {logging_mixin.py:103} INFO - [2021-02-10 11:16:43,685] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:43,685] {logging_mixin.py:103} INFO - [2021-02-10 11:16:43,685] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:16:43,697] {logging_mixin.py:103} INFO - [2021-02-10 11:16:43,697] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:16:43,699] {logging_mixin.py:103} INFO - [2021-02-10 11:16:43,699] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:16:43,867] {logging_mixin.py:103} INFO - [2021-02-10 11:16:43,867] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:43,869] {logging_mixin.py:103} INFO - [2021-02-10 11:16:43,869] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:16:44,147] {logging_mixin.py:103} INFO - [2021-02-10 11:16:44,147] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:44,148] {logging_mixin.py:103} INFO - [2021-02-10 11:16:44,148] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:16:44,151] {logging_mixin.py:103} INFO - [2021-02-10 11:16:44,150] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:16:44,327] {logging_mixin.py:103} INFO - [2021-02-10 11:16:44,326] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:44,329] {logging_mixin.py:103} INFO - [2021-02-10 11:16:44,329] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:16:44,550] {logging_mixin.py:103} INFO - [2021-02-10 11:16:44,550] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:44,553] {logging_mixin.py:103} INFO - [2021-02-10 11:16:44,553] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:16:44,728] {logging_mixin.py:103} INFO - [2021-02-10 11:16:44,727] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:44,730] {logging_mixin.py:103} INFO - [2021-02-10 11:16:44,730] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:16:45,379] {logging_mixin.py:103} INFO - [2021-02-10 11:16:45,379] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:45,380] {logging_mixin.py:103} INFO - [2021-02-10 11:16:45,380] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:16:45,385] {logging_mixin.py:103} INFO - [2021-02-10 11:16:45,385] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:16:46,003] {logging_mixin.py:103} INFO - [2021-02-10 11:16:46,003] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:46,009] {logging_mixin.py:103} INFO - [2021-02-10 11:16:46,009] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:16:46,161] {logging_mixin.py:103} INFO - [2021-02-10 11:16:46,160] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:46,164] {logging_mixin.py:103} INFO - [2021-02-10 11:16:46,163] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:16:46,593] {logging_mixin.py:103} INFO - [2021-02-10 11:16:46,593] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:46,593] {logging_mixin.py:103} INFO - [2021-02-10 11:16:46,593] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:16:46,597] {logging_mixin.py:103} INFO - [2021-02-10 11:16:46,597] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:16:47,311] {logging_mixin.py:103} INFO - [2021-02-10 11:16:47,311] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:47,313] {logging_mixin.py:103} INFO - [2021-02-10 11:16:47,312] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:16:47,527] {logging_mixin.py:103} INFO - [2021-02-10 11:16:47,527] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:47,527] {logging_mixin.py:103} INFO - [2021-02-10 11:16:47,527] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:16:47,531] {logging_mixin.py:103} INFO - [2021-02-10 11:16:47,531] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:16:47,687] {logging_mixin.py:103} INFO - [2021-02-10 11:16:47,687] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:47,689] {logging_mixin.py:103} INFO - [2021-02-10 11:16:47,689] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:16:47,921] {logging_mixin.py:103} INFO - [2021-02-10 11:16:47,921] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:47,933] {logging_mixin.py:103} INFO - [2021-02-10 11:16:47,933] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:16:48,392] {logging_mixin.py:103} INFO - [2021-02-10 11:16:48,391] {cursor.py:560} INFO - query execution done
[2021-02-10 11:16:53,908] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:17:19,606] {scheduler_job.py:181} INFO - Started process (PID=70565) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:17:19,607] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:17:19,607] {logging_mixin.py:103} INFO - [2021-02-10 11:17:19,607] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:17:21,246] {logging_mixin.py:103} INFO - [2021-02-10 11:17:21,245] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:17:21,534] {logging_mixin.py:103} INFO - [2021-02-10 11:17:21,534] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:17:21,859] {logging_mixin.py:103} INFO - [2021-02-10 11:17:21,859] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:17:21,859] {logging_mixin.py:103} INFO - [2021-02-10 11:17:21,859] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:17:21,859] {logging_mixin.py:103} INFO - [2021-02-10 11:17:21,859] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:17:23,152] {logging_mixin.py:103} INFO - [2021-02-10 11:17:23,151] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:17:23,320] {logging_mixin.py:103} INFO - [2021-02-10 11:17:23,319] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:23,321] {logging_mixin.py:103} INFO - [2021-02-10 11:17:23,321] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:17:23,524] {logging_mixin.py:103} INFO - [2021-02-10 11:17:23,524] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:23,525] {logging_mixin.py:103} INFO - [2021-02-10 11:17:23,525] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:17:23,697] {logging_mixin.py:103} INFO - [2021-02-10 11:17:23,697] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:23,700] {logging_mixin.py:103} INFO - [2021-02-10 11:17:23,700] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:17:23,900] {logging_mixin.py:103} INFO - [2021-02-10 11:17:23,900] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:24,123] {logging_mixin.py:103} INFO - [2021-02-10 11:17:24,123] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:17:24,280] {logging_mixin.py:103} INFO - [2021-02-10 11:17:24,279] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:24,320] {logging_mixin.py:103} INFO - [2021-02-10 11:17:24,320] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:17:24,321] {logging_mixin.py:103} INFO - [2021-02-10 11:17:24,321] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:17:25,934] {logging_mixin.py:103} INFO - [2021-02-10 11:17:25,934] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:25,938] {logging_mixin.py:103} INFO - [2021-02-10 11:17:25,938] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:17:25,949] {logging_mixin.py:103} INFO - [2021-02-10 11:17:25,949] {data_context.py:1281} INFO - Setting run_name to: 20210210T101725.949143Z
[2021-02-10 11:17:25,950] {logging_mixin.py:103} INFO - [2021-02-10 11:17:25,950] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:17:25,961] {logging_mixin.py:103} INFO - [2021-02-10 11:17:25,960] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:17:26,179] {logging_mixin.py:103} INFO - [2021-02-10 11:17:26,179] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:26,181] {logging_mixin.py:103} INFO - [2021-02-10 11:17:26,181] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:17:26,364] {logging_mixin.py:103} INFO - [2021-02-10 11:17:26,363] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:26,364] {logging_mixin.py:103} INFO - [2021-02-10 11:17:26,364] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:17:26,366] {logging_mixin.py:103} INFO - [2021-02-10 11:17:26,366] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:17:26,551] {logging_mixin.py:103} INFO - [2021-02-10 11:17:26,551] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:26,554] {logging_mixin.py:103} INFO - [2021-02-10 11:17:26,554] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:17:26,762] {logging_mixin.py:103} INFO - [2021-02-10 11:17:26,762] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:26,764] {logging_mixin.py:103} INFO - [2021-02-10 11:17:26,764] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:17:26,925] {logging_mixin.py:103} INFO - [2021-02-10 11:17:26,925] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:26,925] {logging_mixin.py:103} INFO - [2021-02-10 11:17:26,925] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:17:26,937] {logging_mixin.py:103} INFO - [2021-02-10 11:17:26,936] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:17:26,939] {logging_mixin.py:103} INFO - [2021-02-10 11:17:26,939] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:17:27,165] {logging_mixin.py:103} INFO - [2021-02-10 11:17:27,165] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:27,167] {logging_mixin.py:103} INFO - [2021-02-10 11:17:27,167] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:17:27,457] {logging_mixin.py:103} INFO - [2021-02-10 11:17:27,457] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:27,457] {logging_mixin.py:103} INFO - [2021-02-10 11:17:27,457] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:17:27,460] {logging_mixin.py:103} INFO - [2021-02-10 11:17:27,460] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:17:27,638] {logging_mixin.py:103} INFO - [2021-02-10 11:17:27,638] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:27,640] {logging_mixin.py:103} INFO - [2021-02-10 11:17:27,640] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:17:27,823] {logging_mixin.py:103} INFO - [2021-02-10 11:17:27,822] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:27,826] {logging_mixin.py:103} INFO - [2021-02-10 11:17:27,826] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:17:28,054] {logging_mixin.py:103} INFO - [2021-02-10 11:17:28,054] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:28,057] {logging_mixin.py:103} INFO - [2021-02-10 11:17:28,056] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:17:28,222] {logging_mixin.py:103} INFO - [2021-02-10 11:17:28,222] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:28,223] {logging_mixin.py:103} INFO - [2021-02-10 11:17:28,223] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:17:28,227] {logging_mixin.py:103} INFO - [2021-02-10 11:17:28,227] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:17:28,412] {logging_mixin.py:103} INFO - [2021-02-10 11:17:28,412] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:28,419] {logging_mixin.py:103} INFO - [2021-02-10 11:17:28,419] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:17:28,612] {logging_mixin.py:103} INFO - [2021-02-10 11:17:28,612] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:28,615] {logging_mixin.py:103} INFO - [2021-02-10 11:17:28,615] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:17:28,788] {logging_mixin.py:103} INFO - [2021-02-10 11:17:28,788] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:28,789] {logging_mixin.py:103} INFO - [2021-02-10 11:17:28,789] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:17:28,793] {logging_mixin.py:103} INFO - [2021-02-10 11:17:28,793] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:17:28,962] {logging_mixin.py:103} INFO - [2021-02-10 11:17:28,962] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:28,965] {logging_mixin.py:103} INFO - [2021-02-10 11:17:28,965] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:17:29,167] {logging_mixin.py:103} INFO - [2021-02-10 11:17:29,166] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:29,167] {logging_mixin.py:103} INFO - [2021-02-10 11:17:29,167] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:17:29,171] {logging_mixin.py:103} INFO - [2021-02-10 11:17:29,171] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:17:29,386] {logging_mixin.py:103} INFO - [2021-02-10 11:17:29,386] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:29,388] {logging_mixin.py:103} INFO - [2021-02-10 11:17:29,388] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:17:29,552] {logging_mixin.py:103} INFO - [2021-02-10 11:17:29,552] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:29,564] {logging_mixin.py:103} INFO - [2021-02-10 11:17:29,564] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:17:29,720] {logging_mixin.py:103} INFO - [2021-02-10 11:17:29,720] {cursor.py:560} INFO - query execution done
[2021-02-10 11:17:35,461] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:18:02,273] {scheduler_job.py:181} INFO - Started process (PID=70624) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:18:02,274] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:18:02,274] {logging_mixin.py:103} INFO - [2021-02-10 11:18:02,274] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:18:04,212] {logging_mixin.py:103} INFO - [2021-02-10 11:18:04,212] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:18:04,595] {logging_mixin.py:103} INFO - [2021-02-10 11:18:04,595] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:18:04,962] {logging_mixin.py:103} INFO - [2021-02-10 11:18:04,962] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:18:04,963] {logging_mixin.py:103} INFO - [2021-02-10 11:18:04,963] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:18:04,963] {logging_mixin.py:103} INFO - [2021-02-10 11:18:04,963] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:18:06,556] {logging_mixin.py:103} INFO - [2021-02-10 11:18:06,556] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:18:06,720] {logging_mixin.py:103} INFO - [2021-02-10 11:18:06,720] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:06,721] {logging_mixin.py:103} INFO - [2021-02-10 11:18:06,721] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:18:06,879] {logging_mixin.py:103} INFO - [2021-02-10 11:18:06,879] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:06,879] {logging_mixin.py:103} INFO - [2021-02-10 11:18:06,879] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:18:07,039] {logging_mixin.py:103} INFO - [2021-02-10 11:18:07,039] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:07,042] {logging_mixin.py:103} INFO - [2021-02-10 11:18:07,042] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:18:07,206] {logging_mixin.py:103} INFO - [2021-02-10 11:18:07,206] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:07,450] {logging_mixin.py:103} INFO - [2021-02-10 11:18:07,450] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:18:07,640] {logging_mixin.py:103} INFO - [2021-02-10 11:18:07,640] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:07,676] {logging_mixin.py:103} INFO - [2021-02-10 11:18:07,676] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:18:07,676] {logging_mixin.py:103} INFO - [2021-02-10 11:18:07,676] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:18:10,569] {logging_mixin.py:103} INFO - [2021-02-10 11:18:10,569] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:10,572] {logging_mixin.py:103} INFO - [2021-02-10 11:18:10,572] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:18:10,583] {logging_mixin.py:103} INFO - [2021-02-10 11:18:10,582] {data_context.py:1281} INFO - Setting run_name to: 20210210T101810.582850Z
[2021-02-10 11:18:10,584] {logging_mixin.py:103} INFO - [2021-02-10 11:18:10,584] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:18:10,594] {logging_mixin.py:103} INFO - [2021-02-10 11:18:10,594] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:18:10,836] {logging_mixin.py:103} INFO - [2021-02-10 11:18:10,836] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:10,838] {logging_mixin.py:103} INFO - [2021-02-10 11:18:10,838] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:18:11,072] {logging_mixin.py:103} INFO - [2021-02-10 11:18:11,072] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:11,073] {logging_mixin.py:103} INFO - [2021-02-10 11:18:11,073] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:18:11,075] {logging_mixin.py:103} INFO - [2021-02-10 11:18:11,075] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:18:11,371] {logging_mixin.py:103} INFO - [2021-02-10 11:18:11,371] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:11,374] {logging_mixin.py:103} INFO - [2021-02-10 11:18:11,373] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:18:11,701] {logging_mixin.py:103} INFO - [2021-02-10 11:18:11,701] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:11,704] {logging_mixin.py:103} INFO - [2021-02-10 11:18:11,704] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:18:11,910] {logging_mixin.py:103} INFO - [2021-02-10 11:18:11,910] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:11,911] {logging_mixin.py:103} INFO - [2021-02-10 11:18:11,911] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:18:11,922] {logging_mixin.py:103} INFO - [2021-02-10 11:18:11,922] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:18:11,925] {logging_mixin.py:103} INFO - [2021-02-10 11:18:11,924] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:18:12,140] {logging_mixin.py:103} INFO - [2021-02-10 11:18:12,140] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:12,142] {logging_mixin.py:103} INFO - [2021-02-10 11:18:12,142] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:18:12,318] {logging_mixin.py:103} INFO - [2021-02-10 11:18:12,317] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:12,318] {logging_mixin.py:103} INFO - [2021-02-10 11:18:12,318] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:18:12,321] {logging_mixin.py:103} INFO - [2021-02-10 11:18:12,321] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:18:12,502] {logging_mixin.py:103} INFO - [2021-02-10 11:18:12,502] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:12,504] {logging_mixin.py:103} INFO - [2021-02-10 11:18:12,504] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:18:12,667] {logging_mixin.py:103} INFO - [2021-02-10 11:18:12,666] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:12,670] {logging_mixin.py:103} INFO - [2021-02-10 11:18:12,670] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:18:12,875] {logging_mixin.py:103} INFO - [2021-02-10 11:18:12,875] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:12,877] {logging_mixin.py:103} INFO - [2021-02-10 11:18:12,877] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:18:13,052] {logging_mixin.py:103} INFO - [2021-02-10 11:18:13,052] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:13,052] {logging_mixin.py:103} INFO - [2021-02-10 11:18:13,052] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:18:13,056] {logging_mixin.py:103} INFO - [2021-02-10 11:18:13,056] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:18:13,254] {logging_mixin.py:103} INFO - [2021-02-10 11:18:13,254] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:13,261] {logging_mixin.py:103} INFO - [2021-02-10 11:18:13,261] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:18:13,431] {logging_mixin.py:103} INFO - [2021-02-10 11:18:13,431] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:13,433] {logging_mixin.py:103} INFO - [2021-02-10 11:18:13,433] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:18:13,618] {logging_mixin.py:103} INFO - [2021-02-10 11:18:13,618] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:13,619] {logging_mixin.py:103} INFO - [2021-02-10 11:18:13,618] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:18:13,622] {logging_mixin.py:103} INFO - [2021-02-10 11:18:13,622] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:18:13,787] {logging_mixin.py:103} INFO - [2021-02-10 11:18:13,787] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:13,789] {logging_mixin.py:103} INFO - [2021-02-10 11:18:13,789] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:18:13,951] {logging_mixin.py:103} INFO - [2021-02-10 11:18:13,951] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:13,952] {logging_mixin.py:103} INFO - [2021-02-10 11:18:13,951] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:18:13,956] {logging_mixin.py:103} INFO - [2021-02-10 11:18:13,955] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:18:14,135] {logging_mixin.py:103} INFO - [2021-02-10 11:18:14,135] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:14,137] {logging_mixin.py:103} INFO - [2021-02-10 11:18:14,137] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:18:14,319] {logging_mixin.py:103} INFO - [2021-02-10 11:18:14,319] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:14,330] {logging_mixin.py:103} INFO - [2021-02-10 11:18:14,330] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:18:14,505] {logging_mixin.py:103} INFO - [2021-02-10 11:18:14,505] {cursor.py:560} INFO - query execution done
[2021-02-10 11:18:20,036] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:43:01,794] {scheduler_job.py:181} INFO - Started process (PID=70747) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:43:01,795] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:43:01,796] {logging_mixin.py:103} INFO - [2021-02-10 11:43:01,796] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:43:03,891] {logging_mixin.py:103} INFO - [2021-02-10 11:43:03,891] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:43:04,320] {logging_mixin.py:103} INFO - [2021-02-10 11:43:04,320] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:43:04,681] {logging_mixin.py:103} INFO - [2021-02-10 11:43:04,681] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:43:04,681] {logging_mixin.py:103} INFO - [2021-02-10 11:43:04,681] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:43:04,681] {logging_mixin.py:103} INFO - [2021-02-10 11:43:04,681] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:43:06,252] {logging_mixin.py:103} INFO - [2021-02-10 11:43:06,251] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:43:06,550] {logging_mixin.py:103} INFO - [2021-02-10 11:43:06,550] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:06,552] {logging_mixin.py:103} INFO - [2021-02-10 11:43:06,551] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:43:06,697] {logging_mixin.py:103} INFO - [2021-02-10 11:43:06,697] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:06,698] {logging_mixin.py:103} INFO - [2021-02-10 11:43:06,697] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:43:07,200] {logging_mixin.py:103} INFO - [2021-02-10 11:43:07,200] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:07,201] {logging_mixin.py:103} INFO - [2021-02-10 11:43:07,201] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:43:07,343] {logging_mixin.py:103} INFO - [2021-02-10 11:43:07,343] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:07,556] {logging_mixin.py:103} INFO - [2021-02-10 11:43:07,556] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:43:07,975] {logging_mixin.py:103} INFO - [2021-02-10 11:43:07,975] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:08,022] {logging_mixin.py:103} INFO - [2021-02-10 11:43:08,022] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:43:08,023] {logging_mixin.py:103} INFO - [2021-02-10 11:43:08,023] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:43:11,407] {logging_mixin.py:103} INFO - [2021-02-10 11:43:11,407] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:11,409] {logging_mixin.py:103} INFO - [2021-02-10 11:43:11,409] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:43:11,417] {logging_mixin.py:103} INFO - [2021-02-10 11:43:11,417] {data_context.py:1281} INFO - Setting run_name to: 20210210T104311.417065Z
[2021-02-10 11:43:11,418] {logging_mixin.py:103} INFO - [2021-02-10 11:43:11,418] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:43:11,426] {logging_mixin.py:103} INFO - [2021-02-10 11:43:11,426] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:43:11,797] {logging_mixin.py:103} INFO - [2021-02-10 11:43:11,796] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:11,800] {logging_mixin.py:103} INFO - [2021-02-10 11:43:11,799] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:43:11,994] {logging_mixin.py:103} INFO - [2021-02-10 11:43:11,994] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:11,994] {logging_mixin.py:103} INFO - [2021-02-10 11:43:11,994] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:43:11,995] {logging_mixin.py:103} INFO - [2021-02-10 11:43:11,995] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:43:12,381] {logging_mixin.py:103} INFO - [2021-02-10 11:43:12,380] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:12,383] {logging_mixin.py:103} INFO - [2021-02-10 11:43:12,383] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:43:12,782] {logging_mixin.py:103} INFO - [2021-02-10 11:43:12,782] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:12,786] {logging_mixin.py:103} INFO - [2021-02-10 11:43:12,786] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:43:12,966] {logging_mixin.py:103} INFO - [2021-02-10 11:43:12,966] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:12,967] {logging_mixin.py:103} INFO - [2021-02-10 11:43:12,966] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:43:12,982] {logging_mixin.py:103} INFO - [2021-02-10 11:43:12,982] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:43:12,985] {logging_mixin.py:103} INFO - [2021-02-10 11:43:12,985] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:43:13,357] {logging_mixin.py:103} INFO - [2021-02-10 11:43:13,357] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:13,359] {logging_mixin.py:103} INFO - [2021-02-10 11:43:13,359] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:43:13,586] {logging_mixin.py:103} INFO - [2021-02-10 11:43:13,586] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:13,587] {logging_mixin.py:103} INFO - [2021-02-10 11:43:13,587] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:43:13,589] {logging_mixin.py:103} INFO - [2021-02-10 11:43:13,589] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:43:14,157] {logging_mixin.py:103} INFO - [2021-02-10 11:43:14,157] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:14,158] {logging_mixin.py:103} INFO - [2021-02-10 11:43:14,158] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:43:14,306] {logging_mixin.py:103} INFO - [2021-02-10 11:43:14,306] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:14,308] {logging_mixin.py:103} INFO - [2021-02-10 11:43:14,308] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:43:14,571] {logging_mixin.py:103} INFO - [2021-02-10 11:43:14,571] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:14,573] {logging_mixin.py:103} INFO - [2021-02-10 11:43:14,573] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:43:14,763] {logging_mixin.py:103} INFO - [2021-02-10 11:43:14,763] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:14,764] {logging_mixin.py:103} INFO - [2021-02-10 11:43:14,764] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:43:14,777] {logging_mixin.py:103} INFO - [2021-02-10 11:43:14,777] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:43:14,970] {logging_mixin.py:103} INFO - [2021-02-10 11:43:14,970] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:14,985] {logging_mixin.py:103} INFO - [2021-02-10 11:43:14,985] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:43:15,146] {logging_mixin.py:103} INFO - [2021-02-10 11:43:15,146] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:15,148] {logging_mixin.py:103} INFO - [2021-02-10 11:43:15,147] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:43:15,510] {logging_mixin.py:103} INFO - [2021-02-10 11:43:15,509] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:15,510] {logging_mixin.py:103} INFO - [2021-02-10 11:43:15,510] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:43:15,512] {logging_mixin.py:103} INFO - [2021-02-10 11:43:15,512] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:43:15,873] {logging_mixin.py:103} INFO - [2021-02-10 11:43:15,873] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:15,874] {logging_mixin.py:103} INFO - [2021-02-10 11:43:15,874] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:43:16,032] {logging_mixin.py:103} INFO - [2021-02-10 11:43:16,031] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:16,032] {logging_mixin.py:103} INFO - [2021-02-10 11:43:16,032] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:43:16,036] {logging_mixin.py:103} INFO - [2021-02-10 11:43:16,035] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:43:16,339] {logging_mixin.py:103} INFO - [2021-02-10 11:43:16,339] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:16,341] {logging_mixin.py:103} INFO - [2021-02-10 11:43:16,341] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:43:16,622] {logging_mixin.py:103} INFO - [2021-02-10 11:43:16,622] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:16,667] {logging_mixin.py:103} INFO - [2021-02-10 11:43:16,666] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:43:16,811] {logging_mixin.py:103} INFO - [2021-02-10 11:43:16,811] {cursor.py:560} INFO - query execution done
[2021-02-10 11:43:26,482] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:44:05,402] {scheduler_job.py:181} INFO - Started process (PID=70838) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:44:05,404] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:44:05,404] {logging_mixin.py:103} INFO - [2021-02-10 11:44:05,404] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:44:07,471] {logging_mixin.py:103} INFO - [2021-02-10 11:44:07,471] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:44:07,881] {logging_mixin.py:103} INFO - [2021-02-10 11:44:07,881] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:44:08,278] {logging_mixin.py:103} INFO - [2021-02-10 11:44:08,278] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:44:08,279] {logging_mixin.py:103} INFO - [2021-02-10 11:44:08,278] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:44:08,279] {logging_mixin.py:103} INFO - [2021-02-10 11:44:08,279] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:44:09,434] {logging_mixin.py:103} INFO - [2021-02-10 11:44:09,433] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:44:09,566] {logging_mixin.py:103} INFO - [2021-02-10 11:44:09,566] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:09,568] {logging_mixin.py:103} INFO - [2021-02-10 11:44:09,568] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:44:09,734] {logging_mixin.py:103} INFO - [2021-02-10 11:44:09,734] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:09,735] {logging_mixin.py:103} INFO - [2021-02-10 11:44:09,735] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:44:09,973] {logging_mixin.py:103} INFO - [2021-02-10 11:44:09,973] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:09,975] {logging_mixin.py:103} INFO - [2021-02-10 11:44:09,975] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:44:10,137] {logging_mixin.py:103} INFO - [2021-02-10 11:44:10,137] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:10,412] {logging_mixin.py:103} INFO - [2021-02-10 11:44:10,412] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:44:10,625] {logging_mixin.py:103} INFO - [2021-02-10 11:44:10,625] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:10,674] {logging_mixin.py:103} INFO - [2021-02-10 11:44:10,674] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:44:10,675] {logging_mixin.py:103} INFO - [2021-02-10 11:44:10,675] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:44:12,655] {logging_mixin.py:103} INFO - [2021-02-10 11:44:12,654] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:12,658] {logging_mixin.py:103} INFO - [2021-02-10 11:44:12,658] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:44:12,673] {logging_mixin.py:103} INFO - [2021-02-10 11:44:12,672] {data_context.py:1281} INFO - Setting run_name to: 20210210T104412.672870Z
[2021-02-10 11:44:12,674] {logging_mixin.py:103} INFO - [2021-02-10 11:44:12,674] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:44:12,688] {logging_mixin.py:103} INFO - [2021-02-10 11:44:12,688] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:44:12,878] {logging_mixin.py:103} INFO - [2021-02-10 11:44:12,878] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:12,881] {logging_mixin.py:103} INFO - [2021-02-10 11:44:12,881] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:44:13,075] {logging_mixin.py:103} INFO - [2021-02-10 11:44:13,075] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:13,076] {logging_mixin.py:103} INFO - [2021-02-10 11:44:13,076] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:44:13,077] {logging_mixin.py:103} INFO - [2021-02-10 11:44:13,077] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:44:13,561] {logging_mixin.py:103} INFO - [2021-02-10 11:44:13,561] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:13,564] {logging_mixin.py:103} INFO - [2021-02-10 11:44:13,564] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:44:13,738] {logging_mixin.py:103} INFO - [2021-02-10 11:44:13,738] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:13,740] {logging_mixin.py:103} INFO - [2021-02-10 11:44:13,740] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:44:13,958] {logging_mixin.py:103} INFO - [2021-02-10 11:44:13,958] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:13,958] {logging_mixin.py:103} INFO - [2021-02-10 11:44:13,958] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:44:13,970] {logging_mixin.py:103} INFO - [2021-02-10 11:44:13,970] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:44:13,973] {logging_mixin.py:103} INFO - [2021-02-10 11:44:13,972] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:44:14,179] {logging_mixin.py:103} INFO - [2021-02-10 11:44:14,178] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:14,181] {logging_mixin.py:103} INFO - [2021-02-10 11:44:14,180] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:44:14,375] {logging_mixin.py:103} INFO - [2021-02-10 11:44:14,374] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:14,375] {logging_mixin.py:103} INFO - [2021-02-10 11:44:14,375] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:44:14,377] {logging_mixin.py:103} INFO - [2021-02-10 11:44:14,377] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:44:14,554] {logging_mixin.py:103} INFO - [2021-02-10 11:44:14,554] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:14,555] {logging_mixin.py:103} INFO - [2021-02-10 11:44:14,555] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:44:14,777] {logging_mixin.py:103} INFO - [2021-02-10 11:44:14,777] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:14,780] {logging_mixin.py:103} INFO - [2021-02-10 11:44:14,780] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:44:15,226] {logging_mixin.py:103} INFO - [2021-02-10 11:44:15,226] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:15,228] {logging_mixin.py:103} INFO - [2021-02-10 11:44:15,228] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:44:15,391] {logging_mixin.py:103} INFO - [2021-02-10 11:44:15,391] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:15,391] {logging_mixin.py:103} INFO - [2021-02-10 11:44:15,391] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:44:15,396] {logging_mixin.py:103} INFO - [2021-02-10 11:44:15,396] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:44:15,570] {logging_mixin.py:103} INFO - [2021-02-10 11:44:15,570] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:15,581] {logging_mixin.py:103} INFO - [2021-02-10 11:44:15,581] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:44:15,748] {logging_mixin.py:103} INFO - [2021-02-10 11:44:15,748] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:15,751] {logging_mixin.py:103} INFO - [2021-02-10 11:44:15,751] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:44:15,951] {logging_mixin.py:103} INFO - [2021-02-10 11:44:15,951] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:15,952] {logging_mixin.py:103} INFO - [2021-02-10 11:44:15,952] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:44:15,955] {logging_mixin.py:103} INFO - [2021-02-10 11:44:15,955] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:44:16,115] {logging_mixin.py:103} INFO - [2021-02-10 11:44:16,115] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:16,117] {logging_mixin.py:103} INFO - [2021-02-10 11:44:16,117] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:44:16,306] {logging_mixin.py:103} INFO - [2021-02-10 11:44:16,306] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:16,306] {logging_mixin.py:103} INFO - [2021-02-10 11:44:16,306] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:44:16,310] {logging_mixin.py:103} INFO - [2021-02-10 11:44:16,310] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:44:16,521] {logging_mixin.py:103} INFO - [2021-02-10 11:44:16,521] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:16,524] {logging_mixin.py:103} INFO - [2021-02-10 11:44:16,523] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:44:16,720] {logging_mixin.py:103} INFO - [2021-02-10 11:44:16,720] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:16,761] {logging_mixin.py:103} INFO - [2021-02-10 11:44:16,761] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:44:16,944] {logging_mixin.py:103} INFO - [2021-02-10 11:44:16,944] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:24,147] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:44:52,862] {scheduler_job.py:181} INFO - Started process (PID=70899) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:44:52,862] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:44:52,863] {logging_mixin.py:103} INFO - [2021-02-10 11:44:52,863] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:44:54,437] {logging_mixin.py:103} INFO - [2021-02-10 11:44:54,437] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:44:54,710] {logging_mixin.py:103} INFO - [2021-02-10 11:44:54,710] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:44:55,038] {logging_mixin.py:103} INFO - [2021-02-10 11:44:55,038] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:44:55,038] {logging_mixin.py:103} INFO - [2021-02-10 11:44:55,038] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:44:55,038] {logging_mixin.py:103} INFO - [2021-02-10 11:44:55,038] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:44:56,260] {logging_mixin.py:103} INFO - [2021-02-10 11:44:56,260] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:44:56,563] {logging_mixin.py:103} INFO - [2021-02-10 11:44:56,563] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:56,565] {logging_mixin.py:103} INFO - [2021-02-10 11:44:56,565] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:44:56,880] {logging_mixin.py:103} INFO - [2021-02-10 11:44:56,880] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:56,881] {logging_mixin.py:103} INFO - [2021-02-10 11:44:56,880] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:44:57,032] {logging_mixin.py:103} INFO - [2021-02-10 11:44:57,032] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:57,035] {logging_mixin.py:103} INFO - [2021-02-10 11:44:57,035] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:44:57,168] {logging_mixin.py:103} INFO - [2021-02-10 11:44:57,168] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:57,391] {logging_mixin.py:103} INFO - [2021-02-10 11:44:57,391] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:44:57,769] {logging_mixin.py:103} INFO - [2021-02-10 11:44:57,769] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:57,814] {logging_mixin.py:103} INFO - [2021-02-10 11:44:57,814] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:44:57,815] {logging_mixin.py:103} INFO - [2021-02-10 11:44:57,815] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:44:59,062] {logging_mixin.py:103} INFO - [2021-02-10 11:44:59,061] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:59,064] {logging_mixin.py:103} INFO - [2021-02-10 11:44:59,064] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:44:59,074] {logging_mixin.py:103} INFO - [2021-02-10 11:44:59,074] {data_context.py:1281} INFO - Setting run_name to: 20210210T104459.074496Z
[2021-02-10 11:44:59,075] {logging_mixin.py:103} INFO - [2021-02-10 11:44:59,075] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:44:59,086] {logging_mixin.py:103} INFO - [2021-02-10 11:44:59,086] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:44:59,263] {logging_mixin.py:103} INFO - [2021-02-10 11:44:59,263] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:59,265] {logging_mixin.py:103} INFO - [2021-02-10 11:44:59,265] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:44:59,478] {logging_mixin.py:103} INFO - [2021-02-10 11:44:59,478] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:59,479] {logging_mixin.py:103} INFO - [2021-02-10 11:44:59,479] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:44:59,481] {logging_mixin.py:103} INFO - [2021-02-10 11:44:59,481] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:44:59,668] {logging_mixin.py:103} INFO - [2021-02-10 11:44:59,668] {cursor.py:560} INFO - query execution done
[2021-02-10 11:44:59,670] {logging_mixin.py:103} INFO - [2021-02-10 11:44:59,670] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:45:00,261] {logging_mixin.py:103} INFO - [2021-02-10 11:45:00,261] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:00,263] {logging_mixin.py:103} INFO - [2021-02-10 11:45:00,263] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:45:00,557] {logging_mixin.py:103} INFO - [2021-02-10 11:45:00,557] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:00,558] {logging_mixin.py:103} INFO - [2021-02-10 11:45:00,558] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:45:00,580] {logging_mixin.py:103} INFO - [2021-02-10 11:45:00,580] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:45:00,583] {logging_mixin.py:103} INFO - [2021-02-10 11:45:00,583] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:45:00,745] {logging_mixin.py:103} INFO - [2021-02-10 11:45:00,745] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:00,747] {logging_mixin.py:103} INFO - [2021-02-10 11:45:00,747] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:45:00,923] {logging_mixin.py:103} INFO - [2021-02-10 11:45:00,923] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:00,924] {logging_mixin.py:103} INFO - [2021-02-10 11:45:00,924] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:45:00,926] {logging_mixin.py:103} INFO - [2021-02-10 11:45:00,926] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:45:01,229] {logging_mixin.py:103} INFO - [2021-02-10 11:45:01,229] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:01,231] {logging_mixin.py:103} INFO - [2021-02-10 11:45:01,231] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:45:01,491] {logging_mixin.py:103} INFO - [2021-02-10 11:45:01,491] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:01,495] {logging_mixin.py:103} INFO - [2021-02-10 11:45:01,495] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:45:01,708] {logging_mixin.py:103} INFO - [2021-02-10 11:45:01,708] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:01,711] {logging_mixin.py:103} INFO - [2021-02-10 11:45:01,711] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:45:01,987] {logging_mixin.py:103} INFO - [2021-02-10 11:45:01,987] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:01,988] {logging_mixin.py:103} INFO - [2021-02-10 11:45:01,988] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:45:01,992] {logging_mixin.py:103} INFO - [2021-02-10 11:45:01,992] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:45:02,245] {logging_mixin.py:103} INFO - [2021-02-10 11:45:02,245] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:02,258] {logging_mixin.py:103} INFO - [2021-02-10 11:45:02,258] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:45:02,435] {logging_mixin.py:103} INFO - [2021-02-10 11:45:02,435] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:02,437] {logging_mixin.py:103} INFO - [2021-02-10 11:45:02,437] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:45:02,615] {logging_mixin.py:103} INFO - [2021-02-10 11:45:02,615] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:02,615] {logging_mixin.py:103} INFO - [2021-02-10 11:45:02,615] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:45:02,618] {logging_mixin.py:103} INFO - [2021-02-10 11:45:02,618] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:45:02,844] {logging_mixin.py:103} INFO - [2021-02-10 11:45:02,844] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:02,846] {logging_mixin.py:103} INFO - [2021-02-10 11:45:02,846] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:45:03,012] {logging_mixin.py:103} INFO - [2021-02-10 11:45:03,012] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:03,012] {logging_mixin.py:103} INFO - [2021-02-10 11:45:03,012] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:45:03,016] {logging_mixin.py:103} INFO - [2021-02-10 11:45:03,016] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:45:03,195] {logging_mixin.py:103} INFO - [2021-02-10 11:45:03,195] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:03,197] {logging_mixin.py:103} INFO - [2021-02-10 11:45:03,197] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:45:03,361] {logging_mixin.py:103} INFO - [2021-02-10 11:45:03,361] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:03,403] {logging_mixin.py:103} INFO - [2021-02-10 11:45:03,403] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:45:03,615] {logging_mixin.py:103} INFO - [2021-02-10 11:45:03,615] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:10,305] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:45:38,352] {scheduler_job.py:181} INFO - Started process (PID=70957) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:45:38,353] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:45:38,353] {logging_mixin.py:103} INFO - [2021-02-10 11:45:38,353] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:45:39,940] {logging_mixin.py:103} INFO - [2021-02-10 11:45:39,940] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:45:40,216] {logging_mixin.py:103} INFO - [2021-02-10 11:45:40,216] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:45:40,558] {logging_mixin.py:103} INFO - [2021-02-10 11:45:40,558] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:45:40,558] {logging_mixin.py:103} INFO - [2021-02-10 11:45:40,558] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:45:40,558] {logging_mixin.py:103} INFO - [2021-02-10 11:45:40,558] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:45:41,770] {logging_mixin.py:103} INFO - [2021-02-10 11:45:41,770] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:45:41,902] {logging_mixin.py:103} INFO - [2021-02-10 11:45:41,902] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:41,904] {logging_mixin.py:103} INFO - [2021-02-10 11:45:41,904] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:45:42,060] {logging_mixin.py:103} INFO - [2021-02-10 11:45:42,060] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:42,061] {logging_mixin.py:103} INFO - [2021-02-10 11:45:42,061] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:45:42,213] {logging_mixin.py:103} INFO - [2021-02-10 11:45:42,213] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:42,216] {logging_mixin.py:103} INFO - [2021-02-10 11:45:42,216] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:45:42,448] {logging_mixin.py:103} INFO - [2021-02-10 11:45:42,448] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:42,675] {logging_mixin.py:103} INFO - [2021-02-10 11:45:42,675] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:45:42,915] {logging_mixin.py:103} INFO - [2021-02-10 11:45:42,914] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:42,961] {logging_mixin.py:103} INFO - [2021-02-10 11:45:42,961] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:45:42,961] {logging_mixin.py:103} INFO - [2021-02-10 11:45:42,961] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:45:44,485] {logging_mixin.py:103} INFO - [2021-02-10 11:45:44,485] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:44,491] {logging_mixin.py:103} INFO - [2021-02-10 11:45:44,491] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:45:44,502] {logging_mixin.py:103} INFO - [2021-02-10 11:45:44,501] {data_context.py:1281} INFO - Setting run_name to: 20210210T104544.501906Z
[2021-02-10 11:45:44,503] {logging_mixin.py:103} INFO - [2021-02-10 11:45:44,503] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:45:44,513] {logging_mixin.py:103} INFO - [2021-02-10 11:45:44,512] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:45:44,684] {logging_mixin.py:103} INFO - [2021-02-10 11:45:44,684] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:44,686] {logging_mixin.py:103} INFO - [2021-02-10 11:45:44,686] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:45:44,884] {logging_mixin.py:103} INFO - [2021-02-10 11:45:44,884] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:44,885] {logging_mixin.py:103} INFO - [2021-02-10 11:45:44,885] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:45:44,887] {logging_mixin.py:103} INFO - [2021-02-10 11:45:44,887] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:45:45,045] {logging_mixin.py:103} INFO - [2021-02-10 11:45:45,045] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:45,048] {logging_mixin.py:103} INFO - [2021-02-10 11:45:45,048] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:45:45,225] {logging_mixin.py:103} INFO - [2021-02-10 11:45:45,224] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:45,228] {logging_mixin.py:103} INFO - [2021-02-10 11:45:45,228] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:45:45,374] {logging_mixin.py:103} INFO - [2021-02-10 11:45:45,374] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:45,375] {logging_mixin.py:103} INFO - [2021-02-10 11:45:45,375] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:45:45,396] {logging_mixin.py:103} INFO - [2021-02-10 11:45:45,395] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:45:45,398] {logging_mixin.py:103} INFO - [2021-02-10 11:45:45,398] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:45:45,564] {logging_mixin.py:103} INFO - [2021-02-10 11:45:45,564] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:45,566] {logging_mixin.py:103} INFO - [2021-02-10 11:45:45,566] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:45:45,751] {logging_mixin.py:103} INFO - [2021-02-10 11:45:45,750] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:45,751] {logging_mixin.py:103} INFO - [2021-02-10 11:45:45,751] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:45:45,754] {logging_mixin.py:103} INFO - [2021-02-10 11:45:45,754] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:45:45,915] {logging_mixin.py:103} INFO - [2021-02-10 11:45:45,915] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:45,918] {logging_mixin.py:103} INFO - [2021-02-10 11:45:45,917] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:45:46,072] {logging_mixin.py:103} INFO - [2021-02-10 11:45:46,072] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:46,076] {logging_mixin.py:103} INFO - [2021-02-10 11:45:46,076] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:45:47,878] {logging_mixin.py:103} INFO - [2021-02-10 11:45:47,878] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:47,881] {logging_mixin.py:103} INFO - [2021-02-10 11:45:47,881] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:45:48,042] {logging_mixin.py:103} INFO - [2021-02-10 11:45:48,041] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:48,042] {logging_mixin.py:103} INFO - [2021-02-10 11:45:48,042] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:45:48,045] {logging_mixin.py:103} INFO - [2021-02-10 11:45:48,045] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:45:48,211] {logging_mixin.py:103} INFO - [2021-02-10 11:45:48,211] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:48,225] {logging_mixin.py:103} INFO - [2021-02-10 11:45:48,225] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:45:48,375] {logging_mixin.py:103} INFO - [2021-02-10 11:45:48,375] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:48,377] {logging_mixin.py:103} INFO - [2021-02-10 11:45:48,377] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:45:48,529] {logging_mixin.py:103} INFO - [2021-02-10 11:45:48,529] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:48,530] {logging_mixin.py:103} INFO - [2021-02-10 11:45:48,529] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:45:48,534] {logging_mixin.py:103} INFO - [2021-02-10 11:45:48,534] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:45:48,716] {logging_mixin.py:103} INFO - [2021-02-10 11:45:48,716] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:48,718] {logging_mixin.py:103} INFO - [2021-02-10 11:45:48,718] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:45:48,934] {logging_mixin.py:103} INFO - [2021-02-10 11:45:48,934] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:48,935] {logging_mixin.py:103} INFO - [2021-02-10 11:45:48,935] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:45:48,939] {logging_mixin.py:103} INFO - [2021-02-10 11:45:48,939] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:45:49,184] {logging_mixin.py:103} INFO - [2021-02-10 11:45:49,184] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:49,186] {logging_mixin.py:103} INFO - [2021-02-10 11:45:49,186] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:45:49,359] {logging_mixin.py:103} INFO - [2021-02-10 11:45:49,358] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:49,405] {logging_mixin.py:103} INFO - [2021-02-10 11:45:49,405] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:45:49,544] {logging_mixin.py:103} INFO - [2021-02-10 11:45:49,544] {cursor.py:560} INFO - query execution done
[2021-02-10 11:45:55,766] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:46:23,826] {scheduler_job.py:181} INFO - Started process (PID=71015) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:46:23,827] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:46:23,828] {logging_mixin.py:103} INFO - [2021-02-10 11:46:23,828] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:46:25,873] {logging_mixin.py:103} INFO - [2021-02-10 11:46:25,873] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:46:26,223] {logging_mixin.py:103} INFO - [2021-02-10 11:46:26,223] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:46:26,581] {logging_mixin.py:103} INFO - [2021-02-10 11:46:26,581] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:46:26,582] {logging_mixin.py:103} INFO - [2021-02-10 11:46:26,582] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:46:26,582] {logging_mixin.py:103} INFO - [2021-02-10 11:46:26,582] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:46:27,815] {logging_mixin.py:103} INFO - [2021-02-10 11:46:27,815] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:46:27,969] {logging_mixin.py:103} INFO - [2021-02-10 11:46:27,968] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:27,972] {logging_mixin.py:103} INFO - [2021-02-10 11:46:27,971] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:46:28,195] {logging_mixin.py:103} INFO - [2021-02-10 11:46:28,195] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:28,195] {logging_mixin.py:103} INFO - [2021-02-10 11:46:28,195] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:46:28,346] {logging_mixin.py:103} INFO - [2021-02-10 11:46:28,346] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:28,349] {logging_mixin.py:103} INFO - [2021-02-10 11:46:28,349] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:46:28,624] {logging_mixin.py:103} INFO - [2021-02-10 11:46:28,624] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:28,883] {logging_mixin.py:103} INFO - [2021-02-10 11:46:28,883] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:46:29,077] {logging_mixin.py:103} INFO - [2021-02-10 11:46:29,077] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:29,160] {logging_mixin.py:103} INFO - [2021-02-10 11:46:29,160] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:46:29,161] {logging_mixin.py:103} INFO - [2021-02-10 11:46:29,161] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:46:31,384] {logging_mixin.py:103} INFO - [2021-02-10 11:46:31,384] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:31,388] {logging_mixin.py:103} INFO - [2021-02-10 11:46:31,388] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:46:31,399] {logging_mixin.py:103} INFO - [2021-02-10 11:46:31,399] {data_context.py:1281} INFO - Setting run_name to: 20210210T104631.399567Z
[2021-02-10 11:46:31,401] {logging_mixin.py:103} INFO - [2021-02-10 11:46:31,401] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:46:31,412] {logging_mixin.py:103} INFO - [2021-02-10 11:46:31,411] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:46:31,563] {logging_mixin.py:103} INFO - [2021-02-10 11:46:31,563] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:31,565] {logging_mixin.py:103} INFO - [2021-02-10 11:46:31,565] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:46:31,834] {logging_mixin.py:103} INFO - [2021-02-10 11:46:31,834] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:31,835] {logging_mixin.py:103} INFO - [2021-02-10 11:46:31,835] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:46:31,837] {logging_mixin.py:103} INFO - [2021-02-10 11:46:31,837] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:46:32,028] {logging_mixin.py:103} INFO - [2021-02-10 11:46:32,028] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:32,031] {logging_mixin.py:103} INFO - [2021-02-10 11:46:32,031] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:46:32,256] {logging_mixin.py:103} INFO - [2021-02-10 11:46:32,256] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:32,259] {logging_mixin.py:103} INFO - [2021-02-10 11:46:32,259] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:46:32,458] {logging_mixin.py:103} INFO - [2021-02-10 11:46:32,458] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:32,458] {logging_mixin.py:103} INFO - [2021-02-10 11:46:32,458] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:46:32,474] {logging_mixin.py:103} INFO - [2021-02-10 11:46:32,474] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:46:32,477] {logging_mixin.py:103} INFO - [2021-02-10 11:46:32,477] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:46:32,648] {logging_mixin.py:103} INFO - [2021-02-10 11:46:32,648] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:32,650] {logging_mixin.py:103} INFO - [2021-02-10 11:46:32,650] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:46:32,804] {logging_mixin.py:103} INFO - [2021-02-10 11:46:32,804] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:32,804] {logging_mixin.py:103} INFO - [2021-02-10 11:46:32,804] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:46:32,807] {logging_mixin.py:103} INFO - [2021-02-10 11:46:32,807] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:46:32,986] {logging_mixin.py:103} INFO - [2021-02-10 11:46:32,985] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:32,988] {logging_mixin.py:103} INFO - [2021-02-10 11:46:32,988] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:46:33,163] {logging_mixin.py:103} INFO - [2021-02-10 11:46:33,163] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:33,167] {logging_mixin.py:103} INFO - [2021-02-10 11:46:33,167] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:46:33,330] {logging_mixin.py:103} INFO - [2021-02-10 11:46:33,330] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:33,333] {logging_mixin.py:103} INFO - [2021-02-10 11:46:33,333] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:46:33,513] {logging_mixin.py:103} INFO - [2021-02-10 11:46:33,513] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:33,513] {logging_mixin.py:103} INFO - [2021-02-10 11:46:33,513] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:46:33,517] {logging_mixin.py:103} INFO - [2021-02-10 11:46:33,517] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:46:33,686] {logging_mixin.py:103} INFO - [2021-02-10 11:46:33,686] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:33,698] {logging_mixin.py:103} INFO - [2021-02-10 11:46:33,698] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:46:33,902] {logging_mixin.py:103} INFO - [2021-02-10 11:46:33,902] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:33,904] {logging_mixin.py:103} INFO - [2021-02-10 11:46:33,904] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:46:34,113] {logging_mixin.py:103} INFO - [2021-02-10 11:46:34,113] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:34,114] {logging_mixin.py:103} INFO - [2021-02-10 11:46:34,114] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:46:34,118] {logging_mixin.py:103} INFO - [2021-02-10 11:46:34,118] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:46:34,298] {logging_mixin.py:103} INFO - [2021-02-10 11:46:34,298] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:34,300] {logging_mixin.py:103} INFO - [2021-02-10 11:46:34,300] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:46:34,461] {logging_mixin.py:103} INFO - [2021-02-10 11:46:34,461] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:34,462] {logging_mixin.py:103} INFO - [2021-02-10 11:46:34,461] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:46:34,466] {logging_mixin.py:103} INFO - [2021-02-10 11:46:34,466] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:46:34,619] {logging_mixin.py:103} INFO - [2021-02-10 11:46:34,618] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:34,622] {logging_mixin.py:103} INFO - [2021-02-10 11:46:34,622] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:46:34,778] {logging_mixin.py:103} INFO - [2021-02-10 11:46:34,777] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:34,813] {logging_mixin.py:103} INFO - [2021-02-10 11:46:34,813] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:46:35,027] {logging_mixin.py:103} INFO - [2021-02-10 11:46:35,027] {cursor.py:560} INFO - query execution done
[2021-02-10 11:46:42,174] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:47:17,778] {scheduler_job.py:181} INFO - Started process (PID=71077) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:47:17,780] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:47:17,780] {logging_mixin.py:103} INFO - [2021-02-10 11:47:17,780] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:47:20,040] {logging_mixin.py:103} INFO - [2021-02-10 11:47:20,040] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:47:20,435] {logging_mixin.py:103} INFO - [2021-02-10 11:47:20,435] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:47:20,812] {logging_mixin.py:103} INFO - [2021-02-10 11:47:20,812] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:47:20,812] {logging_mixin.py:103} INFO - [2021-02-10 11:47:20,812] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:47:20,812] {logging_mixin.py:103} INFO - [2021-02-10 11:47:20,812] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:47:22,124] {logging_mixin.py:103} INFO - [2021-02-10 11:47:22,124] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:47:22,292] {logging_mixin.py:103} INFO - [2021-02-10 11:47:22,292] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:22,294] {logging_mixin.py:103} INFO - [2021-02-10 11:47:22,294] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:47:22,499] {logging_mixin.py:103} INFO - [2021-02-10 11:47:22,499] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:22,500] {logging_mixin.py:103} INFO - [2021-02-10 11:47:22,500] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:47:23,123] {logging_mixin.py:103} INFO - [2021-02-10 11:47:23,123] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:23,124] {logging_mixin.py:103} INFO - [2021-02-10 11:47:23,124] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:47:23,271] {logging_mixin.py:103} INFO - [2021-02-10 11:47:23,270] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:23,490] {logging_mixin.py:103} INFO - [2021-02-10 11:47:23,490] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:47:23,686] {logging_mixin.py:103} INFO - [2021-02-10 11:47:23,686] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:23,731] {logging_mixin.py:103} INFO - [2021-02-10 11:47:23,731] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:47:23,732] {logging_mixin.py:103} INFO - [2021-02-10 11:47:23,732] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:47:25,049] {logging_mixin.py:103} INFO - [2021-02-10 11:47:25,049] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:25,052] {logging_mixin.py:103} INFO - [2021-02-10 11:47:25,052] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:47:25,062] {logging_mixin.py:103} INFO - [2021-02-10 11:47:25,062] {data_context.py:1281} INFO - Setting run_name to: 20210210T104725.062303Z
[2021-02-10 11:47:25,063] {logging_mixin.py:103} INFO - [2021-02-10 11:47:25,063] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:47:25,074] {logging_mixin.py:103} INFO - [2021-02-10 11:47:25,074] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:47:25,260] {logging_mixin.py:103} INFO - [2021-02-10 11:47:25,259] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:25,262] {logging_mixin.py:103} INFO - [2021-02-10 11:47:25,262] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:47:25,487] {logging_mixin.py:103} INFO - [2021-02-10 11:47:25,486] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:25,487] {logging_mixin.py:103} INFO - [2021-02-10 11:47:25,487] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:47:25,489] {logging_mixin.py:103} INFO - [2021-02-10 11:47:25,489] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:47:26,185] {logging_mixin.py:103} INFO - [2021-02-10 11:47:26,185] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:26,187] {logging_mixin.py:103} INFO - [2021-02-10 11:47:26,187] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:47:26,372] {logging_mixin.py:103} INFO - [2021-02-10 11:47:26,372] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:26,375] {logging_mixin.py:103} INFO - [2021-02-10 11:47:26,375] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:47:26,553] {logging_mixin.py:103} INFO - [2021-02-10 11:47:26,553] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:26,554] {logging_mixin.py:103} INFO - [2021-02-10 11:47:26,554] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:47:26,577] {logging_mixin.py:103} INFO - [2021-02-10 11:47:26,576] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:47:26,580] {logging_mixin.py:103} INFO - [2021-02-10 11:47:26,580] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:47:27,088] {logging_mixin.py:103} INFO - [2021-02-10 11:47:27,088] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:27,090] {logging_mixin.py:103} INFO - [2021-02-10 11:47:27,090] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:47:27,238] {logging_mixin.py:103} INFO - [2021-02-10 11:47:27,238] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:27,239] {logging_mixin.py:103} INFO - [2021-02-10 11:47:27,239] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:47:27,242] {logging_mixin.py:103} INFO - [2021-02-10 11:47:27,241] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:47:27,421] {logging_mixin.py:103} INFO - [2021-02-10 11:47:27,421] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:27,423] {logging_mixin.py:103} INFO - [2021-02-10 11:47:27,423] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:47:28,016] {logging_mixin.py:103} INFO - [2021-02-10 11:47:28,016] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:28,020] {logging_mixin.py:103} INFO - [2021-02-10 11:47:28,020] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:47:28,213] {logging_mixin.py:103} INFO - [2021-02-10 11:47:28,213] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:28,216] {logging_mixin.py:103} INFO - [2021-02-10 11:47:28,216] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:47:28,398] {logging_mixin.py:103} INFO - [2021-02-10 11:47:28,398] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:28,399] {logging_mixin.py:103} INFO - [2021-02-10 11:47:28,399] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:47:28,403] {logging_mixin.py:103} INFO - [2021-02-10 11:47:28,403] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:47:28,945] {logging_mixin.py:103} INFO - [2021-02-10 11:47:28,944] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:28,953] {logging_mixin.py:103} INFO - [2021-02-10 11:47:28,952] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:47:29,111] {logging_mixin.py:103} INFO - [2021-02-10 11:47:29,111] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:29,113] {logging_mixin.py:103} INFO - [2021-02-10 11:47:29,113] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:47:29,312] {logging_mixin.py:103} INFO - [2021-02-10 11:47:29,312] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:29,312] {logging_mixin.py:103} INFO - [2021-02-10 11:47:29,312] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:47:29,316] {logging_mixin.py:103} INFO - [2021-02-10 11:47:29,316] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:47:29,503] {logging_mixin.py:103} INFO - [2021-02-10 11:47:29,503] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:29,505] {logging_mixin.py:103} INFO - [2021-02-10 11:47:29,505] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:47:29,722] {logging_mixin.py:103} INFO - [2021-02-10 11:47:29,722] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:29,723] {logging_mixin.py:103} INFO - [2021-02-10 11:47:29,722] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:47:29,727] {logging_mixin.py:103} INFO - [2021-02-10 11:47:29,727] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:47:29,890] {logging_mixin.py:103} INFO - [2021-02-10 11:47:29,890] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:29,892] {logging_mixin.py:103} INFO - [2021-02-10 11:47:29,892] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:47:30,082] {logging_mixin.py:103} INFO - [2021-02-10 11:47:30,082] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:30,121] {logging_mixin.py:103} INFO - [2021-02-10 11:47:30,121] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:47:30,270] {logging_mixin.py:103} INFO - [2021-02-10 11:47:30,270] {cursor.py:560} INFO - query execution done
[2021-02-10 11:47:35,825] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:48:06,568] {scheduler_job.py:181} INFO - Started process (PID=71137) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:48:06,570] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:48:06,570] {logging_mixin.py:103} INFO - [2021-02-10 11:48:06,570] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:48:09,066] {logging_mixin.py:103} INFO - [2021-02-10 11:48:09,066] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:48:09,356] {logging_mixin.py:103} INFO - [2021-02-10 11:48:09,356] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:48:09,713] {logging_mixin.py:103} INFO - [2021-02-10 11:48:09,713] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:48:09,713] {logging_mixin.py:103} INFO - [2021-02-10 11:48:09,713] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:48:09,713] {logging_mixin.py:103} INFO - [2021-02-10 11:48:09,713] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:48:11,024] {logging_mixin.py:103} INFO - [2021-02-10 11:48:11,023] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:48:11,270] {logging_mixin.py:103} INFO - [2021-02-10 11:48:11,270] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:11,272] {logging_mixin.py:103} INFO - [2021-02-10 11:48:11,272] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:48:11,436] {logging_mixin.py:103} INFO - [2021-02-10 11:48:11,436] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:11,437] {logging_mixin.py:103} INFO - [2021-02-10 11:48:11,436] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:48:11,595] {logging_mixin.py:103} INFO - [2021-02-10 11:48:11,595] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:11,597] {logging_mixin.py:103} INFO - [2021-02-10 11:48:11,597] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:48:11,751] {logging_mixin.py:103} INFO - [2021-02-10 11:48:11,751] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:12,128] {logging_mixin.py:103} INFO - [2021-02-10 11:48:12,128] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:48:12,274] {logging_mixin.py:103} INFO - [2021-02-10 11:48:12,274] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:12,320] {logging_mixin.py:103} INFO - [2021-02-10 11:48:12,320] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:48:12,321] {logging_mixin.py:103} INFO - [2021-02-10 11:48:12,321] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:48:13,800] {logging_mixin.py:103} INFO - [2021-02-10 11:48:13,800] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:13,804] {logging_mixin.py:103} INFO - [2021-02-10 11:48:13,804] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:48:13,815] {logging_mixin.py:103} INFO - [2021-02-10 11:48:13,815] {data_context.py:1281} INFO - Setting run_name to: 20210210T104813.815179Z
[2021-02-10 11:48:13,816] {logging_mixin.py:103} INFO - [2021-02-10 11:48:13,816] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:48:13,826] {logging_mixin.py:103} INFO - [2021-02-10 11:48:13,826] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:48:14,014] {logging_mixin.py:103} INFO - [2021-02-10 11:48:14,014] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:14,015] {logging_mixin.py:103} INFO - [2021-02-10 11:48:14,015] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:48:14,216] {logging_mixin.py:103} INFO - [2021-02-10 11:48:14,216] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:14,217] {logging_mixin.py:103} INFO - [2021-02-10 11:48:14,217] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:48:14,219] {logging_mixin.py:103} INFO - [2021-02-10 11:48:14,219] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:48:14,369] {logging_mixin.py:103} INFO - [2021-02-10 11:48:14,368] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:14,371] {logging_mixin.py:103} INFO - [2021-02-10 11:48:14,371] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:48:14,528] {logging_mixin.py:103} INFO - [2021-02-10 11:48:14,527] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:14,530] {logging_mixin.py:103} INFO - [2021-02-10 11:48:14,529] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:48:14,670] {logging_mixin.py:103} INFO - [2021-02-10 11:48:14,670] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:14,671] {logging_mixin.py:103} INFO - [2021-02-10 11:48:14,670] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:48:14,691] {logging_mixin.py:103} INFO - [2021-02-10 11:48:14,691] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:48:14,694] {logging_mixin.py:103} INFO - [2021-02-10 11:48:14,694] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:48:14,888] {logging_mixin.py:103} INFO - [2021-02-10 11:48:14,888] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:14,891] {logging_mixin.py:103} INFO - [2021-02-10 11:48:14,890] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:48:15,055] {logging_mixin.py:103} INFO - [2021-02-10 11:48:15,055] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:15,055] {logging_mixin.py:103} INFO - [2021-02-10 11:48:15,055] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:48:15,058] {logging_mixin.py:103} INFO - [2021-02-10 11:48:15,058] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:48:15,220] {logging_mixin.py:103} INFO - [2021-02-10 11:48:15,220] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:15,222] {logging_mixin.py:103} INFO - [2021-02-10 11:48:15,222] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:48:15,377] {logging_mixin.py:103} INFO - [2021-02-10 11:48:15,377] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:15,380] {logging_mixin.py:103} INFO - [2021-02-10 11:48:15,380] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:48:15,538] {logging_mixin.py:103} INFO - [2021-02-10 11:48:15,537] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:15,540] {logging_mixin.py:103} INFO - [2021-02-10 11:48:15,540] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:48:15,683] {logging_mixin.py:103} INFO - [2021-02-10 11:48:15,682] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:15,683] {logging_mixin.py:103} INFO - [2021-02-10 11:48:15,683] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:48:15,687] {logging_mixin.py:103} INFO - [2021-02-10 11:48:15,687] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:48:15,994] {logging_mixin.py:103} INFO - [2021-02-10 11:48:15,993] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:16,008] {logging_mixin.py:103} INFO - [2021-02-10 11:48:16,008] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:48:16,573] {logging_mixin.py:103} INFO - [2021-02-10 11:48:16,573] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:16,576] {logging_mixin.py:103} INFO - [2021-02-10 11:48:16,575] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:48:16,753] {logging_mixin.py:103} INFO - [2021-02-10 11:48:16,752] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:16,753] {logging_mixin.py:103} INFO - [2021-02-10 11:48:16,753] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:48:16,757] {logging_mixin.py:103} INFO - [2021-02-10 11:48:16,757] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:48:16,906] {logging_mixin.py:103} INFO - [2021-02-10 11:48:16,906] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:16,908] {logging_mixin.py:103} INFO - [2021-02-10 11:48:16,908] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:48:17,084] {logging_mixin.py:103} INFO - [2021-02-10 11:48:17,084] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:17,084] {logging_mixin.py:103} INFO - [2021-02-10 11:48:17,084] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:48:17,089] {logging_mixin.py:103} INFO - [2021-02-10 11:48:17,089] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:48:17,246] {logging_mixin.py:103} INFO - [2021-02-10 11:48:17,246] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:17,248] {logging_mixin.py:103} INFO - [2021-02-10 11:48:17,248] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:48:17,421] {logging_mixin.py:103} INFO - [2021-02-10 11:48:17,421] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:17,456] {logging_mixin.py:103} INFO - [2021-02-10 11:48:17,456] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:48:17,622] {logging_mixin.py:103} INFO - [2021-02-10 11:48:17,622] {cursor.py:560} INFO - query execution done
[2021-02-10 11:48:26,124] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:49:03,993] {scheduler_job.py:181} INFO - Started process (PID=71198) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:49:03,995] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:49:03,996] {logging_mixin.py:103} INFO - [2021-02-10 11:49:03,996] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:49:05,645] {logging_mixin.py:103} INFO - [2021-02-10 11:49:05,645] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:49:05,947] {logging_mixin.py:103} INFO - [2021-02-10 11:49:05,946] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:49:06,292] {logging_mixin.py:103} INFO - [2021-02-10 11:49:06,292] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:49:06,292] {logging_mixin.py:103} INFO - [2021-02-10 11:49:06,292] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:49:06,292] {logging_mixin.py:103} INFO - [2021-02-10 11:49:06,292] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:49:07,546] {logging_mixin.py:103} INFO - [2021-02-10 11:49:07,546] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:49:07,713] {logging_mixin.py:103} INFO - [2021-02-10 11:49:07,713] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:07,715] {logging_mixin.py:103} INFO - [2021-02-10 11:49:07,714] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:49:07,881] {logging_mixin.py:103} INFO - [2021-02-10 11:49:07,881] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:07,882] {logging_mixin.py:103} INFO - [2021-02-10 11:49:07,882] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:49:08,036] {logging_mixin.py:103} INFO - [2021-02-10 11:49:08,035] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:08,039] {logging_mixin.py:103} INFO - [2021-02-10 11:49:08,039] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:49:08,200] {logging_mixin.py:103} INFO - [2021-02-10 11:49:08,200] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:08,683] {logging_mixin.py:103} INFO - [2021-02-10 11:49:08,683] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:49:08,857] {logging_mixin.py:103} INFO - [2021-02-10 11:49:08,857] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:08,919] {logging_mixin.py:103} INFO - [2021-02-10 11:49:08,919] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:49:08,919] {logging_mixin.py:103} INFO - [2021-02-10 11:49:08,919] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:49:10,312] {logging_mixin.py:103} INFO - [2021-02-10 11:49:10,312] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:10,315] {logging_mixin.py:103} INFO - [2021-02-10 11:49:10,315] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:49:10,330] {logging_mixin.py:103} INFO - [2021-02-10 11:49:10,329] {data_context.py:1281} INFO - Setting run_name to: 20210210T104910.329870Z
[2021-02-10 11:49:10,331] {logging_mixin.py:103} INFO - [2021-02-10 11:49:10,331] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:49:10,346] {logging_mixin.py:103} INFO - [2021-02-10 11:49:10,346] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:49:10,513] {logging_mixin.py:103} INFO - [2021-02-10 11:49:10,512] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:10,514] {logging_mixin.py:103} INFO - [2021-02-10 11:49:10,514] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:49:10,676] {logging_mixin.py:103} INFO - [2021-02-10 11:49:10,676] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:10,677] {logging_mixin.py:103} INFO - [2021-02-10 11:49:10,676] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:49:10,678] {logging_mixin.py:103} INFO - [2021-02-10 11:49:10,678] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:49:10,846] {logging_mixin.py:103} INFO - [2021-02-10 11:49:10,846] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:10,850] {logging_mixin.py:103} INFO - [2021-02-10 11:49:10,850] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:49:11,055] {logging_mixin.py:103} INFO - [2021-02-10 11:49:11,055] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:11,058] {logging_mixin.py:103} INFO - [2021-02-10 11:49:11,058] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:49:11,232] {logging_mixin.py:103} INFO - [2021-02-10 11:49:11,232] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:11,232] {logging_mixin.py:103} INFO - [2021-02-10 11:49:11,232] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:49:11,250] {logging_mixin.py:103} INFO - [2021-02-10 11:49:11,250] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:49:11,253] {logging_mixin.py:103} INFO - [2021-02-10 11:49:11,253] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:49:11,442] {logging_mixin.py:103} INFO - [2021-02-10 11:49:11,442] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:11,444] {logging_mixin.py:103} INFO - [2021-02-10 11:49:11,444] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:49:11,626] {logging_mixin.py:103} INFO - [2021-02-10 11:49:11,626] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:11,626] {logging_mixin.py:103} INFO - [2021-02-10 11:49:11,626] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:49:11,629] {logging_mixin.py:103} INFO - [2021-02-10 11:49:11,629] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:49:11,781] {logging_mixin.py:103} INFO - [2021-02-10 11:49:11,781] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:11,783] {logging_mixin.py:103} INFO - [2021-02-10 11:49:11,783] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:49:11,983] {logging_mixin.py:103} INFO - [2021-02-10 11:49:11,982] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:11,993] {logging_mixin.py:103} INFO - [2021-02-10 11:49:11,992] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:49:12,214] {logging_mixin.py:103} INFO - [2021-02-10 11:49:12,214] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:12,217] {logging_mixin.py:103} INFO - [2021-02-10 11:49:12,217] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:49:12,381] {logging_mixin.py:103} INFO - [2021-02-10 11:49:12,381] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:12,381] {logging_mixin.py:103} INFO - [2021-02-10 11:49:12,381] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:49:12,384] {logging_mixin.py:103} INFO - [2021-02-10 11:49:12,384] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:49:12,610] {logging_mixin.py:103} INFO - [2021-02-10 11:49:12,609] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:12,616] {logging_mixin.py:103} INFO - [2021-02-10 11:49:12,616] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:49:12,804] {logging_mixin.py:103} INFO - [2021-02-10 11:49:12,804] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:12,806] {logging_mixin.py:103} INFO - [2021-02-10 11:49:12,806] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:49:13,029] {logging_mixin.py:103} INFO - [2021-02-10 11:49:13,029] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:13,030] {logging_mixin.py:103} INFO - [2021-02-10 11:49:13,030] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:49:13,034] {logging_mixin.py:103} INFO - [2021-02-10 11:49:13,034] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:49:13,226] {logging_mixin.py:103} INFO - [2021-02-10 11:49:13,226] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:13,228] {logging_mixin.py:103} INFO - [2021-02-10 11:49:13,228] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:49:13,371] {logging_mixin.py:103} INFO - [2021-02-10 11:49:13,371] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:13,372] {logging_mixin.py:103} INFO - [2021-02-10 11:49:13,372] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:49:13,376] {logging_mixin.py:103} INFO - [2021-02-10 11:49:13,376] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:49:13,577] {logging_mixin.py:103} INFO - [2021-02-10 11:49:13,576] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:13,579] {logging_mixin.py:103} INFO - [2021-02-10 11:49:13,579] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:49:13,748] {logging_mixin.py:103} INFO - [2021-02-10 11:49:13,748] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:13,779] {logging_mixin.py:103} INFO - [2021-02-10 11:49:13,779] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:49:13,942] {logging_mixin.py:103} INFO - [2021-02-10 11:49:13,942] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:21,210] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:49:50,319] {scheduler_job.py:181} INFO - Started process (PID=71257) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:49:50,319] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:49:50,320] {logging_mixin.py:103} INFO - [2021-02-10 11:49:50,320] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:49:52,006] {logging_mixin.py:103} INFO - [2021-02-10 11:49:52,006] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:49:52,303] {logging_mixin.py:103} INFO - [2021-02-10 11:49:52,303] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:49:52,653] {logging_mixin.py:103} INFO - [2021-02-10 11:49:52,652] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:49:52,653] {logging_mixin.py:103} INFO - [2021-02-10 11:49:52,653] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:49:52,653] {logging_mixin.py:103} INFO - [2021-02-10 11:49:52,653] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:49:53,940] {logging_mixin.py:103} INFO - [2021-02-10 11:49:53,940] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:49:54,150] {logging_mixin.py:103} INFO - [2021-02-10 11:49:54,150] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:54,151] {logging_mixin.py:103} INFO - [2021-02-10 11:49:54,151] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:49:54,303] {logging_mixin.py:103} INFO - [2021-02-10 11:49:54,303] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:54,303] {logging_mixin.py:103} INFO - [2021-02-10 11:49:54,303] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:49:54,447] {logging_mixin.py:103} INFO - [2021-02-10 11:49:54,447] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:54,449] {logging_mixin.py:103} INFO - [2021-02-10 11:49:54,449] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:49:54,611] {logging_mixin.py:103} INFO - [2021-02-10 11:49:54,611] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:54,841] {logging_mixin.py:103} INFO - [2021-02-10 11:49:54,841] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:49:55,015] {logging_mixin.py:103} INFO - [2021-02-10 11:49:55,015] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:55,053] {logging_mixin.py:103} INFO - [2021-02-10 11:49:55,053] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:49:55,054] {logging_mixin.py:103} INFO - [2021-02-10 11:49:55,054] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:49:56,266] {logging_mixin.py:103} INFO - [2021-02-10 11:49:56,265] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:56,268] {logging_mixin.py:103} INFO - [2021-02-10 11:49:56,268] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:49:56,277] {logging_mixin.py:103} INFO - [2021-02-10 11:49:56,277] {data_context.py:1281} INFO - Setting run_name to: 20210210T104956.277528Z
[2021-02-10 11:49:56,278] {logging_mixin.py:103} INFO - [2021-02-10 11:49:56,278] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:49:56,288] {logging_mixin.py:103} INFO - [2021-02-10 11:49:56,288] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:49:56,473] {logging_mixin.py:103} INFO - [2021-02-10 11:49:56,473] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:56,474] {logging_mixin.py:103} INFO - [2021-02-10 11:49:56,474] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:49:56,748] {logging_mixin.py:103} INFO - [2021-02-10 11:49:56,748] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:56,748] {logging_mixin.py:103} INFO - [2021-02-10 11:49:56,748] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:49:56,750] {logging_mixin.py:103} INFO - [2021-02-10 11:49:56,749] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:49:56,928] {logging_mixin.py:103} INFO - [2021-02-10 11:49:56,928] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:56,930] {logging_mixin.py:103} INFO - [2021-02-10 11:49:56,930] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:49:57,097] {logging_mixin.py:103} INFO - [2021-02-10 11:49:57,097] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:57,100] {logging_mixin.py:103} INFO - [2021-02-10 11:49:57,100] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:49:57,288] {logging_mixin.py:103} INFO - [2021-02-10 11:49:57,288] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:57,289] {logging_mixin.py:103} INFO - [2021-02-10 11:49:57,289] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:49:57,300] {logging_mixin.py:103} INFO - [2021-02-10 11:49:57,300] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:49:57,303] {logging_mixin.py:103} INFO - [2021-02-10 11:49:57,303] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:49:57,490] {logging_mixin.py:103} INFO - [2021-02-10 11:49:57,490] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:57,492] {logging_mixin.py:103} INFO - [2021-02-10 11:49:57,492] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:49:57,649] {logging_mixin.py:103} INFO - [2021-02-10 11:49:57,649] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:57,650] {logging_mixin.py:103} INFO - [2021-02-10 11:49:57,649] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:49:57,653] {logging_mixin.py:103} INFO - [2021-02-10 11:49:57,653] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:49:57,826] {logging_mixin.py:103} INFO - [2021-02-10 11:49:57,826] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:57,827] {logging_mixin.py:103} INFO - [2021-02-10 11:49:57,827] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:49:58,136] {logging_mixin.py:103} INFO - [2021-02-10 11:49:58,136] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:58,140] {logging_mixin.py:103} INFO - [2021-02-10 11:49:58,140] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:49:58,330] {logging_mixin.py:103} INFO - [2021-02-10 11:49:58,330] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:58,333] {logging_mixin.py:103} INFO - [2021-02-10 11:49:58,333] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:49:58,497] {logging_mixin.py:103} INFO - [2021-02-10 11:49:58,497] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:58,498] {logging_mixin.py:103} INFO - [2021-02-10 11:49:58,498] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:49:58,501] {logging_mixin.py:103} INFO - [2021-02-10 11:49:58,501] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:49:58,665] {logging_mixin.py:103} INFO - [2021-02-10 11:49:58,665] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:58,671] {logging_mixin.py:103} INFO - [2021-02-10 11:49:58,671] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:49:58,954] {logging_mixin.py:103} INFO - [2021-02-10 11:49:58,954] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:58,956] {logging_mixin.py:103} INFO - [2021-02-10 11:49:58,956] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:49:59,781] {logging_mixin.py:103} INFO - [2021-02-10 11:49:59,781] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:59,782] {logging_mixin.py:103} INFO - [2021-02-10 11:49:59,782] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:49:59,786] {logging_mixin.py:103} INFO - [2021-02-10 11:49:59,786] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:49:59,945] {logging_mixin.py:103} INFO - [2021-02-10 11:49:59,945] {cursor.py:560} INFO - query execution done
[2021-02-10 11:49:59,947] {logging_mixin.py:103} INFO - [2021-02-10 11:49:59,947] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:50:00,115] {logging_mixin.py:103} INFO - [2021-02-10 11:50:00,115] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:00,116] {logging_mixin.py:103} INFO - [2021-02-10 11:50:00,115] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:50:00,120] {logging_mixin.py:103} INFO - [2021-02-10 11:50:00,120] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:50:00,321] {logging_mixin.py:103} INFO - [2021-02-10 11:50:00,321] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:00,324] {logging_mixin.py:103} INFO - [2021-02-10 11:50:00,323] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:50:00,485] {logging_mixin.py:103} INFO - [2021-02-10 11:50:00,485] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:00,497] {logging_mixin.py:103} INFO - [2021-02-10 11:50:00,496] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:50:00,726] {logging_mixin.py:103} INFO - [2021-02-10 11:50:00,725] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:06,195] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:50:32,234] {scheduler_job.py:181} INFO - Started process (PID=71328) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:50:32,235] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:50:32,235] {logging_mixin.py:103} INFO - [2021-02-10 11:50:32,235] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:50:33,867] {logging_mixin.py:103} INFO - [2021-02-10 11:50:33,867] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:50:34,149] {logging_mixin.py:103} INFO - [2021-02-10 11:50:34,149] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:50:34,486] {logging_mixin.py:103} INFO - [2021-02-10 11:50:34,486] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:50:34,486] {logging_mixin.py:103} INFO - [2021-02-10 11:50:34,486] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:50:34,486] {logging_mixin.py:103} INFO - [2021-02-10 11:50:34,486] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:50:35,543] {logging_mixin.py:103} INFO - [2021-02-10 11:50:35,543] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:50:35,707] {logging_mixin.py:103} INFO - [2021-02-10 11:50:35,707] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:35,709] {logging_mixin.py:103} INFO - [2021-02-10 11:50:35,709] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:50:35,890] {logging_mixin.py:103} INFO - [2021-02-10 11:50:35,890] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:35,891] {logging_mixin.py:103} INFO - [2021-02-10 11:50:35,891] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:50:36,076] {logging_mixin.py:103} INFO - [2021-02-10 11:50:36,076] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:36,079] {logging_mixin.py:103} INFO - [2021-02-10 11:50:36,078] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:50:36,661] {logging_mixin.py:103} INFO - [2021-02-10 11:50:36,661] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:36,871] {logging_mixin.py:103} INFO - [2021-02-10 11:50:36,871] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:50:37,039] {logging_mixin.py:103} INFO - [2021-02-10 11:50:37,039] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:37,078] {logging_mixin.py:103} INFO - [2021-02-10 11:50:37,078] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:50:37,078] {logging_mixin.py:103} INFO - [2021-02-10 11:50:37,078] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:50:39,099] {logging_mixin.py:103} INFO - [2021-02-10 11:50:39,099] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:39,102] {logging_mixin.py:103} INFO - [2021-02-10 11:50:39,102] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:50:39,113] {logging_mixin.py:103} INFO - [2021-02-10 11:50:39,113] {data_context.py:1281} INFO - Setting run_name to: 20210210T105039.113258Z
[2021-02-10 11:50:39,114] {logging_mixin.py:103} INFO - [2021-02-10 11:50:39,114] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:50:39,124] {logging_mixin.py:103} INFO - [2021-02-10 11:50:39,124] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:50:39,394] {logging_mixin.py:103} INFO - [2021-02-10 11:50:39,394] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:39,396] {logging_mixin.py:103} INFO - [2021-02-10 11:50:39,396] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:50:39,560] {logging_mixin.py:103} INFO - [2021-02-10 11:50:39,560] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:39,561] {logging_mixin.py:103} INFO - [2021-02-10 11:50:39,561] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:50:39,563] {logging_mixin.py:103} INFO - [2021-02-10 11:50:39,563] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:50:39,756] {logging_mixin.py:103} INFO - [2021-02-10 11:50:39,756] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:39,759] {logging_mixin.py:103} INFO - [2021-02-10 11:50:39,759] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:50:39,922] {logging_mixin.py:103} INFO - [2021-02-10 11:50:39,922] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:39,924] {logging_mixin.py:103} INFO - [2021-02-10 11:50:39,924] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:50:40,100] {logging_mixin.py:103} INFO - [2021-02-10 11:50:40,100] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:40,101] {logging_mixin.py:103} INFO - [2021-02-10 11:50:40,101] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:50:40,113] {logging_mixin.py:103} INFO - [2021-02-10 11:50:40,113] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:50:40,115] {logging_mixin.py:103} INFO - [2021-02-10 11:50:40,115] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:50:40,375] {logging_mixin.py:103} INFO - [2021-02-10 11:50:40,375] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:40,377] {logging_mixin.py:103} INFO - [2021-02-10 11:50:40,377] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:50:40,526] {logging_mixin.py:103} INFO - [2021-02-10 11:50:40,525] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:40,526] {logging_mixin.py:103} INFO - [2021-02-10 11:50:40,526] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:50:40,529] {logging_mixin.py:103} INFO - [2021-02-10 11:50:40,529] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:50:40,696] {logging_mixin.py:103} INFO - [2021-02-10 11:50:40,696] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:40,698] {logging_mixin.py:103} INFO - [2021-02-10 11:50:40,698] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:50:40,867] {logging_mixin.py:103} INFO - [2021-02-10 11:50:40,867] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:40,870] {logging_mixin.py:103} INFO - [2021-02-10 11:50:40,870] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:50:41,039] {logging_mixin.py:103} INFO - [2021-02-10 11:50:41,039] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:41,042] {logging_mixin.py:103} INFO - [2021-02-10 11:50:41,042] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:50:41,220] {logging_mixin.py:103} INFO - [2021-02-10 11:50:41,220] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:41,221] {logging_mixin.py:103} INFO - [2021-02-10 11:50:41,221] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:50:41,225] {logging_mixin.py:103} INFO - [2021-02-10 11:50:41,225] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:50:41,431] {logging_mixin.py:103} INFO - [2021-02-10 11:50:41,431] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:41,437] {logging_mixin.py:103} INFO - [2021-02-10 11:50:41,437] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:50:41,607] {logging_mixin.py:103} INFO - [2021-02-10 11:50:41,607] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:41,610] {logging_mixin.py:103} INFO - [2021-02-10 11:50:41,610] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:50:41,789] {logging_mixin.py:103} INFO - [2021-02-10 11:50:41,789] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:41,790] {logging_mixin.py:103} INFO - [2021-02-10 11:50:41,790] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:50:41,794] {logging_mixin.py:103} INFO - [2021-02-10 11:50:41,794] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:50:41,963] {logging_mixin.py:103} INFO - [2021-02-10 11:50:41,963] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:41,965] {logging_mixin.py:103} INFO - [2021-02-10 11:50:41,965] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:50:42,136] {logging_mixin.py:103} INFO - [2021-02-10 11:50:42,136] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:42,137] {logging_mixin.py:103} INFO - [2021-02-10 11:50:42,137] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:50:42,140] {logging_mixin.py:103} INFO - [2021-02-10 11:50:42,140] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:50:43,394] {logging_mixin.py:103} INFO - [2021-02-10 11:50:43,393] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:43,396] {logging_mixin.py:103} INFO - [2021-02-10 11:50:43,396] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:50:43,549] {logging_mixin.py:103} INFO - [2021-02-10 11:50:43,549] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:43,560] {logging_mixin.py:103} INFO - [2021-02-10 11:50:43,560] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:50:43,689] {logging_mixin.py:103} INFO - [2021-02-10 11:50:43,689] {cursor.py:560} INFO - query execution done
[2021-02-10 11:50:48,819] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:51:15,014] {scheduler_job.py:181} INFO - Started process (PID=71380) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:51:15,015] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:51:15,015] {logging_mixin.py:103} INFO - [2021-02-10 11:51:15,015] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:51:16,747] {logging_mixin.py:103} INFO - [2021-02-10 11:51:16,747] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:51:17,031] {logging_mixin.py:103} INFO - [2021-02-10 11:51:17,031] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:51:17,431] {logging_mixin.py:103} INFO - [2021-02-10 11:51:17,431] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:51:17,432] {logging_mixin.py:103} INFO - [2021-02-10 11:51:17,432] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:51:17,432] {logging_mixin.py:103} INFO - [2021-02-10 11:51:17,432] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:51:18,721] {logging_mixin.py:103} INFO - [2021-02-10 11:51:18,721] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:51:19,030] {logging_mixin.py:103} INFO - [2021-02-10 11:51:19,030] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:19,031] {logging_mixin.py:103} INFO - [2021-02-10 11:51:19,031] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:51:19,178] {logging_mixin.py:103} INFO - [2021-02-10 11:51:19,178] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:19,179] {logging_mixin.py:103} INFO - [2021-02-10 11:51:19,179] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:51:19,393] {logging_mixin.py:103} INFO - [2021-02-10 11:51:19,393] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:19,396] {logging_mixin.py:103} INFO - [2021-02-10 11:51:19,396] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:51:19,727] {logging_mixin.py:103} INFO - [2021-02-10 11:51:19,727] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:19,940] {logging_mixin.py:103} INFO - [2021-02-10 11:51:19,940] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:51:20,120] {logging_mixin.py:103} INFO - [2021-02-10 11:51:20,120] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:20,162] {logging_mixin.py:103} INFO - [2021-02-10 11:51:20,162] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:51:20,163] {logging_mixin.py:103} INFO - [2021-02-10 11:51:20,163] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:51:22,575] {logging_mixin.py:103} INFO - [2021-02-10 11:51:22,575] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:22,579] {logging_mixin.py:103} INFO - [2021-02-10 11:51:22,579] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:51:22,590] {logging_mixin.py:103} INFO - [2021-02-10 11:51:22,590] {data_context.py:1281} INFO - Setting run_name to: 20210210T105122.590440Z
[2021-02-10 11:51:22,591] {logging_mixin.py:103} INFO - [2021-02-10 11:51:22,591] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:51:22,602] {logging_mixin.py:103} INFO - [2021-02-10 11:51:22,602] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:51:22,820] {logging_mixin.py:103} INFO - [2021-02-10 11:51:22,820] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:22,822] {logging_mixin.py:103} INFO - [2021-02-10 11:51:22,822] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:51:23,345] {logging_mixin.py:103} INFO - [2021-02-10 11:51:23,345] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:23,346] {logging_mixin.py:103} INFO - [2021-02-10 11:51:23,346] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:51:23,349] {logging_mixin.py:103} INFO - [2021-02-10 11:51:23,349] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:51:24,248] {logging_mixin.py:103} INFO - [2021-02-10 11:51:24,248] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:24,250] {logging_mixin.py:103} INFO - [2021-02-10 11:51:24,250] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:51:24,863] {logging_mixin.py:103} INFO - [2021-02-10 11:51:24,863] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:24,866] {logging_mixin.py:103} INFO - [2021-02-10 11:51:24,865] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:51:25,112] {logging_mixin.py:103} INFO - [2021-02-10 11:51:25,111] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:25,112] {logging_mixin.py:103} INFO - [2021-02-10 11:51:25,112] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:51:25,122] {logging_mixin.py:103} INFO - [2021-02-10 11:51:25,122] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:51:25,124] {logging_mixin.py:103} INFO - [2021-02-10 11:51:25,124] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:51:25,325] {logging_mixin.py:103} INFO - [2021-02-10 11:51:25,325] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:25,327] {logging_mixin.py:103} INFO - [2021-02-10 11:51:25,327] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:51:25,585] {logging_mixin.py:103} INFO - [2021-02-10 11:51:25,584] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:25,585] {logging_mixin.py:103} INFO - [2021-02-10 11:51:25,585] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:51:25,588] {logging_mixin.py:103} INFO - [2021-02-10 11:51:25,588] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:51:25,769] {logging_mixin.py:103} INFO - [2021-02-10 11:51:25,768] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:25,770] {logging_mixin.py:103} INFO - [2021-02-10 11:51:25,770] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:51:25,952] {logging_mixin.py:103} INFO - [2021-02-10 11:51:25,952] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:25,954] {logging_mixin.py:103} INFO - [2021-02-10 11:51:25,954] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:51:26,138] {logging_mixin.py:103} INFO - [2021-02-10 11:51:26,138] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:26,141] {logging_mixin.py:103} INFO - [2021-02-10 11:51:26,141] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:51:26,719] {logging_mixin.py:103} INFO - [2021-02-10 11:51:26,719] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:26,720] {logging_mixin.py:103} INFO - [2021-02-10 11:51:26,720] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:51:26,724] {logging_mixin.py:103} INFO - [2021-02-10 11:51:26,724] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:51:27,323] {logging_mixin.py:103} INFO - [2021-02-10 11:51:27,323] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:27,330] {logging_mixin.py:103} INFO - [2021-02-10 11:51:27,330] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:51:27,938] {logging_mixin.py:103} INFO - [2021-02-10 11:51:27,938] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:27,946] {logging_mixin.py:103} INFO - [2021-02-10 11:51:27,946] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:51:28,565] {logging_mixin.py:103} INFO - [2021-02-10 11:51:28,565] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:28,566] {logging_mixin.py:103} INFO - [2021-02-10 11:51:28,565] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:51:28,577] {logging_mixin.py:103} INFO - [2021-02-10 11:51:28,576] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:51:29,165] {logging_mixin.py:103} INFO - [2021-02-10 11:51:29,165] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:29,167] {logging_mixin.py:103} INFO - [2021-02-10 11:51:29,167] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:51:29,394] {logging_mixin.py:103} INFO - [2021-02-10 11:51:29,394] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:29,394] {logging_mixin.py:103} INFO - [2021-02-10 11:51:29,394] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:51:29,398] {logging_mixin.py:103} INFO - [2021-02-10 11:51:29,398] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:51:29,658] {logging_mixin.py:103} INFO - [2021-02-10 11:51:29,658] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:29,660] {logging_mixin.py:103} INFO - [2021-02-10 11:51:29,660] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:51:29,865] {logging_mixin.py:103} INFO - [2021-02-10 11:51:29,865] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:29,877] {logging_mixin.py:103} INFO - [2021-02-10 11:51:29,877] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:51:30,016] {logging_mixin.py:103} INFO - [2021-02-10 11:51:30,016] {cursor.py:560} INFO - query execution done
[2021-02-10 11:51:35,703] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:52:01,933] {scheduler_job.py:181} INFO - Started process (PID=71437) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:52:01,933] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:52:01,933] {logging_mixin.py:103} INFO - [2021-02-10 11:52:01,933] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:52:03,523] {logging_mixin.py:103} INFO - [2021-02-10 11:52:03,523] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:52:03,817] {logging_mixin.py:103} INFO - [2021-02-10 11:52:03,817] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:52:04,135] {logging_mixin.py:103} INFO - [2021-02-10 11:52:04,135] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:52:04,135] {logging_mixin.py:103} INFO - [2021-02-10 11:52:04,135] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:52:04,135] {logging_mixin.py:103} INFO - [2021-02-10 11:52:04,135] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:52:05,482] {logging_mixin.py:103} INFO - [2021-02-10 11:52:05,482] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:52:05,647] {logging_mixin.py:103} INFO - [2021-02-10 11:52:05,647] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:05,649] {logging_mixin.py:103} INFO - [2021-02-10 11:52:05,649] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:52:05,921] {logging_mixin.py:103} INFO - [2021-02-10 11:52:05,920] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:05,921] {logging_mixin.py:103} INFO - [2021-02-10 11:52:05,921] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:52:06,081] {logging_mixin.py:103} INFO - [2021-02-10 11:52:06,081] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:06,084] {logging_mixin.py:103} INFO - [2021-02-10 11:52:06,084] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:52:06,324] {logging_mixin.py:103} INFO - [2021-02-10 11:52:06,324] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:06,544] {logging_mixin.py:103} INFO - [2021-02-10 11:52:06,544] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:52:06,800] {logging_mixin.py:103} INFO - [2021-02-10 11:52:06,799] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:06,841] {logging_mixin.py:103} INFO - [2021-02-10 11:52:06,841] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:52:06,841] {logging_mixin.py:103} INFO - [2021-02-10 11:52:06,841] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:52:08,487] {logging_mixin.py:103} INFO - [2021-02-10 11:52:08,487] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:08,491] {logging_mixin.py:103} INFO - [2021-02-10 11:52:08,491] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:52:08,502] {logging_mixin.py:103} INFO - [2021-02-10 11:52:08,502] {data_context.py:1281} INFO - Setting run_name to: 20210210T105208.501982Z
[2021-02-10 11:52:08,503] {logging_mixin.py:103} INFO - [2021-02-10 11:52:08,503] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:52:08,513] {logging_mixin.py:103} INFO - [2021-02-10 11:52:08,513] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:52:08,756] {logging_mixin.py:103} INFO - [2021-02-10 11:52:08,756] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:08,759] {logging_mixin.py:103} INFO - [2021-02-10 11:52:08,759] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:52:09,409] {logging_mixin.py:103} INFO - [2021-02-10 11:52:09,409] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:09,409] {logging_mixin.py:103} INFO - [2021-02-10 11:52:09,409] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:52:09,412] {logging_mixin.py:103} INFO - [2021-02-10 11:52:09,411] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:52:09,674] {logging_mixin.py:103} INFO - [2021-02-10 11:52:09,674] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:09,677] {logging_mixin.py:103} INFO - [2021-02-10 11:52:09,676] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:52:09,856] {logging_mixin.py:103} INFO - [2021-02-10 11:52:09,856] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:09,859] {logging_mixin.py:103} INFO - [2021-02-10 11:52:09,859] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:52:10,339] {logging_mixin.py:103} INFO - [2021-02-10 11:52:10,339] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:10,339] {logging_mixin.py:103} INFO - [2021-02-10 11:52:10,339] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:52:10,350] {logging_mixin.py:103} INFO - [2021-02-10 11:52:10,350] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:52:10,352] {logging_mixin.py:103} INFO - [2021-02-10 11:52:10,352] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:52:10,523] {logging_mixin.py:103} INFO - [2021-02-10 11:52:10,523] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:10,525] {logging_mixin.py:103} INFO - [2021-02-10 11:52:10,525] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:52:10,776] {logging_mixin.py:103} INFO - [2021-02-10 11:52:10,776] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:10,777] {logging_mixin.py:103} INFO - [2021-02-10 11:52:10,777] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:52:10,780] {logging_mixin.py:103} INFO - [2021-02-10 11:52:10,779] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:52:11,005] {logging_mixin.py:103} INFO - [2021-02-10 11:52:11,005] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:11,007] {logging_mixin.py:103} INFO - [2021-02-10 11:52:11,007] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:52:11,257] {logging_mixin.py:103} INFO - [2021-02-10 11:52:11,257] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:11,261] {logging_mixin.py:103} INFO - [2021-02-10 11:52:11,261] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:52:11,864] {logging_mixin.py:103} INFO - [2021-02-10 11:52:11,864] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:11,866] {logging_mixin.py:103} INFO - [2021-02-10 11:52:11,866] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:52:12,508] {logging_mixin.py:103} INFO - [2021-02-10 11:52:12,508] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:12,509] {logging_mixin.py:103} INFO - [2021-02-10 11:52:12,509] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:52:12,513] {logging_mixin.py:103} INFO - [2021-02-10 11:52:12,513] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:52:12,755] {logging_mixin.py:103} INFO - [2021-02-10 11:52:12,755] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:12,763] {logging_mixin.py:103} INFO - [2021-02-10 11:52:12,763] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:52:12,938] {logging_mixin.py:103} INFO - [2021-02-10 11:52:12,938] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:12,940] {logging_mixin.py:103} INFO - [2021-02-10 11:52:12,940] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:52:13,165] {logging_mixin.py:103} INFO - [2021-02-10 11:52:13,165] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:13,166] {logging_mixin.py:103} INFO - [2021-02-10 11:52:13,166] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:52:13,170] {logging_mixin.py:103} INFO - [2021-02-10 11:52:13,170] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:52:13,333] {logging_mixin.py:103} INFO - [2021-02-10 11:52:13,333] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:13,335] {logging_mixin.py:103} INFO - [2021-02-10 11:52:13,335] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:52:13,498] {logging_mixin.py:103} INFO - [2021-02-10 11:52:13,498] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:13,499] {logging_mixin.py:103} INFO - [2021-02-10 11:52:13,498] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:52:13,503] {logging_mixin.py:103} INFO - [2021-02-10 11:52:13,503] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:52:13,655] {logging_mixin.py:103} INFO - [2021-02-10 11:52:13,655] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:13,658] {logging_mixin.py:103} INFO - [2021-02-10 11:52:13,657] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:52:13,888] {logging_mixin.py:103} INFO - [2021-02-10 11:52:13,888] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:13,899] {logging_mixin.py:103} INFO - [2021-02-10 11:52:13,899] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:52:14,064] {logging_mixin.py:103} INFO - [2021-02-10 11:52:14,064] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:19,140] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:52:45,136] {scheduler_job.py:181} INFO - Started process (PID=71494) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:52:45,137] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:52:45,137] {logging_mixin.py:103} INFO - [2021-02-10 11:52:45,137] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:52:46,778] {logging_mixin.py:103} INFO - [2021-02-10 11:52:46,778] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:52:47,052] {logging_mixin.py:103} INFO - [2021-02-10 11:52:47,052] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:52:47,364] {logging_mixin.py:103} INFO - [2021-02-10 11:52:47,364] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:52:47,364] {logging_mixin.py:103} INFO - [2021-02-10 11:52:47,364] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:52:47,365] {logging_mixin.py:103} INFO - [2021-02-10 11:52:47,364] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:52:48,423] {logging_mixin.py:103} INFO - [2021-02-10 11:52:48,423] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:52:48,565] {logging_mixin.py:103} INFO - [2021-02-10 11:52:48,565] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:48,567] {logging_mixin.py:103} INFO - [2021-02-10 11:52:48,567] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:52:48,738] {logging_mixin.py:103} INFO - [2021-02-10 11:52:48,738] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:48,739] {logging_mixin.py:103} INFO - [2021-02-10 11:52:48,739] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:52:48,950] {logging_mixin.py:103} INFO - [2021-02-10 11:52:48,950] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:48,953] {logging_mixin.py:103} INFO - [2021-02-10 11:52:48,953] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:52:49,107] {logging_mixin.py:103} INFO - [2021-02-10 11:52:49,107] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:49,364] {logging_mixin.py:103} INFO - [2021-02-10 11:52:49,363] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:52:49,507] {logging_mixin.py:103} INFO - [2021-02-10 11:52:49,507] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:49,558] {logging_mixin.py:103} INFO - [2021-02-10 11:52:49,558] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:52:49,558] {logging_mixin.py:103} INFO - [2021-02-10 11:52:49,558] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:52:50,715] {logging_mixin.py:103} INFO - [2021-02-10 11:52:50,715] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:50,720] {logging_mixin.py:103} INFO - [2021-02-10 11:52:50,720] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:52:50,733] {logging_mixin.py:103} INFO - [2021-02-10 11:52:50,733] {data_context.py:1281} INFO - Setting run_name to: 20210210T105250.732490Z
[2021-02-10 11:52:50,736] {logging_mixin.py:103} INFO - [2021-02-10 11:52:50,736] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:52:50,774] {logging_mixin.py:103} INFO - [2021-02-10 11:52:50,774] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:52:51,027] {logging_mixin.py:103} INFO - [2021-02-10 11:52:51,027] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:51,037] {logging_mixin.py:103} INFO - [2021-02-10 11:52:51,037] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:52:51,231] {logging_mixin.py:103} INFO - [2021-02-10 11:52:51,231] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:51,231] {logging_mixin.py:103} INFO - [2021-02-10 11:52:51,231] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:52:51,234] {logging_mixin.py:103} INFO - [2021-02-10 11:52:51,234] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:52:51,374] {logging_mixin.py:103} INFO - [2021-02-10 11:52:51,374] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:51,376] {logging_mixin.py:103} INFO - [2021-02-10 11:52:51,376] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:52:51,529] {logging_mixin.py:103} INFO - [2021-02-10 11:52:51,529] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:51,532] {logging_mixin.py:103} INFO - [2021-02-10 11:52:51,532] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:52:51,678] {logging_mixin.py:103} INFO - [2021-02-10 11:52:51,678] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:51,679] {logging_mixin.py:103} INFO - [2021-02-10 11:52:51,679] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:52:51,692] {logging_mixin.py:103} INFO - [2021-02-10 11:52:51,692] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:52:51,696] {logging_mixin.py:103} INFO - [2021-02-10 11:52:51,696] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:52:51,869] {logging_mixin.py:103} INFO - [2021-02-10 11:52:51,869] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:51,870] {logging_mixin.py:103} INFO - [2021-02-10 11:52:51,870] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:52:52,069] {logging_mixin.py:103} INFO - [2021-02-10 11:52:52,069] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:52,069] {logging_mixin.py:103} INFO - [2021-02-10 11:52:52,069] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:52:52,072] {logging_mixin.py:103} INFO - [2021-02-10 11:52:52,072] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:52:52,225] {logging_mixin.py:103} INFO - [2021-02-10 11:52:52,225] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:52,227] {logging_mixin.py:103} INFO - [2021-02-10 11:52:52,227] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:52:52,403] {logging_mixin.py:103} INFO - [2021-02-10 11:52:52,403] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:52,407] {logging_mixin.py:103} INFO - [2021-02-10 11:52:52,406] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:52:52,585] {logging_mixin.py:103} INFO - [2021-02-10 11:52:52,584] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:52,588] {logging_mixin.py:103} INFO - [2021-02-10 11:52:52,588] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:52:52,770] {logging_mixin.py:103} INFO - [2021-02-10 11:52:52,770] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:52,771] {logging_mixin.py:103} INFO - [2021-02-10 11:52:52,771] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:52:52,775] {logging_mixin.py:103} INFO - [2021-02-10 11:52:52,775] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:52:52,980] {logging_mixin.py:103} INFO - [2021-02-10 11:52:52,980] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:52,995] {logging_mixin.py:103} INFO - [2021-02-10 11:52:52,995] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:52:53,165] {logging_mixin.py:103} INFO - [2021-02-10 11:52:53,165] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:53,176] {logging_mixin.py:103} INFO - [2021-02-10 11:52:53,176] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:52:53,391] {logging_mixin.py:103} INFO - [2021-02-10 11:52:53,390] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:53,391] {logging_mixin.py:103} INFO - [2021-02-10 11:52:53,391] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:52:53,396] {logging_mixin.py:103} INFO - [2021-02-10 11:52:53,396] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:52:53,590] {logging_mixin.py:103} INFO - [2021-02-10 11:52:53,590] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:53,594] {logging_mixin.py:103} INFO - [2021-02-10 11:52:53,594] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:52:53,742] {logging_mixin.py:103} INFO - [2021-02-10 11:52:53,742] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:53,743] {logging_mixin.py:103} INFO - [2021-02-10 11:52:53,743] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:52:53,747] {logging_mixin.py:103} INFO - [2021-02-10 11:52:53,747] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:52:53,975] {logging_mixin.py:103} INFO - [2021-02-10 11:52:53,975] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:53,978] {logging_mixin.py:103} INFO - [2021-02-10 11:52:53,978] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:52:54,168] {logging_mixin.py:103} INFO - [2021-02-10 11:52:54,168] {cursor.py:560} INFO - query execution done
[2021-02-10 11:52:54,182] {logging_mixin.py:103} INFO - [2021-02-10 11:52:54,182] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:52:54,325] {logging_mixin.py:103} INFO - [2021-02-10 11:52:54,325] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:00,675] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:53:33,317] {scheduler_job.py:181} INFO - Started process (PID=71554) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:53:33,317] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:53:33,317] {logging_mixin.py:103} INFO - [2021-02-10 11:53:33,317] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:53:35,663] {logging_mixin.py:103} INFO - [2021-02-10 11:53:35,663] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:53:36,336] {logging_mixin.py:103} INFO - [2021-02-10 11:53:36,336] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:53:36,905] {logging_mixin.py:103} INFO - [2021-02-10 11:53:36,905] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:53:36,906] {logging_mixin.py:103} INFO - [2021-02-10 11:53:36,905] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:53:36,906] {logging_mixin.py:103} INFO - [2021-02-10 11:53:36,906] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:53:38,505] {logging_mixin.py:103} INFO - [2021-02-10 11:53:38,505] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:53:39,009] {logging_mixin.py:103} INFO - [2021-02-10 11:53:39,008] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:39,011] {logging_mixin.py:103} INFO - [2021-02-10 11:53:39,011] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:53:39,159] {logging_mixin.py:103} INFO - [2021-02-10 11:53:39,159] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:39,160] {logging_mixin.py:103} INFO - [2021-02-10 11:53:39,160] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:53:39,317] {logging_mixin.py:103} INFO - [2021-02-10 11:53:39,317] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:39,320] {logging_mixin.py:103} INFO - [2021-02-10 11:53:39,320] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:53:39,461] {logging_mixin.py:103} INFO - [2021-02-10 11:53:39,461] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:39,710] {logging_mixin.py:103} INFO - [2021-02-10 11:53:39,710] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:53:39,978] {logging_mixin.py:103} INFO - [2021-02-10 11:53:39,978] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:40,019] {logging_mixin.py:103} INFO - [2021-02-10 11:53:40,019] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:53:40,020] {logging_mixin.py:103} INFO - [2021-02-10 11:53:40,020] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:53:41,901] {logging_mixin.py:103} INFO - [2021-02-10 11:53:41,901] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:41,906] {logging_mixin.py:103} INFO - [2021-02-10 11:53:41,906] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:53:41,918] {logging_mixin.py:103} INFO - [2021-02-10 11:53:41,918] {data_context.py:1281} INFO - Setting run_name to: 20210210T105341.918136Z
[2021-02-10 11:53:41,919] {logging_mixin.py:103} INFO - [2021-02-10 11:53:41,919] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:53:41,929] {logging_mixin.py:103} INFO - [2021-02-10 11:53:41,929] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:53:42,209] {logging_mixin.py:103} INFO - [2021-02-10 11:53:42,209] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:42,211] {logging_mixin.py:103} INFO - [2021-02-10 11:53:42,211] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:53:42,388] {logging_mixin.py:103} INFO - [2021-02-10 11:53:42,388] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:42,389] {logging_mixin.py:103} INFO - [2021-02-10 11:53:42,389] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:53:42,391] {logging_mixin.py:103} INFO - [2021-02-10 11:53:42,391] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:53:42,541] {logging_mixin.py:103} INFO - [2021-02-10 11:53:42,541] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:42,544] {logging_mixin.py:103} INFO - [2021-02-10 11:53:42,543] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:53:42,715] {logging_mixin.py:103} INFO - [2021-02-10 11:53:42,715] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:42,717] {logging_mixin.py:103} INFO - [2021-02-10 11:53:42,717] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:53:42,866] {logging_mixin.py:103} INFO - [2021-02-10 11:53:42,866] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:42,866] {logging_mixin.py:103} INFO - [2021-02-10 11:53:42,866] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:53:42,885] {logging_mixin.py:103} INFO - [2021-02-10 11:53:42,885] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:53:42,888] {logging_mixin.py:103} INFO - [2021-02-10 11:53:42,888] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:53:43,421] {logging_mixin.py:103} INFO - [2021-02-10 11:53:43,420] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:43,423] {logging_mixin.py:103} INFO - [2021-02-10 11:53:43,422] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:53:43,575] {logging_mixin.py:103} INFO - [2021-02-10 11:53:43,575] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:43,576] {logging_mixin.py:103} INFO - [2021-02-10 11:53:43,576] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:53:43,578] {logging_mixin.py:103} INFO - [2021-02-10 11:53:43,578] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:53:43,758] {logging_mixin.py:103} INFO - [2021-02-10 11:53:43,758] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:43,760] {logging_mixin.py:103} INFO - [2021-02-10 11:53:43,760] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:53:43,905] {logging_mixin.py:103} INFO - [2021-02-10 11:53:43,905] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:43,908] {logging_mixin.py:103} INFO - [2021-02-10 11:53:43,908] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:53:44,185] {logging_mixin.py:103} INFO - [2021-02-10 11:53:44,184] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:44,187] {logging_mixin.py:103} INFO - [2021-02-10 11:53:44,187] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:53:44,352] {logging_mixin.py:103} INFO - [2021-02-10 11:53:44,352] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:44,353] {logging_mixin.py:103} INFO - [2021-02-10 11:53:44,353] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:53:44,357] {logging_mixin.py:103} INFO - [2021-02-10 11:53:44,357] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:53:44,505] {logging_mixin.py:103} INFO - [2021-02-10 11:53:44,505] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:44,518] {logging_mixin.py:103} INFO - [2021-02-10 11:53:44,518] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:53:44,703] {logging_mixin.py:103} INFO - [2021-02-10 11:53:44,703] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:44,706] {logging_mixin.py:103} INFO - [2021-02-10 11:53:44,706] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:53:44,861] {logging_mixin.py:103} INFO - [2021-02-10 11:53:44,861] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:44,861] {logging_mixin.py:103} INFO - [2021-02-10 11:53:44,861] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:53:44,865] {logging_mixin.py:103} INFO - [2021-02-10 11:53:44,865] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:53:45,014] {logging_mixin.py:103} INFO - [2021-02-10 11:53:45,013] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:45,016] {logging_mixin.py:103} INFO - [2021-02-10 11:53:45,016] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:53:45,185] {logging_mixin.py:103} INFO - [2021-02-10 11:53:45,185] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:45,186] {logging_mixin.py:103} INFO - [2021-02-10 11:53:45,185] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:53:45,189] {logging_mixin.py:103} INFO - [2021-02-10 11:53:45,189] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:53:45,435] {logging_mixin.py:103} INFO - [2021-02-10 11:53:45,435] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:45,437] {logging_mixin.py:103} INFO - [2021-02-10 11:53:45,437] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:53:45,637] {logging_mixin.py:103} INFO - [2021-02-10 11:53:45,636] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:45,683] {logging_mixin.py:103} INFO - [2021-02-10 11:53:45,682] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:53:45,820] {logging_mixin.py:103} INFO - [2021-02-10 11:53:45,820] {cursor.py:560} INFO - query execution done
[2021-02-10 11:53:52,528] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:54:24,810] {scheduler_job.py:181} INFO - Started process (PID=71613) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:54:24,811] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:54:24,812] {logging_mixin.py:103} INFO - [2021-02-10 11:54:24,812] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:54:26,472] {logging_mixin.py:103} INFO - [2021-02-10 11:54:26,472] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:54:26,767] {logging_mixin.py:103} INFO - [2021-02-10 11:54:26,767] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:54:27,101] {logging_mixin.py:103} INFO - [2021-02-10 11:54:27,101] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:54:27,102] {logging_mixin.py:103} INFO - [2021-02-10 11:54:27,102] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:54:27,102] {logging_mixin.py:103} INFO - [2021-02-10 11:54:27,102] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:54:28,283] {logging_mixin.py:103} INFO - [2021-02-10 11:54:28,282] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:54:28,481] {logging_mixin.py:103} INFO - [2021-02-10 11:54:28,481] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:28,483] {logging_mixin.py:103} INFO - [2021-02-10 11:54:28,483] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:54:28,623] {logging_mixin.py:103} INFO - [2021-02-10 11:54:28,623] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:28,624] {logging_mixin.py:103} INFO - [2021-02-10 11:54:28,623] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:54:28,759] {logging_mixin.py:103} INFO - [2021-02-10 11:54:28,758] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:28,761] {logging_mixin.py:103} INFO - [2021-02-10 11:54:28,761] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:54:29,036] {logging_mixin.py:103} INFO - [2021-02-10 11:54:29,036] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:29,256] {logging_mixin.py:103} INFO - [2021-02-10 11:54:29,256] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:54:29,837] {logging_mixin.py:103} INFO - [2021-02-10 11:54:29,837] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:29,885] {logging_mixin.py:103} INFO - [2021-02-10 11:54:29,885] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:54:29,885] {logging_mixin.py:103} INFO - [2021-02-10 11:54:29,885] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:54:32,587] {logging_mixin.py:103} INFO - [2021-02-10 11:54:32,587] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:32,591] {logging_mixin.py:103} INFO - [2021-02-10 11:54:32,591] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:54:32,601] {logging_mixin.py:103} INFO - [2021-02-10 11:54:32,601] {data_context.py:1281} INFO - Setting run_name to: 20210210T105432.601485Z
[2021-02-10 11:54:32,602] {logging_mixin.py:103} INFO - [2021-02-10 11:54:32,602] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:54:32,612] {logging_mixin.py:103} INFO - [2021-02-10 11:54:32,612] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:54:32,797] {logging_mixin.py:103} INFO - [2021-02-10 11:54:32,797] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:32,800] {logging_mixin.py:103} INFO - [2021-02-10 11:54:32,799] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:54:32,996] {logging_mixin.py:103} INFO - [2021-02-10 11:54:32,996] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:32,997] {logging_mixin.py:103} INFO - [2021-02-10 11:54:32,997] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:54:32,999] {logging_mixin.py:103} INFO - [2021-02-10 11:54:32,999] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:54:33,195] {logging_mixin.py:103} INFO - [2021-02-10 11:54:33,195] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:33,198] {logging_mixin.py:103} INFO - [2021-02-10 11:54:33,198] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:54:33,358] {logging_mixin.py:103} INFO - [2021-02-10 11:54:33,358] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:33,361] {logging_mixin.py:103} INFO - [2021-02-10 11:54:33,360] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:54:33,519] {logging_mixin.py:103} INFO - [2021-02-10 11:54:33,519] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:33,520] {logging_mixin.py:103} INFO - [2021-02-10 11:54:33,520] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:54:33,538] {logging_mixin.py:103} INFO - [2021-02-10 11:54:33,538] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:54:33,540] {logging_mixin.py:103} INFO - [2021-02-10 11:54:33,540] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:54:33,839] {logging_mixin.py:103} INFO - [2021-02-10 11:54:33,838] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:33,841] {logging_mixin.py:103} INFO - [2021-02-10 11:54:33,840] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:54:34,057] {logging_mixin.py:103} INFO - [2021-02-10 11:54:34,056] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:34,057] {logging_mixin.py:103} INFO - [2021-02-10 11:54:34,057] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:54:34,060] {logging_mixin.py:103} INFO - [2021-02-10 11:54:34,060] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:54:34,330] {logging_mixin.py:103} INFO - [2021-02-10 11:54:34,329] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:34,331] {logging_mixin.py:103} INFO - [2021-02-10 11:54:34,331] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:54:34,715] {logging_mixin.py:103} INFO - [2021-02-10 11:54:34,715] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:34,719] {logging_mixin.py:103} INFO - [2021-02-10 11:54:34,719] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:54:34,916] {logging_mixin.py:103} INFO - [2021-02-10 11:54:34,916] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:34,919] {logging_mixin.py:103} INFO - [2021-02-10 11:54:34,919] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:54:35,116] {logging_mixin.py:103} INFO - [2021-02-10 11:54:35,115] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:35,116] {logging_mixin.py:103} INFO - [2021-02-10 11:54:35,116] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:54:35,120] {logging_mixin.py:103} INFO - [2021-02-10 11:54:35,120] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:54:35,342] {logging_mixin.py:103} INFO - [2021-02-10 11:54:35,342] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:35,358] {logging_mixin.py:103} INFO - [2021-02-10 11:54:35,358] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:54:35,515] {logging_mixin.py:103} INFO - [2021-02-10 11:54:35,515] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:35,517] {logging_mixin.py:103} INFO - [2021-02-10 11:54:35,517] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:54:35,944] {logging_mixin.py:103} INFO - [2021-02-10 11:54:35,943] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:35,944] {logging_mixin.py:103} INFO - [2021-02-10 11:54:35,944] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:54:35,948] {logging_mixin.py:103} INFO - [2021-02-10 11:54:35,948] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:54:36,141] {logging_mixin.py:103} INFO - [2021-02-10 11:54:36,141] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:36,143] {logging_mixin.py:103} INFO - [2021-02-10 11:54:36,143] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:54:36,327] {logging_mixin.py:103} INFO - [2021-02-10 11:54:36,327] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:36,328] {logging_mixin.py:103} INFO - [2021-02-10 11:54:36,328] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:54:36,332] {logging_mixin.py:103} INFO - [2021-02-10 11:54:36,332] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:54:36,479] {logging_mixin.py:103} INFO - [2021-02-10 11:54:36,479] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:36,481] {logging_mixin.py:103} INFO - [2021-02-10 11:54:36,481] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:54:36,639] {logging_mixin.py:103} INFO - [2021-02-10 11:54:36,639] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:36,688] {logging_mixin.py:103} INFO - [2021-02-10 11:54:36,688] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:54:36,837] {logging_mixin.py:103} INFO - [2021-02-10 11:54:36,837] {cursor.py:560} INFO - query execution done
[2021-02-10 11:54:43,735] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:55:08,889] {scheduler_job.py:181} INFO - Started process (PID=71670) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:55:08,890] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:55:08,890] {logging_mixin.py:103} INFO - [2021-02-10 11:55:08,890] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:55:10,540] {logging_mixin.py:103} INFO - [2021-02-10 11:55:10,540] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:55:10,850] {logging_mixin.py:103} INFO - [2021-02-10 11:55:10,849] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:55:11,170] {logging_mixin.py:103} INFO - [2021-02-10 11:55:11,170] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:55:11,170] {logging_mixin.py:103} INFO - [2021-02-10 11:55:11,170] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:55:11,170] {logging_mixin.py:103} INFO - [2021-02-10 11:55:11,170] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:55:12,502] {logging_mixin.py:103} INFO - [2021-02-10 11:55:12,502] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:55:12,681] {logging_mixin.py:103} INFO - [2021-02-10 11:55:12,681] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:12,683] {logging_mixin.py:103} INFO - [2021-02-10 11:55:12,683] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:55:12,866] {logging_mixin.py:103} INFO - [2021-02-10 11:55:12,866] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:12,866] {logging_mixin.py:103} INFO - [2021-02-10 11:55:12,866] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:55:13,089] {logging_mixin.py:103} INFO - [2021-02-10 11:55:13,089] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:13,090] {logging_mixin.py:103} INFO - [2021-02-10 11:55:13,090] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:55:13,333] {logging_mixin.py:103} INFO - [2021-02-10 11:55:13,333] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:13,548] {logging_mixin.py:103} INFO - [2021-02-10 11:55:13,547] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:55:13,821] {logging_mixin.py:103} INFO - [2021-02-10 11:55:13,821] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:13,871] {logging_mixin.py:103} INFO - [2021-02-10 11:55:13,871] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:55:13,871] {logging_mixin.py:103} INFO - [2021-02-10 11:55:13,871] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:55:16,188] {logging_mixin.py:103} INFO - [2021-02-10 11:55:16,188] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:16,192] {logging_mixin.py:103} INFO - [2021-02-10 11:55:16,192] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:55:16,203] {logging_mixin.py:103} INFO - [2021-02-10 11:55:16,203] {data_context.py:1281} INFO - Setting run_name to: 20210210T105516.203774Z
[2021-02-10 11:55:16,205] {logging_mixin.py:103} INFO - [2021-02-10 11:55:16,205] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:55:16,216] {logging_mixin.py:103} INFO - [2021-02-10 11:55:16,216] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:55:16,819] {logging_mixin.py:103} INFO - [2021-02-10 11:55:16,819] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:16,821] {logging_mixin.py:103} INFO - [2021-02-10 11:55:16,821] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:55:17,246] {logging_mixin.py:103} INFO - [2021-02-10 11:55:17,246] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:17,247] {logging_mixin.py:103} INFO - [2021-02-10 11:55:17,246] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:55:17,249] {logging_mixin.py:103} INFO - [2021-02-10 11:55:17,248] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:55:17,422] {logging_mixin.py:103} INFO - [2021-02-10 11:55:17,422] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:17,426] {logging_mixin.py:103} INFO - [2021-02-10 11:55:17,426] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:55:17,590] {logging_mixin.py:103} INFO - [2021-02-10 11:55:17,589] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:17,592] {logging_mixin.py:103} INFO - [2021-02-10 11:55:17,592] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:55:18,034] {logging_mixin.py:103} INFO - [2021-02-10 11:55:18,034] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:18,035] {logging_mixin.py:103} INFO - [2021-02-10 11:55:18,035] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:55:18,047] {logging_mixin.py:103} INFO - [2021-02-10 11:55:18,046] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:55:18,049] {logging_mixin.py:103} INFO - [2021-02-10 11:55:18,049] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:55:18,247] {logging_mixin.py:103} INFO - [2021-02-10 11:55:18,247] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:18,249] {logging_mixin.py:103} INFO - [2021-02-10 11:55:18,249] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:55:18,497] {logging_mixin.py:103} INFO - [2021-02-10 11:55:18,497] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:18,498] {logging_mixin.py:103} INFO - [2021-02-10 11:55:18,497] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:55:18,500] {logging_mixin.py:103} INFO - [2021-02-10 11:55:18,500] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:55:18,679] {logging_mixin.py:103} INFO - [2021-02-10 11:55:18,679] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:18,680] {logging_mixin.py:103} INFO - [2021-02-10 11:55:18,680] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:55:18,882] {logging_mixin.py:103} INFO - [2021-02-10 11:55:18,882] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:18,885] {logging_mixin.py:103} INFO - [2021-02-10 11:55:18,885] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:55:19,162] {logging_mixin.py:103} INFO - [2021-02-10 11:55:19,162] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:19,164] {logging_mixin.py:103} INFO - [2021-02-10 11:55:19,164] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:55:19,318] {logging_mixin.py:103} INFO - [2021-02-10 11:55:19,318] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:19,319] {logging_mixin.py:103} INFO - [2021-02-10 11:55:19,318] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:55:19,323] {logging_mixin.py:103} INFO - [2021-02-10 11:55:19,323] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:55:19,511] {logging_mixin.py:103} INFO - [2021-02-10 11:55:19,511] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:19,518] {logging_mixin.py:103} INFO - [2021-02-10 11:55:19,518] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:55:19,721] {logging_mixin.py:103} INFO - [2021-02-10 11:55:19,720] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:19,723] {logging_mixin.py:103} INFO - [2021-02-10 11:55:19,722] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:55:19,980] {logging_mixin.py:103} INFO - [2021-02-10 11:55:19,980] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:19,981] {logging_mixin.py:103} INFO - [2021-02-10 11:55:19,981] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:55:19,985] {logging_mixin.py:103} INFO - [2021-02-10 11:55:19,985] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:55:20,493] {logging_mixin.py:103} INFO - [2021-02-10 11:55:20,493] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:20,495] {logging_mixin.py:103} INFO - [2021-02-10 11:55:20,495] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:55:20,643] {logging_mixin.py:103} INFO - [2021-02-10 11:55:20,643] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:20,643] {logging_mixin.py:103} INFO - [2021-02-10 11:55:20,643] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:55:20,648] {logging_mixin.py:103} INFO - [2021-02-10 11:55:20,648] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:55:20,807] {logging_mixin.py:103} INFO - [2021-02-10 11:55:20,806] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:20,809] {logging_mixin.py:103} INFO - [2021-02-10 11:55:20,809] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:55:21,104] {logging_mixin.py:103} INFO - [2021-02-10 11:55:21,104] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:21,115] {logging_mixin.py:103} INFO - [2021-02-10 11:55:21,115] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:55:21,270] {logging_mixin.py:103} INFO - [2021-02-10 11:55:21,269] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:27,835] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:55:52,923] {scheduler_job.py:181} INFO - Started process (PID=71731) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:55:52,923] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:55:52,923] {logging_mixin.py:103} INFO - [2021-02-10 11:55:52,923] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:55:54,524] {logging_mixin.py:103} INFO - [2021-02-10 11:55:54,524] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:55:54,807] {logging_mixin.py:103} INFO - [2021-02-10 11:55:54,807] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:55:55,131] {logging_mixin.py:103} INFO - [2021-02-10 11:55:55,130] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:55:55,131] {logging_mixin.py:103} INFO - [2021-02-10 11:55:55,131] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:55:55,131] {logging_mixin.py:103} INFO - [2021-02-10 11:55:55,131] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:55:56,441] {logging_mixin.py:103} INFO - [2021-02-10 11:55:56,441] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:55:56,566] {logging_mixin.py:103} INFO - [2021-02-10 11:55:56,566] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:56,568] {logging_mixin.py:103} INFO - [2021-02-10 11:55:56,568] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:55:56,739] {logging_mixin.py:103} INFO - [2021-02-10 11:55:56,738] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:56,739] {logging_mixin.py:103} INFO - [2021-02-10 11:55:56,739] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:55:56,883] {logging_mixin.py:103} INFO - [2021-02-10 11:55:56,883] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:56,885] {logging_mixin.py:103} INFO - [2021-02-10 11:55:56,885] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:55:57,103] {logging_mixin.py:103} INFO - [2021-02-10 11:55:57,103] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:57,315] {logging_mixin.py:103} INFO - [2021-02-10 11:55:57,315] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:55:57,462] {logging_mixin.py:103} INFO - [2021-02-10 11:55:57,462] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:57,501] {logging_mixin.py:103} INFO - [2021-02-10 11:55:57,500] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:55:57,501] {logging_mixin.py:103} INFO - [2021-02-10 11:55:57,501] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:55:58,895] {logging_mixin.py:103} INFO - [2021-02-10 11:55:58,895] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:58,899] {logging_mixin.py:103} INFO - [2021-02-10 11:55:58,899] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:55:58,909] {logging_mixin.py:103} INFO - [2021-02-10 11:55:58,909] {data_context.py:1281} INFO - Setting run_name to: 20210210T105558.909564Z
[2021-02-10 11:55:58,910] {logging_mixin.py:103} INFO - [2021-02-10 11:55:58,910] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:55:58,921] {logging_mixin.py:103} INFO - [2021-02-10 11:55:58,921] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:55:59,094] {logging_mixin.py:103} INFO - [2021-02-10 11:55:59,094] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:59,096] {logging_mixin.py:103} INFO - [2021-02-10 11:55:59,096] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:55:59,340] {logging_mixin.py:103} INFO - [2021-02-10 11:55:59,340] {cursor.py:560} INFO - query execution done
[2021-02-10 11:55:59,341] {logging_mixin.py:103} INFO - [2021-02-10 11:55:59,341] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:55:59,343] {logging_mixin.py:103} INFO - [2021-02-10 11:55:59,343] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:56:00,117] {logging_mixin.py:103} INFO - [2021-02-10 11:56:00,117] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:00,120] {logging_mixin.py:103} INFO - [2021-02-10 11:56:00,120] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:56:00,295] {logging_mixin.py:103} INFO - [2021-02-10 11:56:00,295] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:00,298] {logging_mixin.py:103} INFO - [2021-02-10 11:56:00,297] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:56:00,429] {logging_mixin.py:103} INFO - [2021-02-10 11:56:00,429] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:00,430] {logging_mixin.py:103} INFO - [2021-02-10 11:56:00,430] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:56:00,442] {logging_mixin.py:103} INFO - [2021-02-10 11:56:00,442] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:56:00,444] {logging_mixin.py:103} INFO - [2021-02-10 11:56:00,444] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:56:00,700] {logging_mixin.py:103} INFO - [2021-02-10 11:56:00,700] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:00,702] {logging_mixin.py:103} INFO - [2021-02-10 11:56:00,702] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:56:00,930] {logging_mixin.py:103} INFO - [2021-02-10 11:56:00,930] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:00,930] {logging_mixin.py:103} INFO - [2021-02-10 11:56:00,930] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:56:00,933] {logging_mixin.py:103} INFO - [2021-02-10 11:56:00,933] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:56:01,096] {logging_mixin.py:103} INFO - [2021-02-10 11:56:01,096] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:01,098] {logging_mixin.py:103} INFO - [2021-02-10 11:56:01,098] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:56:01,275] {logging_mixin.py:103} INFO - [2021-02-10 11:56:01,275] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:01,278] {logging_mixin.py:103} INFO - [2021-02-10 11:56:01,278] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:56:02,270] {logging_mixin.py:103} INFO - [2021-02-10 11:56:02,270] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:02,273] {logging_mixin.py:103} INFO - [2021-02-10 11:56:02,273] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:56:02,479] {logging_mixin.py:103} INFO - [2021-02-10 11:56:02,478] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:02,479] {logging_mixin.py:103} INFO - [2021-02-10 11:56:02,479] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:56:02,483] {logging_mixin.py:103} INFO - [2021-02-10 11:56:02,483] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:56:02,652] {logging_mixin.py:103} INFO - [2021-02-10 11:56:02,651] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:02,658] {logging_mixin.py:103} INFO - [2021-02-10 11:56:02,658] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:56:02,836] {logging_mixin.py:103} INFO - [2021-02-10 11:56:02,836] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:02,839] {logging_mixin.py:103} INFO - [2021-02-10 11:56:02,838] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:56:03,006] {logging_mixin.py:103} INFO - [2021-02-10 11:56:03,006] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:03,007] {logging_mixin.py:103} INFO - [2021-02-10 11:56:03,006] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:56:03,011] {logging_mixin.py:103} INFO - [2021-02-10 11:56:03,011] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:56:03,264] {logging_mixin.py:103} INFO - [2021-02-10 11:56:03,263] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:03,266] {logging_mixin.py:103} INFO - [2021-02-10 11:56:03,265] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:56:03,520] {logging_mixin.py:103} INFO - [2021-02-10 11:56:03,519] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:03,520] {logging_mixin.py:103} INFO - [2021-02-10 11:56:03,520] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:56:03,523] {logging_mixin.py:103} INFO - [2021-02-10 11:56:03,523] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:56:03,684] {logging_mixin.py:103} INFO - [2021-02-10 11:56:03,683] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:03,686] {logging_mixin.py:103} INFO - [2021-02-10 11:56:03,686] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:56:03,883] {logging_mixin.py:103} INFO - [2021-02-10 11:56:03,883] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:03,894] {logging_mixin.py:103} INFO - [2021-02-10 11:56:03,894] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:56:04,042] {logging_mixin.py:103} INFO - [2021-02-10 11:56:04,042] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:09,370] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:56:36,568] {scheduler_job.py:181} INFO - Started process (PID=71789) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:56:36,569] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:56:36,569] {logging_mixin.py:103} INFO - [2021-02-10 11:56:36,569] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:56:38,741] {logging_mixin.py:103} INFO - [2021-02-10 11:56:38,741] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:56:39,019] {logging_mixin.py:103} INFO - [2021-02-10 11:56:39,019] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:56:39,423] {logging_mixin.py:103} INFO - [2021-02-10 11:56:39,423] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:56:39,423] {logging_mixin.py:103} INFO - [2021-02-10 11:56:39,423] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:56:39,423] {logging_mixin.py:103} INFO - [2021-02-10 11:56:39,423] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:56:40,691] {logging_mixin.py:103} INFO - [2021-02-10 11:56:40,691] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:56:40,835] {logging_mixin.py:103} INFO - [2021-02-10 11:56:40,835] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:40,837] {logging_mixin.py:103} INFO - [2021-02-10 11:56:40,837] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:56:41,050] {logging_mixin.py:103} INFO - [2021-02-10 11:56:41,049] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:41,050] {logging_mixin.py:103} INFO - [2021-02-10 11:56:41,050] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:56:41,191] {logging_mixin.py:103} INFO - [2021-02-10 11:56:41,190] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:41,193] {logging_mixin.py:103} INFO - [2021-02-10 11:56:41,193] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:56:41,374] {logging_mixin.py:103} INFO - [2021-02-10 11:56:41,374] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:41,813] {logging_mixin.py:103} INFO - [2021-02-10 11:56:41,813] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:56:42,042] {logging_mixin.py:103} INFO - [2021-02-10 11:56:42,042] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:42,099] {logging_mixin.py:103} INFO - [2021-02-10 11:56:42,098] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:56:42,099] {logging_mixin.py:103} INFO - [2021-02-10 11:56:42,099] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:56:44,355] {logging_mixin.py:103} INFO - [2021-02-10 11:56:44,355] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:44,359] {logging_mixin.py:103} INFO - [2021-02-10 11:56:44,358] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:56:44,369] {logging_mixin.py:103} INFO - [2021-02-10 11:56:44,369] {data_context.py:1281} INFO - Setting run_name to: 20210210T105644.369471Z
[2021-02-10 11:56:44,370] {logging_mixin.py:103} INFO - [2021-02-10 11:56:44,370] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:56:44,381] {logging_mixin.py:103} INFO - [2021-02-10 11:56:44,381] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:56:44,969] {logging_mixin.py:103} INFO - [2021-02-10 11:56:44,969] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:44,971] {logging_mixin.py:103} INFO - [2021-02-10 11:56:44,971] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:56:45,276] {logging_mixin.py:103} INFO - [2021-02-10 11:56:45,276] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:45,277] {logging_mixin.py:103} INFO - [2021-02-10 11:56:45,277] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:56:45,279] {logging_mixin.py:103} INFO - [2021-02-10 11:56:45,279] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:56:45,504] {logging_mixin.py:103} INFO - [2021-02-10 11:56:45,503] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:45,506] {logging_mixin.py:103} INFO - [2021-02-10 11:56:45,506] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:56:45,816] {logging_mixin.py:103} INFO - [2021-02-10 11:56:45,816] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:45,818] {logging_mixin.py:103} INFO - [2021-02-10 11:56:45,818] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:56:45,973] {logging_mixin.py:103} INFO - [2021-02-10 11:56:45,973] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:45,974] {logging_mixin.py:103} INFO - [2021-02-10 11:56:45,974] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:56:45,985] {logging_mixin.py:103} INFO - [2021-02-10 11:56:45,985] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:56:45,987] {logging_mixin.py:103} INFO - [2021-02-10 11:56:45,987] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:56:46,141] {logging_mixin.py:103} INFO - [2021-02-10 11:56:46,140] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:46,142] {logging_mixin.py:103} INFO - [2021-02-10 11:56:46,142] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:56:46,323] {logging_mixin.py:103} INFO - [2021-02-10 11:56:46,323] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:46,323] {logging_mixin.py:103} INFO - [2021-02-10 11:56:46,323] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:56:46,326] {logging_mixin.py:103} INFO - [2021-02-10 11:56:46,326] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:56:46,522] {logging_mixin.py:103} INFO - [2021-02-10 11:56:46,522] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:46,524] {logging_mixin.py:103} INFO - [2021-02-10 11:56:46,524] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:56:46,674] {logging_mixin.py:103} INFO - [2021-02-10 11:56:46,674] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:46,678] {logging_mixin.py:103} INFO - [2021-02-10 11:56:46,678] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:56:46,914] {logging_mixin.py:103} INFO - [2021-02-10 11:56:46,914] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:46,917] {logging_mixin.py:103} INFO - [2021-02-10 11:56:46,917] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:56:47,097] {logging_mixin.py:103} INFO - [2021-02-10 11:56:47,096] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:47,097] {logging_mixin.py:103} INFO - [2021-02-10 11:56:47,097] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:56:47,101] {logging_mixin.py:103} INFO - [2021-02-10 11:56:47,101] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:56:47,262] {logging_mixin.py:103} INFO - [2021-02-10 11:56:47,261] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:47,269] {logging_mixin.py:103} INFO - [2021-02-10 11:56:47,269] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:56:47,450] {logging_mixin.py:103} INFO - [2021-02-10 11:56:47,450] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:47,452] {logging_mixin.py:103} INFO - [2021-02-10 11:56:47,452] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:56:47,619] {logging_mixin.py:103} INFO - [2021-02-10 11:56:47,618] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:47,619] {logging_mixin.py:103} INFO - [2021-02-10 11:56:47,619] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:56:47,628] {logging_mixin.py:103} INFO - [2021-02-10 11:56:47,628] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:56:47,842] {logging_mixin.py:103} INFO - [2021-02-10 11:56:47,842] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:47,844] {logging_mixin.py:103} INFO - [2021-02-10 11:56:47,844] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:56:48,032] {logging_mixin.py:103} INFO - [2021-02-10 11:56:48,032] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:48,032] {logging_mixin.py:103} INFO - [2021-02-10 11:56:48,032] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:56:48,036] {logging_mixin.py:103} INFO - [2021-02-10 11:56:48,036] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:56:48,245] {logging_mixin.py:103} INFO - [2021-02-10 11:56:48,245] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:48,247] {logging_mixin.py:103} INFO - [2021-02-10 11:56:48,247] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:56:48,401] {logging_mixin.py:103} INFO - [2021-02-10 11:56:48,400] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:48,413] {logging_mixin.py:103} INFO - [2021-02-10 11:56:48,413] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:56:48,585] {logging_mixin.py:103} INFO - [2021-02-10 11:56:48,584] {cursor.py:560} INFO - query execution done
[2021-02-10 11:56:56,010] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 11:57:33,233] {scheduler_job.py:181} INFO - Started process (PID=71884) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:57:33,234] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 11:57:33,234] {logging_mixin.py:103} INFO - [2021-02-10 11:57:33,234] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 11:57:35,342] {logging_mixin.py:103} INFO - [2021-02-10 11:57:35,342] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 11:57:35,668] {logging_mixin.py:103} INFO - [2021-02-10 11:57:35,668] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 11:57:36,035] {logging_mixin.py:103} INFO - [2021-02-10 11:57:36,035] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 11:57:36,035] {logging_mixin.py:103} INFO - [2021-02-10 11:57:36,035] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 11:57:36,035] {logging_mixin.py:103} INFO - [2021-02-10 11:57:36,035] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 11:57:37,499] {logging_mixin.py:103} INFO - [2021-02-10 11:57:37,499] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:57:37,637] {logging_mixin.py:103} INFO - [2021-02-10 11:57:37,637] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:37,639] {logging_mixin.py:103} INFO - [2021-02-10 11:57:37,639] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 11:57:37,862] {logging_mixin.py:103} INFO - [2021-02-10 11:57:37,861] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:37,862] {logging_mixin.py:103} INFO - [2021-02-10 11:57:37,862] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:57:38,056] {logging_mixin.py:103} INFO - [2021-02-10 11:57:38,056] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:38,059] {logging_mixin.py:103} INFO - [2021-02-10 11:57:38,059] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:57:38,220] {logging_mixin.py:103} INFO - [2021-02-10 11:57:38,220] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:38,488] {logging_mixin.py:103} INFO - [2021-02-10 11:57:38,488] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 11:57:38,672] {logging_mixin.py:103} INFO - [2021-02-10 11:57:38,672] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:38,715] {logging_mixin.py:103} INFO - [2021-02-10 11:57:38,715] {json_result.py:116} INFO - fetching data done
[2021-02-10 11:57:38,715] {logging_mixin.py:103} INFO - [2021-02-10 11:57:38,715] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 11:57:41,547] {logging_mixin.py:103} INFO - [2021-02-10 11:57:41,546] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:41,550] {logging_mixin.py:103} INFO - [2021-02-10 11:57:41,550] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:57:41,562] {logging_mixin.py:103} INFO - [2021-02-10 11:57:41,562] {data_context.py:1281} INFO - Setting run_name to: 20210210T105741.562059Z
[2021-02-10 11:57:41,564] {logging_mixin.py:103} INFO - [2021-02-10 11:57:41,563] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 11:57:41,575] {logging_mixin.py:103} INFO - [2021-02-10 11:57:41,575] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:57:41,780] {logging_mixin.py:103} INFO - [2021-02-10 11:57:41,780] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:41,783] {logging_mixin.py:103} INFO - [2021-02-10 11:57:41,782] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 11:57:42,016] {logging_mixin.py:103} INFO - [2021-02-10 11:57:42,016] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:42,016] {logging_mixin.py:103} INFO - [2021-02-10 11:57:42,016] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:57:42,018] {logging_mixin.py:103} INFO - [2021-02-10 11:57:42,018] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:57:42,723] {logging_mixin.py:103} INFO - [2021-02-10 11:57:42,723] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:42,725] {logging_mixin.py:103} INFO - [2021-02-10 11:57:42,725] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 11:57:42,923] {logging_mixin.py:103} INFO - [2021-02-10 11:57:42,922] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:42,925] {logging_mixin.py:103} INFO - [2021-02-10 11:57:42,925] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 11:57:43,142] {logging_mixin.py:103} INFO - [2021-02-10 11:57:43,142] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:43,143] {logging_mixin.py:103} INFO - [2021-02-10 11:57:43,143] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:57:43,161] {logging_mixin.py:103} INFO - [2021-02-10 11:57:43,161] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 11:57:43,165] {logging_mixin.py:103} INFO - [2021-02-10 11:57:43,165] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:57:43,387] {logging_mixin.py:103} INFO - [2021-02-10 11:57:43,387] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:43,389] {logging_mixin.py:103} INFO - [2021-02-10 11:57:43,389] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 11:57:43,585] {logging_mixin.py:103} INFO - [2021-02-10 11:57:43,585] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:43,585] {logging_mixin.py:103} INFO - [2021-02-10 11:57:43,585] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:57:43,586] {logging_mixin.py:103} INFO - [2021-02-10 11:57:43,586] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 11:57:44,276] {logging_mixin.py:103} INFO - [2021-02-10 11:57:44,276] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:44,277] {logging_mixin.py:103} INFO - [2021-02-10 11:57:44,277] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:57:44,512] {logging_mixin.py:103} INFO - [2021-02-10 11:57:44,512] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:44,516] {logging_mixin.py:103} INFO - [2021-02-10 11:57:44,516] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 11:57:44,667] {logging_mixin.py:103} INFO - [2021-02-10 11:57:44,667] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:44,669] {logging_mixin.py:103} INFO - [2021-02-10 11:57:44,669] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 11:57:44,849] {logging_mixin.py:103} INFO - [2021-02-10 11:57:44,849] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:44,850] {logging_mixin.py:103} INFO - [2021-02-10 11:57:44,849] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:57:44,852] {logging_mixin.py:103} INFO - [2021-02-10 11:57:44,852] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 11:57:45,027] {logging_mixin.py:103} INFO - [2021-02-10 11:57:45,027] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:45,031] {logging_mixin.py:103} INFO - [2021-02-10 11:57:45,031] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 11:57:45,213] {logging_mixin.py:103} INFO - [2021-02-10 11:57:45,213] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:45,218] {logging_mixin.py:103} INFO - [2021-02-10 11:57:45,218] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 11:57:45,433] {logging_mixin.py:103} INFO - [2021-02-10 11:57:45,432] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:45,433] {logging_mixin.py:103} INFO - [2021-02-10 11:57:45,433] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:57:45,437] {logging_mixin.py:103} INFO - [2021-02-10 11:57:45,436] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 11:57:45,654] {logging_mixin.py:103} INFO - [2021-02-10 11:57:45,654] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:45,656] {logging_mixin.py:103} INFO - [2021-02-10 11:57:45,656] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 11:57:45,843] {logging_mixin.py:103} INFO - [2021-02-10 11:57:45,843] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:45,843] {logging_mixin.py:103} INFO - [2021-02-10 11:57:45,843] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 11:57:45,846] {logging_mixin.py:103} INFO - [2021-02-10 11:57:45,846] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 11:57:46,038] {logging_mixin.py:103} INFO - [2021-02-10 11:57:46,038] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:46,041] {logging_mixin.py:103} INFO - [2021-02-10 11:57:46,040] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 11:57:46,270] {logging_mixin.py:103} INFO - [2021-02-10 11:57:46,270] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:46,299] {logging_mixin.py:103} INFO - [2021-02-10 11:57:46,299] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 11:57:46,429] {logging_mixin.py:103} INFO - [2021-02-10 11:57:46,429] {cursor.py:560} INFO - query execution done
[2021-02-10 11:57:55,134] {logging_mixin.py:103} INFO - Validation failed!
[2021-02-10 12:00:33,773] {scheduler_job.py:181} INFO - Started process (PID=695) to work on /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 12:00:33,774] {scheduler_job.py:629} INFO - Processing file /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py for tasks to queue
[2021-02-10 12:00:33,775] {logging_mixin.py:103} INFO - [2021-02-10 12:00:33,775] {dagbag.py:440} INFO - Filling up the DagBag from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 12:00:35,953] {logging_mixin.py:103} INFO - [2021-02-10 12:00:35,953] {arrow_result.pyx:0} INFO - Failed to import optional packages, pyarrow
[2021-02-10 12:00:36,410] {logging_mixin.py:103} INFO - [2021-02-10 12:00:36,410] {base.py:960} WARNING - You appear to be using a legacy capability with the latest config version (3.0).
    Your data context with this configuration version uses validation_operators, which are being deprecated.  Please update your configuration to be compatible with the version number 3.
[2021-02-10 12:00:36,916] {logging_mixin.py:103} INFO - [2021-02-10 12:00:36,915] {connection.py:215} INFO - Snowflake Connector for Python Version: 2.3.9, Python Version: 3.8.6, Platform: macOS-10.16-x86_64-i386-64bit
[2021-02-10 12:00:36,916] {logging_mixin.py:103} INFO - [2021-02-10 12:00:36,916] {connection.py:768} INFO - This connection is in OCSP Fail Open Mode. TLS Certificates would be checked for validity and revocation status. Any other Certificate Revocation related exceptions or OCSP Responder failures would be disregarded in favor of connectivity.
[2021-02-10 12:00:36,916] {logging_mixin.py:103} INFO - [2021-02-10 12:00:36,916] {connection.py:784} INFO - Setting use_openssl_only mode to False
[2021-02-10 12:00:39,083] {logging_mixin.py:103} INFO - [2021-02-10 12:00:39,083] {cursor.py:537} INFO - query: [SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 12:00:39,696] {logging_mixin.py:103} INFO - [2021-02-10 12:00:39,696] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:39,697] {logging_mixin.py:103} INFO - [2021-02-10 12:00:39,697] {cursor.py:537} INFO - query: [SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1]
[2021-02-10 12:00:40,481] {logging_mixin.py:103} INFO - [2021-02-10 12:00:40,481] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:40,482] {logging_mixin.py:103} INFO - [2021-02-10 12:00:40,482] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 12:00:40,698] {logging_mixin.py:103} INFO - [2021-02-10 12:00:40,698] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:40,700] {logging_mixin.py:103} INFO - [2021-02-10 12:00:40,700] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 12:00:41,088] {logging_mixin.py:103} INFO - [2021-02-10 12:00:41,087] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:41,331] {logging_mixin.py:103} INFO - [2021-02-10 12:00:41,331] {cursor.py:537} INFO - query: [SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA quarantine_...]
[2021-02-10 12:00:41,694] {logging_mixin.py:103} INFO - [2021-02-10 12:00:41,694] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:41,745] {logging_mixin.py:103} INFO - [2021-02-10 12:00:41,745] {json_result.py:116} INFO - fetching data done
[2021-02-10 12:00:41,745] {logging_mixin.py:103} INFO - [2021-02-10 12:00:41,745] {cursor.py:537} INFO - query: [SELECT /* sqlalchemy:_get_schema_columns */ ic.table_name, ic.column_name, ic.da...]
[2021-02-10 12:00:44,603] {logging_mixin.py:103} INFO - [2021-02-10 12:00:44,602] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:44,605] {logging_mixin.py:103} INFO - [2021-02-10 12:00:44,604] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 12:00:44,613] {logging_mixin.py:103} INFO - [2021-02-10 12:00:44,612] {data_context.py:1281} INFO - Setting run_name to: 20210210T110044.612893Z
[2021-02-10 12:00:44,614] {logging_mixin.py:103} INFO - [2021-02-10 12:00:44,614] {data_asset.py:636} INFO - 	13 expectation(s) included in expectation_suite.
[2021-02-10 12:00:44,622] {logging_mixin.py:103} INFO - [2021-02-10 12:00:44,622] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 12:00:45,455] {logging_mixin.py:103} INFO - [2021-02-10 12:00:45,455] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:45,456] {logging_mixin.py:103} INFO - [2021-02-10 12:00:45,456] {cursor.py:537} INFO - query: [SELECT vendor_id FROM public.raw_monthly_taxi WHERE vendor_id IS NULL AND NOT (F...]
[2021-02-10 12:00:46,116] {logging_mixin.py:103} INFO - [2021-02-10 12:00:46,115] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:46,116] {logging_mixin.py:103} INFO - [2021-02-10 12:00:46,116] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 12:00:46,118] {logging_mixin.py:103} INFO - [2021-02-10 12:00:46,118] {cursor.py:537} INFO - query: [SELECT count(*) AS count_1 FROM public.raw_monthly_taxi]
[2021-02-10 12:00:46,964] {logging_mixin.py:103} INFO - [2021-02-10 12:00:46,964] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:46,967] {logging_mixin.py:103} INFO - [2021-02-10 12:00:46,967] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (vendor_id IN (NULL) OR vendor_i...]
[2021-02-10 12:00:47,182] {logging_mixin.py:103} INFO - [2021-02-10 12:00:47,181] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:47,184] {logging_mixin.py:103} INFO - [2021-02-10 12:00:47,183] {cursor.py:537} INFO - query: [SELECT vendor_id AS value, count(vendor_id) AS count FROM public.raw_monthly_tax...]
[2021-02-10 12:00:47,854] {logging_mixin.py:103} INFO - [2021-02-10 12:00:47,854] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:47,854] {logging_mixin.py:103} INFO - [2021-02-10 12:00:47,854] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 12:00:47,866] {logging_mixin.py:103} INFO - [2021-02-10 12:00:47,866] {warnings.py:109} WARNING - /Users/sara/p38_demo_env/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py:2751: RuntimeWarning: invalid value encountered in true_divide
  pk = 1.0*pk / np.sum(pk, axis=axis, keepdims=True)
[2021-02-10 12:00:47,868] {logging_mixin.py:103} INFO - [2021-02-10 12:00:47,868] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 12:00:48,561] {logging_mixin.py:103} INFO - [2021-02-10 12:00:48,561] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:48,562] {logging_mixin.py:103} INFO - [2021-02-10 12:00:48,562] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NULL AN...]
[2021-02-10 12:00:50,129] {logging_mixin.py:103} INFO - [2021-02-10 12:00:50,129] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:50,130] {logging_mixin.py:103} INFO - [2021-02-10 12:00:50,130] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 12:00:50,133] {logging_mixin.py:103} INFO - [2021-02-10 12:00:50,133] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (trip_distance IN (NULL) OR trip...]
[2021-02-10 12:00:50,410] {logging_mixin.py:103} INFO - [2021-02-10 12:00:50,410] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:50,414] {logging_mixin.py:103} INFO - [2021-02-10 12:00:50,414] {cursor.py:537} INFO - query: [SELECT min(trip_distance) AS min_1 FROM public.raw_monthly_taxi]
[2021-02-10 12:00:50,707] {logging_mixin.py:103} INFO - [2021-02-10 12:00:50,707] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:50,710] {logging_mixin.py:103} INFO - [2021-02-10 12:00:50,710] {cursor.py:537} INFO - query: [SELECT avg(trip_distance * 1.0) AS avg_1 FROM public.raw_monthly_taxi]
[2021-02-10 12:00:51,993] {logging_mixin.py:103} INFO - [2021-02-10 12:00:51,992] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:51,995] {logging_mixin.py:103} INFO - [2021-02-10 12:00:51,995] {cursor.py:537} INFO - query: [SELECT trip_distance FROM public.raw_monthly_taxi WHERE trip_distance IS NOT NUL...]
[2021-02-10 12:00:53,212] {logging_mixin.py:103} INFO - [2021-02-10 12:00:53,212] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:53,213] {logging_mixin.py:103} INFO - [2021-02-10 12:00:53,212] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 12:00:53,217] {logging_mixin.py:103} INFO - [2021-02-10 12:00:53,217] {cursor.py:537} INFO - query: [SELECT percentile_disc(0.05) WITHIN GROUP (ORDER BY trip_distance ASC) AS anon_1...]
[2021-02-10 12:00:54,144] {logging_mixin.py:103} INFO - [2021-02-10 12:00:54,144] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:54,156] {logging_mixin.py:103} INFO - [2021-02-10 12:00:54,156] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (FALSE = TRUE) THEN 1 ELSE 0 END...]
[2021-02-10 12:00:54,366] {logging_mixin.py:103} INFO - [2021-02-10 12:00:54,366] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:54,368] {logging_mixin.py:103} INFO - [2021-02-10 12:00:54,368] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE pickup_date IS NULL AND NO...]
[2021-02-10 12:00:54,925] {logging_mixin.py:103} INFO - [2021-02-10 12:00:54,925] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:54,926] {logging_mixin.py:103} INFO - [2021-02-10 12:00:54,925] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 12:00:54,931] {logging_mixin.py:103} INFO - [2021-02-10 12:00:54,931] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (pickup_date IS NULL) THEN 1 ELS...]
[2021-02-10 12:00:55,965] {logging_mixin.py:103} INFO - [2021-02-10 12:00:55,965] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:55,967] {logging_mixin.py:103} INFO - [2021-02-10 12:00:55,967] {cursor.py:537} INFO - query: [SELECT pickup_date FROM public.raw_monthly_taxi WHERE NOT (pickup_date >= '2018-...]
[2021-02-10 12:00:57,198] {logging_mixin.py:103} INFO - [2021-02-10 12:00:57,198] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:57,198] {logging_mixin.py:103} INFO - [2021-02-10 12:00:57,198] {arrow_result.pyx:0} INFO - fetching data done
[2021-02-10 12:00:57,201] {logging_mixin.py:103} INFO - [2021-02-10 12:00:57,201] {cursor.py:537} INFO - query: [SELECT count(*) AS element_count, sum(CASE WHEN (passenger_count IS NULL) THEN 1...]
[2021-02-10 12:00:58,423] {logging_mixin.py:103} INFO - [2021-02-10 12:00:58,423] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:58,424] {logging_mixin.py:103} INFO - [2021-02-10 12:00:58,424] {cursor.py:537} INFO - query: [UPDATE public.raw_monthly_taxi SET cambia_aqui=1 WHERE NOT (passenger_count >= 1...]
[2021-02-10 12:00:59,042] {logging_mixin.py:103} INFO - [2021-02-10 12:00:59,042] {cursor.py:560} INFO - query execution done
[2021-02-10 12:00:59,078] {logging_mixin.py:103} INFO - [2021-02-10 12:00:59,077] {cursor.py:537} INFO - query: [ROLLBACK]
[2021-02-10 12:00:59,322] {logging_mixin.py:103} INFO - [2021-02-10 12:00:59,322] {cursor.py:560} INFO - query execution done
[2021-02-10 12:01:03,779] {logging_mixin.py:103} INFO - [2021-02-10 12:01:03,779] {timeout.py:36} ERROR - Process timed out, PID: 695
[2021-02-10 12:01:03,814] {logging_mixin.py:103} INFO - [2021-02-10 12:01:03,802] {validation_operators.py:408} ERROR - Error running action with name update_data_docs
Traceback (most recent call last):
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/validation_operators/validation_operators.py", line 392, in _run_actions
    action_result = self.actions[action["name"]].run(
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/checkpoint/actions.py", line 57, in run
    return self._run(
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/checkpoint/actions.py", line 776, in _run
    self.data_context.build_data_docs(
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/core/usage_statistics/usage_statistics.py", line 261, in usage_statistics_wrapped_method
    result = func(*args, **kwargs)
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/data_context/data_context.py", line 2310, in build_data_docs
    index_page_resource_identifier_tuple = site_builder.build(
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/render/renderer/site_builder.py", line 295, in build
    index_page_url, index_links_dict = self.site_index_builder.build(
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/render/renderer/site_builder.py", line 780, in build
    validation_result_site_key
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/core/data_context_key.py", line 30, in __eq__
    return self.to_tuple() == other.to_tuple()
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/data_context/types/resource_identifiers.py", line 149, in to_tuple
    + list(self.run_id.to_tuple())
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/core/run_identifier.py", line 60, in to_tuple
    self._run_time.strftime("%Y%m%dT%H%M%S.%fZ"),
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/airflow/utils/timeout.py", line 37, in handle_timeout
    raise AirflowTaskTimeout(self.error_message)
airflow.exceptions.AirflowTaskTimeout: DagBag import timeout for /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py after 30.0s, PID: 695
[2021-02-10 12:01:03,832] {logging_mixin.py:103} INFO - [2021-02-10 12:01:03,831] {dagbag.py:297} ERROR - Failed to import: /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
Traceback (most recent call last):
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/airflow/models/dagbag.py", line 294, in _load_modules_from_file
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 783, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py", line 44, in <module>
    results = context.run_validation_operator(
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/core/usage_statistics/usage_statistics.py", line 261, in usage_statistics_wrapped_method
    result = func(*args, **kwargs)
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/data_context/data_context.py", line 1283, in run_validation_operator
    return validation_operator.run(
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/validation_operators/validation_operators.py", line 336, in run
    batch_actions_results = self._run_actions(
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/validation_operators/validation_operators.py", line 411, in _run_actions
    raise e
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/validation_operators/validation_operators.py", line 392, in _run_actions
    action_result = self.actions[action["name"]].run(
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/checkpoint/actions.py", line 57, in run
    return self._run(
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/checkpoint/actions.py", line 776, in _run
    self.data_context.build_data_docs(
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/core/usage_statistics/usage_statistics.py", line 261, in usage_statistics_wrapped_method
    result = func(*args, **kwargs)
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/data_context/data_context.py", line 2310, in build_data_docs
    index_page_resource_identifier_tuple = site_builder.build(
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/render/renderer/site_builder.py", line 295, in build
    index_page_url, index_links_dict = self.site_index_builder.build(
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/render/renderer/site_builder.py", line 780, in build
    validation_result_site_key
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/core/data_context_key.py", line 30, in __eq__
    return self.to_tuple() == other.to_tuple()
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/data_context/types/resource_identifiers.py", line 149, in to_tuple
    + list(self.run_id.to_tuple())
  File "/Users/sara/Dropbox/My Mac (admin’s MacBook Air)/Desktop/demo/great_expectations/great_expectations/core/run_identifier.py", line 60, in to_tuple
    self._run_time.strftime("%Y%m%dT%H%M%S.%fZ"),
  File "/Users/sara/p38_demo_env/lib/python3.8/site-packages/airflow/utils/timeout.py", line 37, in handle_timeout
    raise AirflowTaskTimeout(self.error_message)
airflow.exceptions.AirflowTaskTimeout: DagBag import timeout for /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py after 30.0s, PID: 695
[2021-02-10 12:01:03,833] {scheduler_job.py:641} WARNING - No viable dags retrieved from /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py
[2021-02-10 12:01:03,887] {scheduler_job.py:189} INFO - Processing /Users/sara/airflow/dags/demo/great_expectations/uncommitted/run_monthlychk.py took 30.116 seconds
